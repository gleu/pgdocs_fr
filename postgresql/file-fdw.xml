<?xml version="1.0" encoding="UTF-8"?>
<sect1 id="file-fdw" xreflabel="file_fdw">
 <title>file_fdw</title>

 <indexterm zone="file-fdw">
  <primary>file_fdw</primary>
 </indexterm>

 <para>
  Le module <filename>file_fdw</filename> fournit le wrapper de données distantes
  <function>file_fdw</function>, qui peut être utilisé pour accéder à des fichiers de
  données situées sur le système de fichiers du serveur, ou pour exécuter des
  programme sur le serveur et lire leur sortie.  Les fichiers de données or
  program output doivent être dans un format qui puisse être lu par
  <command>COPY FROM</command>; voyez <xref linkend="sql-copy"/> pour les
  détails.  L'accès à ce type de fichier se fait uniquement en lecture seule.
 </para>

 <para>
  Une table distante créée en utilisant ce wrapper peut avoir les options suivantes:
 </para>

 <variablelist>

  <varlistentry>
   <term><literal>filename</literal></term>

   <listitem>
    <para>
     Spécifie le fichier devant être lu. Les chemins relatifs sont relatifs au
     répertoire principal des données. <literal>filename</literal> ou
     <literal>program</literal> doit être spécifié, mais pas les deux en même
     temps.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry>
   <term><literal>program</literal></term>

   <listitem>
    <para>
     Spécifie la commande à exécuter. La sortie standard de cette commande sera lue
     comme si <command>COPY FROM PROGRAM</command> était utilisé. Il est nécessaire
     d'indiquer soit <literal>program</literal> soit <literal>filename</literal>
     mais pas les deux.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry>
   <term><literal>force_null</literal></term>

   <listitem>
    <para>
     C'est une option booléenne.Si elle vaut vrai, cela signifie que les valeurs
     de la colonne qui correspondent à la chaîne NULL sont retournées comme
     <literal>NULL</literal> même si la valeur est entourée de guillemets. Sans
     cette option, seules les valeurs non entourées de guillemets qui correspondent
     à la chaîne NULL seront retournées comme <literal>NULL</literal>.
     Cela a le même effet que de spécifier les colonne dans l'option
     <literal>FORCE_NULL</literal> de la commande <command>COPY</command>.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry>
   <term><literal>format</literal></term>

   <listitem>
    <para>
     Spécifie le format des données, comme dans l'option <literal>FORMAT</literal>
     de la commande <command>COPY</command>.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry>
   <term><literal>header</literal></term>

   <listitem>
    <para>
     Spécifie si les données ont une ligne d'entête, comme l'option <literal>HEADER</literal>
     de la commande <command>COPY</command>.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry>
   <term><literal>delimiter</literal></term>

   <listitem>
    <para>
     Spécifie le caractère délimiteur des données, comme l'option <literal>DELIMITER</literal>
     de la commande <command>COPY</command>.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry>
   <term><literal>quote</literal></term>

   <listitem>
    <para>
     Spécifie le caractère guillemet, comme l'option <literal>QUOTE</literal>
     de la commande <command>COPY</command>.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry>
   <term><literal>escape</literal></term>

   <listitem>
    <para>
     Spécifie le caractère d'échappement des données, comme l'option <literal>ESCAPE</literal>
     de la commande <command>COPY</command>.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry>
   <term><literal>null</literal></term>

   <listitem>
    <para>
     Spécifie la chaîne null des données, comme l'option <literal>NULL</literal>
     de la commande <command>COPY</command>.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry>
   <term><literal>encoding</literal></term>

   <listitem>
    <para>
     Spécifie l'encodage des données, comme l'option <literal>ENCODING</literal>
     de la commande <command>COPY</command>.
    </para>
   </listitem>
  </varlistentry>

 </variablelist>

 <para>
  Notez que, bien que <command>COPY</command> autorise la spécification d'options
  comme <literal>HEADER</literal> sans valeur correspondante, la syntaxe des options
  de la table externe requiert la présence d'une valeur dans tous les cas. Pour
  activer les options de <command>COPY</command> sans valeur, vous pouvez donner
  la valeur TRUE à la place, since all such options are Booleans.
 </para>

 <para>
  Une colonne d'une table distante créée en utilisant ce wrapper peut avoir les
  options suivantes&nbsp;:
 </para>

 <variablelist>

  <varlistentry>
   <term><literal>force_not_null</literal></term>

   <listitem>
    <para>
     C'est une option booléenne. Si elle vaut true, cela signifie que les
     valeurs de la colonne ne doivent pas être comparées à celle de la
     chaîne NULL (autrement dit, l'option <literal>null</literal> au niveau
     de la table). Ceci a le même effet que de lister la colonne dans
     l'option <literal>FORCE_NOT_NULL</literal> de <command>COPY</command>.
    </para>
   </listitem>
  </varlistentry>

 </variablelist>

 <para>
  L'option <literal>FORCE_QUOTE</literal> de <command>COPY</command> n'est
  pas supportée par <literal>file_fdw</literal> pour le moment.
 </para>

 <para>
  Ces options ne peuvent être spécifiées que pour une table distante ou ses
  colonnes,
  pas comme options du wrapper de données distantes <literal>file_fdw</literal>,
  pas plus cque comme des options d'un serveur ou d'un mapping d'utilisateur
  utilisant le wrapper.
 </para>

 <para>
  Changer les options au niveau des tables nécessite l'attribut SUPERUSER ou
  avoir les droits du rôle <literal>pg_read_server_files</literal> (pour
  utiliser un fichier) ou du rôle
  <literal>pg_execute_server_program</literal> (pour utiliser un programme),
  pour des raisons de sécurité&nbsp;: seuls certains utilisateurs devraient
  pouvoir contrôler quel fichier est lu ou quel programme est exécuté. En
  principe, des utilisateurs standards devraient pouvoir modifier les autres
  options, mais ceci n'est pas supporté pour le moment.
 </para>

 <para>
  Lorsque l'option <literal>program</literal> est spécifiée, gardez à l'esprit
  que la chaîne de texte est exécutée par le shell.  Si vous devez passez des
  arguments à la commande qui viennent d'une source non approuvée, vous devez
  prendre soin de supprimer ou échapper des caractères qui pourraient avoir une
  signification spéciale pour le shell.  Pour raisons de sécurité, il est
  préférable d'utiliser une chaîne de commande fixe comme argument, ou au moins
  d'éviter d'y fournir des données saisies par des utilisateurs.
 </para>

 <para>
  Pour une table utilisant <literal>file_fdw</literal>, <command>EXPLAIN</command> montre
  le nom du fichier devant être lu ou le programme à exécuter. Pour un fichier,
  à moins que <literal>COSTS OFF</literal> soit spécifié, la taille du fichier
  (en octets) est affichée aussi.
 </para>

 <example>
  <title>Créer une table distante pour les journaux applicatifs PostgreSQL au format CSV</title>

  <para>
   Une des utilisations évidentes de <literal>file_fdw</literal> est de rendre
   les journaux applicatifs de PostgreSQL disponibles sous la forme d'une
   table. Pour faire cela, vous devez tout d'abord <link
   linkend="runtime-config-logging-csvlog">enregistrer les traces au format
    CSV</link>. Nous appelerons le fichier de traces
   <literal>pglog.csv</literal>. Tout d'abord, installez l'extension
   <literal>file_fdw</literal>&nbsp;:
  </para>

  <programlisting>
CREATE EXTENSION file_fdw;
  </programlisting>

  <para>
   Ensuite créez un serveur de données distantes&nbsp;:

   <programlisting>
CREATE SERVER pglog FOREIGN DATA WRAPPER file_fdw;
   </programlisting>
  </para>

  <para>
   Maintenant, vous pouvez créer la table de données distantes. En utilisant la
   commande <command>CREATE FOREIGN TABLE</command>, vous devez définir les
   colonnes de la table, le nom du fichier CSV, et son format&nbsp;:

   <programlisting>
CREATE FOREIGN TABLE pglog (
  log_time timestamp(3) with time zone,
  user_name text,
  database_name text,
  process_id integer,
  connection_from text,
  session_id text,
  session_line_num bigint,
  command_tag text,
  session_start_time timestamp with time zone,
  virtual_transaction_id text,
  transaction_id bigint,
  error_severity text,
  sql_state_code text,
  message text,
  detail text,
  hint text,
  internal_query text,
  internal_query_pos integer,
  context text,
  query text,
  query_pos integer,
  location text,
  application_name text,
  backend_type text,
  leader_pid integer,
  query_id bigint
) SERVER pglog
OPTIONS ( filename 'log/pglog.csv', format 'csv' );
   </programlisting>
  </para>

  <para>
   C'est tout &mdash; maintenant, vous pouvez lire le fichier en exécutant une
   requête sur cette table. Bien sûr, en production, vous aurez besoin de définir
   un moyen pour tenir compte de la rotation du fichier de traces.
  </para>
 </example>

</sect1>
