<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->

<sect1 id="pgstattuple" xreflabel="pgstattuple">
 <title>pgstattuple</title>

 <indexterm zone="pgstattuple">
  <primary>pgstattuple</primary>
 </indexterm>

 <para>
  Le module <filename>pgstattuple</filename> fournit plusieurs fonctions pour
  obtenir des statistiques au niveau ligne.
 </para>

 <sect2>
  <title>Fonctions</title>

  <variablelist>
   <varlistentry>
    <term>
     <function>pgstattuple(text) returns record</function>
    </term>

    <listitem>
     <para>
      <function>pgstattuple</function> renvoie la longueur physique d'une
      relation, le pourcentage des lignes <quote>mortes</quote>, et d'autres
      informations. Ceci peut aider les utilisateurs à déterminer si une
      opération de VACUUM est nécessaire. L'argument est le nom de la relation
      cible (qui peut être qualifié par le nom du schéma).
      Par exemple&nbsp;:
     <programlisting>
test=> SELECT * FROM pgstattuple('pg_catalog.pg_proc');
-[ RECORD 1 ]------+-------
table_len          | 458752
tuple_count        | 1470
tuple_len          | 438896
tuple_percent      | 95.67
dead_tuple_count   | 11
dead_tuple_len     | 3157
dead_tuple_percent | 0.69
free_space         | 8932
free_percent       | 1.95
     </programlisting>
     Les colonnes en sortie sont décrites dans <xref linkend="pgstattuple-columns"/>.
    </para>

    <table id="pgstattuple-columns">
     <title>Colonnes de <function>pgstattuple</function></title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>Colonne</entry>
        <entry>Type</entry>
        <entry>Description</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>table_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Longueur physique de la relation en octets</entry>
       </row>
       <row>
        <entry><structfield>tuple_count</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Nombre de lignes vivantes</entry>
       </row>
       <row>
        <entry><structfield>tuple_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Longueur totale des lignes vivantes en octets</entry>
       </row>
       <row>
        <entry><structfield>tuple_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>Pourcentage des lignes vivantes</entry>
       </row>
       <row>
        <entry><structfield>dead_tuple_count</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Nombre de lignes mortes</entry>
       </row>
       <row>
        <entry><structfield>dead_tuple_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Longueur totale des lignes mortes en octets</entry>
       </row>
       <row>
        <entry><structfield>dead_tuple_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>Pourcentage des lignes mortes</entry>
       </row>
       <row>
        <entry><structfield>free_space</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Espace libre total en octets</entry>
       </row>
       <row>
        <entry><structfield>free_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>Pourcentage de l'espace libre</entry>
       </row>

      </tbody>
     </tgroup>
    </table>

    <para>
     <function>pgstattuple</function> acquiert seulement un verrou en lecture
     sur la relation. Donc les relations ne reflètent pas une image
     instantanée&nbsp; des mises à jour en parallèle peuvent les affecter.
    </para>

    <para>
     <function>pgstattuple</function> juge qu'une ligne est
     <quote>morte</quote> si <function>HeapTupleSatisfiesNow</function> renvoie
     false.
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>pgstattuple(oid) returns record</function>
    </term>

    <listitem>
     <para>
      Identique à <function>pgstattuple(text)</function>, sauf que la relation
      cible est désignée par son OID.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>pgstatindex(text) returns record</function>
    </term>

    <listitem>
     <para>
      <function>pgstatindex</function> renvoie un enregistrement affichant des
      informations sur un index B-Tree. Par exemple&nbsp;:
     </para>
     <programlisting>
test=> SELECT * FROM pgstatindex('pg_cast_oid_index');
-[ RECORD 1 ]------+------
version            | 2
tree_level         | 0
index_size         | 8192
root_block_no      | 1
internal_pages     | 0
leaf_pages         | 1
empty_pages        | 0
deleted_pages      | 0
avg_leaf_density   | 50.27
leaf_fragmentation | 0
    </programlisting>

    <para>
     En voici les colonnes:
    </para>

    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>Colonne</entry>
        <entry>Type</entry>
        <entry>Description</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>version</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>Numéro de version du B-tree</entry>
       </row>

       <row>
        <entry><structfield>tree_level</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>Niveau de l'arbre pour la page racine</entry>
       </row>

       <row>
        <entry><structfield>index_size</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Nombre total de page dans l'index</entry>
       </row>

       <row>
        <entry><structfield>root_block_no</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Enmplacement du bloc racine</entry>
       </row>

       <row>
        <entry><structfield>internal_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Nombre de pages <quote>internes</quote> (niveau
	supérieur)</entry>
       </row>

       <row>
        <entry><structfield>leaf_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Nombre de pages feuilles</entry>
       </row>

       <row>
        <entry><structfield>empty_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Nombre de pages vides</entry>
       </row>

       <row>
        <entry><structfield>deleted_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Nombre de pages supprimées</entry>
       </row>

       <row>
        <entry><structfield>avg_leaf_density</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>Densité moyenne des pages feuilles</entry>
       </row>

       <row>
        <entry><structfield>leaf_fragmentation</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>Fragmentation des pages feuilles</entry>
       </row>

      </tbody>
     </tgroup>
    </informaltable>

    <para>
     Comme pour <function>pgstattuple</function>, les résultats sont
     accumulés page par page, et ne représentent pas forcément une image
     instantannée de l'index complet.
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>pgstatginindex(regclass) returns record</function>
    </term>

    <listitem>
     <para>
      <function>pgstatginindex</function> returns a record showing information
      about a GIN index.  For example:
<programlisting>
test=> SELECT * FROM pgstatginindex('test_gin_index');
-[ RECORD 1 ]--+--
version        | 1
pending_pages  | 0
pending_tuples | 0
</programlisting>
     </para>

    <para>
     The output columns are:

    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>Column</entry>
        <entry>Type</entry>
        <entry>Description</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>version</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>GIN version number</entry>
       </row>

       <row>
        <entry><structfield>pending_pages</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>Number of pages in the pending list</entry>
       </row>

       <row>
        <entry><structfield>pending_tuples</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Number of tuples in the pending list</entry>
       </row>

      </tbody>
     </tgroup>
    </informaltable>
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>pg_relpages(text) returns bigint</function>
    </term>

    <listitem>
     <para>
      <function>pg_relpages</function> renvoie le nombre de pages dans la
      relation.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2>
  <title>Auteurs</title>

  <para>
   Tatsuo Ishii et Satoshi Nagayasu
  </para>
 </sect2>

</sect1>
