<?xml version="1.0" encoding="UTF-8"?>
<appendix id="limits">
 <title>Limites <productname>PostgreSQL</productname></title>

 <para>
  <xref linkend="limits-table"/> décrit les diverses limites dures de
  <productname>PostgreSQL</productname>. Cependant, les limites physiques
  telles que les limitations de performance ou l'espace disque disponible
  peuvent s'appliquer avant que des limites dures absolues soient atteintes.
 </para>

 <table id="limits-table">
  <title>Limitations de <productname>PostgreSQL</productname></title>
  <tgroup cols="3">
   <thead>
    <row>
     <entry>Élément</entry>
     <entry>Limite supérieure</entry>
     <entry>Commentaire</entry>
    </row>
   </thead>

   <tbody>
    <row>
     <entry>taille de la base de données</entry>
     <entry>illimitée</entry>
     <entry></entry>
    </row>

    <row>
     <entry>nombre de bases de données</entry>
     <!-- 2^32 - FirstNormalObjectId - 1 -->
     <entry>4&nbsp;294&nbsp;950&nbsp;911</entry>
     <entry></entry>
    </row>

    <row>
     <entry>relations par base de données</entry>
     <!-- (2^32 - FirstNormalObjectId - 1) / 3 (3 because of the table and the
          two types that are created to go with it) -->
     <entry>1&nbsp;431&nbsp;650&nbsp;303</entry>
     <entry></entry>
    </row>

    <row>
     <entry>taille d'une relation</entry>
     <entry>32 To</entry>
     <entry>Avec un <symbol>BLCKSZ</symbol> par défaut de 8192 octets</entry>
    </row>

    <row>
     <entry>lignes par table</entry>
     <entry>limité par le nombre de lignes qui peuvent être contenus dans 4&nbsp;294&nbsp;967&nbsp;295 blocs</entry>
     <entry></entry>
    </row>

    <row>
     <entry>colonnes par table</entry>
     <entry>1600</entry>
     <entry>aussi limité par la taille des lignes contenues dans un simple bloc&nbsp;; voir la note ci-dessous
     </entry>
    </row>

    <row>
     <entry>colonnes par ensemble de résultat</entry>
     <entry>1664</entry>
     <entry></entry>
    </row>

    <row>
     <entry>colonnes par ensemble de résultats</entry>
     <entry>1664</entry>
     <entry></entry>
    </row>

    <row>
     <entry>taille d'un champ</entry>
     <entry>1 Go</entry>
     <entry></entry>
    </row>

    <row>
     <entry>index par table</entry>
     <entry>illimitée</entry>
     <entry>limité par le nombre maximum de relations par base de données</entry>
    </row>

    <row>
     <entry>colonnes par index</entry>
     <entry>32</entry>
     <entry>peut être augmenté en recompilant <productname>PostgreSQL</productname></entry>
    </row>

    <row>
     <entry>clés de partition</entry>
     <entry>32</entry>
     <entry>peut être augmenté en recompilant <productname>PostgreSQL</productname></entry>
    </row>

    <row>
     <entry>longueur de l'identifiant</entry>
     <entry>63 octets</entry>
     <entry>peut être augmenté en recompilant <productname>PostgreSQL</productname></entry>
    </row>

    <row>
     <entry>arguments de fonction</entry>
     <entry>100</entry>
     <entry>peut être augmenté en recompilant <productname>PostgreSQL</productname></entry>
    </row>

    <row>
     <entry>paramètres de requête</entry>
     <entry>65 535</entry>
     <entry></entry>
    </row>
   </tbody>
  </tgroup>
 </table>

 <para>
  Le nombre maximum de colonnes pour une table est d'autant plus réduit que la
  ligne stockée doit être contenue dans un simple bloc de 8192 octets.
  Par exemple, sans compter l'entête d'une ligne, une ligne constituée de 1600 colonnes de type
  <type>int</type> consommera 6400 octets et peut être stocké dans un bloc, mais une ligne
  constituée de 1600 colonnes de type <type>bigint</type> consommera 12800 octets et
  ne pourra pas tenir dans le bloc.
  Les champs typés <type>text</type>, <type>varchar</type> et <type>char</type> de longueur variable
  peuvent avoir leurs valeurs stockées à l'extérieur dans une table TOAST lorsque cette valeur
  est suffisamment importante pour que cela se produise.
  Un pointeur de 18 octets doit rester à l'intérieur de la ligne dans la table. Pour des longueurs
  moins importantes de champs à longueur variable, un champ entête de 4-octets ou 1-octet est
  utilisé et la valeur est stockée à l'intérieur de la ligne.
 </para>

 <para>
  Les colonnes qui ont été supprimées de la table participent aussi à la limite
  maximum de colonnes. De plus, bien que les valeurs des colonnes supprimées
  pour les nouvelles lignes créées soient marquées en interne comme null, ainsi que
  dans le champ de bits des valeurs null de la ligne, ce champ consomme de l'espace.
 </para>

 <para>
  Chaque table peut enregistrer un maximum théorique de 2^32 valeurs hors
  ligne&nbsp;;; voir <xref linkend="storage-toast" /> pour une discussion
  détaillée sur le stockage hors ligne. Cette limite vient de l'utilisation
  d'un OID 32 bits pour identifier chacune de ces valeurs. La limite pratique
  est significativement inférieure à la limite théorique parce que comme
  l'espace d'OID se remplit, trouver un OID toujours libre devient coûteux,
  ce qui ralentit les instructions INSERT/UPDATE. C'est uniquement un
  problème pour les tables contenant plusieurs téra-octets de données&nbsp;;
  le partitionnement est un contournement possible.
 </para>

 <para>
  Chaque table peut enregistrer un maximum théorique de 2^32 valeurs hors
  ligne&nbsp;; voir <xref linkend="storage-toast" /> pour une discussion
  détaillée du stockage hors ligne. Cette limite vient de l'utilisation d'un
  OID sur 32 bits pour identifier chaque valeur. La limite pratique est
  significativement moindre que la limite théorique parce qu'au fur et à mesure
  que l'espace OID se remplit, trouver un OID toujours libre devient coûteux,
  ralentissant de ce fait les instructions INSERT/UPDATE. Typiquement, c'est
  seulement un problème pour les tables contenant plusieurs téraoctets de
  données&nbsp;; partitionner est un contournement possible.
 </para>
</appendix>
