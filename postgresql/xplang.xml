<?xml version="1.0" encoding="UTF-8"?>
<chapter id="xplang">
 <title>Langages de procédures</title>

 <indexterm zone="xplang">
  <primary>langage de procédures</primary>
 </indexterm>

 <para>
  <productname>PostgreSQL</productname> permet l'écriture de
  fonctions et de procédures dans des langages différents du SQL et du C. Ces
  autres langages sont appelés génériquement des
  <firstterm>langages de procédures</firstterm> (<acronym>LP</acronym>,
  <acronym>PL</acronym> en anglais).
  Le serveur ne possède pas d'interpréteur interne des fonctions écrites dans
  un langage de procédures. La tâche est donc dévolue à un gestionnaire
  particulier qui, lui, connait les détails du langage. Le gestionnaire peut
  prendre en charge le travail de découpage, d'analyse syntaxique, d'exécution,
  etc., ou simplement servir de <quote>colle</quote> entre
  <productname>PostgreSQL</productname> et une implémentation existante d'un
  langage de programmation. Le gestionnaire est lui-même une fonction en
  langage C compilée dans une bibliothèque partagée et chargée à la demande,
  comme toute autre fonction C.
 </para>

 <para>
  Il existe à ce jour quatre langages de procédures dans la
  distribution standard de <productname>PostgreSQL</productname>&nbsp;:
  <application>PL/pgSQL</application> (<xref linkend="plpgsql"/>),
  <application>PL/Tcl</application> (<xref linkend="pltcl"/>),
  <application>PL/Perl</application> (<xref linkend="plperl"/>) et
  <application>PL/Python</application> (<xref linkend="plpython"/>).
 </para>

 <para>
  Il existe d'autres langages de procédures qui ne sont pas inclus dans la
  distribution principale. L'<xref linkend="external-projects"/> propose des
  pistes pour les trouver. De plus, d'autres langages peuvent être définis
  par les utilisateurs. Les bases de développement d'un nouveau langage de
  procédures sont couvertes dans le <xref linkend="plhandler"/>.
 </para>

 <sect1 id="xplang-install">
  <title>Installation des langages de procédures</title>

  <para>
   Un langage de procédures doit être <quote>installé</quote> dans toute base
   de données amenée à l'utiliser. Les langages de procédures
   installés dans la base de données <literal>template1</literal> sont automatiquement
   disponibles dans toutes les bases de données créées par la suite.
   <command>CREATE DATABASE</command> recopie en effet toutes les informations
   disponibles dans la base <literal>template1</literal>.
   Il est ainsi possible pour l'administrateur de définir, par base,
   les langages disponibles et d'en rendre certains disponibles
   par défaut.
  </para>

  <para>
   Pour les langages fournis avec la distribution standard, l'installation
   dans la base courante se fait simplement par l'exécution de la commande
   <command>CREATE EXTENSION</command> <replaceable>langage</replaceable>.
   La procédure manuelle décrite ci-dessous n'est recommandée que pour
   installer des langages qui ne sont pas disponibles sous la forme
   d'extensions.
  </para>

  <procedure>
   <title>
    Installation manuelle de langages de procédures
   </title>

   <para>
    Un langage de procédures s'installe en cinq étapes effectuées
    obligatoirement par le super-utilisateur des bases de données.
    Dans la plupart des cas, les commandes SQL nécessaires doivent être
    placées dans un script d'installation d'une <quote>extension</quote>,
    pour que la commande <command>CREATE EXTENSION</command> puisse être
    utilisé pour installer le langage.
   </para>

   <step performance="required" id="xplang-install-cr1">
    <para>
     La bibliothèque partagée du gestionnaire de langage doit être
     compilée et installée dans le répertoire de bibliothèques approprié.
     Cela se déroule comme la construction et l'installation de modules
     de classiques fonctions C utilisateur&nbsp;; voir la <xref
     linkend="dfunc"/>. Il arrive souvent que le gestionnaire du langage dépende
     d'une bibliothèque externe fournissant le moteur de langage&nbsp;; dans
     ce cas, elle doit aussi être installée.
    </para>
   </step>

   <step performance="required" id="xplang-install-cr2">
    <para>
     Le gestionnaire doit être déclaré par la commande
     <synopsis>CREATE FUNCTION <replaceable>nom_fonction_gestionnaire</replaceable>()
    RETURNS gestionnaire_langage
    AS '<replaceable>chemin-vers-objet-partagé</replaceable>'
    LANGUAGE C STRICT;
     </synopsis>
     Le type de retour spécial <type>gestionnaire_langage</type> indique au
     système que cette fonction ne renvoie pas un type de données <acronym>SQL</acronym> et n'est, de ce fait, pas utilisable
     directement dans des expressions <acronym>SQL</acronym>.
    </para>
   </step>

   <step performance="optional" id="xplang-install-cr3">
    <para>
     En option, le gestionnaire de langages peut fournir une fonction de
     gestion <quote>en ligne</quote> qui permet l'exécution de blocs de code
     anonyme (commandes <link linkend="sql-do"><command>DO</command></link>)
     écrits dans ce langage. Si
     une fonction de gestion en ligne est fourni par le langage, déclarez-le
     avec une commande comme
     <synopsis>
CREATE FUNCTION <replaceable>nom_fonction_en_ligne</replaceable>(internal)
    RETURNS void
    AS '<replaceable>chemin-vers-objet-partagé</replaceable>'
    LANGUAGE C;
     </synopsis>
    </para>
   </step>

   <step performance="optional" id="xplang-install-cr4">
    <para>
     En option, le gestionnaire de langages peut fournir une fonction de
     <quote>validation</quote> qui vérifie la définition d'une fonction sans
     réellement l'exécuter. La fonction de validation, si elle existe, est
     appelée par <command>CREATE FUNCTION</command>. Si une telle fonction
     est fournie par le langage, elle sera déclarée avec une commande de la forme
     <synopsis>CREATE FUNCTION <replaceable>nom_fonction_validation</replaceable>(oid)
    RETURNS void
    AS '<replaceable>chemin-vers-objet-partagé</replaceable>'
    LANGUAGE C;
     </synopsis>
    </para>
   </step>

   <step performance="required" id="xplang-install-cr5">
    <para>
     Le LP doit être déclaré par la commande
     <synopsis>CREATE <optional>TRUSTED</optional> LANGUAGE <replaceable>nom_langage</replaceable>
    HANDLER <replaceable>nom_fonction_gestionnaire</replaceable>
    <optional>INLINE <replaceable>nom_fonction_en_ligne</replaceable></optional>
    <optional>VALIDATOR <replaceable>nom_fonction_valideur</replaceable></optional> ;
     </synopsis>
     Le mot clé optionnel <literal>TRUSTED</literal> (autrement dit, digne de
     confiance) indique que le langage n'autorise pas l'accès à des données
     normalement inaccessible à cet utilisateur. Les langages de confiance
     sont conçus pour les utilisateurs standards de la base de données,
     c'est-à-dire ceux qui ne sont pas super-utilisateurs, et les autorisent à
     créer en tout sécurité des fonctions et des procédures.
     Les fonctions en langage de procédures étant exécutées au sein du serveur,
     le paramètre <literal>TRUSTED</literal> ne devrait être
     positionné que pour les langages n'accédant pas aux organes internes
     du serveur ou au système de fichiers. Les langages
     <application>PL/pgSQL</application>,
     <application>PL/Tcl</application>, et
     <application>PL/Perl</application>
     sont considérés comme dignes de confiance&nbsp;; les langages
     <application>PL/TclU</application>,
     <application>PL/PerlU</application>, et
     <application>PL/PythonU</application>
     sont conçus pour fournir des fonctionnalités illimitées et
     <emphasis>ne</emphasis> devraient <emphasis>pas</emphasis> être
     marqués dignes de confiance.
    </para>
   </step>
  </procedure>

  <para>
   L'<xref linkend="xplang-install-example"/> présente le fonctionnement de
   la procédure
   d'installation manuelle du langage <application>PL/Perl</application>.
  </para>

  <example id="xplang-install-example">
   <title>Installation manuelle de <application>PL/Perl</application></title>

   <para>
    La commande suivante indique au serveur l'emplacement
    de la bibliothèque partagée pour la fonction de gestion des appels du
    langage <application>PL/Perl</application>.

    <programlisting>CREATE FUNCTION plperl_call_handler() RETURNS language_handler AS
    '$libdir/plperl' LANGUAGE C;
    </programlisting>
   </para>

   <para>
    <application>PL/Perl</application> a une fonction de gestion en ligne
    et une fonction de validation, donc nous déclarons aussi celles-ci&nbsp;:

    <programlisting>CREATE FUNCTION plperl_inline_handler(internal) RETURNS void AS
    '$libdir/plperl' LANGUAGE C STRICT;

CREATE FUNCTION plperl_validator(oid) RETURNS void AS
    '$libdir/plperl' LANGUAGE C STRICT;
    </programlisting>
   </para>

   <para>
    La commande&nbsp;:
    <programlisting>CREATE TRUSTED LANGUAGE plperl
    HANDLER plperl_call_handler
    INLINE plperl_inline_handler
    VALIDATOR plperl_validator;
    </programlisting>
    indique l'évocation des fonctions précédentes pour les fonctions et
    procédures lorsque l'attribut de langage est  <literal>plperl</literal>.
   </para>
  </example>

  <para>
   Lors de l'installation par défaut de <productname>PostgreSQL</productname>,
   le gestionnaire du langage <application>PL/pgSQL</application> est
   compilé et installé dans le répertoire des bibliothèques
   (<quote>lib</quote>)&nbsp;; de plus, le langage <application>PL/pgSQL</application>
   est installé dans toutes les bases de données. Si le support de
   <application>Tcl</application> est configuré, les gestionnaires pour
   <application>PL/Tcl</application> et <application>PL/TclU</application>
   sont construits et installés dans le répertoire des bibliothèques mais le
   langage lui-même n'est pas installé par défaut dans les bases de données.
   De la même façon, les gestionnaires pour <application>PL/Perl</application>
   et <application>PL/PerlU</application> sont construits et installés si le
   support de Perl est configuré et le gestionnaire pour
   <application>PL/PythonU</application> est installé si le support de Python
   est configuré mais ces langages ne sont pas installés par défaut.
  </para>

 </sect1>

</chapter>
