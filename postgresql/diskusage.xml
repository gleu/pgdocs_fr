<?xml version="1.0" encoding="UTF-8"?>
<chapter id="diskusage">
 <title>Surveiller l'utilisation des disques</title>

 <para>
  Ce chapitre explique comment surveiller l'utilisation que fait
  <productname>PostgreSQL</productname> des disques.

 </para>

 <sect1 id="disk-usage">
  <title>Déterminer l'utilisation des disques</title>

  <indexterm zone="disk-usage">
   <primary>utilisation des disques</primary>
  </indexterm>

  <para>
   Chaque table possède un fichier principal (<foreignphrase>heap</foreignphrase>)
   dans lequel la majorité
   des données sont stockées. Si la table a des colonnes potentiellement
   grandes en taille, il pourrait aussi y avoir un fichier
   <acronym>TOAST</acronym> associé à la
   table. Ce fichier permet de stocker les valeurs trop larges pour tenir
   dans la table principale (voir la <xref linkend="storage-toast"/>).
   Si la table <acronym>TOAST</acronym> existe, un index valide lui est associé.
   Des index peuvent également être associés à la table de base.
   Chaque table ou index est stocké dans un fichier distinct &mdash;
   voire plus si la taille du fichier dépasse 1&nbsp;Go.
   Les conventions de nommage de ces fichiers sont décrites dans la
   <xref linkend="storage-file-layout"/>.
  </para>

  <para>
   L'espace disque peut être surveillé de trois façons différentes&nbsp;:
   en utilisant les fonctions SQL listées dans <xref
   linkend="functions-admin-dbsize"/>, en utilisant le module <xref linkend="oid2name"/>
   ou en inspectant manuellement les
   catalogues système. Les fonctions SQL sont les plus simples à utiliser
   et sont généralement recommandées. Le reste de cette section montre
   comment le faire en inspectant les catalogues système.
  </para>

  <para>
   Sur une base de données
   récemment &laquo;&nbsp;nettoyée&nbsp;&raquo; (<command>VACUUM</command>) ou
   &laquo;&nbsp;analysée&nbsp;&raquo; (<command>ANALYZE</command>),
   <application>psql</application> permet de lancer des
   requêtes pour voir l'occupation disque d'une table&nbsp;:
   <programlisting>SELECT pg_relation_filepath(oid), relpages FROM pg_class WHERE relname = 'customer';

 pg_relation_filepath | relpages
----------------------+----------
 base/16384/16806     |       60
(1 row)
   </programlisting>
   Chaque page a une taille de 8&nbsp;ko, typiquement. (Rappelez-vous que
   <structfield>relpages</structfield> est seulement mis à jour par
   <command>VACUUM</command>, <command>ANALYZE</command> et quelques commandes
   DDL telles que <command>CREATE INDEX</command>.)  Le chemin du fichier n'a
   d'intérêt que si vous voulez examiner directement le fichier de la table.
  </para>

  <para>
   Pour connaître l'espace disque utilisé par les tables
   <acronym>TOAST</acronym>, on utilise une requête similaire à la suivante&nbsp;:
   <programlisting>SELECT relname, relpages
FROM pg_class,
     (SELECT reltoastrelid
      FROM pg_class
      WHERE relname = 'customer') AS ss
WHERE oid = ss.reltoastrelid OR
      oid = (SELECT indexrelid
             FROM pg_index
             WHERE indrelid = ss.reltoastrelid)
ORDER BY relname;

       relname        | relpages
----------------------+----------
 pg_toast_16806       |        0
 pg_toast_16806_index |        1</programlisting>
  </para>

  <para>
   On peut aussi facilement afficher la taille des index&nbsp;:
<programlisting>SELECT c2.relname, c2.relpages
FROM pg_class c, pg_class c2, pg_index i
WHERE c.relname = 'customer' AND
      c.oid = i.indrelid AND
      c2.oid = i.indexrelid
ORDER BY c2.relname;

       relname     | relpages
-------------------+----------
 customer_id_index |       26</programlisting>
  </para>

  <para>
   Les tables et les index les plus volumineux sont repérés à l'aide de la requête
   suivante&nbsp;:
<programlisting>SELECT relname, relpages
FROM pg_class
ORDER BY relpages DESC;

       relname        | relpages
----------------------+----------
 bigtable             |     3290
 customer             |     3144</programlisting>
  </para>
 </sect1>

 <sect1 id="disk-full">
  <title>Panne pour disque saturé</title>

  <para>
   La tâche la plus importante d'un administrateur de base de données,
   en ce qui concerne la surveillance des disques, est de s'assurer que les
   disques n'arrivent pas à saturation. Un disque de données plein ne corrompt pas
   les données mais peut empêcher toute activité. S'il s'agit
   du disque contenant les fichier WAL, une alerte
   PANIC et un arrêt du serveur peuvent survenir.
  </para>

  <para>
   S'il n'est pas possible de libérer de la place sur le disque, il faut
   envisager le déplacement de quelques fichiers vers d'autres systèmes de
   fichiers à l'aide des <foreignphrase>tablespaces</foreignphrase>. Voir la
   <xref linkend="manage-ag-tablespaces"/> pour plus d'informations.
  </para>

  <tip>
   <para>
   Certains systèmes de fichiers réagissent mal à proximité des limites de remplissage.
   Il est donc préférable de ne pas attendre ce moment pour réagir.
   </para>
  </tip>

  <para>
   Si le système supporte les quotas disque par utilisateur, la
   base de données est alors soumise au quota de
   l'utilisateur qui exécute le serveur de base de données. Dépasser ce
   quota a les mêmes conséquences néfastes qu'un disque plein.
  </para>
 </sect1>
</chapter>
