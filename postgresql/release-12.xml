<?xml version="1.0" encoding="UTF-8"?>
<!-- doc/src/sgml/release-12.sgml -->
<!-- See header comment in release.sgml about typical markup -->

 <sect1 id="release-12-6">
  <title>Release 12.6</title>

  <formalpara>
  <title>Release date:</title>
  <para>2021-02-11</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 12.5.
   For information about new features in major release 12, see
   <xref linkend="release-12"/>.
  </para>

  <sect2>
   <title>Migration to Version 12.6</title>

   <para>
    A dump/restore is not required for those running 12.X.
   </para>

   <para>
    However, see the second and third changelog items below,
    which describe cases in which reindexing indexes after the upgrade
    may be advisable.
   </para>

   <para>
    Also, if you are upgrading from a version earlier than 12.2,
    see <xref linkend="release-12-2"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [6214e2b22] 2021-02-08 11:01:51 +0200
Branch: REL_13_STABLE [8e56684d5] 2021-02-08 11:01:55 +0200
Branch: REL_12_STABLE [f50e88899] 2021-02-08 11:01:55 +0200
Branch: REL_11_STABLE [cb5868cc1] 2021-02-08 11:01:55 +0200
-->
     <para>
      Fix information leakage in constraint-violation error messages
      (Heikki Linnakangas)
     </para>

     <para>
      If an <command>UPDATE</command> command attempts to move a row to a
      different partition but finds that it violates some constraint on
      the new partition, and the columns in that partition are in
      different physical positions than in the parent table, the error
      message could reveal the contents of columns that the user does not
      have <literal>SELECT</literal> privilege on.
      (CVE-2021-3393)
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [6b4d3046f] 2021-01-20 11:58:03 +0200
Branch: REL_13_STABLE [b8403d140] 2021-01-20 11:58:25 +0200
Branch: REL_12_STABLE [0326635dd] 2021-01-20 11:58:27 +0200
-->
     <para>
      Fix incorrect detection of concurrent page splits while inserting
      into a GiST index (Heikki Linnakangas)
     </para>

     <para>
      Concurrent insertions could lead to a corrupt index with entries
      placed in the wrong pages.  It's recommended to reindex any GiST
      index that's been subject to concurrent insertions.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [8a54e12a3] 2021-01-30 00:00:27 -0800
Branch: REL_13_STABLE [86a5b309c] 2021-01-30 00:00:42 -0800
Branch: REL_12_STABLE [be843ce29] 2021-01-30 00:01:56 -0800
Branch: REL_11_STABLE [d1ab4bf6e] 2021-01-30 00:02:08 -0800
Branch: REL_10_STABLE [179775135] 2021-01-30 00:02:11 -0800
Branch: REL9_6_STABLE [d683d6528] 2021-01-30 00:04:05 -0800
Branch: REL9_5_STABLE [77a0e14f0] 2021-01-30 00:05:34 -0800
-->
     <para>
      Fix <command>CREATE INDEX CONCURRENTLY</command> to wait for
      concurrent prepared transactions (Andrey Borodin)
     </para>

     <para>
      At the point where <command>CREATE INDEX CONCURRENTLY</command>
      waits for all concurrent transactions to complete so that it can see
      rows they inserted, it must also wait for all prepared transactions
      to complete, for the same reason.  Its failure to do so meant that
      rows inserted by prepared transactions might be omitted from the new
      index, causing queries relying on the index to miss such rows.
      In installations that have enabled prepared transactions
      (<varname>max_prepared_transactions</varname> &gt; 0),
      it's recommended to reindex any concurrently-built indexes in
      case this problem occurred when they were built.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9624321ec] 2021-02-03 19:38:43 -0500
Branch: REL_13_STABLE [57868d957] 2021-02-03 19:38:29 -0500
Branch: REL_12_STABLE [77e760d5c] 2021-02-03 19:38:29 -0500
Branch: REL_11_STABLE [1c3a87746] 2021-02-03 19:38:29 -0500
-->
     <para>
      Avoid crash when a <literal>CALL</literal> or <literal>DO</literal>
      statement that performs a transaction rollback is executed via
      extended query protocol (Thomas Munro, Tom Lane)
     </para>

     <para>
      In <productname>PostgreSQL</productname> 13, this case reliably
      caused a null-pointer dereference.  In earlier versions the bug
      seems to have no visible symptoms, but it's not quite clear that
      it could never cause a problem.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1d9351a87] 2021-01-28 13:41:55 -0500
Branch: REL_13_STABLE [7f1921cb9] 2021-01-28 13:41:55 -0500
Branch: REL_12_STABLE [7c53a8067] 2021-01-28 13:41:55 -0500
Branch: REL_11_STABLE [6f94531b0] 2021-01-28 13:41:55 -0500
-->
     <para>
      Fix partition pruning logic to handle asymmetric hash partition sets
      (Tom Lane)
     </para>

     <para>
      If a hash-partitioned table has unequally-sized partitions (that is,
      varying modulus values), or it lacks partitions for some remainder
      values, then the planner's pruning logic could mistakenly conclude
      that some partitions don't need to be scanned, leading to failure to
      find rows that the query should find.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a0efda88a] 2021-01-19 13:25:33 -0500
Branch: REL_13_STABLE [188cd4f44] 2021-01-19 13:25:40 -0500
Branch: REL_12_STABLE [625315996] 2021-01-19 13:25:45 -0500
Branch: REL_11_STABLE [794562d07] 2021-01-19 13:25:49 -0500
Branch: REL_10_STABLE [fac54bd5e] 2021-01-19 13:25:54 -0500
Branch: REL9_6_STABLE [fe8edbb82] 2021-01-19 13:26:01 -0500
Branch: REL9_5_STABLE [0ab177bec] 2021-01-19 13:26:05 -0500
-->
     <para>
      Avoid incorrect results when <literal>WHERE CURRENT OF</literal> is
      applied to a cursor whose plan contains a MergeAppend node (Tom
      Lane)
     </para>

     <para>
      This case is unsupported (in general, a cursor using <literal>ORDER
      BY</literal> is not guaranteed to be simply updatable); but the code
      previously did not reject it, and could silently give false matches.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [60661bbf2] 2021-01-18 18:32:30 -0500
Branch: REL_13_STABLE [f0f53195b] 2021-01-18 18:32:40 -0500
Branch: REL_12_STABLE [ba80489c6] 2021-01-18 18:32:45 -0500
Branch: REL_11_STABLE [de622e677] 2021-01-18 18:32:49 -0500
Branch: REL_10_STABLE [5cd94de77] 2021-01-18 18:32:55 -0500
Branch: REL9_6_STABLE [ffbf17463] 2021-01-18 18:33:02 -0500
Branch: REL9_5_STABLE [33a46993f] 2021-01-18 18:33:07 -0500
-->
     <para>
      Fix crash when <literal>WHERE CURRENT OF</literal> is applied to a
      cursor whose plan contains a custom scan node (David Geier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [55dc86eca] 2021-01-21 15:37:23 -0500
Branch: REL_13_STABLE [73fc2e5ba] 2021-01-21 15:37:23 -0500
Branch: REL_12_STABLE [1cce024fd] 2021-01-21 15:37:23 -0500
-->
     <para>
      Fix planner's mishandling of placeholders whose evaluation should be
      delayed by an outer join (Tom Lane)
     </para>

     <para>
      This occurs in particular with trivial subqueries containing lateral
      references to outer-join outputs.  The mistake could result in a
      malformed plan.  The known cases trigger a <quote>failed to assign
      all NestLoopParams to plan nodes</quote> error, but other symptoms
      may be possible.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e98c90099] 2020-12-05 16:16:13 -0500
Branch: REL_13_STABLE [7d43b76f6] 2020-12-05 16:16:13 -0500
Branch: REL_12_STABLE [77a94c30d] 2020-12-05 16:16:13 -0500
-->
     <para>
      Fix planner's handling of placeholders during removal of useless
      RESULT RTEs (Tom Lane)
     </para>

     <para>
      This oversight could lead to <quote>no relation entry for
      relid <replaceable>N</replaceable></quote> planner errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b1738ff6a] 2020-11-30 12:22:43 -0500
Branch: REL_13_STABLE [666a4de93] 2020-11-30 12:22:43 -0500
Branch: REL_12_STABLE [4f728a1f5] 2020-11-30 12:22:43 -0500
Branch: REL_11_STABLE [caecab229] 2020-11-30 12:22:43 -0500
Branch: REL_10_STABLE [785f4462d] 2020-11-30 12:22:43 -0500
Branch: REL9_6_STABLE [ab4cbb4bc] 2020-11-30 12:22:43 -0500
Branch: REL9_5_STABLE [8c5da2d51] 2020-11-30 12:22:43 -0500
-->
     <para>
      Fix planner's handling of a placeholder that is computed at some
      join level and used only at that same level (Tom Lane)
     </para>

     <para>
      This oversight could lead to <quote>failed to build
      any <replaceable>N</replaceable>-way joins</quote> planner errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [660b89928] 2020-11-24 21:58:32 +0000
Branch: REL_13_STABLE [6dda05704] 2020-11-24 21:16:58 +0000
Branch: REL_12_STABLE [ae5aa26dc] 2020-11-24 21:17:02 +0000
Branch: REL_11_STABLE [018e7d98d] 2020-11-24 21:18:37 +0000
Branch: REL_10_STABLE [321c87e5c] 2020-11-24 21:18:59 +0000
Branch: REL9_6_STABLE [6402afd98] 2020-11-24 21:19:50 +0000
Branch: REL9_5_STABLE [59ed45e27] 2020-11-24 21:36:09 +0000
-->
     <para>
      Be more careful about whether index AMs support mark/restore
      (Andrew Gierth)
     </para>

     <para>
      This prevents errors about missing support functions in rare edge
      cases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master Release: REL_13_BR [d061ea21f] 2020-01-31 17:29:38 +1300
Branch: REL_12_STABLE [2ded1f1fb] 2020-11-20 10:51:30 +1300
Branch: REL_11_STABLE [0455f78dd] 2020-11-20 10:52:38 +1300
Branch: REL_10_STABLE [f5332503e] 2020-11-20 10:53:08 +1300
-->
     <para>
      Adjust settings to make it more difficult to run out of DSM slots
      during heavy usage of parallel queries (Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [2ad78a87f] 2021-01-15 12:44:17 +0900
Branch: REL_13_STABLE [60369db86] 2021-01-15 12:45:25 +0900
Branch: REL_12_STABLE [19a1d7685] 2021-01-15 12:45:51 +0900
Branch: REL_11_STABLE [97b025ebe] 2021-01-15 12:46:26 +0900
-->
     <para>
      Fix overestimate of the amount of shared memory needed for parallel
      queries (Takayuki Tsunakawa)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [21378e1fe] 2021-01-20 11:38:17 +0900
Branch: REL_13_STABLE [31e0f9d76] 2021-01-20 11:39:14 +0900
Branch: REL_12_STABLE [5ad672fc2] 2021-01-20 11:39:17 +0900
Branch: REL_11_STABLE [1c3a4d44d] 2021-01-20 11:39:21 +0900
Branch: REL_10_STABLE [74ee3abcf] 2021-01-20 11:39:24 +0900
Branch: REL9_6_STABLE [7dc3be9df] 2021-01-20 11:39:31 +0900
Branch: REL9_5_STABLE [0ddb529cf] 2021-01-20 11:39:35 +0900
-->
     <para>
      Fix <command>ALTER DEFAULT PRIVILEGES</command> to handle duplicated
      arguments safely (Michael Paquier)
     </para>

     <para>
      Duplicate role or schema names within the same command could lead
      to <quote>tuple already updated by self</quote> errors or
      unique-constraint violations.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [08db7c63f] 2020-12-25 10:41:59 -0800
Branch: REL_13_STABLE [9f8a48bb2] 2020-12-25 10:42:02 -0800
Branch: REL_12_STABLE [c96698806] 2020-12-25 10:42:03 -0800
Branch: REL_11_STABLE [e83e8509b] 2020-12-25 10:42:03 -0800
Branch: REL_10_STABLE [d7c197f46] 2020-12-25 10:42:03 -0800
Branch: REL9_6_STABLE [b81d3791e] 2020-12-25 10:42:04 -0800
Branch: REL9_5_STABLE [90383a613] 2020-12-25 10:42:04 -0800
Branch: REL_10_STABLE [d176b9d5e] 2020-12-25 11:02:56 -0800
Branch: REL9_6_STABLE [3f920e876] 2020-12-25 11:03:05 -0800
Branch: REL9_5_STABLE [14649bf50] 2020-12-25 11:06:23 -0800
-->
     <para>
      Flush ACL-related caches when <structname>pg_authid</structname>
      changes (Noah Misch)
     </para>

     <para>
      This change ensures that permissions-related decisions will promptly
      reflect the results of <command>ALTER ROLE ... [NO] INHERIT</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f7f83a55b] 2020-12-01 14:02:27 -0500
Branch: REL_13_STABLE [dffc82a5b] 2020-12-01 14:02:27 -0500
Branch: REL_12_STABLE [5f9b05ada] 2020-12-01 14:02:28 -0500
Branch: REL_11_STABLE [28bb8c496] 2020-12-01 14:02:28 -0500
Branch: REL_10_STABLE [d98e27dc6] 2020-12-01 14:02:28 -0500
Branch: REL9_6_STABLE [f00c44002] 2020-12-01 14:02:28 -0500
Branch: REL9_5_STABLE [fb500296d] 2020-12-01 14:02:28 -0500
-->
     <para>
      Prevent misprocessing of ambiguous <command>CREATE TABLE
      LIKE</command> clauses (Tom Lane)
     </para>

     <para>
      A <literal>LIKE</literal> clause is re-examined after initial
      creation of the new table, to handle importation of indexes and
      such.  It was possible for this re-examination to find a different
      table of the same name, causing unexpected behavior; one example is
      where the new table is a temporary table of the same name as
      the <literal>LIKE</literal> target.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [97390fe8a] 2020-11-19 15:03:17 -0500
Branch: REL_13_STABLE [98f3f1d5c] 2020-11-19 15:03:17 -0500
Branch: REL_12_STABLE [87ab46421] 2020-11-19 15:03:17 -0500
Branch: REL_11_STABLE [c690ebbef] 2020-11-19 15:03:17 -0500
Branch: REL_10_STABLE [513db7b70] 2020-11-19 15:03:17 -0500
Branch: REL9_6_STABLE [159b6775f] 2020-11-19 15:03:17 -0500
Branch: REL9_5_STABLE [6631d5f26] 2020-11-19 15:03:17 -0500
-->
     <para>
      Rearrange order of operations in <command>CREATE TABLE
      LIKE</command> so that indexes are cloned before building foreign
      key constraints (Tom Lane)
     </para>

     <para>
      This fixes the case where a self-referential foreign key constraint
      declared in the outer <command>CREATE TABLE</command> depends on an
      index that's coming from the <literal>LIKE </literal> clause.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [c9a0dc348] 2021-01-15 23:31:22 +0100
Branch: REL_13_STABLE [d26d4c717] 2021-01-15 23:32:54 +0100
Branch: REL_12_STABLE [943a113bc] 2021-01-15 23:33:16 +0100
Branch: REL_11_STABLE [f52db9694] 2021-01-15 23:33:44 +0100
Branch: REL_10_STABLE [c22539756] 2021-01-15 23:34:02 +0100
-->
     <para>
      Disallow <command>CREATE STATISTICS</command> on system catalogs
      (Tomas Vondra)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [dd705a039] 2021-02-06 15:17:01 -0500
Branch: REL_13_STABLE [4353bc878] 2021-02-06 15:17:01 -0500
Branch: REL_12_STABLE [f73321957] 2021-02-06 15:17:01 -0500
Branch: REL_11_STABLE [580069037] 2021-02-06 15:17:02 -0500
Branch: REL_10_STABLE [ad85e5efa] 2021-02-06 15:17:02 -0500
Branch: REL9_6_STABLE [7736ab05f] 2021-02-06 15:17:02 -0500
Branch: REL9_5_STABLE [5ad03374b] 2021-02-06 15:17:02 -0500
-->
     <para>
      Disallow converting an inheritance child table to a view
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [9f35f9437] 2020-12-01 13:21:03 +1300
Branch: REL_13_STABLE [fd3a75d82] 2020-12-01 13:22:01 +1300
Branch: REL_12_STABLE [50f338574] 2020-12-01 13:37:00 +1300
Branch: REL_11_STABLE [d5706ad7b] 2020-12-01 13:46:27 +1300
Branch: REL_10_STABLE [22701755d] 2020-12-01 14:43:04 +1300
Branch: REL9_6_STABLE [d0bbe2122] 2020-12-01 14:50:41 +1300
Branch: REL9_5_STABLE [e00928de8] 2020-12-01 14:54:49 +1300
-->
     <para>
      Ensure that disk space allocated for a dropped relation is released
      promptly at commit (Thomas Munro)
     </para>

     <para>
      Previously, if the dropped relation spanned multiple 1GB segments,
      only the first segment was truncated immediately.  Other segments
      were simply unlinked, which doesn't authorize the kernel to release
      the storage so long as any other backends still have the files open.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [ebfe2dbd6] 2021-01-14 15:32:14 -0300
Branch: REL_13_STABLE [5b01a6f13] 2021-01-14 15:32:14 -0300
Branch: REL_12_STABLE [c9b702552] 2021-01-14 15:32:14 -0300
Branch: REL_11_STABLE [c442b32c2] 2021-01-14 15:32:14 -0300
-->
     <para>
      Prevent dropping a tablespace that is referenced by a partitioned
      relation, but is not used for any actual storage (&Aacute;lvaro
      Herrera)
     </para>

     <para>
      Previously this was allowed, but subsequent operations on the
      partitioned relation would fail.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [3df51ca8b] 2020-11-27 20:16:44 +0900
Branch: REL_13_STABLE [dcc20946a] 2020-11-27 20:17:33 +0900
Branch: REL_12_STABLE [fce17e486] 2020-11-27 20:18:02 +0900
-->
     <para>
      Fix progress reporting for <command>CLUSTER</command> (Matthias van
      de Meent)
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [c444472af] 2021-02-05 11:14:56 +0200
Branch: REL_13_STABLE [c87cbd51e] 2021-02-05 11:19:48 +0200
Branch: REL_12_STABLE [9b0ce8957] 2021-02-05 11:16:33 +0200
Branch: REL_11_STABLE [d9b4163c5] 2021-02-05 11:16:53 +0200
Branch: REL_10_STABLE [c06632e48] 2021-02-05 11:17:07 +0200
Branch: REL9_6_STABLE [e152ccc7f] 2021-02-05 11:17:13 +0200
Branch: REL9_5_STABLE [aaf266157] 2021-02-05 11:17:27 +0200
-->
     <para>
      Fix handling of backslash-escaped multibyte characters
      in <command>COPY FROM</command> (Heikki Linnakangas)
     </para>

     <para>
      A backslash followed by a multibyte character was not handled
      correctly.  In some client character encodings, this could lead to
      misinterpreting part of a multibyte character as a field separator
      or end-of-copy-data marker.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [2cccb627f] 2020-11-18 12:39:15 +0200
Branch: REL_13_STABLE [340ae3cfb] 2020-11-20 14:41:14 +0200
Branch: REL_12_STABLE [888fa2bae] 2020-11-20 14:46:47 +0200
Branch: REL_11_STABLE [57b5d8484] 2020-11-20 14:49:25 +0200
Branch: REL_10_STABLE [1dbe627fd] 2020-11-20 14:49:42 +0200
Branch: REL9_6_STABLE [02a2dbe91] 2020-11-20 14:57:15 +0200
Branch: REL9_5_STABLE [ded7db4c1] 2020-11-20 14:57:51 +0200
-->
     <para>
      Avoid preallocating executor hash tables
      in <command>EXPLAIN</command> without <literal>ANALYZE</literal>
      (Alexey Bashtanov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9c83b54a9] 2020-11-28 14:03:40 -0500
Branch: REL_13_STABLE [f5de090cc] 2020-11-28 14:03:40 -0500
Branch: REL_12_STABLE [cbc7a7a10] 2020-11-28 14:03:40 -0500
Branch: REL_11_STABLE [40f2fbe71] 2020-11-28 14:03:40 -0500
Branch: REL_10_STABLE [f6324bbbe] 2020-11-28 14:03:40 -0500
Branch: REL9_6_STABLE [8a4069766] 2020-11-28 14:03:40 -0500
Branch: REL9_5_STABLE [60d6c7143] 2020-11-28 14:03:40 -0500
-->
     <para>
      Fix recently-introduced race conditions
      in <command>LISTEN</command>/<command>NOTIFY</command> queue
      handling (Tom Lane)
     </para>

     <para>
      A newly-listening backend could attempt to read SLRU pages that
      were in process of being truncated, possibly causing an error.
     </para>

     <para>
      The queue tail pointer could become
      set to a value that's not equal to the queue position of any
      backend, resulting in effective disabling of the queue truncation
      logic.  Continued use of <command>NOTIFY</command> then led to
      queue-fill warnings, and eventually to inability to send any more
      notifies until the server is restarted.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ff5d5611c] 2020-12-21 13:11:50 -0500
Branch: REL_13_STABLE [38d30a14b] 2020-12-21 13:11:51 -0500
Branch: REL_12_STABLE [38bef9e43] 2020-12-21 13:11:29 -0500
Branch: REL_11_STABLE [75c8ef5ae] 2020-12-21 13:11:29 -0500
Branch: REL_10_STABLE [542248f9d] 2020-12-21 13:11:30 -0500
Branch: REL9_6_STABLE [1d5f3f976] 2020-12-21 13:11:30 -0500
Branch: REL9_5_STABLE [edcdbc44e] 2020-12-21 13:11:30 -0500
-->
     <para>
      Allow the <type>jsonb</type> concatenation operator to handle all
      combinations of JSON data types (Tom Lane)
     </para>

     <para>
      We can concatenate two JSON objects or two JSON arrays.  Handle
      other cases by wrapping non-array inputs in one-element arrays,
      then performing an array concatenation.  Previously, some
      combinations of inputs followed this rule but others arbitrarily
      threw an error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [afcc8772e] 2021-01-08 12:16:00 -0500
Branch: REL_13_STABLE [49c928c0c] 2021-01-08 12:16:00 -0500
Branch: REL_12_STABLE [8354371d0] 2021-01-08 12:16:00 -0500
Branch: REL_11_STABLE [769908811] 2021-01-08 12:16:00 -0500
Branch: REL_10_STABLE [2d540ac5f] 2021-01-08 12:16:00 -0500
Branch: REL9_6_STABLE [085a1cfb3] 2021-01-08 12:16:00 -0500
Branch: REL9_5_STABLE [0c23f30fa] 2021-01-08 12:16:00 -0500
-->
     <para>
      Fix use of uninitialized value while parsing a <literal>*</literal>
      quantifier in a BRE-mode regular expression (Tom Lane)
     </para>

     <para>
      This error could cause the quantifier to act non-greedy, that is
      behave like a <literal>*?</literal> quantifier would do in full
      regular expressions.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [bc43b7c2c] 2021-01-05 11:15:28 +0000
Branch: REL_13_STABLE [e15c384d7] 2021-01-05 11:08:59 +0000
Branch: REL_12_STABLE [258b77005] 2021-01-05 11:07:12 +0000
Branch: REL_11_STABLE [160a9e425] 2021-01-05 11:05:58 +0000
Branch: REL_10_STABLE [275b190b3] 2021-01-05 11:04:41 +0000
Branch: REL9_6_STABLE [9a299dff2] 2021-01-05 11:02:46 +0000
Branch: master [fead67c24] 2021-01-05 11:52:42 +0000
Branch: REL_13_STABLE [5777b6ea2] 2021-01-05 11:51:21 +0000
Branch: REL_12_STABLE [740780a61] 2021-01-05 11:50:11 +0000
Branch: REL_11_STABLE [ab042d010] 2021-01-05 11:48:45 +0000
Branch: REL_10_STABLE [0097193b1] 2021-01-05 11:46:44 +0000
Branch: REL9_6_STABLE [f0b9bada5] 2021-01-05 11:45:17 +0000
-->
     <para>
      Fix numeric <function>power()</function> for the case where the
      exponent is exactly <literal>INT_MIN</literal> (-2147483648)
      (Dean Rasheed)
     </para>

     <para>
      Previously, a result with no significant digits was produced.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4bd3fad80] 2021-01-04 18:32:44 -0500
Branch: REL_13_STABLE [9e7d87ca8] 2021-01-04 18:32:40 -0500
Branch: REL_12_STABLE [7c98759e0] 2021-01-04 18:32:40 -0500
Branch: REL_11_STABLE [50a420bee] 2021-01-04 18:32:40 -0500
-->
     <para>
      Fix integer-overflow cases in <function>substring()</function>
      functions (Tom Lane, Pavel Stehule)
     </para>

     <para>
      If the specified starting index and length overflow an integer when
      added together, <function>substring()</function> misbehaved, either
      throwing a bogus <quote>negative substring length</quote> error for
      a case that should succeed, or failing to complain that a negative
      length is negative (and instead returning the whole string, in most
      cases).
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [6db992833] 2021-01-16 12:21:35 -0800
Branch: REL_13_STABLE [6eb3fc7fc] 2021-01-16 12:21:38 -0800
Branch: REL_12_STABLE [66087f7e9] 2021-01-16 12:21:39 -0800
Branch: REL_11_STABLE [677f6cb1d] 2021-01-16 12:21:39 -0800
Branch: REL_10_STABLE [9afba9b0e] 2021-01-16 12:21:39 -0800
Branch: REL9_6_STABLE [1a31d8c52] 2021-01-16 12:21:39 -0800
Branch: REL9_5_STABLE [c424c75f5] 2021-01-16 12:21:39 -0800
-->
     <para>
      Prevent possible data loss from incorrect detection of the
      wraparound point of an SLRU log
      (Noah Misch)
     </para>

     <para>
      The wraparound point typically falls in the middle of a page, which
      must be rounded off to a page boundary, and that was not done
      correctly.  No issue could arise unless an installation had gotten
      to within one page of SLRU overflow, which is unlikely in a
      properly-functioning system.  If this did happen, it would manifest
      in later <quote>apparent wraparound</quote> or <quote>could not
      access status of transaction</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [ee1b38f65] 2021-01-13 08:19:50 +0530
Branch: REL_13_STABLE [0685c5c1b] 2021-01-13 08:31:45 +0530
Branch: REL_12_STABLE [0b2ae3c92] 2021-01-13 08:40:06 +0530
Branch: REL_11_STABLE [7adc408f4] 2021-01-13 08:50:13 +0530
Branch: REL_10_STABLE [636b6f99c] 2021-01-13 09:01:57 +0530
Branch: REL9_6_STABLE [f2b268ee0] 2021-01-13 09:12:59 +0530
Branch: REL9_5_STABLE [4bccceaa9] 2021-01-13 09:22:03 +0530
-->
     <para>
      Fix memory leak in walsender processes while sending new snapshots
      for logical decoding (Amit Kapila)
     </para>
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [a58db3aa1] 2020-12-14 23:47:30 -0800
Branch: REL_13_STABLE [fde5f130c] 2020-12-14 23:48:44 -0800
Branch: REL_12_STABLE [706d84fe7] 2020-12-14 23:48:04 -0800
Branch: REL_11_STABLE [4ee058a3b] 2020-12-14 23:49:06 -0800
Branch: REL_10_STABLE [ac7df6e8f] 2020-12-14 23:49:29 -0800
Branch: REL9_6_STABLE [f10da1e9c] 2020-12-14 23:49:57 -0800
Branch: REL9_5_STABLE [133a0906d] 2020-12-14 23:50:20 -0800
-->
     <para>
      Fix walsender to accept additional commands after
      terminating replication (Jeff Davis)
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [8900b5a9d] 2021-01-06 12:39:18 +0900
Branch: REL_13_STABLE [0f8977b3f] 2021-01-06 12:30:37 +0900
Branch: REL_12_STABLE [9f540f840] 2021-01-06 12:31:23 +0900
Branch: REL_11_STABLE [e83771880] 2021-01-06 12:31:55 +0900
Branch: REL_10_STABLE [4c20e78f1] 2021-01-06 12:32:32 +0900
Branch: REL9_6_STABLE [0307b98d8] 2021-01-06 12:33:28 +0900
-->
     <para>
      Ensure detection of deadlocks between hot standby backends and the
      startup (WAL-application) process (Fujii Masao)
     </para>

     <para>
      The startup process did not run the deadlock detection code, so that
      in situations where the startup process is last to join a circular
      wait situation, the deadlock might never be recognized.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [422881744] 2020-12-30 16:29:05 -0800
Branch: REL_13_STABLE [7a57960ba] 2020-12-30 16:29:03 -0800
Branch: REL_12_STABLE [4f70e0910] 2020-12-30 16:29:01 -0800
Branch: master [32d6287d2] 2020-12-30 17:21:42 -0800
Branch: REL_13_STABLE [55e535226] 2020-12-30 17:21:41 -0800
Branch: REL_12_STABLE [5f95664e1] 2020-12-30 17:21:39 -0800
-->
     <para>
      Fix possible failure to detect recovery conflicts while deleting an
      index entry that references a HOT chain (Peter Geoghegan)
     </para>

     <para>
      The code failed to traverse the HOT chain and might thus compute a
      too-old XID horizon, which could lead to incorrect conflict
      processing in hot standby.  The practical impact of this bug is
      limited; in most cases the correct XID horizon would be found anyway
      from nearby operations.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [860fe27ee] 2020-12-30 11:38:42 -0500
Branch: REL_13_STABLE [861e96717] 2020-12-30 11:38:42 -0500
Branch: REL_12_STABLE [3ca19490b] 2020-12-30 11:38:42 -0500
-->
     <para>
      Ensure that a nonempty value
      of <varname>krb_server_keyfile</varname> always overrides any
      setting of <varname>KRB5_KTNAME</varname> in the server's
      environment (Tom Lane)
     </para>

     <para>
      Previously, which setting took precedence depended on whether the
      client requests GSS encryption.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3995c4249] 2020-12-28 17:58:58 -0500
Branch: REL_13_STABLE [d05e14d78] 2020-12-28 17:58:58 -0500
Branch: REL_12_STABLE [7ed616f81] 2020-12-28 17:58:58 -0500
-->
     <para>
      In server log messages about failing to match connections
      to <filename>pg_hba.conf</filename> entries, include details about
      whether GSS encryption has been activated (Kyotaro Horiguchi, Tom
      Lane)
     </para>

     <para>
      This is relevant data if <literal>hostgssenc</literal>
      or <literal>hostnogssenc</literal> entries exist.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [622ae4621] 2020-12-28 17:44:17 -0500
Branch: REL_13_STABLE [c1c88bf03] 2020-12-28 17:44:17 -0500
Branch: REL_12_STABLE [4cfdd8a47] 2020-12-28 17:44:17 -0500
-->
     <para>
      Fix assorted issues in server's support for GSS encryption (Tom Lane)
     </para>

     <para>
      Remove pointless restriction that only GSS authentication
      can be used on a GSS-encrypted connection.
      Add GSS encryption information to connection-authorized log messages.
      Include GSS-related space when computing the required size of
      shared memory (this omission could have caused problems with very
      high <varname>max_connections</varname> settings).
      Avoid possible infinite recursion when reporting an unrecoverable
      GSS encryption error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7519bd16d] 2020-12-24 17:00:43 -0500
Branch: REL_13_STABLE [0217ad806] 2020-12-24 17:00:43 -0500
Branch: REL_12_STABLE [3d8068edc] 2020-12-24 17:00:43 -0500
Branch: REL_11_STABLE [b99b6b9d6] 2020-12-24 17:00:43 -0500
Branch: REL_10_STABLE [1a6b1c460] 2020-12-24 17:00:43 -0500
-->
     <para>
      Ensure that unserviced requests for background workers are cleaned
      up when the postmaster begins a <quote>smart</quote>
      or <quote>fast</quote> shutdown sequence (Tom Lane)
     </para>

     <para>
      Previously, there was a race condition whereby a child process that
      had requested a background worker just before shutdown could wait
      indefinitely, preventing shutdown from completing.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [6db27037b] 2020-12-23 12:51:22 +0900
Branch: REL_13_STABLE [1e54664ee] 2020-12-23 12:51:35 +0900
Branch: REL_12_STABLE [67a9411d2] 2020-12-23 12:51:39 +0900
Branch: REL_11_STABLE [35ad5c7c7] 2020-12-23 12:51:42 +0900
Branch: REL_10_STABLE [f3ee99df7] 2020-12-23 12:51:46 +0900
Branch: REL9_6_STABLE [0b54a80a3] 2020-12-23 12:51:51 +0900
-->
     <para>
      Fix portability problem in parsing
      of <varname>recovery_target_xid</varname> values (Michael Paquier)
     </para>

     <para>
      The target XID is potentially 64 bits wide, but it was parsed
      with <function>strtoul()</function>, causing misbehavior on
      platforms where <type>long</type> is 32 bits (such as Windows).
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [275b3411d] 2020-11-30 14:38:00 -0500
Branch: REL_13_STABLE [fac31b2cd] 2020-11-30 14:38:00 -0500
Branch: REL_12_STABLE [16a1e1ea4] 2020-11-30 14:38:00 -0500
Branch: REL_11_STABLE [942e441ee] 2020-11-30 14:38:00 -0500
-->
     <para>
      Avoid trying to use parallel index build in a standalone backend
      (Yulin Pei)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [29d29d652] 2020-11-15 16:10:58 -0500
Branch: REL_13_STABLE [7c89246d0] 2020-11-15 16:10:48 -0500
Branch: REL_12_STABLE [4ac8ee9d4] 2020-11-15 16:10:48 -0500
Branch: REL_11_STABLE [9cebe4952] 2020-11-15 16:10:48 -0500
-->
     <para>
      Allow index AMs to support included columns without necessarily
      supporting multiple key columns (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [a3367aa3c] 2021-01-28 10:53:10 +0000
Branch: REL_13_STABLE [75e3cca42] 2021-01-28 11:09:40 +0000
Branch: REL_12_STABLE [30f912a41] 2021-01-28 11:09:49 +0000
Branch: REL_11_STABLE [f7f2a28d4] 2021-01-28 11:09:57 +0000
-->
     <para>
      Avoid assertion failure during parallel aggregation of an
      aggregate with a non-strict deserialization function (Andrew Gierth)
     </para>

     <para>
      No such aggregate functions exist in
      core <productname>PostgreSQL</productname>, but some extensions
      such as PostGIS provide some.  The mistake is harmless anyway in a
      non-assert build.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [07d46fceb] 2021-01-25 13:03:43 -0500
Branch: REL_13_STABLE [a26194f22] 2021-01-25 13:03:11 -0500
Branch: REL_12_STABLE [4641b2a30] 2021-01-25 13:03:11 -0500
Branch: REL_11_STABLE [a7cdd3f71] 2021-01-25 13:03:11 -0500
Branch: REL_10_STABLE [d09e8789f] 2021-01-25 13:03:11 -0500
Branch: REL9_6_STABLE [57a7d6f49] 2021-01-25 13:03:12 -0500
Branch: REL9_5_STABLE [41309f716] 2021-01-25 13:03:12 -0500
-->
     <para>
      Avoid assertion failure in <function>pg_get_functiondef()</function>
      when examining a function with a <literal>TRANSFORM</literal> option
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ea80d8d94] 2020-12-28 11:41:25 -0500
Branch: REL_13_STABLE [0ea25ed10] 2020-12-28 11:41:25 -0500
Branch: REL_12_STABLE [fd1347f9d] 2020-12-28 11:41:25 -0500
Branch: REL_11_STABLE [2e15f48d9] 2020-12-28 11:41:25 -0500
Branch: master [5f2e09bcc] 2020-12-28 11:55:23 -0500
Branch: REL_13_STABLE [63d78d106] 2020-12-28 11:55:32 -0500
Branch: REL_12_STABLE [d37965965] 2020-12-28 11:55:37 -0500
Branch: REL_11_STABLE [7966b41de] 2020-12-28 11:55:41 -0500
-->
     <para>
      Fix data structure misallocation in
      PL/pgSQL's <command>CALL</command> statement (Tom Lane)
     </para>

     <para>
      A <command>CALL</command> in a PL/pgSQL procedure, to another
      procedure that has OUT parameters, would fail if the called
      procedure did a <command>COMMIT</command>
      or <command>ROLLBACK</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ff6ce9a3a] 2020-12-28 15:43:44 -0500
Branch: REL_13_STABLE [06b844c2b] 2020-12-28 15:43:44 -0500
Branch: REL_12_STABLE [b3a5bf719] 2020-12-28 15:43:44 -0500
-->
     <para>
      In <application>libpq</application>, do not skip trying SSL after
      GSS encryption (Tom Lane)
     </para>

     <para>
      If we successfully made a GSS-encrypted connection, but then failed
      during authentication, we would fall back to an unencrypted
      connection rather than next trying an SSL-encrypted connection.
      This could lead to unexpected connection failure, or to silently
      getting an unencrypted connection where an encrypted one is
      expected.  Fortunately, GSS encryption could only succeed if both
      client and server hold valid tickets in the same Kerberos
      infrastructure.  It seems unlikely for that to be true in an
      environment that requires SSL encryption instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7e5e1bba0] 2020-11-29 15:22:04 -0500
Branch: REL_13_STABLE [72b930f50] 2020-11-29 15:22:04 -0500
Branch: REL_12_STABLE [3958abdad] 2020-11-29 15:22:04 -0500
Branch: REL_11_STABLE [777ac03a6] 2020-11-29 15:22:04 -0500
Branch: REL_10_STABLE [946277fd4] 2020-11-29 15:22:04 -0500
Branch: REL9_6_STABLE [3f59a05f0] 2020-11-29 15:22:04 -0500
Branch: REL9_5_STABLE [e2d5de150] 2020-11-29 15:22:04 -0500
-->
     <para>
      In <application>psql</application>, re-allow including a password
      in a <replaceable>connection_string</replaceable> argument of a
      <command>\connect</command> command (Tom Lane)
     </para>

     <para>
      This used to work, but a recent bug fix caused the password to be
      ignored (resulting in prompting for a password).
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [314fb9bae] 2020-11-25 16:19:25 -0500
Branch: REL_13_STABLE [a0ef08172] 2020-11-25 16:19:25 -0500
Branch: REL_12_STABLE [ea7a167da] 2020-11-25 16:19:25 -0500
-->
     <para>
      In <application>psql</application>'s <command>\d</command> commands,
      don't truncate the display of column default values (Tom Lane)
     </para>

     <para>
      Formerly, they were arbitrarily truncated at 128 characters.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f76a85000] 2021-01-26 13:04:52 -0500
Branch: REL_13_STABLE [64bdb6e5f] 2021-01-26 13:04:52 -0500
Branch: REL_12_STABLE [82f97d33f] 2021-01-26 13:04:52 -0500
Branch: REL_11_STABLE [3fa7b9078] 2021-01-26 13:04:52 -0500
Branch: REL_10_STABLE [564cb2579] 2021-01-26 13:04:52 -0500
Branch: REL9_6_STABLE [2c2e134b7] 2021-01-26 13:04:52 -0500
Branch: REL9_5_STABLE [131825cd5] 2021-01-26 13:04:52 -0500
-->
     <para>
      Fix assorted bugs
      in <application>psql</application>'s <command>\help</command>
      command (Kyotaro Horiguchi, Tom Lane)
     </para>

     <para>
      <command>\help</command> with two argument words failed to find a
      command description using only the first word, for
      example <literal>\help reset all</literal> should show the help
      for <command>RESET</command> but did not.
      Also, <command>\help</command> often failed to invoke the pager when
      it should.  It also leaked memory.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [0bf83648a] 2021-02-03 11:27:13 +0100
Branch: REL_13_STABLE [1d3ce0223] 2021-02-03 11:43:01 +0100
Branch: REL_12_STABLE [1dd6baf78] 2021-02-03 11:58:15 +0100
-->
     <para>
      Fix <application>pg_dump</application>'s dumping of inherited
      generated columns (Peter Eisentraut)
     </para>

     <para>
      The previous behavior resulted in (harmless) errors during restore.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9eabfe300] 2021-01-12 13:37:38 -0500
Branch: REL_13_STABLE [0011c5a0f] 2021-01-12 13:37:38 -0500
Branch: REL_12_STABLE [436d9c5ca] 2021-01-12 13:37:38 -0500
Branch: REL_11_STABLE [9f15188a1] 2021-01-12 13:37:38 -0500
Branch: master [8e396a773] 2021-01-14 16:19:38 -0500
Branch: REL_13_STABLE [79d3ac72f] 2021-01-14 16:19:38 -0500
Branch: REL_12_STABLE [0d221ecec] 2021-01-14 16:19:38 -0500
Branch: REL_11_STABLE [bb12a7f42] 2021-01-14 16:19:38 -0500
Branch: REL_10_STABLE [1c9791f66] 2021-01-14 16:19:38 -0500
-->
     <para>
      In <application>pg_dump</application>, ensure that the restore
      script runs <command>ALTER PUBLICATION ADD TABLE</command> commands
      as the owner of the publication, and similarly runs <command>ALTER
      INDEX ATTACH PARTITION</command> commands as the owner of the
      partitioned index (Tom Lane)
     </para>

     <para>
      Previously, these commands would be run by the role that started the
      restore script; which will usually work, but in corner cases that
      role might not have adequate permissions.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [f713ff7c6] 2021-01-16 12:21:35 -0800
Branch: REL_13_STABLE [b8daf894f] 2021-01-16 12:21:38 -0800
Branch: REL_12_STABLE [a0d31b1c9] 2021-01-16 12:21:39 -0800
Branch: REL_11_STABLE [c6ff165f9] 2021-01-16 12:21:39 -0800
Branch: REL_10_STABLE [b933c9c0b] 2021-01-16 12:21:39 -0800
Branch: REL9_6_STABLE [ad2b7c9bb] 2021-01-16 12:21:39 -0800
-->
     <para>
      Fix <application>pg_dump</application> to handle <literal>WITH
      GRANT OPTION</literal> in an extension's initial privileges
      (Noah Misch)
     </para>

     <para>
      If an extension's script creates an object and grants privileges
      on it with grant option, then later the user revokes such
      privileges, <application>pg_dump</application> would generate
      incorrect SQL for reproducing the situation.  (Few if any extensions
      do this today.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [2b4f31303] 2020-12-03 15:57:48 +0200
Branch: REL_13_STABLE [abd0abfb7] 2020-12-03 15:57:52 +0200
Branch: REL_12_STABLE [020f153db] 2020-12-03 15:57:54 +0200
Branch: REL_11_STABLE [63e316f0b] 2020-12-03 15:57:57 +0200
Branch: REL_10_STABLE [8b5c353ec] 2020-12-03 15:58:00 +0200
Branch: REL9_6_STABLE [0740857de] 2020-12-03 15:58:02 +0200
Branch: REL9_5_STABLE [81e3c868f] 2020-12-03 15:58:06 +0200
Branch: master [36a4ac20f] 2020-12-04 18:26:46 +0200
Branch: REL_13_STABLE [e41a2efbc] 2020-12-04 18:24:34 +0200
Branch: REL_12_STABLE [ad3fb04b9] 2020-12-04 18:24:57 +0200
Branch: REL_11_STABLE [cda50f211] 2020-12-04 18:25:12 +0200
Branch: REL_10_STABLE [45d363145] 2020-12-04 18:25:23 +0200
Branch: REL9_6_STABLE [a075c84f2] 2020-12-04 18:25:45 +0200
Branch: REL9_5_STABLE [1dd608bba] 2020-12-04 18:25:54 +0200
Branch: master [6ba581cf1] 2020-12-07 14:50:20 +0200
Branch: REL_13_STABLE [e6dc04d43] 2020-12-07 14:50:37 +0200
Branch: REL_12_STABLE [98f8cdd48] 2020-12-07 14:55:22 +0200
Branch: REL_11_STABLE [10d9c9d03] 2020-12-07 14:55:23 +0200
Branch: REL_10_STABLE [d137b14c3] 2020-12-07 14:55:25 +0200
Branch: REL9_6_STABLE [3ea8e660c] 2020-12-07 14:55:27 +0200
Branch: REL9_5_STABLE [beb6b45ab] 2020-12-07 14:55:28 +0200
-->
     <para>
      In <application>pg_rewind</application>, ensure that all WAL is
      accounted for when rewinding a standby server
      (Ian Barwick, Heikki Linnakangas)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c21ea4d53] 2021-01-13 14:52:59 -0500
Branch: REL_13_STABLE [6b045ca6c] 2021-01-13 14:52:49 -0500
Branch: REL_12_STABLE [3e214fafc] 2021-01-13 14:52:49 -0500
Branch: REL_11_STABLE [d8bb22ab3] 2021-01-13 14:52:49 -0500
-->
     <para>
      In <application>pgbench</application>, disallow a digit as the first
      character of a variable name (Fabien Coelho)
     </para>

     <para>
      This prevents trying to substitute variables into timestamp literal
      values, which may contain strings like <literal>12:34</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: REL_13_STABLE [f17e8f33f] 2021-01-26 16:42:13 -0300
Branch: REL_12_STABLE [fdf9d0054] 2021-01-26 16:42:13 -0300
Branch: REL_11_STABLE [fdd405c63] 2021-01-26 16:42:13 -0300
Branch: REL_10_STABLE [11a708f81] 2021-01-26 16:42:13 -0300
Branch: REL9_6_STABLE [bcae842b9] 2021-01-26 16:42:13 -0300
Branch: REL9_5_STABLE [f2dc96236] 2021-01-26 16:42:13 -0300
-->
     <para>
      Report the correct database name in connection failure error
      messages from some client programs (&Aacute;lvaro Herrera)
     </para>

     <para>
      If the database name was defaulted rather than given on the command
      line, <application>pg_dumpall</application>,
      <application>pgbench</application>, <application>oid2name</application>,
      and <application>vacuumlo</application> would produce misleading
      error messages after a connection failure.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5c0f7cc54] 2021-02-02 13:49:08 -0500
Branch: REL_13_STABLE [586891394] 2021-02-02 13:49:08 -0500
Branch: REL_12_STABLE [742846958] 2021-02-02 13:49:08 -0500
Branch: REL_11_STABLE [5fc5ff61c] 2021-02-02 13:49:08 -0500
Branch: REL_10_STABLE [2671125c7] 2021-02-02 13:49:08 -0500
Branch: REL9_6_STABLE [608cf2bfd] 2021-02-02 13:49:08 -0500
Branch: REL9_5_STABLE [f0f9ed68d] 2021-02-02 13:49:08 -0500
-->
     <para>
      Fix memory leak in <filename>contrib/auto_explain</filename>
      (Japin Li)
     </para>

     <para>
      Memory consumed while producing the <literal>EXPLAIN</literal>
      output was not freed until the end of the current transaction (for a
      top-level statement) or the end of the surrounding statement (for a
      nested statement).  This was particularly a problem
      with <varname>log_nested_statements</varname> enabled.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [e3ebcca84] 2020-12-28 19:56:13 +0900
Branch: REL_13_STABLE [546f14374] 2020-12-28 19:57:51 +0900
Branch: REL_12_STABLE [e792ca4ac] 2020-12-28 19:59:00 +0900
Branch: REL_11_STABLE [294cdd7d0] 2020-12-28 19:59:40 +0900
Branch: REL_10_STABLE [744357d84] 2020-12-28 20:00:15 +0900
Branch: REL9_6_STABLE [03b7a1ee7] 2020-12-28 20:00:54 +0900
Branch: REL9_5_STABLE [b5c73eef8] 2020-12-28 20:01:31 +0900
-->
     <para>
      In <filename>contrib/postgres_fdw</filename>, avoid leaking open
      connections to remote servers when a user mapping or foreign server
      object is dropped (Bharath Rupireddy)
     </para>

     <para>
      Open connections that depend on a dropped user mapping or foreign
      server can no longer be referenced, but formerly they were kept
      around anyway for the duration of the local session.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [28d1601ad] 2020-12-08 15:22:12 +0900
Branch: REL_13_STABLE [dfd8bf2b9] 2020-12-08 15:22:38 +0900
Branch: REL_12_STABLE [d7ecba937] 2020-12-08 15:22:43 +0900
Branch: REL_11_STABLE [b88afd8b6] 2020-12-08 15:22:48 +0900
Branch: REL_10_STABLE [5ba1df0f1] 2020-12-08 15:22:53 +0900
Branch: REL9_6_STABLE [95992e5ed] 2020-12-08 15:22:59 +0900
Branch: REL9_5_STABLE [f95d9fd81] 2020-12-08 15:23:02 +0900
-->
     <para>
      In <filename>contrib/pgcrypto</filename>, check for error returns
      from OpenSSL's EVP functions (Michael Paquier)
     </para>

     <para>
      We do not really expect errors here, but this change silences
      warnings from static analysis tools.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ff769831e] 2020-12-22 13:23:49 -0500
Branch: REL_13_STABLE [4b0292253] 2020-12-22 13:23:49 -0500
Branch: REL_12_STABLE [f581e5383] 2020-12-22 13:23:49 -0500
Branch: REL_11_STABLE [a1bd14d54] 2020-12-22 13:23:49 -0500
-->
     <para>
      Make <filename>contrib/pg_prewarm</filename> more robust when the
      cluster is shut down before prewarming is complete (Tom Lane)
     </para>

     <para>
      Previously, autoprewarm would rewrite its status file with only the
      block numbers that it had managed to load so far, thus perhaps
      largely disabling the prewarm functionality in the next startup.
      Instead, suppress status file updates until the initial loading pass
      is complete.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [3836d4b64] 2020-11-12 14:34:37 +0000
Branch: REL_13_STABLE [48ab1fa30] 2020-11-12 14:59:06 +0000
Branch: REL_12_STABLE [7f69ed4ae] 2020-11-12 14:56:58 +0000
Branch: REL_11_STABLE [7e3dc147d] 2020-11-12 14:57:04 +0000
Branch: REL_10_STABLE [068de9dd4] 2020-11-12 14:57:08 +0000
Branch: REL9_6_STABLE [245a35f96] 2020-11-12 14:57:13 +0000
Branch: REL9_5_STABLE [4b212b7c8] 2020-11-12 14:55:51 +0000
-->
     <para>
      In <filename>contrib/pg_trgm</filename>'s GiST index support, avoid
      crash in the rare case that picksplit is called on exactly two index
      items (Andrew Gierth, Alexander Korotkov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ec29427ce] 2020-11-10 22:51:54 -0500
Branch: REL_13_STABLE [afce7908d] 2020-11-10 22:51:55 -0500
Branch: REL_12_STABLE [171c457cd] 2020-11-10 22:51:55 -0500
Branch: REL_11_STABLE [3a89ea0eb] 2020-11-10 22:51:56 -0500
Branch: REL_10_STABLE [e87139b43] 2020-11-10 22:51:57 -0500
Branch: REL9_6_STABLE [cd39c23a2] 2020-11-10 22:51:57 -0500
Branch: REL9_5_STABLE [210564a74] 2020-11-10 22:51:58 -0500
-->
     <para>
      Fix miscalculation of timeouts
      in <filename>contrib/pg_prewarm</filename>
      and <filename>contrib/postgres_fdw</filename>
      (Alexey Kondratov, Tom Lane)
     </para>

     <para>
      The main loop in <filename>contrib/pg_prewarm</filename>'s
      autoprewarm parent process underestimated its desired sleep time by
      a factor of 1000, causing it to consume much more CPU than intended.
      When waiting for a result from a remote
      server, <filename>contrib/postgres_fdw</filename> overestimated the
      desired timeout by a factor of 1000 (though this error had been
      mitigated by imposing a clamp to 60 seconds).
     </para>

     <para>
      Both of these errors stemmed from incorrectly converting
      seconds-and-microseconds to milliseconds.  Introduce a new
      API <function>TimestampDifferenceMilliseconds()</function>
      to make it easier to get this right in the future.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4823621db] 2021-01-15 11:28:51 -0500
Branch: REL_13_STABLE [f44ae4db5] 2021-01-15 11:29:05 -0500
Branch: REL_12_STABLE [f5d044eae] 2021-01-15 11:29:13 -0500
Branch: REL_11_STABLE [046c8face] 2021-01-15 11:29:18 -0500
Branch: REL_10_STABLE [5fa060c8f] 2021-01-15 11:29:26 -0500
Branch: REL9_6_STABLE [fc6d08b27] 2021-01-15 11:29:34 -0500
Branch: REL9_5_STABLE [3934543c2] 2021-01-15 11:29:43 -0500
Branch: master [9d23c15a0] 2021-01-20 12:07:23 -0500
Branch: REL_13_STABLE [6671e8194] 2021-01-20 12:07:31 -0500
Branch: REL_12_STABLE [561dd8d8a] 2021-01-20 12:07:35 -0500
Branch: REL_11_STABLE [cbcff1729] 2021-01-20 12:07:41 -0500
Branch: REL_10_STABLE [a3345383d] 2021-01-20 12:07:46 -0500
Branch: REL9_6_STABLE [cbcf7b130] 2021-01-20 12:07:52 -0500
Branch: REL9_5_STABLE [175f716a8] 2021-01-20 12:07:57 -0500
-->
     <para>
      Improve <application>configure</application>'s heuristics for
      selecting <varname>PG_SYSROOT</varname> on macOS (Tom Lane)
     </para>

     <para>
      The new method is more likely to produce desirable results when
      Xcode is newer than the underlying operating system.  Choosing
      a sysroot that does not match the OS version may result in
      nonfunctional executables.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [49407dc32] 2020-11-20 00:07:09 -0500
Branch: REL_13_STABLE [9e9a31bd0] 2020-11-20 00:58:26 -0500
Branch: REL_12_STABLE [5b8360427] 2020-11-20 00:58:26 -0500
Branch: REL_11_STABLE [d01e37845] 2020-11-20 00:58:26 -0500
Branch: REL_10_STABLE [153bf8d20] 2020-11-20 00:58:26 -0500
Branch: REL9_6_STABLE [e7abc1111] 2020-11-20 00:58:26 -0500
Branch: REL9_5_STABLE [2bb8c0f1d] 2020-11-20 00:58:26 -0500
-->
     <para>
      While building on macOS, specify <option>-isysroot</option> in
      link steps as well as compile steps (James Hilliard)
     </para>

     <para>
      This likewise improves the results when Xcode is out of sync with
      the operating system.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [9543f0861] 2020-12-07 19:34:13 -0800
Branch: REL_13_STABLE [4f64daf73] 2020-12-07 18:32:56 -0800
Branch: REL_12_STABLE [b07490b91] 2020-12-07 18:39:32 -0800
Branch: REL_11_STABLE [f4f924b3e] 2020-12-07 18:40:27 -0800
Branch: master [6c57f2ed1] 2020-11-09 20:01:33 -0800
Branch: REL_13_STABLE [6a192c77d] 2020-12-07 18:32:32 -0800
Branch: REL_12_STABLE [fa7a52fb9] 2020-12-07 18:39:32 -0800
Branch: REL_11_STABLE [90eb343ef] 2020-12-07 18:40:27 -0800
-->
     <para>
      Fix JIT compilation to be compatible with LLVM 11 and LLVM 12
      (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [5da871bfa] 2020-12-07 19:34:13 -0800
Branch: REL_13_STABLE [01c6370a3] 2020-12-07 18:33:03 -0800
Branch: REL_12_STABLE [27b57f806] 2020-12-07 18:39:32 -0800
Branch: REL_11_STABLE [1e16ad101] 2020-12-07 18:40:27 -0800
-->
     <para>
      Fix potential mishandling of references to boolean variables in
      JIT expression compilation (Andres Freund)
     </para>

     <para>
      No field reports attributable to this have been seen, but it seems
      likely that it could cause problems on some architectures.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ad84ecc98] 2020-11-16 15:16:39 -0500
Branch: REL_13_STABLE [53c7b4f62] 2020-11-16 15:16:39 -0500
Branch: REL_12_STABLE [029fa664e] 2020-11-16 15:16:39 -0500
Branch: REL_11_STABLE [89aa30a17] 2020-11-16 15:16:39 -0500
-->
     <para>
      Fix compile failure with ICU 68 and later (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [677f74e5b] 2020-12-01 11:46:56 -0300
Branch: REL_13_STABLE [5a1d1b954] 2020-12-01 11:46:56 -0300
Branch: REL_12_STABLE [f0ff52f25] 2020-12-01 11:46:56 -0300
Branch: REL_11_STABLE [49aaabdf8] 2020-12-01 11:46:56 -0300
-->
     <para>
      Avoid <function>memcpy()</function> with a NULL source pointer and
      zero count during partitioned index creation (&Aacute;lvaro Herrera)
     </para>

     <para>
      While such a call is not known to cause problems in itself, some
      compilers assume that the arguments of <function>memcpy()</function>
      are never NULL, which could result in incorrect optimization of
      nearby code.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c7edf4ac2] 2021-01-24 16:29:47 -0500
Branch: REL_13_STABLE [58a545344] 2021-01-24 16:29:47 -0500
Branch: REL_12_STABLE [5db6ba303] 2021-01-24 16:29:47 -0500
Branch: REL_11_STABLE [c82c015b5] 2021-01-24 16:29:47 -0500
Branch: REL_10_STABLE [728971d5f] 2021-01-24 16:29:48 -0500
Branch: REL9_6_STABLE [7e0786751] 2021-01-24 16:29:48 -0500
Branch: REL9_5_STABLE [c26a0865d] 2021-01-24 16:29:48 -0500
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2021a for DST law changes in Russia (Volgograd zone) and
      South Sudan, plus historical corrections for Australia, Bahamas,
      Belize, Bermuda, Ghana, Israel, Kenya, Nigeria, Palestine,
      Seychelles, and Vanuatu.
     </para>

     <para>
      Notably, the Australia/Currie zone has been corrected to the point
      where it is identical to Australia/Hobart.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-12-5">
  <title>Release 12.5</title>

  <formalpara>
  <title>Release date:</title>
  <para>2020-11-12</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 12.4.
   For information about new features in major release 12, see
   <xref linkend="release-12"/>.
  </para>

  <sect2>
   <title>Migration to Version 12.5</title>

   <para>
    A dump/restore is not required for those running 12.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 12.2,
    see <xref linkend="release-12-2"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [0c3185e96] 2020-11-09 07:32:09 -0800
Branch: REL_13_STABLE [c90c84b3f] 2020-11-09 07:32:12 -0800
Branch: REL_12_STABLE [ac8f6243c] 2020-11-09 07:32:12 -0800
Branch: REL_11_STABLE [43ebfea5a] 2020-11-09 07:32:13 -0800
Branch: REL_10_STABLE [f97ecea1e] 2020-11-09 07:32:13 -0800
Branch: REL9_6_STABLE [ff3de4c21] 2020-11-09 07:32:13 -0800
Branch: REL9_5_STABLE [aefc625de] 2020-11-09 07:32:14 -0800
-->
     <para>
      Block <command>DECLARE CURSOR ... WITH HOLD</command> and firing of
      deferred triggers within index expressions and materialized view
      queries (Noah Misch)
     </para>

     <para>
      This is essentially a leak in the <quote>security restricted
      operation</quote> sandbox mechanism.  An attacker having permission
      to create non-temporary SQL objects could parlay this leak to
      execute arbitrary SQL code as a superuser.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Etienne Stalmans for reporting this problem.
      (CVE-2020-25695)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a45bc8a4f] 2020-09-24 18:19:38 -0400
Branch: REL_13_STABLE [cb8885ac4] 2020-09-24 18:19:38 -0400
Branch: REL_12_STABLE [fb93f784f] 2020-09-24 18:19:38 -0400
Branch: REL_11_STABLE [1738a61c8] 2020-09-24 18:19:39 -0400
Branch: REL_10_STABLE [1888ff8d0] 2020-09-24 18:19:39 -0400
Branch: REL9_6_STABLE [7c154f2fd] 2020-09-24 18:19:39 -0400
Branch: REL9_5_STABLE [56b46d3a1] 2020-09-24 18:19:39 -0400
Branch: master [8e5793ab6] 2020-10-19 19:03:46 -0400
Branch: REL_13_STABLE [1814f915b] 2020-10-19 19:03:46 -0400
Branch: REL_12_STABLE [c6d0b9b16] 2020-10-19 19:03:46 -0400
Branch: REL_11_STABLE [5a9f99bed] 2020-10-19 19:03:47 -0400
Branch: REL_10_STABLE [68f236993] 2020-10-19 19:03:47 -0400
Branch: REL9_6_STABLE [5c78f7977] 2020-10-19 19:03:47 -0400
Branch: REL9_5_STABLE [da129a04a] 2020-10-19 19:03:47 -0400
-->
     <para>
      Fix usage of complex connection-string parameters
      in <application>pg_dump</application>,
      <application>pg_restore</application>,
      <application>clusterdb</application>,
      <application>reindexdb</application>,
      and <application>vacuumdb</application> (Tom Lane)
     </para>

     <para>
      The <option>-d</option> parameter
      of <application>pg_dump</application>
      and <application>pg_restore</application>, or
      the <option>--maintenance-db</option> parameter of the other
      programs mentioned, can be a <quote>connection string</quote>
      containing multiple connection parameters rather than just a
      database name.  In cases where these programs need to initiate
      additional connections, such as parallel processing or processing of
      multiple databases, the connection string was forgotten and just the
      basic connection parameters (database name, host, port, and
      username) were used for the additional connections.  This could lead
      to connection failures if the connection string included any other
      essential information, such as non-default SSL or GSS parameters.
      Worse, the connection might succeed but not be encrypted as
      intended, or be vulnerable to man-in-the-middle attacks that the
      intended connection parameters would have prevented.
      (CVE-2020-25694)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [85c54287a] 2020-10-21 16:19:00 -0400
Branch: REL_13_STABLE [2e4af4110] 2020-10-21 16:19:00 -0400
Branch: REL_12_STABLE [f656517ec] 2020-10-21 16:19:01 -0400
Branch: REL_11_STABLE [20be76d5c] 2020-10-21 16:19:01 -0400
Branch: REL_10_STABLE [8175da6e7] 2020-10-21 16:19:02 -0400
Branch: REL9_6_STABLE [870a23230] 2020-10-21 16:18:41 -0400
Branch: REL9_5_STABLE [6997da09a] 2020-10-21 16:18:41 -0400
-->
     <para>
      When <application>psql</application>'s <command>\connect</command>
      command re-uses connection parameters, ensure that all
      non-overridden parameters from a previous connection string are
      re-used (Tom Lane)
     </para>

     <para>
      This avoids cases where reconnection might fail due to omission of
      relevant parameters, such as non-default SSL or GSS options.
      Worse, the reconnection might succeed but not be encrypted as
      intended, or be vulnerable to man-in-the-middle attacks that the
      intended connection parameters would have prevented.
      This is largely the same problem as just cited
      for <application>pg_dump</application> et al,
      although <application>psql</application>'s behavior is more complex
      since the user may intentionally override some connection
      parameters.
      (CVE-2020-25694)
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [098fb0079] 2020-11-09 07:32:09 -0800
Branch: REL_13_STABLE [67029845b] 2020-11-09 07:32:12 -0800
Branch: REL_12_STABLE [3855e5b47] 2020-11-09 07:32:13 -0800
Branch: REL_11_STABLE [7b356c78f] 2020-11-09 07:32:13 -0800
Branch: REL_10_STABLE [a498db87b] 2020-11-09 07:32:13 -0800
Branch: REL9_6_STABLE [12fd81cb7] 2020-11-09 07:32:14 -0800
Branch: REL9_5_STABLE [a54dfbee1] 2020-11-09 07:32:14 -0800
-->
     <para>
      Prevent <application>psql</application>'s <command>\gset</command>
      command from modifying specially-treated variables (Noah Misch)
     </para>

     <para>
      <command>\gset</command> without a prefix would overwrite whatever
      variables the server told it to.  Thus, a compromised server could
      set specially-treated variables such as <varname>PROMPT1</varname>,
      giving the ability to execute arbitrary shell code in the user's
      session.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Nick Cleaton for reporting this problem.
      (CVE-2020-25696)
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [566372b3d] 2020-08-15 10:15:53 -0700
Branch: REL_13_STABLE Release: REL_13_0 [592a589a0] 2020-08-15 10:15:56 -0700
Branch: REL_12_STABLE [30e68a2ab] 2020-08-15 10:15:56 -0700
Branch: REL_11_STABLE [d4031d784] 2020-08-15 10:15:57 -0700
Branch: REL_10_STABLE [e525770dd] 2020-08-15 10:15:57 -0700
Branch: REL9_6_STABLE [5ae01df6f] 2020-08-15 10:15:57 -0700
Branch: REL9_5_STABLE [3fbbf64ce] 2020-08-15 10:15:57 -0700
Branch: REL_12_STABLE [06e50d8f7] 2020-08-15 16:15:59 -0700
Branch: REL_11_STABLE [6af0b12a5] 2020-08-15 16:16:15 -0700
Branch: REL_10_STABLE [e8e44e890] 2020-08-15 16:16:29 -0700
Branch: REL9_6_STABLE [85aa22cb1] 2020-08-15 16:16:34 -0700
Branch: REL9_5_STABLE [d8a22a387] 2020-08-15 16:16:42 -0700
-->
     <para>
      Prevent possible data loss from concurrent truncations of SLRU logs
      (Noah Misch)
     </para>

     <para>
      This rare problem would manifest in later <quote>apparent
      wraparound</quote> or <quote>could not access status of
      transaction</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [aca74843e] 2020-09-24 10:39:52 +1200
Branch: REL_13_STABLE [052014a20] 2020-09-24 10:27:22 +1200
Branch: REL_12_STABLE [7664cc869] 2020-09-24 10:30:47 +1200
Branch: REL_11_STABLE [c5a5bd0bb] 2020-09-24 10:31:57 +1200
Branch: REL_10_STABLE [dd36d6b00] 2020-09-24 10:33:00 +1200
Branch: REL9_6_STABLE [d38e15979] 2020-09-24 10:35:10 +1200
Branch: REL9_5_STABLE [23d8b3577] 2020-09-24 10:36:27 +1200
-->
     <para>
      Ensure that SLRU directories are properly fsync'd during checkpoints
      (Thomas Munro)
     </para>

     <para>
      This prevents possible data loss in a subsequent operating system
      crash.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d907bd054] 2020-11-03 15:41:32 -0500
Branch: REL_13_STABLE [768dbef0d] 2020-11-03 15:41:32 -0500
Branch: REL_12_STABLE [136f87ea5] 2020-11-03 15:41:32 -0500
Branch: REL_11_STABLE [501035a0a] 2020-11-03 15:41:32 -0500
Branch: REL_10_STABLE [df4405b78] 2020-11-03 15:41:32 -0500
Branch: REL9_6_STABLE [04c4b495b] 2020-11-03 15:41:32 -0500
Branch: REL9_5_STABLE [77df80cf6] 2020-11-03 15:41:32 -0500
-->
     <para>
      Fix <command>ALTER ROLE</command> for users with
      the <literal>BYPASSRLS</literal> attribute (Tom Lane, Stephen Frost)
     </para>

     <para>
      The <literal>BYPASSRLS</literal> attribute is only allowed to be
      changed by superusers, but other <command>ALTER ROLE</command>
      operations, such as password changes, should be allowed with only
      ordinary permission checks.  The previous coding erroneously
      restricted all changes on such a role to superusers.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [bbb927b4d] 2020-10-20 19:22:09 -0300
Branch: REL_13_STABLE [5f6463a20] 2020-10-20 19:22:09 -0300
Branch: REL_12_STABLE [0e6b6f8c7] 2020-10-20 19:22:09 -0300
Branch: REL_11_STABLE [a795f6782] 2020-10-20 19:22:09 -0300
-->
     <para>
      Ensure that <command>ALTER TABLE ONLY ... ENABLE/DISABLE
      TRIGGER</command> does not recurse to child tables
      (&Aacute;lvaro Herrera)
     </para>

     <para>
      Previously the <literal>ONLY</literal> flag was ignored.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e5fac1cb1] 2020-09-16 13:38:26 -0400
Branch: REL_13_STABLE Release: REL_13_0 [17280b31c] 2020-09-16 13:38:26 -0400
Branch: REL_12_STABLE [511690ec5] 2020-09-16 13:38:26 -0400
-->
     <para>
      Avoid unnecessary recursion to partitions in <command>ALTER TABLE
      SET NOT NULL</command>, when the target column is already
      marked <literal>NOT NULL</literal> (Tom Lane)
     </para>

     <para>
      This avoids a potential deadlock in
      parallel <application>pg_restore</application>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [502898192] 2020-08-21 15:00:47 -0400
Branch: REL_13_STABLE Release: REL_13_0 [894f5dea7] 2020-08-21 15:00:48 -0400
Branch: REL_12_STABLE [d9253df12] 2020-08-21 15:00:43 -0400
Branch: REL_11_STABLE [373796524] 2020-08-21 15:00:43 -0400
Branch: REL_10_STABLE [e22e29c25] 2020-08-21 15:00:43 -0400
Branch: REL9_6_STABLE [37681d7e9] 2020-08-21 15:00:43 -0400
Branch: REL9_5_STABLE [21f8b1811] 2020-08-21 15:00:43 -0400
Branch: master [19f5a37b9] 2020-09-13 12:51:21 -0400
Branch: REL_13_STABLE Release: REL_13_0 [b380484a8] 2020-09-13 12:51:21 -0400
Branch: REL_12_STABLE [1371a1e41] 2020-09-13 12:51:21 -0400
Branch: REL_11_STABLE [f11210013] 2020-09-13 12:51:21 -0400
Branch: REL_10_STABLE [783a21eff] 2020-09-13 12:51:21 -0400
Branch: REL9_6_STABLE [1a9c93ec3] 2020-09-13 12:51:21 -0400
Branch: REL9_5_STABLE [86b8ef139] 2020-09-13 12:51:21 -0400
-->
     <para>
      Fix handling of expressions in <command>CREATE TABLE LIKE</command>
      with inheritance (Tom Lane)
     </para>

     <para>
      If a <command>CREATE TABLE</command> command uses
      both <literal>LIKE</literal> and traditional inheritance, column
      references in <literal>CHECK</literal> constraints and expression
      indexes that came from a <literal>LIKE</literal> parent table tended
      to get mis-numbered, resulting in wrong answers and/or bizarre error
      messages.  The same could happen in <literal>GENERATED</literal>
      expressions, in branches that have that feature.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [afc7e0ad5] 2020-09-01 13:40:43 -0400
Branch: REL_13_STABLE Release: REL_13_0 [15dad5776] 2020-09-01 13:40:43 -0400
Branch: REL_12_STABLE [7067ba1b4] 2020-09-01 13:40:43 -0400
Branch: REL_11_STABLE [f00f5e0c1] 2020-09-01 13:40:43 -0400
-->
     <para>
      Disallow <command>DROP INDEX CONCURRENTLY</command> on a partitioned
      table (&Aacute;lvaro Herrera, Michael Paquier)
     </para>

     <para>
      This case failed anyway, but with a confusing error message.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5b7bfc397] 2020-11-05 11:44:32 -0500
Branch: REL_13_STABLE [44b973b91] 2020-11-05 11:44:32 -0500
Branch: REL_12_STABLE [0bdf1ef3d] 2020-11-05 11:44:32 -0500
Branch: REL_11_STABLE [7dc18c619] 2020-11-05 11:44:32 -0500
-->
     <para>
      Allow <command>LOCK TABLE</command> to succeed on a self-referential
      view (Tom Lane)
     </para>

     <para>
      It previously threw an error complaining about infinite recursion,
      but there seems no need to disallow the case.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [b17ff07aa] 2020-11-01 21:22:07 +0900
Branch: REL_13_STABLE [bb62df46b] 2020-11-01 21:24:10 +0900
Branch: REL_12_STABLE [41a033b50] 2020-11-01 21:24:15 +0900
-->
     <para>
      Retain statistics about an index across <command>REINDEX
      CONCURRENTLY</command> (Michael Paquier, Fabr&iacute;zio de Royes Mello)
     </para>

     <para>
      Non-concurrent reindexing has always preserved such statistics.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [e66bcfb4c] 2020-09-29 14:15:57 +0900
Branch: REL_13_STABLE [1aedaba78] 2020-09-29 14:16:12 +0900
Branch: REL_12_STABLE [8aa4496dd] 2020-09-29 14:16:18 +0900
-->
     <para>
      Fix incorrect progress reporting from <command>REINDEX
      CONCURRENTLY</command> (Matthias van de Meent, Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ad77039fa] 2020-10-28 13:47:02 -0400
Branch: REL_13_STABLE [70492195b] 2020-10-28 13:47:02 -0400
Branch: REL_12_STABLE [43330cdd4] 2020-10-28 13:47:02 -0400
-->
     <para>
      Ensure that <literal>GENERATED</literal> columns are updated when
      the column(s) they depend on are updated via a rule or an updatable
      view (Tom Lane)
     </para>

     <para>
      This fix also takes care of possible failure to fire a
      column-specific trigger in such cases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [f481d2823] 2020-09-08 19:35:15 -0300
Branch: REL_13_STABLE Release: REL_13_0 [d0230a43f] 2020-09-08 19:35:15 -0300
Branch: REL_12_STABLE [ef1e1250e] 2020-09-08 19:35:15 -0300
-->
     <para>
      Recheck default partition constraints while routing an inserted or
      updated tuple to the correct partition (Amit Langote,
      &Aacute;lvaro Herrera)
     </para>

     <para>
      This fixes race conditions when partitions are added concurrently
      with the insertion.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [72647ac3b] 2020-09-28 14:12:38 -0400
Branch: REL_13_STABLE [61a78c71a] 2020-09-28 14:12:38 -0400
Branch: REL_12_STABLE [29f20db85] 2020-09-28 14:12:38 -0400
-->
     <para>
      Fix failures with collation-dependent partition bound expressions
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [560564d3a] 2020-11-04 12:46:28 +0100
Branch: REL_13_STABLE [82d4a2a7d] 2020-11-04 12:46:38 +0100
Branch: REL_12_STABLE [ea9087938] 2020-11-04 12:46:52 +0100
-->
     <para>
      Support hashing of text arrays (Peter Eisentraut)
     </para>

     <para>
      Array hashing failed if the array element type is collatable.
      Notably, this prevented using hash partitioning with a text array
      column as partition key.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [489c9c340] 2020-09-30 15:40:23 -0400
Branch: REL_13_STABLE [99fd38c02] 2020-09-30 15:40:23 -0400
Branch: REL_12_STABLE [c5232dca8] 2020-09-30 15:40:23 -0400
Branch: REL_11_STABLE [b0fe0b022] 2020-09-30 15:40:23 -0400
Branch: REL_10_STABLE [db96be24c] 2020-09-30 15:40:23 -0400
Branch: REL9_6_STABLE [19e798268] 2020-09-30 15:40:23 -0400
Branch: REL9_5_STABLE [4857e6fe1] 2020-09-30 15:40:23 -0400
-->
     <para>
      Fix off-by-one conversion of negative years to BC dates
      in <function>to_date()</function>
      and <function>to_timestamp()</function> (Dar Alathar-Yemen, Tom Lane)
     </para>

     <para>
      Also, arrange for the combination of a negative year and an
      explicit <quote>BC</quote> marker to cancel out and produce AD.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [fd26f7823] 2020-09-29 16:21:46 +0900
Branch: REL_13_STABLE [059caf36c] 2020-09-29 16:23:57 +0900
Branch: REL_12_STABLE [4d342b9d4] 2020-09-29 16:24:20 +0900
Branch: REL_11_STABLE [462ff7966] 2020-09-29 16:24:47 +0900
Branch: REL_10_STABLE [334417538] 2020-09-29 16:25:08 +0900
Branch: REL9_6_STABLE [7be02a3bf] 2020-09-29 16:25:20 +0900
Branch: REL9_5_STABLE [40a8fb1e0] 2020-09-29 16:25:51 +0900
-->
     <para>
      Ensure that standby servers will archive WAL timeline history files
      when <varname>archive_mode</varname> is set
      to <literal>always</literal> (Grigory Smolkin, Fujii Masao)
     </para>

     <para>
      This oversight could lead to failure of subsequent PITR recovery
      attempts.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3d65b0593] 2020-09-16 12:07:31 -0400
Branch: REL_13_STABLE Release: REL_13_0 [3e3f8f202] 2020-09-16 12:07:31 -0400
Branch: REL_12_STABLE [8580631ff] 2020-09-16 12:07:31 -0400
Branch: REL_11_STABLE [2c74f7139] 2020-09-16 12:07:31 -0400
Branch: REL_10_STABLE [d6d70f89a] 2020-09-16 12:07:31 -0400
-->
     <para>
      Fix <quote>cache lookup failed for relation 0</quote>
      failures in logical replication workers (Tom Lane)
     </para>

     <para>
      The real-world impact is small, since the failure is unlikely, and
      if it does happen the worker would just exit and be restarted.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c8746f999] 2020-09-04 20:33:36 -0400
Branch: REL_13_STABLE Release: REL_13_0 [9b81a30f9] 2020-09-04 20:33:37 -0400
Branch: REL_12_STABLE [9b47ee6e7] 2020-09-04 20:20:05 -0400
Branch: REL_11_STABLE [7156a0eac] 2020-09-04 20:20:05 -0400
Branch: REL_10_STABLE [9b8a8516e] 2020-09-04 20:20:06 -0400
-->
     <para>
      Prevent logical replication workers from sending redundant ping
      requests (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0038f9438] 2020-08-14 13:26:57 -0400
Branch: REL_13_STABLE Release: REL_13_0 [1c6066fbd] 2020-08-14 13:26:57 -0400
Branch: REL_12_STABLE [42566a250] 2020-08-14 13:26:57 -0400
Branch: REL_11_STABLE [250aaa2de] 2020-08-14 13:26:57 -0400
Branch: REL_10_STABLE [326b5fe0f] 2020-08-14 13:26:57 -0400
Branch: REL9_6_STABLE [b4d8be9f6] 2020-08-14 13:26:57 -0400
-->
     <para>
      During <quote>smart</quote> shutdown, don't terminate background
      processes until all client (foreground) sessions are done (Tom Lane)
     </para>

     <para>
      The previous behavior broke parallel query processing, since the
      postmaster would terminate parallel workers and refuse to launch any
      new ones.  It also caused autovacuum to cease functioning, which
      could have dire long-term effects if the surviving client sessions
      make a lot of data changes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_13_BR [9abb2bfc0] 2019-10-13 15:48:26 -0400
Branch: REL_12_STABLE [8b53dbada] 2020-10-15 12:50:57 -0400
Branch: REL_11_STABLE [85834023a] 2020-10-15 12:50:57 -0400
Branch: REL_10_STABLE [4e95733b0] 2020-10-15 12:50:57 -0400
Branch: REL9_6_STABLE [7753ca49d] 2020-10-15 12:50:57 -0400
-->
     <para>
      Avoid recursive consumption of stack space while processing signals
      in the postmaster (Tom Lane)
     </para>

     <para>
      Heavy use of parallel processing has been observed to cause
      postmaster crashes due to too many concurrent signals requesting
      creation of a parallel worker process.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [bedadc732] 2020-09-09 15:32:45 -0400
Branch: REL_13_STABLE Release: REL_13_0 [35e59398a] 2020-09-09 15:32:34 -0400
Branch: REL_12_STABLE [d038c6c63] 2020-09-09 15:32:34 -0400
Branch: REL_11_STABLE [67dde49a3] 2020-09-09 15:32:34 -0400
Branch: REL_10_STABLE [95cd8902e] 2020-09-09 15:32:34 -0400
Branch: REL9_6_STABLE [b2eaddd9b] 2020-09-09 15:32:34 -0400
Branch: REL9_5_STABLE [581855b6a] 2020-09-09 15:32:34 -0400
Branch: master [58c6feccf] 2020-09-10 12:06:37 -0400
Branch: REL_13_STABLE Release: REL_13_0 [3f29aa48b] 2020-09-10 12:06:26 -0400
Branch: REL_12_STABLE [4e10c0c8a] 2020-09-10 12:06:26 -0400
Branch: REL_11_STABLE [93871b693] 2020-09-10 12:06:26 -0400
Branch: REL_10_STABLE [ac695b8f2] 2020-09-10 12:06:26 -0400
Branch: REL9_6_STABLE [dc71c6409] 2020-09-10 12:06:26 -0400
Branch: REL9_5_STABLE [e2c9bedc9] 2020-09-10 12:06:26 -0400
-->
     <para>
      Avoid running <systemitem>atexit</systemitem> handlers when exiting
      due to SIGQUIT (Kyotaro Horiguchi, Tom Lane)
     </para>

     <para>
      Most server processes followed this practice already, but the
      archiver process was overlooked.  Backends that were still waiting
      for a client startup packet got it wrong, too.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4d346def1] 2020-08-22 14:46:40 -0400
Branch: REL_13_STABLE Release: REL_13_0 [de627adaa] 2020-08-22 14:46:40 -0400
Branch: REL_12_STABLE [6b701eaaa] 2020-08-22 14:46:40 -0400
Branch: REL_11_STABLE [b439adcab] 2020-08-22 14:46:40 -0400
Branch: REL_10_STABLE [6fa403e61] 2020-08-22 14:46:40 -0400
Branch: REL9_6_STABLE [d3701bc8a] 2020-08-22 14:46:40 -0400
Branch: REL9_5_STABLE [7edd36eae] 2020-08-22 14:46:40 -0400
-->
     <para>
      Avoid misoptimization of subquery qualifications that reference
      apparently-constant grouping columns (Tom Lane)
     </para>

     <para>
      A <quote>constant</quote> subquery output column isn't really
      constant if it is a grouping column that appears in only some of the
      grouping sets.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d7885b1f8] 2020-10-06 11:43:53 -0400
Branch: REL_13_STABLE [b7f166efa] 2020-10-06 11:43:53 -0400
Branch: REL_12_STABLE [3d69efc4f] 2020-10-06 11:43:54 -0400
-->
     <para>
      Fix possible crash when considering partition-wise joins
      during GEQO planning (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1e7629d2c] 2020-08-14 22:14:03 -0400
Branch: REL_13_STABLE Release: REL_13_0 [b538e83f1] 2020-08-14 22:14:03 -0400
Branch: REL_12_STABLE [912fb290c] 2020-08-14 22:14:03 -0400
Branch: REL_11_STABLE [9d472b51e] 2020-08-14 22:14:03 -0400
Branch: REL_10_STABLE [dea07098a] 2020-08-14 22:14:03 -0400
Branch: REL9_6_STABLE [7241edc4f] 2020-08-14 22:14:03 -0400
Branch: REL9_5_STABLE [5190707d7] 2020-08-14 22:14:03 -0400
-->
     <para>
      Avoid failure when SQL function inlining changes the shape of a
      potentially-hashable subplan comparison expression (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [a811ea5bd] 2020-08-13 17:33:49 -0400
Branch: REL_13_STABLE Release: REL_13_0 [2f29fd4cb] 2020-08-13 17:33:49 -0400
Branch: REL_12_STABLE [1122a903e] 2020-08-13 17:33:49 -0400
Branch: REL_11_STABLE [704de3739] 2020-08-13 17:33:49 -0400
Branch: REL_10_STABLE [385cbe8e4] 2020-08-13 17:33:49 -0400
Branch: REL9_6_STABLE [e5902117d] 2020-08-13 17:33:49 -0400
Branch: REL9_5_STABLE [40bceae7b] 2020-08-13 17:33:49 -0400
Branch: master [6e70443ed] 2020-08-17 16:20:06 -0400
Branch: REL_13_STABLE Release: REL_13_0 [b83f1bcca] 2020-08-17 16:20:06 -0400
Branch: REL_12_STABLE [4f47c8e7d] 2020-08-17 16:20:06 -0400
Branch: REL_11_STABLE [060e5bd70] 2020-08-17 16:20:06 -0400
Branch: REL_10_STABLE [3a45ac076] 2020-08-17 16:20:05 -0400
Branch: REL9_6_STABLE [d4d214903] 2020-08-17 16:20:05 -0400
Branch: REL9_5_STABLE [aa4da2674] 2020-08-17 16:20:05 -0400
-->
     <para>
      While building or re-building an index, tolerate the appearance of
      new HOT chains due to concurrent updates
      (Anastasia Lubennikova, &Aacute;lvaro Herrera)
     </para>

     <para>
      This oversight could lead to <quote>failed to find parent tuple for
      heap-only tuple</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [b7f2dd959] 2020-09-17 16:11:48 +0530
Branch: REL_13_STABLE Release: REL_13_0 [0abd9cd2f] 2020-09-17 15:16:46 +0530
Branch: REL_12_STABLE [4bc63462d] 2020-09-17 15:38:47 +0530
Branch: REL_11_STABLE [956891fab] 2020-09-17 15:53:25 +0530
Branch: REL_10_STABLE [fcc3665a0] 2020-09-17 15:59:42 +0530
-->
     <para>
      Fix failure of parallel B-tree index scans when the index condition
      is unsatisfiable (James Hunter)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [7577dd848] 2020-11-07 00:39:19 +0100
Branch: REL_13_STABLE [6a7b55f37] 2020-11-07 00:40:06 +0100
Branch: REL_12_STABLE [8149e9f9a] 2020-11-07 00:40:40 +0100
Branch: REL_11_STABLE [895d0f0e8] 2020-11-07 00:41:02 +0100
Branch: REL_10_STABLE [0b96fc977] 2020-11-07 00:41:19 +0100
Branch: REL9_6_STABLE [bae31e75f] 2020-11-07 00:41:36 +0100
Branch: REL9_5_STABLE [d2d3a4bd3] 2020-11-07 00:41:52 +0100
-->
     <para>
      Ensure that data is detoasted before being inserted into a BRIN
      index (Tomas Vondra)
     </para>

     <para>
      Index entries are not supposed to contain out-of-line TOAST
      pointers, but BRIN didn't get that memo.  This could lead to errors
      like <quote>missing chunk number 0 for toast value NNN</quote>.
      (If you are faced with such an error from an existing
      index, <command>REINDEX</command> should be enough to fix it.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [1f42d35a1] 2020-08-12 15:33:36 -0400
Branch: REL_13_STABLE Release: REL_13_0 [8782ea2f3] 2020-08-12 15:33:36 -0400
Branch: REL_12_STABLE [0426c75e7] 2020-08-12 15:33:36 -0400
Branch: REL_11_STABLE [7af39993a] 2020-08-12 15:33:36 -0400
Branch: REL_10_STABLE [721ef4d28] 2020-08-12 15:33:36 -0400
Branch: REL9_6_STABLE [7a3c261fb] 2020-08-12 15:33:36 -0400
Branch: REL9_5_STABLE [ce3a8fde8] 2020-08-12 15:33:36 -0400
-->
     <para>
      Handle concurrent desummarization correctly during BRIN index scans
      (Alexander Lakhin, &Aacute;lvaro Herrera)
     </para>

     <para>
      Previously, if a page range was desummarized at just the wrong time,
      an index scan might falsely raise an error indicating index
      corruption.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [10564ee02] 2020-08-27 17:36:13 -0400
Branch: REL_13_STABLE Release: REL_13_0 [1df14a566] 2020-08-27 17:36:13 -0400
Branch: REL_12_STABLE [ff3c16d1e] 2020-08-27 17:36:13 -0400
Branch: REL_11_STABLE [11ecf4bd2] 2020-08-27 17:36:13 -0400
Branch: REL_10_STABLE [0d3ad6540] 2020-08-27 17:36:13 -0400
Branch: REL9_6_STABLE [0dfec43c8] 2020-08-27 17:36:13 -0400
Branch: REL9_5_STABLE [fabd2f9c9] 2020-08-27 17:36:13 -0400
-->
     <para>
      Fix rare <quote>lost saved point in index</quote> errors in scans of
      multicolumn GIN indexes (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [371668a83] 2020-10-12 18:01:34 -0400
Branch: REL_13_STABLE [962ab473e] 2020-10-12 18:01:34 -0400
Branch: REL_12_STABLE [12945874e] 2020-10-12 18:01:34 -0400
-->
     <para>
      Fix buffered GiST index builds to work when the index has included
      columns (Pavel Borisov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0a4b34031] 2020-11-02 21:11:50 -0500
Branch: REL_13_STABLE [a58a631b4] 2020-11-02 21:11:50 -0500
Branch: REL_12_STABLE [d3befe9b9] 2020-11-02 21:11:50 -0500
Branch: REL_11_STABLE [f28b089cb] 2020-11-02 21:11:50 -0500
Branch: REL_10_STABLE [7827497ba] 2020-11-02 21:11:50 -0500
-->
     <para>
      Fix unportable use of <function>getnameinfo()</function>
      in <structname>pg_hba_file_rules</structname> view (Tom Lane)
     </para>

     <para>
      On FreeBSD 11, and possibly other platforms, the
      view's <structfield>address</structfield>
      and <structfield>netmask</structfield> columns were always null due
      to this error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [f90e80b91] 2020-10-31 08:43:28 -0700
Branch: REL_13_STABLE [ab2e2ce46] 2020-10-31 08:43:32 -0700
Branch: REL_12_STABLE [741b84e9f] 2020-10-31 08:44:13 -0700
Branch: REL_11_STABLE [045466675] 2020-10-31 08:45:19 -0700
-->
     <para>
      Avoid crash if <varname>debug_query_string</varname> is NULL
      when starting a parallel worker (Noah Misch)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [ced138e8c] 2020-09-15 21:03:14 -0300
Branch: REL_13_STABLE Release: REL_13_0 [873cb8fca] 2020-09-15 21:03:14 -0300
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_12_STABLE [93f726c04] 2020-10-27 15:37:13 -0400
Branch: REL_11_STABLE [66c036b4f] 2020-10-27 15:37:13 -0400
Branch: REL_10_STABLE [41c742a43] 2020-10-27 15:37:13 -0400
Branch: REL9_6_STABLE [cc623ed2f] 2020-10-27 15:37:13 -0400
Branch: REL9_5_STABLE [7978ad025] 2020-10-27 15:37:13 -0400
-->
     <para>
      Fix use-after-free hazard when an event trigger monitors
      an <command>ALTER TABLE</command> operation (Jehan-Guillaume de
      Rorthais)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ba9f18abd] 2020-10-25 13:57:46 -0400
Branch: REL_13_STABLE [d88d8ad28] 2020-10-25 13:57:46 -0400
Branch: REL_12_STABLE [de78c1007] 2020-10-25 13:57:46 -0400
Branch: master [20d3fe900] 2020-10-26 11:36:53 -0400
Branch: master [8b39345a9] 2020-11-08 13:08:36 -0500
Branch: REL_13_STABLE [7aeb6404f] 2020-11-08 13:08:36 -0500
Branch: REL_12_STABLE [94ec005f3] 2020-11-08 13:08:36 -0500
-->
     <para>
      Avoid failures when a <literal>BEFORE ROW UPDATE</literal> trigger
      returns the <quote>old</quote> row of a table having dropped
      or <quote>missing</quote> columns (Amit Langote, Tom Lane)
     </para>

     <para>
      This method of suppressing an update could result in crashes,
      unexpected <literal>CHECK</literal> constraint failures, or
      incorrect <literal>RETURNING</literal> output,
      because <quote>missing</quote> columns would read as NULLs for those
      purposes.  (A column is <quote>missing</quote> for this purpose if
      it was added by <command>ALTER TABLE ADD COLUMN</command> with a
      non-NULL, but constant, default value.)  Dropped columns could cause
      trouble as well.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [19ad7e1d7] 2020-09-06 12:55:13 -0400
Branch: REL_13_STABLE Release: REL_13_0 [f04203ab7] 2020-09-06 12:55:28 -0400
Branch: REL_12_STABLE [f45dd3fed] 2020-09-06 12:55:37 -0400
Branch: REL_11_STABLE [baef6e5e9] 2020-09-06 12:55:44 -0400
Branch: REL_10_STABLE [f71b93b86] 2020-09-06 12:55:51 -0400
Branch: REL9_6_STABLE [2939f613f] 2020-09-06 12:55:59 -0400
Branch: REL9_5_STABLE [e0b4c7dd0] 2020-09-06 12:56:10 -0400
-->
     <para>
      Fix incorrect error message about inconsistent moving-aggregate
      data types (Jeff Janes)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [be4b0c007] 2020-09-03 16:52:09 -0400
Branch: REL_13_STABLE Release: REL_13_0 [17424e79d] 2020-09-03 16:52:09 -0400
Branch: REL_12_STABLE [82dd373f2] 2020-09-03 16:52:09 -0400
Branch: REL_11_STABLE [526df0a23] 2020-09-03 16:52:09 -0400
Branch: REL_10_STABLE [2a938c793] 2020-09-03 16:52:09 -0400
Branch: REL9_6_STABLE [2500e51e7] 2020-09-03 16:52:09 -0400
Branch: REL9_5_STABLE [3738651f5] 2020-09-03 16:52:09 -0400
-->
     <para>
      Avoid lockup when a parallel worker reports a very long error
      message (Vignesh C)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: REL_13_STABLE [1f53d0b9f] 2020-10-20 14:09:16 +0200
Branch: REL_12_STABLE [bd0677bb8] 2020-10-20 14:31:52 +0200
Branch: REL_11_STABLE [6e03a8a30] 2020-10-20 14:50:43 +0200
Branch: REL_10_STABLE [f78ebbe68] 2020-10-20 15:19:47 +0200
Branch: REL9_6_STABLE [d4e654d15] 2020-10-20 15:35:31 +0200
Branch: REL9_5_STABLE [d27c18d26] 2020-10-20 17:22:41 +0200
-->
     <para>
      Avoid unnecessary failure when transferring very large payloads
      through shared memory queues (Markus Wanner)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [72559438f] 2020-10-15 14:29:53 -0700
Branch: REL_13_STABLE [ae3e75aba] 2020-10-15 14:30:40 -0700
Branch: REL_12_STABLE [c8a2bb0f1] 2020-10-15 14:31:32 -0700
Branch: REL_11_STABLE [f3dee5b9a] 2020-10-15 15:06:16 -0700
Branch: master [fe2a16d8b] 2020-10-15 18:17:00 -0700
Branch: REL_13_STABLE [efc9a8e98] 2020-10-15 18:17:00 -0700
Branch: REL_12_STABLE [c835c7ffe] 2020-10-15 18:17:01 -0700
Branch: REL_11_STABLE [4a4f4487d] 2020-10-15 18:17:01 -0700
-->
     <para>
      Fix incorrect handling of template function attributes in JIT code
      generation (Andres Freund)
     </para>

     <para>
      This has been shown to cause crashes on <literal>s390x</literal>,
      and very possibly there are other cases on other platforms.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e55f718fc] 2020-09-26 16:04:06 -0400
Branch: REL_13_STABLE [f7873900f] 2020-09-26 16:04:06 -0400
Branch: REL_12_STABLE [bda32733c] 2020-09-26 16:04:06 -0400
Branch: REL_11_STABLE [dd89ba578] 2020-09-26 16:04:06 -0400
Branch: REL_10_STABLE [de6725deb] 2020-09-26 16:04:06 -0400
Branch: REL9_6_STABLE [acab757ce] 2020-09-26 16:04:06 -0400
Branch: REL9_5_STABLE [bf34ae930] 2020-09-26 16:04:06 -0400
-->
     <para>
      Fix relation cache memory leaks with RLS policies (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [623644f02] 2020-11-06 22:52:16 -0300
Branch: REL_13_STABLE [d94d37f8c] 2020-11-06 22:52:15 -0300
Branch: REL_12_STABLE [8ad6a0c1b] 2020-11-06 22:52:15 -0300
-->
     <para>
      Fix edge-case memory leak
      in <function>index_get_partition()</function> (Justin Pryzby)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [397ea901e] 2020-10-12 13:31:24 -0400
Branch: REL_13_STABLE [9343bfefa] 2020-10-12 13:31:24 -0400
Branch: REL_12_STABLE [f35c11770] 2020-10-12 13:31:24 -0400
Branch: REL_11_STABLE [cfa4cff30] 2020-10-12 13:31:24 -0400
Branch: REL_10_STABLE [a5c77e6b8] 2020-10-12 13:31:24 -0400
Branch: REL9_6_STABLE [c7573ab1e] 2020-10-12 13:31:24 -0400
Branch: REL9_5_STABLE [43ca5e07d] 2020-10-12 13:31:24 -0400
-->
     <para>
      Fix small memory leak when SIGHUP processing decides that a new GUC
      variable value cannot be applied without a restart (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a6b1f5365] 2020-09-29 11:18:30 -0400
Branch: REL_13_STABLE [f0e4ec74e] 2020-09-29 11:18:30 -0400
Branch: REL_12_STABLE [c1e044bb3] 2020-09-29 11:18:31 -0400
Branch: REL_11_STABLE [13a1901ba] 2020-09-29 11:18:31 -0400
-->
     <para>
      Fix memory leaks
      in <application>PL/pgsql</application>'s <command>CALL</command>
      processing (Pavel Stehule, Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b55b4dad9] 2020-09-01 13:14:44 -0400
Branch: REL_13_STABLE Release: REL_13_0 [4178b7499] 2020-09-01 13:14:44 -0400
Branch: REL_12_STABLE [55aea0c70] 2020-09-01 13:14:44 -0400
Branch: REL_11_STABLE [df8020b32] 2020-09-01 13:14:44 -0400
Branch: REL_10_STABLE [0c0a3a859] 2020-09-01 13:14:44 -0400
Branch: REL9_6_STABLE [ba23174dd] 2020-09-01 13:14:44 -0400
Branch: REL9_5_STABLE [8d486cfbf] 2020-09-01 13:14:44 -0400
Branch: master [4d41823c5] 2020-09-04 21:01:58 -0400
Branch: REL_13_STABLE Release: REL_13_0 [8df601bd4] 2020-09-04 21:01:59 -0400
Branch: REL_12_STABLE [fc37c6f61] 2020-09-04 21:01:59 -0400
Branch: REL_11_STABLE [d7ae549e3] 2020-09-04 21:01:59 -0400
Branch: REL_10_STABLE [546479f34] 2020-09-04 21:01:59 -0400
-->
     <para>
      Make <application>libpq</application> support arbitrary-length lines
      in <filename>.pgpass</filename> files (Tom Lane)
     </para>

     <para>
      This is mostly useful to allow using very long security tokens as
      passwords.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7d00a6b2d] 2020-10-17 16:53:48 -0400
Branch: REL_13_STABLE [d2074daeb] 2020-10-19 11:23:51 -0400
Branch: REL_12_STABLE [407580aab] 2020-10-19 11:23:51 -0400
Branch: REL_11_STABLE [883226441] 2020-10-19 11:23:52 -0400
Branch: REL_10_STABLE [6670e9107] 2020-10-19 11:23:52 -0400
Branch: REL9_6_STABLE [cdc7ace16] 2020-10-19 11:23:52 -0400
Branch: REL9_5_STABLE [6acc31a20] 2020-10-19 11:23:52 -0400
-->
     <para>
      In <application>libpq</application> for Windows,
      call <function>WSAStartup()</function> once per process
      and <function>WSACleanup()</function> not at all (Tom Lane,
      Alexander Lakhin)
     </para>

     <para>
      Previously, <application>libpq</application>
      invoked <function>WSAStartup()</function> at connection start
      and <function>WSACleanup()</function> at connection cleanup.
      However, it appears that calling <function>WSACleanup()</function>
      can interfere with other program operations; notably, we have
      observed rare failures to emit expected output to stdout.  There
      appear to be no ill effects from omitting the call, so do that.
      (This also eliminates a performance issue from repeated DLL loads and
      unloads when a program performs a series of database connections.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [21d36747d] 2020-10-24 13:12:08 -0400
Branch: REL_13_STABLE [fd048e0cb] 2020-10-24 13:12:19 -0400
Branch: REL_12_STABLE [bdc79ddd1] 2020-10-24 13:12:26 -0400
Branch: REL_11_STABLE [12a73f29f] 2020-10-24 13:12:31 -0400
Branch: REL_10_STABLE [f38b66ec0] 2020-10-24 13:12:41 -0400
Branch: REL9_6_STABLE [379c43bda] 2020-10-24 13:12:47 -0400
Branch: REL9_5_STABLE [758b45e83] 2020-10-24 13:12:53 -0400
-->
     <para>
      Fix <application>ecpg</application> library's per-thread
      initialization logic for Windows (Tom Lane, Alexander Lakhin)
     </para>

     <para>
      Multi-threaded <application>ecpg</application> applications could
      suffer rare misbehavior due to incorrect locking.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [66f8687a8] 2020-10-28 14:35:53 -0400
Branch: REL_13_STABLE [ba4f5413e] 2020-10-28 14:35:53 -0400
Branch: REL_12_STABLE [cb0982ba9] 2020-10-28 14:35:53 -0400
Branch: REL_11_STABLE [9eb250339] 2020-10-28 14:35:53 -0400
Branch: REL_10_STABLE [504f963f7] 2020-10-28 14:35:53 -0400
Branch: REL9_6_STABLE [204d77969] 2020-10-28 14:35:53 -0400
Branch: REL9_5_STABLE [aff06436c] 2020-10-28 14:35:53 -0400
-->
     <para>
      On Windows, make <application>psql</application> read the output of
      a backtick command in text mode, not binary mode (Tom Lane)
     </para>

     <para>
      This ensures proper handling of newlines.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [3eb3d3e78] 2020-09-04 13:54:54 -0400
Branch: REL_13_STABLE Release: REL_13_0 [72857482c] 2020-09-04 13:55:11 -0400
Branch: REL_12_STABLE [616110eac] 2020-09-04 13:55:03 -0400
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9e5f1f21a] 2020-10-07 12:51:02 -0400
Branch: REL_13_STABLE [2ea624b4b] 2020-10-07 12:51:03 -0400
Branch: REL_12_STABLE [d8c2a2199] 2020-10-07 12:51:04 -0400
Branch: REL_11_STABLE [f2c6e94f0] 2020-10-07 12:51:05 -0400
Branch: REL_10_STABLE [0c79dcb36] 2020-10-07 12:51:05 -0400
Branch: REL9_6_STABLE [710c0a66d] 2020-10-07 12:51:06 -0400
Branch: REL9_5_STABLE [0bfe356c5] 2020-10-07 12:51:06 -0400
-->
     <para>
      Ensure that <application>pg_dump</application> collects per-column
      information about extension configuration tables (Fabr&iacute;zio de
      Royes Mello, Tom Lane)
     </para>

     <para>
      Failure to do this led to crashes when
      specifying <option>--inserts</option>, or underspecified (though
      usually correct) <command>COPY</command> commands when
      using <command>COPY</command> to reload the tables' data.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [2ba5b2db7] 2020-08-14 17:33:31 -0400
Branch: REL_13_STABLE Release: REL_13_0 [b7cc21c57] 2020-08-14 17:33:31 -0400
Branch: REL_12_STABLE [3dadcb2b3] 2020-08-14 17:33:31 -0400
-->
     <para>
      Ensure that parallel <application>pg_restore</application> processes
      foreign keys referencing partitioned tables in the correct order
      (&Aacute;lvaro Herrera)
     </para>

     <para>
      Previously, it might try to restore a foreign key constraint before
      the required indexes were all in place, leading to an error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Bruce Momjian <bruce@momjian.us>
Branch: master [3c0471b5f] 2020-10-15 19:33:46 -0400
Branch: REL_13_STABLE [59cfff65b] 2020-10-15 19:33:45 -0400
Branch: REL_12_STABLE [a106236d8] 2020-10-15 19:33:43 -0400
Branch: REL_11_STABLE [eb421c83b] 2020-10-15 19:33:42 -0400
Branch: REL_10_STABLE [85fedf39f] 2020-10-15 19:33:36 -0400
Branch: REL9_6_STABLE [39c23c199] 2020-10-15 19:33:36 -0400
Branch: REL9_5_STABLE [d9ae2297b] 2020-10-15 19:33:36 -0400
Branch: master [536de14e2] 2020-10-15 20:37:20 -0400
Branch: REL_13_STABLE [79fe23465] 2020-10-15 20:37:20 -0400
Branch: REL_12_STABLE [0ab7ca98a] 2020-10-15 20:37:20 -0400
Branch: REL_11_STABLE [16be4e435] 2020-10-15 20:37:19 -0400
Branch: REL_10_STABLE [6e34cc8ab] 2020-10-15 20:37:19 -0400
Branch: REL9_6_STABLE [9dcffe69a] 2020-10-15 20:37:19 -0400
Branch: REL9_5_STABLE [b05672c72] 2020-10-15 20:37:19 -0400
-->
     <para>
      Make <application>pg_upgrade</application> check for pre-existence
      of tablespace directories in the target cluster (Bruce Momjian)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [ca2a12c93] 2020-10-19 09:36:56 +0900
Branch: REL_13_STABLE [1bd9b2b23] 2020-10-19 09:37:50 +0900
Branch: REL_12_STABLE [57bdf29dd] 2020-10-19 09:37:55 +0900
Branch: REL_11_STABLE [914139081] 2020-10-19 09:38:01 +0900
Branch: REL_10_STABLE [e8d36f9ec] 2020-10-19 09:38:06 +0900
Branch: REL9_6_STABLE [994a02f7f] 2020-10-19 09:38:13 +0900
Branch: REL9_5_STABLE [099238322] 2020-10-19 09:38:18 +0900
-->
     <para>
      Fix potential memory leak in <filename>contrib/pgcrypto</filename>
      (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [02a75f836] 2020-10-16 11:59:13 -0400
Branch: REL_13_STABLE [3d338a46a] 2020-10-16 11:59:25 -0400
Branch: REL_12_STABLE [7004ce758] 2020-10-16 11:59:31 -0400
Branch: REL_11_STABLE [1eb2d7e3e] 2020-10-16 11:59:36 -0400
Branch: REL_10_STABLE [3e1a4c260] 2020-10-16 11:59:41 -0400
Branch: REL9_6_STABLE [e15115b4d] 2020-10-16 11:59:47 -0400
Branch: REL9_5_STABLE [9c3032881] 2020-10-16 11:59:52 -0400
-->
     <para>
      Add check for an unlikely failure case
      in <filename>contrib/pgcrypto</filename> (Daniel Gustafsson)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4a071afbd] 2020-10-29 15:28:14 -0400
Branch: REL_13_STABLE [ee03baad2] 2020-10-29 15:28:28 -0400
Branch: REL_12_STABLE [25b587f03] 2020-10-29 15:28:35 -0400
Branch: REL_11_STABLE [24d769b90] 2020-10-29 15:28:41 -0400
Branch: REL_10_STABLE [c39f4e81d] 2020-10-29 15:28:47 -0400
-->
     <para>
      Fix recently-added <type>timetz</type> test case so it works when
      the USA is not observing daylight savings time (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c4a803ac7] 2020-10-16 21:53:33 -0400
Branch: REL_13_STABLE [3f26dca76] 2020-10-16 21:53:43 -0400
Branch: REL_12_STABLE [b39c94097] 2020-10-16 21:53:50 -0400
Branch: REL_11_STABLE [2b9166dbc] 2020-10-16 21:53:55 -0400
Branch: REL_10_STABLE [aae4097b0] 2020-10-16 21:54:03 -0400
Branch: REL9_6_STABLE [13dbf4ab8] 2020-10-16 21:54:09 -0400
Branch: REL9_5_STABLE [c8cb243cb] 2020-10-16 21:54:14 -0400
Branch: master [7d6d6bce4] 2020-10-22 21:23:47 -0400
Branch: REL_13_STABLE [96ed2ae93] 2020-10-22 21:24:01 -0400
Branch: REL_12_STABLE [78ccf7f42] 2020-10-22 21:24:07 -0400
Branch: REL_11_STABLE [02f86d523] 2020-10-22 21:24:12 -0400
Branch: REL_10_STABLE [a357cc05d] 2020-10-22 21:24:17 -0400
Branch: REL9_6_STABLE [05a36321a] 2020-10-22 21:24:23 -0400
Branch: REL9_5_STABLE [0abebb58f] 2020-10-22 21:24:28 -0400
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2020d for DST law changes in Fiji, Morocco, Palestine, the
      Canadian Yukon, Macquarie Island, and Casey Station (Antarctica);
      plus historical corrections for France, Hungary, Monaco, and
      Palestine.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ce0e97f80] 2020-10-16 21:40:16 -0400
Branch: REL_13_STABLE [e0cf5e9b2] 2020-10-16 21:40:16 -0400
Branch: REL_12_STABLE [3d13a8307] 2020-10-16 21:40:16 -0400
Branch: REL_11_STABLE [4a2528bfa] 2020-10-16 21:40:16 -0400
Branch: REL_10_STABLE [41eeeb348] 2020-10-16 21:40:16 -0400
Branch: REL9_6_STABLE [5515c73a6] 2020-10-16 21:40:16 -0400
Branch: REL9_5_STABLE [38fac9c1f] 2020-10-16 21:40:16 -0400
Branch: master [c5054da0d] 2020-10-22 21:15:22 -0400
Branch: REL_13_STABLE [0e551533b] 2020-10-22 21:15:37 -0400
Branch: REL_12_STABLE [f56c42e50] 2020-10-22 21:16:04 -0400
Branch: REL_11_STABLE [d2ffe0a00] 2020-10-22 21:16:16 -0400
Branch: REL_10_STABLE [34285083b] 2020-10-22 21:16:23 -0400
Branch: REL9_6_STABLE [58f9f52a3] 2020-10-22 21:16:31 -0400
Branch: REL9_5_STABLE [ff26f804a] 2020-10-22 21:16:38 -0400
-->
     <para>
      Sync our copy of the timezone library with IANA tzcode release 2020d
      (Tom Lane)
     </para>

     <para>
      This absorbs upstream's change of <application>zic</application>'s
      default output option from <quote>fat</quote>
      to <quote>slim</quote>.  That's just cosmetic for our purposes, as
      we continue to select the <quote>fat</quote> mode in pre-v13
      branches.  This change also ensures
      that <function>strftime()</function> does not
      change <varname>errno</varname> unless it fails.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-12-4">
  <title>Release 12.4</title>

  <formalpara>
  <title>Release date:</title>
  <para>2020-08-13</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 12.3.
   For information about new features in major release 12, see
   <xref linkend="release-12"/>.
  </para>

  <sect2>
   <title>Migration to Version 12.4</title>

   <para>
    A dump/restore is not required for those running 12.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 12.2,
    see <xref linkend="release-12-2"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [11da97024] 2020-08-10 09:22:54 -0700
Branch: REL_13_STABLE [412c5c401] 2020-08-10 09:22:58 -0700
Branch: REL_12_STABLE [64a71062e] 2020-08-10 09:22:58 -0700
Branch: REL_11_STABLE [5a936d64c] 2020-08-10 09:22:59 -0700
Branch: REL_10_STABLE [dd5d99516] 2020-08-10 09:22:59 -0700
Branch: master [cec57b1a0] 2020-08-10 09:22:54 -0700
Branch: REL_13_STABLE [b601f24c8] 2020-08-10 09:22:58 -0700
Branch: REL_12_STABLE [515ee4a7e] 2020-08-10 09:22:58 -0700
Branch: REL_11_STABLE [613ed8a58] 2020-08-10 09:22:59 -0700
Branch: REL_10_STABLE [b793d6af9] 2020-08-10 09:22:59 -0700
-->
     <para>
      Set a secure <varname>search_path</varname> in logical replication
      walsenders and apply workers (Noah Misch)
     </para>

     <para>
      A malicious user of either the publisher or subscriber database
      could potentially cause execution of arbitrary SQL code by the role
      running replication, which is often a superuser.  Some of the risks
      here are equivalent to those described in CVE-2018-1058, and are
      mitigated in this patch by ensuring that the replication sender and
      receiver execute with empty <varname>search_path</varname> settings.
      (As with CVE-2018-1058, that change might cause problems for
      under-qualified names used in replicated tables' DDL.)  Other risks
      are inherent in replicating objects that belong to untrusted roles;
      the most we can do is document that there is a hazard to consider.
      (CVE-2020-14349)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7eeb1d986] 2020-08-10 10:44:42 -0400
Branch: REL_13_STABLE [98ca64899] 2020-08-10 10:44:42 -0400
Branch: REL_12_STABLE [3ba967084] 2020-08-10 10:44:42 -0400
Branch: REL_11_STABLE [afa358786] 2020-08-10 10:44:43 -0400
Branch: REL_10_STABLE [96cbfe92d] 2020-08-10 10:44:43 -0400
Branch: REL9_6_STABLE [2ea8a60fc] 2020-08-10 10:44:43 -0400
Branch: REL9_5_STABLE [6b11a4687] 2020-08-10 10:44:43 -0400
-->
     <para>
      Make contrib modules' installation scripts more secure (Tom Lane)
     </para>

     <para>
      Attacks similar to those described in CVE-2018-1058 could be carried
      out against an extension installation script, if the attacker can
      create objects in either the extension's target schema or the schema
      of some prerequisite extension.  Since extensions often require
      superuser privilege to install, this can open a path to obtaining
      superuser privilege.  To mitigate this risk, be more careful about
      the <varname>search_path</varname> used to run an installation
      script; disable <varname>check_function_bodies</varname> within the
      script; and fix catalog-adjustment queries used in some contrib
      modules to ensure they are secure.  Also provide documentation to
      help third-party extension authors make their installation scripts
      secure.  This is not a complete solution; extensions that depend on
      other extensions can still be at risk if installed carelessly.
      (CVE-2020-14350)
     </para>
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: master [13838740f] 2020-07-28 11:00:00 +0900
Branch: REL_13_STABLE [cebe10a5f] 2020-07-28 11:00:00 +0900
Branch: REL_12_STABLE [62c4a7729] 2020-07-28 11:00:02 +0900
Branch: REL_11_STABLE [bead29dec] 2020-07-28 11:00:03 +0900
Branch: master [199cec977] 2020-08-07 14:45:00 +0900
Branch: REL_13_STABLE [79a3ab1e9] 2020-08-07 14:45:01 +0900
Branch: REL_12_STABLE [4f2693229] 2020-08-07 14:45:02 +0900
Branch: REL_11_STABLE [1db9c80f8] 2020-08-07 14:45:04 +0900
-->
     <para>
      Fix edge cases in partition pruning (Etsuro Fujita, Dmitry Dolgov)
     </para>

     <para>
      When there are multiple partition key columns, generation of pruning
      tests could misbehave if some columns had no
      constraining <literal>WHERE</literal> clauses or multiple
      constraining clauses.  This could lead to server crashes, incorrect
      query results, or assertion failures.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [689696c71] 2020-07-14 18:56:56 -0400
Branch: REL_13_STABLE [e38705b5c] 2020-07-14 18:56:49 -0400
Branch: REL_12_STABLE [de797e823] 2020-07-14 18:56:49 -0400
Branch: REL_11_STABLE [e9f031172] 2020-07-14 18:56:49 -0400
-->
     <para>
      Fix construction of parameterized BitmapAnd and BitmapOr index scans
      on the inside of partition-wise nestloop joins (Tom Lane)
     </para>

     <para>
      A plan in which such a scan needed to use a value from the outside
      of the join would usually crash at execution.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7a980dfc6] 2020-08-05 15:38:55 -0400
Branch: REL_13_STABLE [c43a36fa8] 2020-08-05 15:38:55 -0400
Branch: REL_12_STABLE [f992da210] 2020-08-05 15:38:55 -0400
-->
     <para>
      Fix incorrect plan execution when a partitioned table is subject to
      both static and run-time partition pruning in the same query, and a
      new partition is added concurrently with the query (Amit Langote,
      Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [470687b4a] 2020-08-08 12:31:55 -0400
Branch: REL_13_STABLE [900429d0c] 2020-08-08 12:31:55 -0400
Branch: REL_12_STABLE [85cb4ec50] 2020-08-08 12:31:55 -0400
Branch: REL_11_STABLE [1fa6eec97] 2020-08-08 12:31:55 -0400
Branch: REL_10_STABLE [d81387da9] 2020-08-08 12:31:55 -0400
Branch: REL9_6_STABLE [55d42c917] 2020-08-08 12:31:55 -0400
Branch: REL9_5_STABLE [ca8e87ea0] 2020-08-08 12:31:55 -0400
-->
     <para>
      In logical replication walsender, fix failure to send feedback
      messages after sending a keepalive message (&Aacute;lvaro Herrera)
     </para>

     <para>
      This is a relatively minor problem when using built-in logical
      replication, because the built-in walreceiver will send a feedback
      reply (which clears the incorrect state) fairly frequently anyway.
      But with some other replication systems, such
      as <application>pglogical</application>, it causes significant
      performance issues.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d5daae47d] 2020-07-20 13:40:16 -0400
Branch: REL_13_STABLE [2f1f189cf] 2020-07-20 13:40:16 -0400
Branch: REL_12_STABLE [71e561bd4] 2020-07-20 13:40:16 -0400
Branch: REL_11_STABLE [e8de627a3] 2020-07-20 13:40:16 -0400
Branch: REL_10_STABLE [39d6aec19] 2020-07-20 13:40:16 -0400
-->
     <para>
      Fix firing of column-specific <literal>UPDATE</literal> triggers in
      logical replication subscribers (Tom Lane)
     </para>

     <para>
      The code neglected to account for the possibility of column numbers
      being different between the publisher and subscriber tables, so that
      if those were indeed different, wrong decisions might be made about
      which triggers to fire.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [b48df818d] 2020-06-18 16:34:59 +0900
Branch: REL_13_STABLE [43e70addf] 2020-06-18 16:35:29 +0900
Branch: REL_12_STABLE [16f43122d] 2020-06-18 16:35:32 +0900
Branch: REL_11_STABLE [1657e14b5] 2020-06-18 16:35:36 +0900
-->
     <para>
      Update oldest xmin and LSN values
      during <function>pg_replication_slot_advance()</function> (Michael
      Paquier)
     </para>

     <para>
      This function previously failed to do that, possibly preventing
      resource cleanup (such as removal of no-longer-needed WAL segments)
      after manual advancement of a replication slot.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [78e73e875] 2020-07-31 11:43:12 -0400
Branch: REL_13_STABLE [11dce63d6] 2020-07-31 11:43:12 -0400
Branch: REL_12_STABLE [70248d8f5] 2020-07-31 11:43:12 -0400
Branch: REL_11_STABLE [da596fb4b] 2020-07-31 11:43:12 -0400
Branch: REL_10_STABLE [5e724125a] 2020-07-31 11:43:12 -0400
Branch: REL9_6_STABLE [8ab00b9fe] 2020-07-31 11:43:13 -0400
-->
     <para>
      Fix slow execution of <function>ts_headline()</function> (Tom Lane)
     </para>

     <para>
      The phrase-search fix added in our previous set of minor releases
      could cause <function>ts_headline()</function> to take unreasonable
      amounts of time for long documents; to make matters worse, the query
      was not cancellable within the troublesome loop.
     </para>
    </listitem>

    <listitem>
<!--
Author: Joe Conway <mail@joeconway.com>
Branch: master Release: REL_13_BR [887cdff4d] 2020-05-28 13:19:00 -0400
Branch: REL_12_STABLE [3ccae5445] 2020-05-28 13:19:10 -0400
Branch: REL_11_STABLE [36758c472] 2020-05-28 13:19:16 -0400
Branch: REL_10_STABLE [2cbe3a954] 2020-05-28 13:17:11 -0400
Branch: REL9_6_STABLE [28e2c6eac] 2020-05-28 13:17:20 -0400
Branch: REL9_5_STABLE [bfb9595a7] 2020-05-28 13:17:28 -0400
-->
     <para>
      Ensure the <function>repeat()</function> function can be interrupted
      by query cancel (Joe Conway)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [183926da3] 2020-07-09 16:02:23 -0400
Branch: REL_13_STABLE [601d419b2] 2020-07-09 16:02:23 -0400
Branch: REL_12_STABLE [2564e2d08] 2020-07-09 16:02:23 -0400
Branch: REL_11_STABLE [90b418f81] 2020-07-09 16:02:23 -0400
Branch: REL_10_STABLE [765ad260a] 2020-07-09 16:02:23 -0400
-->
     <para>
      Fix <function>pg_current_logfile()</function> to not include a
      carriage return (<literal>\r</literal>) in its result on Windows
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Joe Conway <mail@joeconway.com>
Branch: master [96d1f423f] 2020-07-04 06:26:53 -0400
Branch: REL_13_STABLE [0025c3a2c] 2020-07-04 06:28:21 -0400
Branch: REL_12_STABLE [015e899a7] 2020-07-04 06:28:44 -0400
Branch: REL_11_STABLE [c2cdaf0cb] 2020-07-04 06:29:03 -0400
Branch: master [1d05627fc] 2020-07-04 13:46:31 -0400
Branch: REL_13_STABLE [c536da177] 2020-07-04 13:47:07 -0400
Branch: REL_12_STABLE [b615b2365] 2020-07-04 13:47:21 -0400
Branch: REL_11_STABLE [1243aa9b2] 2020-07-04 13:47:31 -0400
-->
     <para>
      Ensure that <function>pg_read_file()</function> and related
      functions read until EOF is reached (Joe Conway)
     </para>

     <para>
      Previously, if not given a specific data length to read, these
      functions would stop at whatever file length was reported
      by <function>stat()</function>.  That's unhelpful for pipes and
      other sorts of virtual files.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [df646509f] 2020-07-11 03:21:00 +0300
Branch: REL_13_STABLE [89a0b1a7c] 2020-07-11 03:21:48 +0300
Branch: REL_12_STABLE [f4ae676e3] 2020-07-11 03:21:57 +0300
-->
     <para>
      Forbid numeric <literal>NaN</literal> values in <type>jsonpath</type>
      computations (Alexander Korotkov)
     </para>

     <para>
      Neither SQL nor JSON have the concept of <literal>NaN</literal>
      (not-a-number), but the <type>jsonpath</type> code attempted to
      allow such values anyway.  This necessarily leads to nonstandard
      behavior, so it seems better to reject such values at the outset.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [03109a530] 2020-06-13 13:43:40 -0400
Branch: REL_13_STABLE [33dd9bb3b] 2020-06-13 13:43:40 -0400
Branch: REL_12_STABLE [874372a94] 2020-06-13 13:43:24 -0400
-->
     <para>
      Handle single <literal>Inf</literal> or <literal>NaN</literal>
      inputs correctly in floating-point aggregates (Tom Lane)
     </para>

     <para>
      The affected aggregates are
      <function>corr()</function>,
      <function>covar_pop()</function>,
      <function>regr_intercept()</function>,
      <function>regr_r2()</function>,
      <function>regr_slope()</function>,
      <function>regr_sxx()</function>,
      <function>regr_sxy()</function>,
      <function>regr_syy()</function>,
      <function>stddev_pop()</function>, and
      <function>var_pop()</function>.
      The correct answer in such cases is <literal>NaN</literal>, but an
      algorithmic change introduced in <productname>PostgreSQL</productname>
      v12 had caused these aggregates to produce zero instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [77a3be32f] 2020-06-11 17:38:42 -0400
Branch: REL_13_STABLE [ee788ba99] 2020-06-11 17:38:42 -0400
Branch: REL_12_STABLE [4284e1184] 2020-06-11 17:38:42 -0400
Branch: REL_11_STABLE [49e0a42dd] 2020-06-11 17:38:42 -0400
Branch: REL_10_STABLE [411a4626e] 2020-06-11 17:38:42 -0400
Branch: REL9_6_STABLE [36df06e25] 2020-06-11 17:38:42 -0400
-->
     <para>
      Fix mis-handling of <literal>NaN</literal> inputs during parallel
      aggregation on <type>numeric</type>-type columns (Tom Lane)
     </para>

     <para>
      If some partial aggregation workers found only <literal>NaN</literal>s
      while others found only non-<literal>NaN</literal>s, the results
      were combined incorrectly, possibly leading to the wrong overall
      result (i.e., not <literal>NaN</literal> when it should be).
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_13_BR [a9632830b] 2020-06-04 16:42:23 -0400
Branch: REL_12_STABLE [a958b07bc] 2020-06-04 16:42:08 -0400
Branch: REL_11_STABLE [6490376e5] 2020-06-04 16:42:08 -0400
Branch: REL_10_STABLE [b2c64f571] 2020-06-04 16:42:08 -0400
Branch: REL_10_STABLE [9a9ba4c4d] 2020-06-04 17:57:19 -0400
-->
     <para>
      Reject time-of-day values greater than 24 hours (Tom Lane)
     </para>

     <para>
      The intention of the datetime input code is to
      allow <quote>24:00:00</quote> or
      equivalently <quote>23:59:60</quote>, but no larger value.
      However, the range check was miscoded so that it would
      accept <quote>23:59:60.<replaceable>nnn</replaceable></quote> with
      nonzero fractional-second <replaceable>nnn</replaceable>.  In
      timestamp values this would result in wrapping into the first second
      of the next day.  In <type>time</type> and <type>timetz</type>
      values, the stored value would actually be more than 24 hours,
      causing dump/reload failures and possibly other misbehavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [63d2ac23b] 2020-06-22 11:46:41 -0400
Branch: REL_13_STABLE [57f8b9913] 2020-06-22 11:46:41 -0400
Branch: REL_12_STABLE [d3d875518] 2020-06-22 11:46:41 -0400
Branch: REL_11_STABLE [35a8e227e] 2020-06-22 11:46:41 -0400
Branch: REL_10_STABLE [6d9f7a094] 2020-06-22 11:46:41 -0400
Branch: REL9_6_STABLE [bd53ea2b2] 2020-06-22 11:46:41 -0400
Branch: REL9_5_STABLE [dda25c599] 2020-06-22 11:46:41 -0400
-->
     <para>
      Undo double-quoting of index names in <command>EXPLAIN</command>'s
      non-text output formats (Tom Lane, Euler Taveira)
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [2a2494229] 2020-07-25 10:20:39 +0530
Branch: REL_13_STABLE [b15367ae3] 2020-07-25 10:31:19 +0530
Branch: REL_12_STABLE [bdaa84e38] 2020-07-25 10:38:46 +0530
Branch: REL_11_STABLE [603c18b7e] 2020-07-25 10:48:09 +0530
Branch: REL_10_STABLE [f963b5bc0] 2020-07-25 10:57:20 +0530
-->
     <para>
      Fix <command>EXPLAIN</command>'s accounting for resource usage,
      particularly buffer accesses, in parallel workers in a plan
      using <literal>Gather Merge</literal> nodes
      (Jehan-Guillaume de Rorthais)
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [f1fcf2d3b] 2020-07-14 16:55:35 +1200
Branch: REL_13_STABLE [b82730429] 2020-07-14 16:57:41 +1200
Branch: REL_12_STABLE [1231a0b0e] 2020-07-14 17:03:12 +1200
Branch: REL_11_STABLE [d2761b680] 2020-07-14 16:59:57 +1200
Branch: REL_10_STABLE [4e02f88a4] 2020-07-14 17:00:28 +1200
Branch: REL9_6_STABLE [c732df133] 2020-07-14 17:00:57 +1200
Branch: REL9_5_STABLE [e20003fa0] 2020-07-14 17:01:25 +1200
-->
     <para>
      Fix timing of constraint revalidation in <command>ALTER
      TABLE</command> (David Rowley)
     </para>

     <para>
      If <command>ALTER TABLE</command> needs to fully rewrite the table's
      contents (for example, due to change of a column's data type) and
      also needs to scan the table to re-validate foreign keys
      or <literal>CHECK</literal> constraints, it sometimes did things in
      the wrong order, leading to odd errors such as <quote>could not read
      block 0 in file "base/nnnnn/nnnnn": read only 0 of 8192 bytes</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_13_BR [1127f0e39] 2020-06-05 10:26:02 +0900
Branch: REL_12_STABLE [75f147924] 2020-06-05 10:29:27 +0900
-->
     <para>
      Fix <command>REINDEX CONCURRENTLY</command> to preserve the index's
      replication identity flag (Michael Paquier)
     </para>

     <para>
      Previously, reindexing a table's replica identity index caused the
      setting to be lost, preventing old tuple values from being included
      in future logical-decoding output.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_12_STABLE [798b4faef] 2020-07-20 15:54:24 -0400
Branch: REL_11_STABLE [855195a7b] 2020-07-20 15:54:24 -0400
Branch: REL_12_STABLE [b7103bbe3] 2020-07-21 11:40:46 -0400
Branch: REL_11_STABLE [99b0c5da3] 2020-07-21 11:40:47 -0400
Branch: REL_10_STABLE [ae3d40b0c] 2020-07-21 11:40:47 -0400
-->
     <para>
      Work around incorrect not-null markings for
      <structname>pg_subscription</structname>.<structfield>subslotname</structfield>
      and <structname>pg_subscription_rel</structname>.<structfield>srsublsn</structfield>
      (Tom Lane)
     </para>

     <para>
      The bootstrap catalog data incorrectly marks these two catalog
      columns as always non-null.  There's no easy way to correct that
      mistake in existing installations (though v13 and later will have
      the correct markings).  The main place that depends on that marking
      being correct is JIT-enabled tuple deconstruction, so teach it to
      explicitly ignore the marking for these two columns.  Also adjust
      some C code that accessed <structfield>srsublsn</structfield> without
      checking to see if it's null; a crash from that is improbable but
      perhaps not impossible.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a742ecf9c] 2020-07-13 20:38:20 -0400
Branch: REL_13_STABLE [0734dbc45] 2020-07-13 20:38:20 -0400
Branch: REL_12_STABLE [d3b642ad9] 2020-07-13 20:38:21 -0400
Branch: REL_11_STABLE [3753df8f8] 2020-07-13 20:38:21 -0400
Branch: REL_10_STABLE [6443cd2e2] 2020-07-13 20:38:21 -0400
Branch: REL9_6_STABLE [dc6bb0994] 2020-07-13 20:38:21 -0400
Branch: REL9_5_STABLE [80d8f6d1d] 2020-07-13 20:38:21 -0400
-->
     <para>
      Cope with <literal>LATERAL</literal> references in restriction
      clauses attached to an un-flattened sub-<literal>SELECT</literal> in
      the <literal>FROM</literal> clause (Tom Lane)
     </para>

     <para>
      This oversight could result in assertion failures or crashes at
      query execution.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_13_BR [044c99bc5] 2020-06-05 16:18:50 -0400
Branch: REL_12_STABLE [022cd0bfd] 2020-06-05 16:18:50 -0400
Branch: master [bd0d893aa] 2020-07-21 19:41:03 -0400
Branch: REL_13_STABLE [cc4dd2a7a] 2020-07-21 19:40:44 -0400
Branch: REL_12_STABLE [171633ff5] 2020-07-21 19:40:44 -0400
-->
     <para>
      Use the query-specified collation for operators invoked during
      selectivity estimation (Tom Lane)
     </para>

     <para>
      Previously, the collation of the underlying database column was
      used.  But using the query's collation is arguably more correct.
      More importantly, now that we have nondeterministic collations,
      there are cases where an operator will fail outright if given a
      nondeterministic collation.  We don't want planning to fail in cases
      where the query itself would work, so this means that we must use
      the query's collation when invoking operators for estimation
      purposes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ca5e93f76] 2020-07-03 19:01:21 -0400
Branch: REL_13_STABLE [9233624b1] 2020-07-03 19:01:21 -0400
Branch: REL_12_STABLE [153c14cdd] 2020-07-03 19:01:21 -0400
Branch: REL_11_STABLE [ef799bdd0] 2020-07-03 19:01:21 -0400
Branch: REL_10_STABLE [5144a40f3] 2020-07-03 19:01:22 -0400
Branch: REL9_6_STABLE [69a3fe6e6] 2020-07-03 19:01:22 -0400
Branch: REL9_5_STABLE [d83d59e42] 2020-07-03 19:01:22 -0400
-->
     <para>
      Avoid believing that a never-analyzed foreign table has zero tuples
      (Tom Lane)
     </para>

     <para>
      This primarily affected the planner's estimate of the number of
      groups that would be obtained by <literal>GROUP BY</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [986529ce4] 2020-07-09 20:13:25 -0400
Branch: REL_13_STABLE [c3a79e719] 2020-07-09 20:13:25 -0400
Branch: REL_12_STABLE [ca5001a36] 2020-07-09 20:13:25 -0400
Branch: REL_11_STABLE [907283576] 2020-07-09 20:13:25 -0400
Branch: REL_10_STABLE [40316dfed] 2020-07-09 20:13:24 -0400
-->
     <para>
      Remove bogus warning about <quote>leftover placeholder tuple</quote>
      in BRIN index de-summarization (&Aacute;lvaro Herrera)
     </para>

     <para>
      The case can occur legitimately after a cancelled vacuum, so warning
      about it is overly noisy.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f7b5988cc] 2020-07-03 17:01:34 -0400
Branch: REL_13_STABLE [cfe89f5e6] 2020-07-03 17:01:34 -0400
Branch: REL_12_STABLE [8b83e0160] 2020-07-03 17:01:34 -0400
Branch: REL_11_STABLE [79ed1d99d] 2020-07-03 17:01:34 -0400
Author: Magnus Hagander <magnus@hagander.net>
Branch: master [ecd9e9f0b] 2020-07-03 15:09:06 +0200
Branch: REL_13_STABLE [1d94c3965] 2020-07-03 15:10:12 +0200
Branch: REL_12_STABLE [28a862e9d] 2020-07-03 15:10:33 +0200
Branch: REL_11_STABLE [4aa02d072] 2020-07-03 15:10:41 +0200
-->
     <para>
      Fix selection of tablespaces for <quote>shared fileset</quote>
      temporary files (Magnus Hagander, Tom Lane)
     </para>

     <para>
      If <varname>temp_tablespaces</varname> is empty or explicitly names
      the database's primary tablespace, such files got placed into
      the <literal>pg_default</literal> tablespace rather than the
      database's primary tablespace as expected.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [a44dd932f] 2020-06-20 17:34:51 +0300
Branch: REL_13_STABLE [39aafc88c] 2020-06-20 18:14:51 +0300
Branch: REL_12_STABLE [396a44a01] 2020-06-20 17:35:55 +0300
Branch: REL_11_STABLE [3f88e2d78] 2020-06-20 17:35:59 +0300
-->
     <para>
      Fix corner-case error in masking of SP-GiST index pages during WAL
      consistency checking (Alexander Korotkov)
     </para>

     <para>
      This could cause false failure reports
      when <varname>wal_consistency_checking</varname> is enabled.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [7897e3bb9] 2020-06-16 16:59:07 +1200
Branch: REL_13_STABLE [3e0b08c40] 2020-06-16 17:00:06 +1200
Branch: REL_12_STABLE [28ee12669] 2020-06-16 17:00:21 +1200
Branch: REL_11_STABLE [9c14d6024] 2020-06-16 17:00:37 +1200
Branch: REL_10_STABLE [95647a1c7] 2020-06-16 17:00:53 +1200
Branch: REL9_6_STABLE [02b71f06b] 2020-06-16 17:01:07 +1200
Branch: REL9_5_STABLE [89020a92f] 2020-06-16 17:01:22 +1200
Branch: master [42dee8b8e] 2020-07-23 21:10:49 +1200
Branch: REL_13_STABLE [6b366190d] 2020-07-23 21:15:01 +1200
Branch: REL_12_STABLE [8bf4e69a7] 2020-07-23 21:17:47 +1200
Branch: REL_11_STABLE [028f0c3a8] 2020-07-23 21:18:02 +1200
Branch: REL_10_STABLE [fac4145bf] 2020-07-23 21:18:13 +1200
Branch: REL9_6_STABLE [47adb2488] 2020-07-23 21:18:25 +1200
Branch: REL9_5_STABLE [3725c8ce4] 2020-07-23 21:18:34 +1200
-->
     <para>
      Improve error handling in the server's <filename>buffile</filename>
      module (Thomas Munro)
     </para>

     <para>
      Fix some cases where I/O errors were indistinguishable from reaching
      EOF, or were not reported at all.  Also add details such as block
      numbers and byte counts where appropriate.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [5940ffb22] 2020-06-11 10:09:47 -0700
Branch: REL_13_STABLE [6df7105e5] 2020-06-11 10:09:45 -0700
Branch: REL_12_STABLE [e620a38c2] 2020-06-11 10:09:43 -0700
Branch: REL_11_STABLE [dd616f2ec] 2020-06-11 10:09:40 -0700
Branch: REL_10_STABLE [19a6e1bc3] 2020-06-11 10:09:37 -0700
Branch: REL9_6_STABLE [e81dc2b7e] 2020-06-11 10:09:35 -0700
Branch: REL9_5_STABLE [c05f6b354] 2020-06-11 10:09:32 -0700
-->
     <para>
      Fix conflict-checking anomalies in <literal>SERIALIZABLE</literal>
      isolation mode (Peter Geoghegan)
     </para>

     <para>
      If a concurrently-inserted tuple was updated by a different
      concurrent transaction, and neither tuple version was visible to the
      current transaction's snapshot, serialization conflict checking
      could draw the wrong conclusions about whether the tuple was relevant
      to the results of the current transaction.  This could allow a
      serializable transaction to commit when it should have failed with a
      serialization error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master Release: REL_13_BR [242dfcbaf] 2020-05-15 16:50:34 -0400
Branch: REL_12_STABLE [1d84751c6] 2020-05-15 16:50:34 -0400
Branch: REL_11_STABLE [37b5c5fde] 2020-05-15 16:50:34 -0400
Branch: REL_10_STABLE [09f2752b0] 2020-05-15 16:50:34 -0400
Branch: REL9_6_STABLE [4649eb919] 2020-05-15 16:50:34 -0400
Branch: REL9_5_STABLE [0a319699d] 2020-05-15 16:50:34 -0400
-->
     <para>
      Avoid repeated marking of dead btree index entries as dead (Masahiko
      Sawada)
     </para>

     <para>
      While functionally harmless, this led to useless WAL traffic when
      checksums are enabled or <varname>wal_log_hints</varname> is on.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master Release: REL_13_BR [e8abf585a] 2020-05-14 08:39:26 +0300
Branch: REL_12_STABLE [891a2007e] 2020-05-14 08:40:19 +0300
-->
     <para>
      Fix checkpointer process to discard file sync requests
      when <varname>fsync</varname> is off (Heikki Linnakangas)
     </para>

     <para>
      Such requests are treated as no-ops if <varname>fsync</varname> is
      off, but we forgot to remove them from the checkpointer's table of
      pending actions.  This would lead to bloat of that table, as well as
      possible assertion failures if <varname>fsync</varname> is later
      re-enabled.
     </para>
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master Release: REL_13_BR [303640199] 2019-12-19 09:06:54 -0500
Branch: REL_12_STABLE [bcbc27251] 2020-08-06 13:58:23 -0400
Branch: REL_11_STABLE [f7013683d] 2020-08-06 14:06:24 -0400
Branch: master Release: REL_13_BR [f05798014] 2020-04-26 13:48:33 +0200
Branch: REL_12_STABLE [7c78040f6] 2020-08-06 14:55:00 -0400
Branch: REL_11_STABLE [495a9b1fb] 2020-08-06 15:01:55 -0400
-->
     <para>
      Avoid trouble during cleanup of a non-exclusive backup when JIT
      compilation has been activated during the backup (Robert Haas)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [57cb80630] 2020-06-08 13:57:24 +1200
Branch: REL_13_STABLE [acefa2cca] 2020-06-08 13:58:10 +1200
Branch: REL_12_STABLE [72766ad63] 2020-06-08 13:58:35 +1200
Branch: REL_11_STABLE [48eb6a3c8] 2020-06-08 13:59:57 +1200
Branch: REL_10_STABLE [fd11b842e] 2020-06-08 14:01:07 +1200
Branch: REL9_6_STABLE [644cac32a] 2020-06-08 14:01:51 +1200
Branch: REL9_5_STABLE [09dc17486] 2020-06-08 14:02:20 +1200
-->
     <para>
      Fix failure of some code paths to acquire the correct lock before
      modifying <filename>pg_control</filename> (Nathan Bossart, Fujii
      Masao)
     </para>

     <para>
      This oversight could allow <filename>pg_control</filename> to be
      written out with an inconsistent checksum, possibly causing trouble
      later, including inability to restart the database if it crashed
      before the next <filename>pg_control</filename> update.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_13_BR [ce1c5b9ae] 2020-06-01 14:41:18 +0900
Branch: REL_12_STABLE [894041eb2] 2020-06-01 14:41:25 +0900
Branch: REL_11_STABLE [8bc74490d] 2020-06-01 14:41:32 +0900
Branch: REL_10_STABLE [a36f21620] 2020-06-01 14:41:37 +0900
Branch: REL9_6_STABLE [e2fa9732f] 2020-06-01 14:41:42 +0900
Branch: REL9_5_STABLE [a8c6eb5b4] 2020-06-01 14:41:46 +0900
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_13_BR [e786be5fc] 2020-06-01 10:32:06 +0900
Branch: REL_12_STABLE [95e389b3c] 2020-06-01 10:32:53 +0900
-->
     <para>
      Fix errors in <function>currtid()</function>
      and <function>currtid2()</function> (Michael Paquier)
     </para>

     <para>
      These functions (which are undocumented and used only by ancient
      versions of the ODBC driver) contained coding errors that could
      result in crashes, or in confusing error messages such as <quote>could
      not open file</quote> when applied to a relation having no storage.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_13_BR [c1669fd58] 2020-06-04 10:17:49 +0900
Branch: REL_12_STABLE [03aa25b6e] 2020-06-04 10:18:02 +0900
Branch: REL_11_STABLE [b41a85f53] 2020-06-04 10:18:06 +0900
Branch: REL_10_STABLE [5ed8b4a98] 2020-06-04 10:18:11 +0900
Branch: REL9_6_STABLE [e7a134b58] 2020-06-04 10:18:17 +0900
Branch: REL9_5_STABLE [4a9809e34] 2020-06-04 10:18:27 +0900
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_13_BR [f88bd3139] 2020-06-03 12:36:23 -0400
Branch: REL_12_STABLE [3d474a079] 2020-06-03 12:36:24 -0400
Branch: REL_11_STABLE [7a8cb4a61] 2020-06-03 12:36:00 -0400
Branch: REL_10_STABLE [0c735c686] 2020-06-03 12:36:00 -0400
-->
     <para>
      Avoid calling <function>elog()</function>
      or <function>palloc()</function> while holding a spinlock (Michael
      Paquier, Tom Lane)
     </para>

     <para>
      Logic associated with replication slots had several violations of
      this coding rule.  While the odds of trouble are quite low, an error
      in the called function would lead to a stuck spinlock.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_13_BR [7ccb2f54d] 2020-05-16 18:15:18 +0900
Branch: REL_12_STABLE [b4ded2f22] 2020-05-16 18:16:31 +0900
Branch: REL_11_STABLE [70ae82b9b] 2020-05-16 18:16:37 +0900
Branch: REL_10_STABLE [3acb30b49] 2020-05-16 18:16:41 +0900
-->
     <para>
      Fix assertion in logical replication subscriber to allow use
      of <literal>REPLICA IDENTITY FULL</literal> (Euler Taveira)
     </para>

     <para>
      This was just an incorrect assertion, so it has no impact on
      standard production builds.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_13_BR [7247e243a] 2020-06-07 13:44:13 -0400
Branch: REL_12_STABLE [2edf14f5a] 2020-06-07 13:44:13 -0400
-->
     <para>
      Ensure that <application>libpq</application> continues to try to
      read from the database connection socket after a write failure
      (Tom Lane)
     </para>

     <para>
      This is important not only to ensure that we collect any final error
      message from a dying server process, but because we do not consider
      the connection lost until we see a read failure.  This oversight
      allowed <application>libpq</application> to continue trying to
      send <command>COPY</command> data indefinitely after a mid-transfer
      loss of connection, rather than reporting failure to the application.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [25fe5ac45] 2020-07-13 11:58:08 -0400
Branch: REL_13_STABLE [8e6f134a9] 2020-07-13 11:58:09 -0400
Branch: REL_12_STABLE [e8b22a8a2] 2020-07-13 11:57:55 -0400
-->
     <para>
      Fix bugs in <application>libpq</application>'s management of GSS
      encryption state (Tom Lane)
     </para>

     <para>
      A connection using GSS encryption could freeze up when attempting to
      reset it after a server restart, or when moving on to the next one of
      a list of candidate servers.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Meskes <meskes@postgresql.org>
Branch: master [e576f71fb] 2020-06-30 18:34:41 +0200
Branch: REL_13_STABLE [70dc45e8c] 2020-06-30 19:35:22 +0200
Branch: REL_12_STABLE [6425d6f6a] 2020-06-30 18:35:21 +0200
-->
     <para>
      Fix <application>ecpg</application> crash with <type>bytea</type>
      and cursor variables (Jehan-Guillaume de Rorthais)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [ae3259c55] 2020-06-19 16:46:07 -0400
Branch: REL_13_STABLE [e74559c97] 2020-06-19 16:46:07 -0400
Branch: REL_12_STABLE [5b52008a6] 2020-06-19 16:46:07 -0400
Branch: REL_11_STABLE [2e155d90d] 2020-06-19 16:46:07 -0400
Branch: REL_10_STABLE [411febd53] 2020-06-19 16:46:07 -0400
Branch: REL9_6_STABLE [83762d0a9] 2020-06-19 16:46:07 -0400
Branch: REL9_5_STABLE [bbbce94dc] 2020-06-19 16:46:06 -0400
-->
     <para>
      Report out-of-disk-space errors properly
      in <application>pg_dump</application>
      and <application>pg_basebackup</application> (Justin Pryzby, Tom
      Lane, &Aacute;lvaro Herrera)
     </para>

     <para>
      Some code paths could produce silly reports like <quote>could not
      write file: Success</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f009591d6] 2020-07-17 13:04:05 -0400
Branch: REL_13_STABLE [71e8e66f7] 2020-07-17 13:04:06 -0400
Branch: REL_12_STABLE [66232220e] 2020-07-17 13:03:50 -0400
Branch: master [a8d0732ac] 2020-07-17 13:04:05 -0400
Branch: REL_13_STABLE [447cf2f8e] 2020-07-17 13:04:06 -0400
Branch: REL_12_STABLE [39a068ce6] 2020-07-17 12:14:28 -0400
-->
     <para>
      Make <application>pg_restore</application> cope with
      data-offset-less custom-format archive files when it needs to
      restore data items out of order (David Gilman, Tom Lane)
     </para>

     <para>
      <application>pg_dump</application> will produce such files if it
      cannot seek its output (for example, if the output is piped to
      something).  This fix primarily improves the ability to do a
      parallel restore from such a file.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ea9125304] 2020-07-11 13:36:50 -0400
Branch: REL_13_STABLE [bc9aaac1a] 2020-07-11 13:36:50 -0400
Branch: REL_12_STABLE [5fea14f4b] 2020-07-11 13:36:50 -0400
Branch: REL_11_STABLE [4fdc559c8] 2020-07-11 13:36:50 -0400
Branch: REL_10_STABLE [2d43c3057] 2020-07-11 13:36:51 -0400
Branch: REL9_6_STABLE [303322c5a] 2020-07-11 13:36:51 -0400
Branch: REL9_5_STABLE [db820b9a9] 2020-07-11 13:36:51 -0400
-->
     <para>
      Fix parallel restore of tables having both table-level privileges
      and per-column privileges (Tom Lane)
     </para>

     <para>
      The table-level privilege grants have to be applied first, but a
      parallel restore did not reliably order them that way; this could
      lead to <quote>tuple concurrently updated</quote> errors, or to
      disappearance of some per-column privilege grants.  The fix for this
      is to include dependency links between such entries in the archive
      file, meaning that a new dump has to be taken with a
      corrected <application>pg_dump</application> to ensure that the
      problem will not recur.
     </para>
    </listitem>

    <listitem>
<!--
Author: Bruce Momjian <bruce@momjian.us>
Branch: master [3f5863e15] 2020-06-15 20:59:40 -0400
Branch: REL_13_STABLE [a2c72851a] 2020-06-15 20:59:40 -0400
Branch: REL_12_STABLE [8e933596c] 2020-06-15 20:59:40 -0400
Branch: REL_11_STABLE [aeb785c0f] 2020-06-15 20:59:40 -0400
Branch: REL_10_STABLE [9170da96d] 2020-06-15 20:59:40 -0400
Branch: REL9_6_STABLE [5c1bfd627] 2020-06-15 20:59:40 -0400
Branch: REL9_5_STABLE [39c698cff] 2020-06-15 20:59:40 -0400
-->
     <para>
      Ensure that <application>pg_upgrade</application> runs
      with <varname>vacuum_defer_cleanup_age</varname> set to zero in the
      target cluster (Bruce Momjian)
     </para>

     <para>
      If the target cluster's configuration has been modified to
      set <varname>vacuum_defer_cleanup_age</varname> to a nonzero value,
      that prevented freezing of the system catalogs from working properly,
      which caused the upgrade to fail in confusing ways.  Ensure that any
      such setting is overridden for the duration of the upgrade.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master Release: REL_13_BR [cee9cadb5] 2020-05-13 20:42:09 -0700
Branch: REL_12_STABLE [73a5c0d81] 2020-05-13 20:42:24 -0700
Branch: REL_11_STABLE [a26789452] 2020-05-13 20:42:37 -0700
Branch: REL_10_STABLE [970ed4493] 2020-05-13 20:42:42 -0700
Branch: REL9_6_STABLE [1ab5b672e] 2020-05-13 20:42:46 -0700
Branch: REL9_5_STABLE [595b4115c] 2020-05-13 20:42:49 -0700
Author: Noah Misch <noah@leadboat.com>
Branch: master Release: REL_13_BR [8222a9d9a] 2020-05-13 20:42:09 -0700
Branch: REL_12_STABLE [7130be8aa] 2020-05-13 20:42:23 -0700
Branch: REL_11_STABLE [357012e17] 2020-05-13 20:42:34 -0700
Branch: REL_10_STABLE [a28db2081] 2020-05-13 20:42:42 -0700
-->
     <para>
      Fix <application>pg_recvlogical</application> to drain pending
      messages before exiting (Noah Misch)
     </para>

     <para>
      Without this, the replication sender might detect a send failure and
      exit without making the expected final update to the replication
      slot's LSN position.  That led to re-transmitting data after the
      next connection.  It was also possible to miss error messages sent
      after the last data that <application>pg_recvlogical</application>
      wants to consume.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [1d09fb1f0] 2020-07-15 15:17:23 +0900
Branch: REL_13_STABLE [5f89bb4cf] 2020-07-15 15:17:32 +0900
Branch: REL_12_STABLE [92927477f] 2020-07-15 15:17:36 +0900
Branch: REL_11_STABLE [c6d33d144] 2020-07-15 15:17:44 +0900
Branch: REL_10_STABLE [23924feca] 2020-07-15 15:17:49 +0900
Branch: REL9_6_STABLE [14fe80413] 2020-07-15 15:17:55 +0900
Branch: REL9_5_STABLE [18ec25412] 2020-07-15 15:18:01 +0900
-->
     <para>
      Fix <application>pg_rewind</application>'s handling of just-deleted
      files in the source data directory (Justin Pryzby, Michael Paquier)
     </para>

     <para>
      When working with an on-line source database, concurrent file
      deletions are possible, but <application>pg_rewind</application>
      would get confused if deletion happened between seeing a file's
      directory entry and examining it with <function>stat()</function>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [932f9fb50] 2020-07-16 15:52:37 +0900
Branch: REL_13_STABLE [beebbb39d] 2020-07-16 15:52:54 +0900
Branch: REL_12_STABLE [cd113a0b4] 2020-07-16 15:52:58 +0900
Branch: REL_11_STABLE [de559c2b0] 2020-07-16 15:53:01 +0900
Branch: REL_10_STABLE [800ec48f5] 2020-07-16 15:53:04 +0900
Branch: REL9_6_STABLE [a452b239e] 2020-07-16 15:53:09 +0900
Branch: REL9_5_STABLE [ab7ce97ec] 2020-07-16 15:53:12 +0900
-->
     <para>
      Make <application>pg_test_fsync</application> use binary I/O mode on
      Windows (Michael Paquier)
     </para>

     <para>
      Previously it wrote the test file in text mode, which is not an
      accurate reflection of <productname>PostgreSQL</productname>'s
      actual usage.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master Release: REL_13_BR [34dae902c] 2020-05-14 12:44:44 +0300
Branch: REL_12_STABLE [ae1f9b0a9] 2020-05-14 12:46:08 +0300
Branch: REL_11_STABLE [b9a45d8db] 2020-05-14 12:46:15 +0300
-->
     <para>
      Fix <filename>contrib/amcheck</filename> to not complain about
      deleted index pages that are empty (Alexander Korotkov)
     </para>

     <para>
      This state of affairs is normal during WAL replay.
     </para>
    </listitem>

    <listitem>
<!--
Author: Joe Conway <mail@joeconway.com>
Branch: master Release: REL_13_BR [9003b76e1] 2020-05-28 13:44:54 -0400
Branch: REL_12_STABLE [e8eb48595] 2020-05-28 13:44:59 -0400
Branch: REL_11_STABLE [49a00e07c] 2020-05-28 13:45:02 -0400
Branch: REL_10_STABLE [43d3d7318] 2020-05-28 13:45:06 -0400
Branch: REL9_6_STABLE [43d7934a3] 2020-05-28 13:45:11 -0400
Branch: REL9_5_STABLE [f140d9b6e] 2020-05-28 13:45:15 -0400
-->
     <para>
      Fix failure to initialize local state correctly
      in <filename>contrib/dblink</filename> (Joe Conway)
     </para>

     <para>
      With the right combination of circumstances, this could lead to
      <function>dblink_close()</function> issuing an unexpected
      remote <command>COMMIT</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b9b610577] 2020-07-23 17:20:01 -0400
Branch: REL_13_STABLE [7dab4569d] 2020-07-23 17:20:01 -0400
Branch: REL_12_STABLE [3d4a77815] 2020-07-23 17:20:02 -0400
Branch: REL_11_STABLE [475c69c97] 2020-07-23 17:20:03 -0400
Branch: REL_10_STABLE [d8ec3b126] 2020-07-23 17:20:03 -0400
Branch: REL9_6_STABLE [ccf964a80] 2020-07-23 17:20:04 -0400
Branch: REL9_5_STABLE [d0519e9fe] 2020-07-23 17:20:04 -0400
-->
     <para>
      Fix <filename>contrib/pgcrypto</filename>'s misuse
      of <function>deflate()</function> (Tom Lane)
     </para>

     <para>
      The <function>pgp_sym_encrypt</function> functions could produce
      incorrect compressed data due to mishandling
      of <application>zlib</application>'s API requirements.  We have no
      reports of this error manifesting with
      stock <application>zlib</application>, but it can be seen when using
      IBM's <application>zlibNX</application> implementation.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a3ab7a707] 2020-07-27 15:58:32 +0900
Branch: REL_13_STABLE [0caf1fc6e] 2020-07-27 15:58:54 +0900
Branch: REL_12_STABLE [5bd087eb5] 2020-07-27 15:58:59 +0900
Branch: REL_11_STABLE [202fc4ca5] 2020-07-27 15:59:03 +0900
Branch: REL_10_STABLE [9729f9979] 2020-07-27 15:59:07 +0900
Branch: REL9_6_STABLE [8a60f541f] 2020-07-27 15:59:13 +0900
Branch: REL9_5_STABLE [aaa132a65] 2020-07-27 15:59:22 +0900
Branch: REL_11_STABLE [1785ac8ad] 2020-08-02 11:00:12 -0400
Branch: REL_10_STABLE [e1b4135cf] 2020-08-02 11:00:12 -0400
-->
     <para>
      Fix corner case in decompression logic
      in <filename>contrib/pgcrypto</filename>'s
      <function>pgp_sym_decrypt</function> functions (Kyotaro Horiguchi,
      Michael Paquier)
     </para>

     <para>
      A compressed stream can validly end with an empty packet, but the
      decompressor failed to handle this and would complain about corrupt
      data.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master Release: REL_13_BR [a16915545] 2020-05-14 09:24:33 +0530
Branch: REL_12_STABLE [98171e59a] 2020-05-14 09:34:46 +0530
Branch: REL_11_STABLE [1fbfc3d8a] 2020-05-14 09:39:04 +0530
Branch: REL_10_STABLE [33b772801] 2020-05-14 09:44:21 +0530
Branch: REL9_6_STABLE [a1466e194] 2020-05-14 09:50:10 +0530
Branch: REL9_5_STABLE [650952aeb] 2020-05-14 09:55:04 +0530
-->
     <para>
      Support building our NLS code with Microsoft Visual Studio 2015 or
      later (Juan Jos&eacute; Santamar&iacute;a Flecha, Davinder Singh,
      Amit Kapila)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_13_BR [d2a995990] 2020-05-21 14:41:15 +0900
Branch: REL_12_STABLE [089baec6f] 2020-05-21 14:41:30 +0900
Branch: REL_11_STABLE [bb24af50d] 2020-05-21 14:41:33 +0900
Branch: REL_10_STABLE [8dfc7d888] 2020-05-21 14:41:36 +0900
Branch: REL9_6_STABLE [57dc672c2] 2020-05-21 14:41:40 +0900
Branch: REL9_5_STABLE [8de137017] 2020-05-21 14:41:43 +0900
-->
     <para>
      Avoid possible failure of our MSVC install script when there is a
      file named <filename>configure</filename> several levels above the
      source code tree (Arnold M&uuml;ller)
     </para>

     <para>
      This could confuse some logic that looked
      for <filename>configure</filename> to identify the top level of the
      source tree.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-12-3">
  <title>Release 12.3</title>

  <formalpara>
  <title>Release date:</title>
  <para>2020-05-14</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 12.2.
   For information about new features in major release 12, see
   <xref linkend="release-12"/>.
  </para>

  <sect2>
   <title>Migration to Version 12.3</title>

   <para>
    A dump/restore is not required for those running 12.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 12.2,
    see <xref linkend="release-12-2"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [3cb02e307] 2020-04-18 14:10:37 +1200
Branch: REL_12_STABLE [a375f11c4] 2020-04-18 14:11:21 +1200
-->
     <para>
      Fix possible failure with <literal>GENERATED</literal> columns
      (David Rowley)
     </para>

     <para>
      If a <literal>GENERATED</literal> column's value is an exact copy of
      another column of the table (and it is a pass-by-reference data
      type), it was possible to crash or insert corrupted data into the
      table.  While it would be rather pointless for
      a <literal>GENERATED</literal> expression to just duplicate another
      column, an expression using a function that sometimes returns its
      input unchanged could create the situation.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [086ffddf3] 2020-05-08 11:31:57 +0200
Branch: REL_12_STABLE [14751c340] 2020-05-08 11:31:46 +0200
-->
     <para>
      Handle inheritance of generated columns better (Peter Eisentraut)
     </para>

     <para>
      When a table column is inherited during <command>CREATE TABLE
      ... INHERITS</command>, disallow changing any generation properties
      when the parent column is already
      marked <literal>GENERATED</literal>; but allow a child column to be
      marked <literal>GENERATED</literal> when its parent is not.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [e92e4a2b6] 2020-04-09 16:36:45 +0200
Branch: REL_12_STABLE [f06d583c5] 2020-04-09 16:34:30 +0200
-->
     <para>
      Fix cross-column references in <command>CREATE TABLE LIKE INCLUDING
      GENERATED</command> (Peter Eisentraut)
     </para>

     <para>
      <command>CREATE TABLE ... LIKE</command> failed when trying to copy
      a <literal>GENERATED</literal> expression that references a
      physically-later column.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [501e41dd3] 2020-05-08 08:39:17 +0200
Branch: REL_12_STABLE [bf7233ee4] 2020-05-08 09:18:15 +0200
Branch: REL_11_STABLE [03a8a5f2d] 2020-05-08 09:30:57 +0200
-->
     <para>
      Propagate <command>ALTER TABLE ... SET STORAGE</command> to indexes
      (Peter Eisentraut)
     </para>

     <para>
      Non-expression index columns have always copied
      the <structfield>attstorage</structfield> property of their table
      column at creation.  Update them when <command>ALTER TABLE ... SET
      STORAGE</command> is done, to maintain consistency.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a40caf5f8] 2020-04-06 11:03:49 +0900
Branch: REL_12_STABLE [3e62dd3a9] 2020-04-06 11:05:47 +0900
Branch: REL_11_STABLE [41faafbd7] 2020-04-06 11:05:54 +0900
Branch: REL_10_STABLE [cef2b8d52] 2020-04-06 11:05:57 +0900
Branch: REL9_6_STABLE [61a161fe4] 2020-04-06 11:06:04 +0900
Branch: REL9_5_STABLE [3f77a6702] 2020-04-06 11:06:07 +0900
-->
     <para>
      Preserve the <structfield>indisclustered</structfield> setting of
      indexes rewritten by <command>ALTER TABLE</command> (Amit Langote,
      Justin Pryzby)
     </para>

     <para>
      Previously, <command>ALTER TABLE</command> lost track of which index
      had been used for <command>CLUSTER</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [1cc9c2412] 2020-03-13 11:57:06 +0100
Branch: REL_12_STABLE [c9ef507e8] 2020-03-13 11:57:20 +0100
Branch: REL_11_STABLE [15cbbf81a] 2020-03-13 12:24:44 +0100
Branch: REL_10_STABLE [02530da73] 2020-03-13 13:03:28 +0100
Branch: REL9_6_STABLE [2f0dd9d93] 2020-03-13 13:21:05 +0100
Branch: REL9_5_STABLE [c15d35041] 2020-03-13 13:21:30 +0100
-->
     <para>
      Preserve the replica identity properties of indexes rewritten
      by <command>ALTER TABLE</command> (Quan Zongliang, Peter Eisentraut)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [d79fb88ac] 2020-03-03 10:12:28 +0900
Branch: REL_12_STABLE [f087d63a4] 2020-03-03 10:12:49 +0900
-->
     <para>
      Preserve the <structfield>indisclustered</structfield> setting of
      indexes rebuilt by <command>REINDEX CONCURRENTLY</command>
      (Justin Pryzby)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [5be594caf] 2020-05-06 12:29:41 -0400
Branch: REL_12_STABLE [2eea49471] 2020-05-06 12:29:41 -0400
Branch: REL_11_STABLE [59273a7ce] 2020-05-06 12:29:41 -0400
Branch: REL_10_STABLE [4d21263ff] 2020-05-06 12:29:41 -0400
Branch: REL9_6_STABLE [2bf56f50e] 2020-05-06 12:29:41 -0400
Branch: REL9_5_STABLE [91d97462c] 2020-05-06 12:29:41 -0400
-->
     <para>
      Lock objects sooner during <command>DROP OWNED BY</command>
      (&Aacute;lvaro Herrera)
     </para>

     <para>
      This avoids failures in race-condition cases where another session is
      deleting some of the same objects.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [d9a4cce29] 2020-04-25 05:09:30 +0100
Branch: REL_12_STABLE [d0360632d] 2020-04-25 05:10:24 +0100
Branch: REL_11_STABLE [0f4970d1a] 2020-04-25 05:10:19 +0100
Branch: REL_10_STABLE [287f6d2d9] 2020-04-25 05:10:13 +0100
Branch: REL9_6_STABLE [86b7a4e6f] 2020-04-25 05:10:10 +0100
Branch: REL9_5_STABLE [b3824ca22] 2020-04-25 05:10:05 +0100
-->
     <para>
      Fix error-case processing for <command>CREATE ROLE ... IN
      ROLE</command> (Andrew Gierth)
     </para>

     <para>
      Some error cases would be reported as <quote>unexpected node
      type</quote> or the like, instead of the intended message.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [afccd76f1] 2020-04-21 13:57:00 -0400
Branch: REL_12_STABLE [e26c8a6b3] 2020-04-21 13:57:00 -0400
Branch: REL_11_STABLE [0b83c4721] 2020-04-21 13:57:00 -0400
-->
     <para>
      Ensure that when a partition is detached, any triggers cloned from
      its formerly-parent table are removed (Justin Pryzby)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [c0187869a] 2020-04-08 15:04:51 +0900
Branch: REL_12_STABLE [0a9ae1800] 2020-04-08 15:04:57 +0900
-->
     <para>
      Fix crash when <literal>COLLATE</literal> is applied to a
      non-collatable type in a partition bound expression (Dmitry Dolgov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [501b01879] 2020-04-01 14:49:49 -0400
Branch: REL_12_STABLE [76ea60696] 2020-04-01 14:49:49 -0400
Branch: REL_11_STABLE [76ddc88f4] 2020-04-01 14:49:49 -0400
-->
     <para>
      Ensure that unique indexes over partitioned tables match the
      equality semantics of the partitioning key (Guancheng Luo)
     </para>

     <para>
      This would only be an issue with index opclasses that have unusual
      notions of equality, but it's wrong in theory, so check.
     </para>
    </listitem>

    <listitem>
<!--
Author: Magnus Hagander <magnus@hagander.net>
Branch: master [7e4e57474] 2020-04-20 12:53:40 +0200
Branch: REL_12_STABLE [212e712a5] 2020-04-20 12:56:26 +0200
Branch: REL_11_STABLE [3d4652f67] 2020-04-20 12:57:12 +0200
Branch: REL_10_STABLE [d0bb66572] 2020-04-20 12:57:24 +0200
-->
     <para>
      Ensure that members of the <literal>pg_read_all_stats</literal> role
      can read all statistics views, as expected (Magnus Hagander)
     </para>

     <para>
      The functions underlying
      the <structname>pg_stat_progress_*</structname> views had not gotten
      this memo.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [baf17ad9d] 2020-04-24 12:02:36 -0400
Branch: REL_12_STABLE [64e49a67e] 2020-04-24 12:02:36 -0400
Branch: REL_11_STABLE [776f6d3d0] 2020-04-24 12:02:36 -0400
-->
     <para>
      Repair performance regression in
      <structname>information_schema</structname>.<structname>triggers</structname>
      view (Tom Lane)
     </para>

     <para>
      This patch redefines that view so that an
      outer <literal>WHERE</literal> clause constraining the table name
      can be pushed down into the view, allowing its calculations to be
      done only for triggers belonging to the table of interest rather
      than all triggers in the database.  In a database with many triggers
      this would make a significant speed difference for queries of that
      form.  Since things worked that way before v11, this is a potential
      performance regression.  Users who find this to be a problem can fix
      it by replacing the view definition (or, perhaps, just deleting and
      reinstalling the whole <structname>information_schema</structname>
      schema).
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [607f8ce74] 2020-02-13 13:37:43 -0500
Branch: REL_12_STABLE [764a554d6] 2020-02-13 13:37:43 -0500
-->
     <para>
      Repair performance regression in floating point overflow/underflow
      detection (Emre Hasegeli)
     </para>

     <para>
      Previous refactoring had resulted in <function>isinf()</function>
      being called extra times in some hot code paths.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e81e5741a] 2020-04-27 12:21:04 -0400
Branch: REL_12_STABLE [18f7e856c] 2020-04-27 12:21:04 -0400
Branch: REL_11_STABLE [98a4d6950] 2020-04-27 12:21:04 -0400
Branch: REL_10_STABLE [072a86327] 2020-04-27 12:21:04 -0400
Branch: REL9_6_STABLE [22dcb6c20] 2020-04-27 12:21:04 -0400
-->
     <para>
      Fix full text search to handle NOT above a phrase search correctly
      (Tom Lane)
     </para>

     <para>
      Queries such as <literal>!(foo&lt;-&gt;bar)</literal> failed to find
      matching rows when implemented as a GiST or GIN index search.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [db89f0e3a] 2020-05-07 15:59:51 -0400
Branch: REL_12_STABLE [e1d70ba43] 2020-05-07 15:59:51 -0400
Branch: REL_11_STABLE [5db48808c] 2020-05-07 15:59:52 -0400
Branch: REL_10_STABLE [26cf16a93] 2020-05-07 15:59:52 -0400
Branch: REL9_6_STABLE [7c9d9aa5c] 2020-05-07 15:59:52 -0400
-->
     <para>
      Fix full text search for cases where a phrase search includes an
      item with both prefix matching and a weight restriction (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c9b0c678d] 2020-04-09 13:19:23 -0400
Branch: REL_12_STABLE [841378947] 2020-04-09 13:19:23 -0400
Branch: REL_11_STABLE [91be1d190] 2020-04-09 13:19:23 -0400
Branch: REL_10_STABLE [5f7247b3b] 2020-04-09 13:19:23 -0400
Branch: REL9_6_STABLE [c81de3a82] 2020-04-09 13:19:23 -0400
Branch: master [2e0e409e3] 2020-04-09 15:38:43 -0400
Branch: REL_12_STABLE [07453e9e3] 2020-04-09 15:38:52 -0400
Branch: REL_11_STABLE [d9a3fe4c5] 2020-04-09 15:38:57 -0400
Branch: REL_10_STABLE [9be664d71] 2020-04-09 15:39:02 -0400
Branch: REL9_6_STABLE [c2599b93d] 2020-04-09 15:39:09 -0400
Branch: master [b10f8bb9f] 2020-04-09 12:36:59 -0400
Branch: REL_12_STABLE [1306edeae] 2020-04-09 12:36:59 -0400
Branch: REL_11_STABLE [ff081d6bb] 2020-04-09 12:37:00 -0400
Branch: REL_10_STABLE [afab39986] 2020-04-09 12:37:00 -0400
Branch: REL9_6_STABLE [638519156] 2020-04-09 12:37:00 -0400
-->
     <para>
      Fix <function>ts_headline()</function> to make better headline
      selections when working with phrase queries (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e41955faf] 2020-04-03 13:15:45 -0400
Branch: REL_12_STABLE [05f4a8818] 2020-04-03 13:15:30 -0400
Branch: REL_11_STABLE [0912fb39c] 2020-04-03 13:15:30 -0400
Branch: REL_10_STABLE [44c763fe9] 2020-04-03 13:15:30 -0400
Branch: REL9_6_STABLE [49b0d13d7] 2020-04-03 13:15:30 -0400
Branch: REL9_5_STABLE [8150f7813] 2020-04-03 13:15:30 -0400
Branch: REL9_5_STABLE [e82b6e00a] 2020-04-06 12:29:54 -0400
-->
     <para>
      Fix bugs in <varname>gin_fuzzy_search_limit</varname> processing
      (Ad&eacute; Heyward, Tom Lane)
     </para>

     <para>
      A small value of <varname>gin_fuzzy_search_limit</varname> could
      result in unexpected slowness due to unintentionally rescanning the
      same index page many times.  Another code path failed to apply the
      intended filtering at all, possibly returning too many values.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [41a194f49] 2020-04-07 20:50:28 -0400
Branch: REL_12_STABLE [35d1eefb2] 2020-04-07 20:50:02 -0400
Branch: REL_11_STABLE [5fae66410] 2020-04-07 20:50:02 -0400
Branch: REL_10_STABLE [4c7a311a2] 2020-04-07 20:50:02 -0400
Branch: REL9_6_STABLE [049e9f48e] 2020-04-07 20:50:02 -0400
Branch: REL9_5_STABLE [ebd194ac5] 2020-04-07 20:50:02 -0400
-->
     <para>
      Allow input of type <type>circle</type> to accept the format
      <quote><literal>(<replaceable>x</replaceable>,<replaceable>y</replaceable>),<replaceable>r</replaceable></literal></quote>
      as the documentation says it does (David Zhang)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [26a944cf2] 2020-04-07 15:57:58 -0400
Branch: REL_12_STABLE [6e6b74a20] 2020-04-07 16:30:55 -0400
Branch: REL_11_STABLE [5d79fc60c] 2020-04-07 16:30:55 -0400
Branch: REL_10_STABLE [889786e0e] 2020-04-07 16:30:55 -0400
Branch: REL9_6_STABLE [e40c4d491] 2020-04-07 16:30:55 -0400
Branch: REL9_5_STABLE [dbb121038] 2020-04-07 16:30:55 -0400
-->
     <para>
      Make the <function>get_bit()</function>
      and <function>set_bit()</function> functions cope
      with <type>bytea</type> strings longer than 256MB (Movead Li)
     </para>

     <para>
      Since the bit number argument is only <type>int4</type>, it's
      impossible to use these functions to access bits beyond the first
      256MB of a long <type>bytea</type>.  We'll widen the argument
      to <type>int8</type> in v13, but in the meantime, allow these
      functions to work on the initial substring of a
      long <type>bytea</type>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [82e801852] 2020-03-31 12:57:55 -0400
Branch: REL_12_STABLE [ee40e8975] 2020-03-31 12:57:55 -0400
Branch: REL_11_STABLE [5b22ff764] 2020-03-31 12:57:55 -0400
Branch: REL_10_STABLE [83f7761d8] 2020-03-31 12:57:55 -0400
-->
     <para>
      Ignore file-not-found errors in <function>pg_ls_waldir()</function>
      and allied functions (Tom Lane)
     </para>

     <para>
      This prevents a race condition failure if a file is removed between
      when we see its directory entry and when we attempt
      to <function>stat()</function> it.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [085b6b667] 2020-03-11 15:27:59 -0400
Branch: REL_12_STABLE [3c8864fc1] 2020-03-11 15:27:59 -0400
Branch: REL_11_STABLE [63b51dfec] 2020-03-11 15:27:59 -0400
Branch: REL_10_STABLE [05283dd5b] 2020-03-11 15:28:00 -0400
Branch: master [a029a0641] 2020-03-11 18:24:11 -0400
Branch: REL_12_STABLE [630590d6f] 2020-03-11 18:24:13 -0400
Branch: REL_11_STABLE [13f353b0e] 2020-03-11 18:24:14 -0400
Branch: REL_10_STABLE [064e029e6] 2020-03-11 18:24:15 -0400
Branch: master [b4570d33a] 2020-03-16 21:05:52 -0400
Branch: REL_12_STABLE [2a89455aa] 2020-03-16 21:05:53 -0400
Branch: REL_11_STABLE [819d55257] 2020-03-16 21:05:54 -0400
Branch: REL_10_STABLE [5e4a0b719] 2020-03-16 21:05:55 -0400
Branch: REL9_6_STABLE [cd6a05187] 2020-03-16 21:05:56 -0400
Branch: REL9_5_STABLE [da254148f] 2020-03-16 21:05:29 -0400
-->
     <para>
      Avoid possibly leaking an open-file descriptor for a directory
      in <function>pg_ls_dir()</function>,
      <function>pg_timezone_names()</function>,
      <function>pg_tablespace_databases()</function>, and allied functions
      (Justin Pryzby)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4dbcb3f84] 2020-03-14 14:42:22 -0400
Branch: REL_12_STABLE [390984f92] 2020-03-14 14:42:22 -0400
Branch: REL_11_STABLE [540ef37cc] 2020-03-14 14:42:22 -0400
Branch: REL_10_STABLE [61d14971d] 2020-03-14 14:42:22 -0400
Branch: REL9_6_STABLE [30e491653] 2020-03-14 14:42:22 -0400
Branch: REL9_5_STABLE [a1ef0f373] 2020-03-14 14:42:22 -0400
-->
     <para>
      Fix polymorphic-function type resolution to correctly infer the
      actual type of an <type>anyarray</type> output when given only
      an <type>anyrange</type> input (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Stephen Frost <sfrost@snowman.net>
Branch: master [b68a560f8] 2020-05-02 11:39:26 -0400
Branch: REL_12_STABLE [79e594cf0] 2020-05-02 11:39:32 -0400
-->
     <para>
      Fix server's connection-startup logic for case where a GSSAPI
      connection is rejected because support is not compiled in, and the
      client then tries SSL instead (Andrew Gierth)
     </para>

     <para>
      This led to a bogus <quote>unsupported frontend protocol</quote>
      failure.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [46da7bf67] 2020-05-05 13:10:17 -0400
Branch: REL_12_STABLE [987717d7c] 2020-05-05 13:10:09 -0400
-->
     <para>
      Fix memory leakage during GSSAPI encryption (Tom Lane)
     </para>

     <para>
      Both the backend and libpq would leak memory equivalent to the total
      amount of data sent during the session, if GSSAPI encryption is in use.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [299298bc8] 2020-04-22 19:53:06 -0700
Branch: REL_12_STABLE [95695c784] 2020-04-22 19:55:53 -0700
-->
     <para>
      Fix query-lifespan memory leak for a set-returning function used in
      a query's <literal>FROM</literal> clause (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [58c47ccff] 2020-02-29 13:48:09 -0500
Branch: REL_12_STABLE [96d783ae5] 2020-02-29 13:48:10 -0500
Branch: REL_11_STABLE [9eb6b652a] 2020-02-29 13:48:10 -0500
-->
     <para>
      Avoid leakage of a hashed subplan's hash tables across multiple
      executions (Andreas Karlsson, Tom Lane)
     </para>

     <para>
      This mistake could result in severe memory bloat if a query
      re-executed a hashed subplan enough times.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a477bfc1d] 2020-02-26 18:14:12 -0500
Branch: REL_12_STABLE [30d5c6bf2] 2020-02-26 18:14:13 -0500
-->
     <para>
      Improve planner's handling of no-op domain coercions (Tom Lane)
     </para>

     <para>
      Fix some cases where a domain coercion that does nothing was not
      completely removed from expressions.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d12bdba77] 2020-04-21 15:58:42 -0400
Branch: REL_12_STABLE [5a4efd100] 2020-04-21 15:58:42 -0400
Branch: REL_11_STABLE [56259c377] 2020-04-21 15:58:42 -0400
Branch: REL_10_STABLE [e6c17c85a] 2020-04-21 15:58:42 -0400
Branch: REL9_6_STABLE [5c1c27eef] 2020-04-21 15:58:43 -0400
Branch: REL9_5_STABLE [36714f8ca] 2020-04-21 15:58:43 -0400
-->
     <para>
      Avoid unlikely crash when <command>REINDEX</command> is terminated
      by a session-shutdown signal (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5c27bce7f] 2020-04-11 12:29:06 -0400
Branch: REL_12_STABLE [8ffb86644] 2020-04-11 12:29:06 -0400
Branch: REL_11_STABLE [f3d06e524] 2020-04-11 12:29:06 -0400
Branch: REL_10_STABLE [1e6bb6125] 2020-04-11 12:29:06 -0400
Branch: REL9_6_STABLE [242ca479f] 2020-04-11 12:29:06 -0400
Branch: REL9_5_STABLE [30ce86367] 2020-04-11 12:29:06 -0400
-->
     <para>
      Prevent printout of possibly-incorrect hash join table statistics
      in <command>EXPLAIN</command> (Konstantin Knizhnik, Tom Lane, Thomas
      Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [007491979] 2020-02-19 20:37:26 +0900
Branch: REL_12_STABLE [16e6c968b] 2020-02-19 20:38:38 +0900
Branch: REL_11_STABLE [414ed1ca2] 2020-02-19 20:39:02 +0900
Branch: REL_10_STABLE [79f344d52] 2020-02-19 20:39:37 +0900
Branch: REL9_6_STABLE [307c27037] 2020-02-19 20:40:38 +0900
Branch: REL9_5_STABLE [4a3f164b7] 2020-02-19 20:43:59 +0900
-->
     <para>
      Fix reporting of elapsed time for heap truncation steps
      in <command>VACUUM VERBOSE</command> (Tatsuhito Kasahara)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [73a076b03] 2020-05-01 09:51:09 -0700
Branch: REL_12_STABLE [40708eaaf] 2020-05-01 09:51:08 -0700
Branch: REL_11_STABLE [d3944c364] 2020-05-01 09:51:06 -0700
-->
     <para>
      Fix possible undercounting of deleted B-tree index pages
      in <command>VACUUM VERBOSE</command> output (Peter Geoghegan)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [b0229f26d] 2020-05-01 08:39:52 -0700
Branch: REL_12_STABLE [05b73261c] 2020-05-01 08:39:51 -0700
Branch: REL_11_STABLE [e4fa6c929] 2020-05-01 08:39:49 -0700
Branch: master [69cf853fe] 2020-05-01 12:19:44 -0700
Branch: REL_12_STABLE [e1477db92] 2020-05-01 12:19:42 -0700
Branch: REL_11_STABLE [573478564] 2020-05-01 12:19:39 -0700
-->
     <para>
      Fix wrong bookkeeping for oldest deleted page in a B-tree index
      (Peter Geoghegan)
     </para>

     <para>
      This could cause subtly wrong decisions about
      when <command>VACUUM</command> can skip an index cleanup scan;
      although it appears there may be no significant user-visible effects
      from that.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [f2ff20359] 2020-05-08 10:36:40 +0900
Branch: REL_12_STABLE [a354d0153] 2020-05-08 10:38:01 +0900
Branch: REL_11_STABLE [cc534fc3b] 2020-05-08 10:38:45 +0900
Branch: REL_10_STABLE [3a48740e8] 2020-05-08 10:39:08 +0900
-->
     <para>
      Ensure that TimelineHistoryRead and TimelineHistoryWrite wait states
      are reported in all code paths that read or write timeline history
      files (Masahiro Ikeda)
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [17d3fcdc3] 2020-03-10 00:14:43 +0900
Branch: REL_12_STABLE [82c04e483] 2020-03-10 00:15:25 +0900
Branch: REL_11_STABLE [e54183cb0] 2020-03-10 00:16:48 +0900
Branch: REL_10_STABLE [e9c4eaacd] 2020-03-10 00:18:24 +0900
Branch: REL9_6_STABLE [d1b414e7e] 2020-03-10 00:19:57 +0900
Branch: REL9_5_STABLE [c9a47b81e] 2020-03-10 00:23:22 +0900
-->
     <para>
      Avoid possibly showing <quote>waiting</quote> twice in a process's
      PS status (Masahiko Sawada)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fe3036527] 2020-03-31 17:06:22 -0400
Branch: REL_12_STABLE [6c426cd43] 2020-03-31 17:06:22 -0400
-->
     <para>
      Avoid race condition when <command>ANALYZE</command> replaces the
      catalog tuple for extended statistics data (Dean Rasheed)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [dd9ac7d5d] 2020-03-31 08:27:47 +0900
Branch: REL_12_STABLE [3ec8576a0] 2020-03-31 08:27:54 +0900
-->
     <para>
      Remove ill-considered skip of <quote>redundant</quote>
      anti-wraparound vacuums (Michael Paquier)
     </para>

     <para>
      This avoids a corner case where autovacuum could get into a loop of
      repeatedly trying and then skipping the same vacuum job.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [4b42a8993] 2020-03-30 12:03:59 -0700
Branch: REL_12_STABLE [97cda93d8] 2020-03-30 12:03:57 -0700
-->
     <para>
      Ensure INCLUDE'd columns are always removed from B-tree pivot tuples
      (Peter Geoghegan)
     </para>

     <para>
      This mistake wasted space in some rare cases, but was otherwise
      harmless.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [61d7c7bce] 2020-03-10 15:38:17 +0900
Branch: REL_12_STABLE [8bca5f935] 2020-03-10 15:38:34 +0900
-->
     <para>
      Cope with invalid TOAST indexes that could be left over after a
      failed <command>REINDEX CONCURRENTLY</command> (Julien Rouhaud)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [fbcf08711] 2020-03-05 12:50:15 +0900
Branch: REL_12_STABLE [26876127b] 2020-03-05 12:50:23 +0900
-->
     <para>
      Ensure that valid index dependencies are left behind after a
      failed <command>REINDEX CONCURRENTLY</command> (Michael Paquier)
     </para>

     <para>
      Previously the old index could be left with
      no <structname>pg_depend</structname> links at all, so that for
      example it would not get dropped if the parent table is dropped.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [80d76be51] 2020-02-28 20:28:34 -0500
Branch: REL_12_STABLE [d7684c38a] 2020-02-28 20:28:34 -0500
Branch: REL_11_STABLE [7ea20a2bc] 2020-02-28 20:28:34 -0500
-->
     <para>
      Avoid failure if autovacuum tries to access a just-dropped temporary
      schema (Tom Lane)
     </para>

     <para>
      This hazard only arises if a superuser manually drops a temporary
      schema; which isn't normal practice, but should work.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [4e87c4836] 2020-04-24 08:48:28 +0900
Branch: REL_12_STABLE [22db5269b] 2020-04-24 08:48:35 +0900
Branch: REL_11_STABLE [2d24ca00b] 2020-04-24 08:48:40 +0900
Branch: REL_10_STABLE [02657c421] 2020-04-24 08:48:45 +0900
Branch: REL9_6_STABLE [c2d8ae0df] 2020-04-24 08:48:51 +0900
Branch: REL9_5_STABLE [9eff11653] 2020-04-24 08:48:55 +0900
Branch: master [f9c1b8dba] 2020-04-24 11:33:41 +0900
Branch: REL_12_STABLE [26057550d] 2020-04-24 11:33:58 +0900
Branch: REL_11_STABLE [0d04e9d76] 2020-04-24 11:34:03 +0900
Branch: REL_10_STABLE [3d9cae5ad] 2020-04-24 11:34:06 +0900
Branch: REL9_6_STABLE [11f004699] 2020-04-24 11:34:11 +0900
Branch: REL9_5_STABLE [a4726998d] 2020-04-24 11:34:16 +0900
-->
     <para>
      Avoid premature recycling of WAL segments during crash recovery
      (Jehan-Guillaume de Rorthais)
     </para>

     <para>
      WAL segments that become ready to be archived during crash recovery
      were potentially recycled without being archived.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [4bd0ad9e4] 2020-04-08 00:49:29 +0900
Branch: REL_12_STABLE [683e0ef55] 2020-05-09 12:00:27 +0900
Branch: REL_11_STABLE [dcd1569fb] 2020-05-09 12:04:51 +0900
Branch: REL_10_STABLE [660f1fc40] 2020-05-09 12:11:11 +0900
Branch: REL9_6_STABLE [70b597974] 2020-05-09 12:16:37 +0900
Branch: REL9_5_STABLE [e3f5b148e] 2020-05-09 12:19:47 +0900
-->
     <para>
      Avoid scanning irrelevant timelines during archive recovery (Kyotaro
      Horiguchi)
     </para>

     <para>
      This can eliminate many attempts to fetch non-existent WAL files from
      archive storage, which is helpful if archive access is slow.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [e3ff789ac] 2020-02-19 08:15:49 +0530
Branch: REL_12_STABLE [59112f235] 2020-02-19 08:27:15 +0530
Branch: REL_11_STABLE [bff456d7a] 2020-02-19 08:35:16 +0530
Branch: REL_10_STABLE [b448aa441] 2020-02-19 08:44:16 +0530
Branch: REL9_6_STABLE [59c1a03f0] 2020-02-19 08:52:08 +0530
Branch: REL9_5_STABLE [05555f7aa] 2020-02-19 08:59:18 +0530
-->
     <para>
      Remove bogus <quote>subtransaction logged without previous top-level
      txn record</quote> error check in logical decoding (Arseny Sher,
      Amit Kapila)
     </para>

     <para>
      This condition is legitimately reachable in various scenarios, so
      remove the check.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [bcd1c3630] 2020-03-17 16:13:18 -0300
Branch: REL_12_STABLE [e58e13e84] 2020-03-17 16:13:18 -0300
-->
     <para>
      Avoid possible failure after a replication slot copy, due to
      premature removal of WAL data (Masahiko Sawada, Arseny Sher)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [49bf81536] 2020-03-26 13:29:20 +0100
Branch: REL_12_STABLE [223e9c77d] 2020-03-26 13:31:07 +0100
Branch: REL_11_STABLE [ba4cc05ce] 2020-03-26 13:51:07 +0100
Branch: REL_10_STABLE [f36a10434] 2020-03-26 13:51:22 +0100
Branch: REL9_6_STABLE [2d8597ba6] 2020-03-26 14:01:56 +0100
Branch: REL9_5_STABLE [ce28a43ff] 2020-03-26 14:08:15 +0100
Branch: master [a9d9bdd3a] 2020-04-05 10:02:00 +0200
Branch: REL_12_STABLE [d278d4e1a] 2020-04-05 10:03:04 +0200
Branch: REL_11_STABLE [250041a56] 2020-04-05 10:03:41 +0200
Branch: REL_10_STABLE [038c9bbe9] 2020-04-05 10:04:13 +0200
Branch: REL9_6_STABLE [3dcaea4b0] 2020-04-05 10:04:26 +0200
Branch: REL9_5_STABLE [72b2b9c52] 2020-04-05 10:05:18 +0200
-->
     <para>
      Ensure that a replication
      slot's <literal>io_in_progress_lock</literal> is released in failure
      code paths (Pavan Deolasee)
     </para>

     <para>
      This could result in a walsender later becoming stuck waiting for
      the lock.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [ad3ae6477] 2020-02-17 15:20:57 +0100
Branch: REL_12_STABLE [4a97f647d] 2020-02-17 15:21:12 +0100
-->
     <para>
      Ensure that generated columns are correctly handled during updates
      issued by logical replication (Peter Eisentraut)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f332241a6] 2020-04-18 14:02:44 -0400
Branch: REL_12_STABLE [00ef5d52c] 2020-04-18 14:02:44 -0400
Branch: REL_11_STABLE [b3fa6d016] 2020-04-18 14:02:44 -0400
Branch: REL_10_STABLE [63ecdaf75] 2020-04-18 14:02:44 -0400
Branch: REL9_6_STABLE [c65c1aa82] 2020-04-18 14:02:45 -0400
-->
     <para>
      Fix race conditions in synchronous standby management (Tom Lane)
     </para>

     <para>
      During a change in the <varname>synchronous_standby_names</varname>
      setting, there was a window in which wrong decisions could be made
      about whether it is OK to release transactions that are waiting for
      synchronous commit.  Another hazard for similarly wrong decisions
      existed if a walsender process exited and was immediately replaced
      by another.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [b4f140869] 2020-03-18 09:27:14 +0530
Branch: REL_12_STABLE [e37824136] 2020-03-18 09:33:01 +0530
Branch: REL_11_STABLE [18c41cb6b] 2020-03-18 09:37:08 +0530
Branch: REL_10_STABLE [569f9354b] 2020-03-18 09:46:52 +0530
Branch: REL9_6_STABLE [fe27ce1c1] 2020-03-18 10:08:56 +0530
Branch: REL9_5_STABLE [6bdfe428d] 2020-03-18 10:10:27 +0530
-->
     <para>
      Add missing SQLSTATE values to a few error reports (Sawada Masahiko)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [761a5688b] 2020-02-19 14:45:17 -0500
Branch: REL_12_STABLE [32aa14d40] 2020-02-19 14:44:58 -0500
Branch: REL_11_STABLE [612d207bc] 2020-02-19 14:44:58 -0500
Branch: REL_10_STABLE [6af63cf8c] 2020-02-19 14:44:58 -0500
Branch: REL9_6_STABLE [3e5308969] 2020-02-19 14:44:58 -0500
Branch: REL9_5_STABLE [bbefb1154] 2020-02-19 14:44:58 -0500
-->
     <para>
      Fix PL/pgSQL to reliably refuse to execute an event trigger function
      as a plain function (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [27dbe1a18] 2020-04-22 07:27:03 +0900
Branch: REL_12_STABLE [e1c08722a] 2020-04-22 07:27:45 +0900
Branch: REL_11_STABLE [35d08658d] 2020-04-22 07:27:49 +0900
Branch: REL_10_STABLE [1bb0293d8] 2020-04-22 07:27:53 +0900
Branch: REL9_6_STABLE [c9c15790d] 2020-04-22 07:28:00 +0900
Branch: REL9_5_STABLE [e5e295d50] 2020-04-22 07:28:04 +0900
-->
     <para>
      Fix memory leak in <application>libpq</application> when
      using <literal>sslmode=verify-full</literal> (Roman Peshkurov)
     </para>

     <para>
      Certificate verification during connection startup could leak some
      memory.  This would become an issue if a client process opened many
      database connections during its lifetime.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [980a70b97] 2020-03-23 11:58:00 -0400
Branch: REL_12_STABLE [036fdf6be] 2020-03-23 11:58:01 -0400
Branch: REL_11_STABLE [aae7e8530] 2020-03-23 11:58:01 -0400
Branch: REL_10_STABLE [ef7d6d79a] 2020-03-23 11:58:01 -0400
Branch: REL9_6_STABLE [c0eb57dd9] 2020-03-23 11:58:01 -0400
Branch: REL9_5_STABLE [5f9eace5d] 2020-03-23 11:58:01 -0400
-->
     <para>
      Fix <application>ecpg</application> to treat an argument of
      just <quote><literal>-</literal></quote> as meaning <quote>read
      from stdin</quote> on all platforms (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [8d84dd001] 2020-04-01 14:45:45 +0900
Branch: REL_12_STABLE [f79bea4b6] 2020-04-01 14:45:57 +0900
-->
     <para>
      Fix crash in <application>psql</application> when attempting to
      re-establish a failed connection (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Bruce Momjian <bruce@momjian.us>
Branch: master [08481eedd] 2020-03-31 23:01:34 -0400
Branch: REL_12_STABLE [6a50f1af4] 2020-03-31 23:01:33 -0400
Branch: REL_11_STABLE [7054e12e0] 2020-03-31 23:01:33 -0400
Branch: REL_10_STABLE [a936012d6] 2020-03-31 23:01:33 -0400
-->
     <para>
      Allow tab-completion of the filename argument
      to <application>psql</application>'s <command>\gx</command> command
      (Vik Fearing)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [b08dee24a] 2020-03-11 16:54:54 -0300
Branch: REL_12_STABLE [f977e6dec] 2020-03-11 16:54:54 -0300
Branch: REL_11_STABLE [e70187c9b] 2020-03-11 16:54:54 -0300
Branch: REL_10_STABLE [d04e342ba] 2020-03-11 16:54:54 -0300
Branch: REL9_6_STABLE [2b9d70159] 2020-03-11 16:54:54 -0300
Branch: master [046001fe3] 2020-03-16 16:27:13 -0300
Branch: REL_12_STABLE [cf72898c6] 2020-03-16 16:27:13 -0300
Branch: REL_11_STABLE [55978e28c] 2020-03-16 16:27:13 -0300
Branch: REL_10_STABLE [c6b75b3f1] 2020-03-16 16:27:13 -0300
Branch: REL9_6_STABLE [7984c7e9f] 2020-03-16 16:27:13 -0300
Branch: master [899a04f5e] 2020-03-11 11:04:59 -0300
Branch: REL_12_STABLE [b7739ebec] 2020-03-11 11:04:59 -0300
Branch: REL_11_STABLE [7c094a11c] 2020-03-11 11:04:59 -0300
Branch: REL_10_STABLE [3dfd2d6cd] 2020-03-11 11:04:59 -0300
Branch: REL9_6_STABLE [73b31e784] 2020-03-11 11:04:59 -0300
-->
     <para>
      Add <application>pg_dump</application> support for <command>ALTER
      ... DEPENDS ON EXTENSION</command> (&Aacute;lvaro Herrera)
     </para>

     <para>
      <application>pg_dump</application> previously ignored dependencies added
      this way, causing them to be forgotten during dump/restore or
      <application>pg_upgrade</application>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f31364676] 2020-02-17 18:40:02 -0500
Branch: REL_12_STABLE [6da7d3630] 2020-02-17 18:40:02 -0500
Branch: REL_11_STABLE [bd2cd138f] 2020-02-17 18:40:02 -0500
Branch: REL_10_STABLE [f9d7bb68d] 2020-02-17 18:40:02 -0500
Branch: REL9_6_STABLE [3380b9931] 2020-02-17 18:40:02 -0500
Branch: REL9_5_STABLE [d9ec8d1d7] 2020-02-17 18:40:02 -0500
-->
     <para>
      Fix <application>pg_dump</application> to dump comments on RLS
      policy objects (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8728b2c70] 2020-03-09 14:58:26 -0400
Branch: REL_12_STABLE [4c40b27b5] 2020-03-09 14:58:11 -0400
Branch: REL_11_STABLE [f5d49f226] 2020-03-09 14:58:11 -0400
Branch: REL_10_STABLE [475b061c8] 2020-03-09 14:58:11 -0400
Branch: REL9_6_STABLE [fab545635] 2020-03-09 14:58:11 -0400
Branch: REL9_5_STABLE [0b0247644] 2020-03-09 14:58:11 -0400
Branch: master [a9d70c108] 2020-04-08 11:23:39 -0400
Branch: REL_12_STABLE [983ed99a6] 2020-04-08 11:23:39 -0400
Branch: REL_11_STABLE [d050c6113] 2020-04-08 11:23:39 -0400
Branch: REL_10_STABLE [830471e0d] 2020-04-08 11:23:39 -0400
Branch: REL9_6_STABLE [778066052] 2020-04-08 11:23:40 -0400
Branch: REL9_5_STABLE [564c1e6d7] 2020-04-08 11:23:40 -0400
-->
     <para>
      In <application>pg_dump</application>, postpone restore of event
      triggers till the end (Fabr&iacute;zio de Royes Mello, Hamid Akhtar,
      Tom Lane)
     </para>

     <para>
      This minimizes the risk that an event trigger could interfere with
      the restoration of other objects.
     </para>
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master [0278d3f79] 2020-04-27 13:04:35 -0400
Branch: REL_12_STABLE [a08bfe742] 2020-04-27 14:00:36 -0400
-->
     <para>
      Ensure that <application>pg_basebackup</application> generates valid
      tar files (Robert Haas)
     </para>

     <para>
      In some cases a partial block of zeroes would be added to the end of
      the file.  While this seems to be harmless with common versions of
      tar, it's not OK per the POSIX file format spec.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [428a2609e] 2020-02-27 15:31:27 +0900
Branch: REL_12_STABLE [f6e8e8b38] 2020-02-27 15:31:48 +0900
Branch: REL_11_STABLE [8f9aba187] 2020-02-27 15:31:52 +0900
-->
     <para>
      Make <application>pg_checksums</application> skip tablespace
      subdirectories that belong to a
      different <productname>PostgreSQL</productname> major version
      (Michael Banck, Bernd Helmle)
     </para>

     <para>
      Such subdirectories don't really belong to our database cluster, and
      so must not be processed.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [bf883b211] 2020-02-24 18:13:25 +0900
Branch: REL_12_STABLE [a8beece95] 2020-02-24 18:14:16 +0900
Branch: REL_11_STABLE [da2a7180a] 2020-02-24 18:14:22 +0900
-->
     <para>
      Ignore temporary copies of <filename>pg_internal.init</filename>
      in <application>pg_checksums</application> and related
      programs (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [008cf0409] 2020-02-27 11:20:46 +0900
Branch: REL_12_STABLE [943affb3d] 2020-02-27 11:21:00 +0900
Branch: REL_11_STABLE [83bd732eb] 2020-02-27 11:21:07 +0900
Branch: REL_10_STABLE [240c7c75f] 2020-02-27 11:21:14 +0900
Branch: REL9_6_STABLE [3340034f2] 2020-02-27 11:21:23 +0900
Branch: REL9_5_STABLE [49300e4cf] 2020-02-27 11:21:28 +0900
Branch: master [c4b0edb07] 2020-02-27 21:58:37 +0900
Branch: REL_12_STABLE [aeb846edb] 2020-02-27 21:58:45 +0900
Branch: REL_11_STABLE [8e076f4f9] 2020-02-27 21:58:50 +0900
-->
     <para>
      Fix quoting of <option>--encoding</option>, <option>--lc-ctype</option>
      and <option>--lc-collate</option> values
      in <application>createdb</application> utility (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6dd9f3577] 2020-04-03 11:24:56 -0400
Branch: REL_12_STABLE [d56657c35] 2020-04-03 11:24:56 -0400
Branch: REL_11_STABLE [7b1552283] 2020-04-03 11:24:56 -0400
Branch: REL_10_STABLE [85f0d4703] 2020-04-03 11:24:56 -0400
Branch: REL9_6_STABLE [a9f821f48] 2020-04-03 11:24:56 -0400
Branch: REL9_5_STABLE [82bc56e63] 2020-04-03 11:24:56 -0400
-->
     <para>
      <filename>contrib/lo</filename>'s <function>lo_manage()</function>
      function crashed if called directly rather than as a trigger (Tom
      Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [95f7ddfda] 2020-03-28 17:09:51 -0400
Branch: REL_12_STABLE [2bb6bdbe5] 2020-03-28 17:09:51 -0400
Branch: REL_11_STABLE [5feb3d0b3] 2020-03-28 17:09:51 -0400
Branch: REL_10_STABLE [2618ac6c6] 2020-03-28 17:09:51 -0400
Branch: REL9_6_STABLE [39491aa0d] 2020-03-28 17:09:51 -0400
Branch: REL9_5_STABLE [8e1e630d0] 2020-03-28 17:09:52 -0400
-->
     <para>
      In <filename>contrib/ltree</filename>,
      protect against overflow of <type>ltree</type>
      and <type>lquery</type> length fields (Nikita Glukhov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: REL_12_STABLE [393b449f1] 2020-03-11 14:15:02 -0700
Branch: REL_11_STABLE [c788115b5] 2020-03-11 14:15:00 -0700
-->
     <para>
      Work around failure in <filename>contrib/pageinspect</filename>'s
      <function>bt_metap()</function> function when an oldest_xact value
      exceeds 2^31-1 (Peter Geoghegan)
     </para>

     <para>
      Such XIDs will now be reported as negative integers, which isn't
      great but it beats throwing an error.  v13 will widen the output
      argument to <type>int8</type> to provide saner reporting.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fc576b7c4] 2020-04-16 14:45:54 -0400
Branch: REL_12_STABLE [687e566b9] 2020-04-16 14:45:54 -0400
Branch: REL_11_STABLE [cc2737ab0] 2020-04-16 14:45:54 -0400
Branch: REL_10_STABLE [f4a420056] 2020-04-16 14:45:54 -0400
Branch: REL9_6_STABLE [3cdf2421a] 2020-04-16 14:45:54 -0400
Branch: REL9_5_STABLE [46b1b6379] 2020-04-16 14:45:54 -0400
-->
     <para>
      Fix cache reference leak in <filename>contrib/sepgsql</filename>
      (Michael Luo)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e02ea141e] 2020-02-16 12:20:18 -0500
Branch: REL_12_STABLE [de5e03f7f] 2020-02-16 12:20:18 -0500
-->
     <para>
      On Windows, avoid premature creation of postmaster's log file
      during <literal>pg_ctl start</literal> (Alexander Lakhin)
     </para>

     <para>
      The previous coding could allow the file to be created with
      permissions that wouldn't allow the postmaster to write on it.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8c49454ca] 2020-03-30 11:14:58 -0400
Branch: REL_12_STABLE [de5b9db36] 2020-03-30 11:14:58 -0400
Branch: REL_11_STABLE [4bc3a1667] 2020-03-30 11:14:58 -0400
Branch: REL_10_STABLE [d59e83cf5] 2020-03-30 11:14:58 -0400
Branch: REL9_6_STABLE [f15f5edee] 2020-03-30 11:14:58 -0400
Branch: REL9_5_STABLE [6dac1e858] 2020-03-30 11:14:58 -0400
-->
     <para>
      Avoid failures when dealing with Unix-style locale names on
      Windows (Juan Jos&eacute; Santamar&iacute;a Flecha)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [3b77dce86] 2020-03-02 15:45:34 +0900
Branch: REL_12_STABLE [3b5709e66] 2020-03-02 15:46:24 +0900
-->
     <para>
      On Windows, set console VT100 compatibility mode in
      programs that support <varname>PG_COLOR</varname> colorization
      (Juan Jos&eacute; Santamar&iacute;a Flecha)
     </para>

     <para>
      Without this, the colorization option doesn't actually work.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e3a87b499] 2020-03-24 11:49:00 -0400
Branch: REL_12_STABLE [a86715451] 2020-03-24 11:48:33 -0400
-->
     <para>
      Stop requiring extra parentheses in <function>ereport()</function>
      calls (Andres Freund, Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0bc8cebdb] 2020-03-17 12:09:26 -0400
Branch: REL_12_STABLE [d8e7f8149] 2020-03-17 12:09:26 -0400
Branch: REL_11_STABLE [9af2f7dc9] 2020-03-17 12:09:27 -0400
Branch: REL_10_STABLE [d67d7243f] 2020-03-17 12:09:27 -0400
-->
     <para>
      Use <application>pkg-config</application>, if available, to
      locate <application>libxml2</application>
      during <application>configure</application> (Hugh McMaster, Tom
      Lane, Peter Eisentraut)
     </para>

     <para>
      If <application>pkg-config</application> is not present or lacks
      knowledge of <application>libxml2</application>, we still
      query <application>xml2-config</application> as before.
     </para>

     <para>
      This change could break build processes that try to
      make <productname>PostgreSQL</productname> use a non-default version
      of <application>libxml2</application> by putting that
      version's <application>xml2-config</application> into
      the <varname>PATH</varname>.  Instead,
      set <varname>XML2_CONFIG</varname> to point to the
      non-default <application>xml2-config</application>.  That method
      will work with either older or
      newer <productname>PostgreSQL</productname> releases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Bruce Momjian <bruce@momjian.us>
Branch: master [051fd5e0f] 2020-03-31 14:17:32 -0400
Branch: REL_12_STABLE [297a174d2] 2020-03-31 14:17:32 -0400
-->
     <para>
      Fix Makefile dependencies for <application>libpq</application>
      and <application>ecpg</application> (Dagfinn Ilmari Mannsåker)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [beb2516e9] 2020-05-06 21:08:15 +0900
Branch: REL_12_STABLE [8c0939dad] 2020-05-06 21:08:22 +0900
Branch: REL_11_STABLE [984aca448] 2020-05-06 21:08:26 +0900
Branch: REL_10_STABLE [307ed98b0] 2020-05-06 21:08:31 +0900
Branch: REL9_6_STABLE [e07fdc126] 2020-05-06 21:08:38 +0900
Branch: REL9_5_STABLE [ad53d6efe] 2020-05-06 21:08:42 +0900
-->
     <para>
      In MSVC builds, cope with spaces in the path name for Python
      (Victor Wagner)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [a9659fb65] 2020-04-17 14:44:33 -0400
Branch: REL_12_STABLE [6b02bee66] 2020-04-17 14:52:42 -0400
Branch: REL_11_STABLE [758814224] 2020-04-17 14:53:56 -0400
Branch: REL_10_STABLE [ddac64f2d] 2020-04-17 14:55:55 -0400
Branch: REL9_6_STABLE [4c9239d08] 2020-04-17 14:56:56 -0400
Branch: REL9_5_STABLE [3ca17999f] 2020-04-17 14:57:15 -0400
-->
     <para>
      In MSVC builds, fix detection of Visual Studio version to work with
      more language settings (Andrew Dunstan)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [71c2fd0c0] 2020-03-20 13:55:15 -0400
Branch: REL_12_STABLE [d0747714e] 2020-03-20 14:02:05 -0400
Branch: REL_11_STABLE [e8a6391fc] 2020-03-20 14:02:15 -0400
Branch: REL_10_STABLE [3163349fd] 2020-03-20 14:02:43 -0400
Branch: REL9_6_STABLE [80370836f] 2020-03-20 14:03:13 -0400
Branch: REL9_5_STABLE [467b40832] 2020-03-20 14:03:31 -0400
-->
     <para>
      In MSVC builds, use <literal>-Wno-deprecated</literal> with bison
      versions newer than 3.0, as non-Windows builds already do (Andrew
      Dunstan)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4cac3a49e] 2020-04-24 10:54:47 -0400
Branch: REL_12_STABLE [c820692bd] 2020-04-24 10:55:00 -0400
Branch: REL_11_STABLE [eb335bc62] 2020-04-24 10:55:05 -0400
Branch: REL_10_STABLE [898921a18] 2020-04-24 10:55:10 -0400
Branch: REL9_6_STABLE [66be99742] 2020-04-24 10:55:17 -0400
Branch: REL9_5_STABLE [39006ae7a] 2020-04-24 10:55:23 -0400
Branch: master [6c5f91616] 2020-04-24 17:53:23 -0400
Branch: REL_12_STABLE [1e07e3fc0] 2020-04-24 17:53:23 -0400
Branch: REL_11_STABLE [b31f9fd63] 2020-04-24 17:53:23 -0400
Branch: REL_10_STABLE [40d4bc5ac] 2020-04-24 17:53:23 -0400
Branch: REL9_6_STABLE [f65f3a5d8] 2020-04-24 17:53:23 -0400
Branch: REL9_5_STABLE [3cdb45c54] 2020-04-24 17:53:23 -0400
Branch: master [bd8c5cee9] 2020-04-24 17:21:44 -0400
Branch: REL_12_STABLE [a2342c658] 2020-04-24 17:21:44 -0400
Branch: REL_11_STABLE [99c9ed224] 2020-04-24 17:21:44 -0400
Branch: REL_10_STABLE [4985b3b84] 2020-04-24 17:21:44 -0400
Branch: REL9_6_STABLE [351252904] 2020-04-24 17:21:44 -0400
Branch: REL9_5_STABLE [3f3ab184c] 2020-04-24 17:21:44 -0400
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2020a for DST law changes in Morocco and the Canadian Yukon,
      plus historical corrections for Shanghai.
     </para>

     <para>
      The America/Godthab zone has been renamed to America/Nuuk to reflect
      current English usage; however, the old name remains available as a
      compatibility link.
     </para>

     <para>
      Also, update <application>initdb</application>'s list of known
      Windows time zone names to include recent additions, improving the
      odds that it will correctly translate the system time zone setting
      on that platform.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-12-2">
  <title>Release 12.2</title>

  <formalpara>
  <title>Release date:</title>
  <para>2020-02-13</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 12.1.
   For information about new features in major release 12, see
   <xref linkend="release-12"/>.
  </para>

  <sect2>
   <title>Migration to Version 12.2</title>

   <para>
    A dump/restore is not required for those running 12.X.
   </para>

   <para>
    However, if you have any foreign key constraints referencing
    partitioned tables, see the two entries below about bugs in that
    feature.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [b048f558d] 2020-02-10 11:47:09 -0300
Branch: REL_12_STABLE [2ad125322] 2020-02-10 11:47:09 -0300
Branch: REL_11_STABLE [bdd19e48a] 2020-02-10 11:47:09 -0300
Branch: REL_10_STABLE [ac1a998ed] 2020-02-10 11:47:09 -0300
Branch: REL9_6_STABLE [e8b8eb937] 2020-02-10 12:06:25 -0300
-->
     <para>
      Add missing permissions checks for <command>ALTER ... DEPENDS ON
      EXTENSION</command> (&Aacute;lvaro Herrera)
     </para>

     <para>
      Marking an object as dependent on an extension did not have any
      privilege check whatsoever.  This oversight allowed any user to mark
      routines, triggers, materialized views, or indexes as droppable by
      anyone able to drop an extension.  Require that the calling user own
      the specified object (and hence have privilege to drop it).
      (CVE-2020-1720)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [9710d3d4a] 2020-02-07 17:09:36 -0300
Branch: REL_12_STABLE [ce054a8cd] 2020-02-07 17:09:36 -0300
-->
     <para>
      Fix <command>TRUNCATE ... CASCADE</command> to ensure all relevant
      partitions are truncated (Jehan-Guillaume de Rorthais)
     </para>

     <para>
      If a partition of a partitioned table is truncated with
      the <literal>CASCADE</literal> option, and the partitioned table has
      a foreign-key reference from another table, that table must also be
      truncated.  The need to check this was missed if the referencing
      table was itself partitioned, possibly allowing rows to survive that
      violate the foreign-key constraint.
     </para>

     <para>
      Hence, if you have foreign key constraints between partitioned
      tables, and you have done any
      partition-level <command>TRUNCATE</command> on the referenced table,
      you should check to see if any foreign key violations exist.  The
      simplest way is to add a new instance of the foreign key constraint
      (and, once that succeeds, drop it or the original constraint).
      That may be prohibitive from a locking standpoint, however, in which
      case you might prefer to manually query for unmatched rows.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [55173d2e6] 2020-02-07 18:27:18 -0300
Branch: REL_12_STABLE [2c80a656c] 2020-02-07 18:27:18 -0300
-->
     <para>
      Fix failure to attach foreign key constraints to sub-partitions
      (Jehan-Guillaume de Rorthais)
     </para>

     <para>
      When adding a partition to a level below the first level of a
      multi-level partitioned table, foreign key constraints referencing
      the top partitioned table were not cloned to the new partition,
      leading to possible constraint violations later.  Detaching and
      re-attaching the new partition is the cheapest way to fix this.
      However, if there are many partitions to be fixed, adding a new
      instance of the foreign key constraint might be preferable.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [01d9676a5] 2020-01-28 17:26:37 -0500
Branch: REL_12_STABLE [87fed2a19] 2020-01-28 17:26:37 -0500
-->
     <para>
      Fix possible crash during concurrent update on a partitioned table
      or inheritance tree (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [1fa846f1c] 2020-01-02 17:04:24 -0300
Branch: REL_12_STABLE [d73214839] 2020-01-02 17:04:24 -0300
Branch: REL_11_STABLE [adc9cb6f2] 2020-01-02 17:04:24 -0300
-->
     <para>
      Ensure that row triggers on partitioned tables are correctly
      cloned to sub-partitions when appropriate
      (&Aacute;lvaro Herrera)
     </para>

     <para>
      User-defined triggers (but not triggers for foreign key or deferred
      unique constraints) might be missed when creating or attaching a
      partition.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [b9c130a1f] 2020-01-06 08:40:00 +0100
Branch: REL_12_STABLE [8c2bfd9f9] 2020-01-06 10:43:55 +0100
Branch: REL_11_STABLE [7474393e0] 2020-01-06 11:38:24 +0100
Branch: REL_10_STABLE [66fd0adc7] 2020-01-06 11:38:33 +0100
-->
     <para>
      Fix logical replication subscriber code to execute
      per-column <literal>UPDATE</literal> triggers when appropriate
      (Peter Eisentraut)
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [d20703805] 2020-01-02 11:41:04 +0530
Branch: REL_12_STABLE [f8a6d8e71] 2020-01-02 11:53:53 +0530
Branch: REL_11_STABLE [3e3a79735] 2020-01-02 12:04:13 +0530
Branch: REL_10_STABLE [27b5f48c7] 2020-01-02 12:11:55 +0530
Branch: REL9_6_STABLE [ba5b4e506] 2020-01-02 11:29:50 +0530
Branch: REL9_5_STABLE [a6f4f407a] 2020-01-02 12:28:02 +0530
Branch: REL9_4_STABLE [1ad47e875] 2020-01-02 12:38:29 +0530
Branch: master [ed7bb5c31] 2020-01-14 07:53:50 +0530
Branch: REL_12_STABLE [fa1eaebfa] 2020-01-14 08:05:05 +0530
Branch: REL_11_STABLE [17869eca7] 2020-01-14 08:12:12 +0530
Branch: REL_10_STABLE [f9e95252a] 2020-01-14 08:20:11 +0530
-->
     <para>
      Avoid failure in logical decoding when a large transaction must be
      spilled into many separate temporary files (Amit Khandekar)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4d9ceb001] 2019-11-22 11:31:19 -0500
Branch: REL_12_STABLE [a2aa224e0] 2019-11-22 11:31:19 -0500
Branch: REL_11_STABLE [b72a44c51] 2019-11-22 11:31:19 -0500
Branch: REL_10_STABLE [5d3fcb53a] 2019-11-22 11:31:19 -0500
-->
     <para>
      Fix possible crash or data corruption when a logical replication
      subscriber processes a row update (Tom Lane, Tomas Vondra)
     </para>

     <para>
      This bug caused visible problems only if the subscriber's table
      contained columns that were not being copied from the publisher and
      had pass-by-reference data types.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [04c8a69c0] 2019-12-18 07:49:18 +0530
Branch: REL_12_STABLE [c74111d8b] 2019-12-18 07:57:01 +0530
Branch: REL_11_STABLE [046830164] 2019-12-18 08:16:31 +0530
Branch: REL_10_STABLE [d6eca4958] 2019-12-18 08:27:41 +0530
-->
     <para>
      Fix crash in logical replication subscriber after DDL changes on a
      subscribed relation (Jehan-Guillaume de Rorthais, Vignesh C)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [15cac3a52] 2020-01-17 18:00:39 -0300
Branch: REL_12_STABLE [bc2140627] 2020-01-17 18:00:39 -0300
Branch: REL_11_STABLE [fe955ebee] 2020-01-17 18:00:39 -0300
Branch: REL_10_STABLE [e3154aae3] 2020-01-17 18:00:39 -0300
Branch: REL9_6_STABLE [cdb14154b] 2020-01-17 18:00:39 -0300
Branch: REL9_5_STABLE [58997ace5] 2020-01-17 18:00:39 -0300
Branch: REL9_4_STABLE [20a1dc1e3] 2020-01-17 18:00:39 -0300
-->
     <para>
      Fix failure in logical replication publisher after a database crash
      and restart (Vignesh C)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [b0afdcad2] 2020-01-30 11:14:02 +0900
Branch: REL_12_STABLE [3228512b7] 2020-01-30 11:15:28 +0900
Branch: REL_11_STABLE [374464c3e] 2020-01-30 11:15:35 +0900
Branch: master [7ca8c9706] 2020-01-31 13:57:56 +0900
Branch: REL_12_STABLE [706ad6a4d] 2020-01-31 13:58:05 +0900
Branch: REL_11_STABLE [8b29c75f6] 2020-01-31 13:58:11 +0900
-->
     <para>
      Ensure that the effect
      of <function>pg_replication_slot_advance()</function> on a physical
      replication slot will persist across restarts (Alexey Kondratov,
      Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [1c7a0b387] 2020-02-03 18:59:12 -0300
Branch: REL_12_STABLE [42e3187a8] 2020-02-03 18:59:12 -0300
Branch: REL_11_STABLE [beefab654] 2020-02-03 18:59:12 -0300
Branch: REL_10_STABLE [380bc8829] 2020-02-03 18:59:12 -0300
-->
     <para>
      Improve efficiency of logical replication with <literal>REPLICA
      IDENTITY FULL</literal> (Konstantin Knizhnik)
     </para>

     <para>
      When searching for an existing tuple during an update or delete
      operation, return the first matching tuple not the last one.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [259bbe177] 2020-01-13 13:41:12 +0100
Branch: REL_12_STABLE [bf65f3c88] 2020-01-13 13:41:09 +0100
-->
     <para>
      Fix base backup to handle database OIDs larger
      than <literal>INT32_MAX</literal> (Peter Eisentraut)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [76cbfcdf3] 2019-11-16 10:11:30 +1300
Branch: REL_12_STABLE [24897e1a1] 2019-11-16 10:18:45 +1300
Branch: REL_11_STABLE [bc049d0d4] 2019-11-16 10:19:16 +1300
-->
     <para>
      Ensure parallel plans are always shut down at the correct time
      (Kyotaro Horiguchi)
     </para>

     <para>
      This oversight is known to result in <quote>temporary file
      leak</quote> warnings from multi-batch parallel hash joins.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [080313f82] 2019-11-26 08:30:24 +0530
Branch: REL_12_STABLE [1cc3a90c7] 2019-11-26 08:55:06 +0530
Branch: REL_11_STABLE [d0ccfa9d6] 2019-11-26 09:07:35 +0530
Branch: REL_10_STABLE [f7ae68aac] 2019-11-26 09:23:45 +0530
Branch: REL9_6_STABLE [1ad0df67c] 2019-11-26 09:41:41 +0530
-->
     <para>
      Prevent premature shutdown of a Gather or GatherMerge plan node that
      is underneath a Limit node (Amit Kapila)
     </para>

     <para>
      This avoids failure if such a plan node needs to be scanned more
      than once, as for instance if it is on the inside of a nestloop.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [3e4818e9d] 2020-01-27 15:07:03 +1300
Branch: REL_12_STABLE [f9d0be241] 2020-01-27 14:11:24 +1300
Branch: REL_11_STABLE [6a9fc75d0] 2020-01-27 14:12:18 +1300
-->
     <para>
      Improve efficiency of parallel hash join on CPUs with many cores
      (Gang Deng, Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [74618e77b] 2020-01-31 10:25:34 +1300
Branch: REL_12_STABLE [1fcf62e0b] 2020-01-31 10:27:53 +1300
Branch: REL_11_STABLE [2c56b3ac4] 2020-01-31 11:12:21 +1300
Branch: master [d9fe702a2] 2020-02-05 12:27:00 +1300
Branch: REL_12_STABLE [2e2351bd6] 2020-02-05 12:28:33 +1300
Branch: REL_11_STABLE [c4a2041a4] 2020-02-05 12:30:06 +1300
-->
     <para>
      Avoid crash in parallel <command>CREATE INDEX</command> when there
      are no free dynamic shared memory slots (Thomas Munro)
     </para>

     <para>
      Fall back to a non-parallel index build, instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [93745f1e0] 2020-02-01 14:29:13 +1300
Branch: REL_12_STABLE [24dd34af1] 2020-02-01 14:49:57 +1300
Branch: REL_11_STABLE [600387f5d] 2020-02-01 22:57:46 +1300
Branch: REL_10_STABLE [aab30cd4e] 2020-02-01 14:54:48 +1300
Branch: REL9_6_STABLE [93be45245] 2020-02-01 14:57:40 +1300
Branch: REL9_5_STABLE [a5f45c3dd] 2020-02-01 14:59:58 +1300
Branch: REL9_4_STABLE [95936c795] 2020-02-01 15:10:20 +1300
-->
     <para>
      Avoid memory leak when there are no free dynamic shared memory slots
      (Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a904abe2e] 2020-01-22 09:49:18 +0900
Branch: REL_12_STABLE [817a1b88a] 2020-01-22 09:49:24 +0900
Branch: REL_11_STABLE [5b4b07fa9] 2020-01-22 09:49:28 +0900
Branch: REL_10_STABLE [9055344b4] 2020-01-22 09:49:33 +0900
Branch: REL9_6_STABLE [ef33edeb5] 2020-01-22 09:49:39 +0900
Branch: REL9_5_STABLE [c39f45598] 2020-01-22 09:49:44 +0900
Branch: REL9_4_STABLE [d76652edc] 2020-01-22 09:49:48 +0900
-->
     <para>
      Ignore the <literal>CONCURRENTLY</literal> option when performing an
      index creation, drop, or rebuild on a temporary table (Michael
      Paquier, Heikki Linnakangas, Andres Freund)
     </para>

     <para>
      This avoids strange failures if the temporary table has
      an <literal>ON COMMIT</literal> action.  There is no benefit in
      using <literal>CONCURRENTLY</literal> for a temporary table anyway,
      since other sessions cannot access the table, making the extra
      processing pointless.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c35b714ca] 2019-12-01 13:09:26 -0500
Branch: REL_12_STABLE [b154d70f7] 2019-12-01 13:09:26 -0500
Branch: REL_11_STABLE [768a401e2] 2019-12-01 13:09:26 -0500
Branch: REL_10_STABLE [25c7183c0] 2019-12-01 13:09:27 -0500
Branch: REL9_6_STABLE [283f095d0] 2019-12-01 13:09:27 -0500
Branch: REL9_5_STABLE [cfffa8a6b] 2019-12-01 13:09:27 -0500
Branch: REL9_4_STABLE [0c84e992c] 2019-12-01 13:09:27 -0500
-->
     <para>
      Fix possible failure when resetting expression indexes on temporary
      tables that are marked <literal>ON COMMIT DELETE ROWS</literal>
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [4c8701098] 2020-01-20 10:36:35 +0200
Branch: REL_12_STABLE [fd436bba0] 2020-01-20 10:36:45 +0200
Branch: REL_11_STABLE [da7abcf0f] 2020-01-20 10:36:47 +0200
Branch: REL_10_STABLE [ff0c567cb] 2020-01-20 10:36:50 +0200
Branch: REL9_6_STABLE [e96f30d89] 2020-01-20 10:36:52 +0200
Branch: REL9_5_STABLE [98f0d2837] 2020-01-20 10:36:55 +0200
-->
     <para>
      Fix possible crash in BRIN index operations
      with <type>box</type>, <type>range</type> and <type>inet</type> data
      types (Heikki Linnakangas)
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [a7ee7c851] 2019-12-13 23:58:10 +0200
Branch: REL_12_STABLE [70c4f500e] 2019-12-13 23:59:00 +0200
Branch: master [741b88435] 2019-12-16 13:57:41 +0200
Branch: REL_12_STABLE [42d1acd2e] 2019-12-16 13:58:07 +0200
-->
     <para>
      Fix crash during recursive page split in GiST index build (Heikki
      Linnakangas)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [b10714080] 2019-11-20 00:12:33 +0300
Branch: REL_12_STABLE [a64e7e05a] 2019-11-20 00:17:58 +0300
Branch: REL_11_STABLE [7d467dee0] 2019-11-20 00:18:02 +0300
Branch: master [e14641197] 2019-11-20 00:04:09 +0300
Branch: REL_12_STABLE [051c50c01] 2019-11-20 00:04:53 +0300
Branch: REL_11_STABLE [9f2927989] 2019-11-20 00:05:12 +0300
Branch: REL_10_STABLE [21ad61ab3] 2019-11-20 00:05:35 +0300
Branch: master [d5ad7a09a] 2019-11-20 00:04:22 +0300
Branch: REL_12_STABLE [ee437ca74] 2019-11-20 00:05:01 +0300
Branch: REL_11_STABLE [c0bf35421] 2019-11-20 00:05:21 +0300
Branch: REL_10_STABLE [ab64b474d] 2019-11-20 00:05:42 +0300
Branch: REL9_6_STABLE [99f5888d3] 2019-11-19 23:47:29 +0300
Branch: REL9_5_STABLE [4fc485684] 2019-11-20 00:01:55 +0300
Branch: REL9_4_STABLE [1414821e1] 2019-11-20 00:03:04 +0300
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4093ff573] 2020-02-09 12:02:57 -0500
Branch: REL_12_STABLE [baf487123] 2020-02-09 12:02:57 -0500
Branch: REL_11_STABLE [f91706b00] 2020-02-09 12:02:57 -0500
-->
     <para>
      Fix handling of deleted pages in GIN indexes (Alexander Korotkov)
     </para>

     <para>
      Avoid possible deadlocks, incorrect updates of a deleted page's
      state, and failure to traverse through a recently-deleted page.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [41c6f9db2] 2020-01-17 16:17:31 -0500
Branch: REL_12_STABLE [2e2646060] 2020-01-17 16:17:32 -0500
Branch: REL_11_STABLE [d8e877b86] 2020-01-17 16:17:33 -0500
Branch: REL_10_STABLE [167fd022f] 2020-01-17 16:17:35 -0500
Branch: REL9_6_STABLE [45f03cfa5] 2020-01-17 16:17:36 -0500
Branch: REL9_5_STABLE [396472278] 2020-01-17 16:17:37 -0500
Branch: REL9_4_STABLE [eb9d1f050] 2020-01-17 16:17:39 -0500
-->
     <para>
      Fix possible crash with a SubPlan (sub-<literal>SELECT</literal>)
      within a multi-row <literal>VALUES</literal> list (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4ac8aaa36] 2020-01-08 09:42:53 -0500
Branch: REL_12_STABLE [c24f3b70e] 2020-01-08 09:42:53 -0500
-->
     <para>
      Fix failure in <command>ALTER TABLE</command> when a column
      referenced in a <literal>GENERATED</literal> expression has been
      added or changed in type earlier in the
      same <command>ALTER</command> command (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [bf6cc19e3] 2020-02-05 20:21:20 +0000
Branch: REL_12_STABLE [0e37489ed] 2020-02-05 20:08:11 +0000
Branch: REL_11_STABLE [d8f1c03a4] 2020-02-05 20:15:13 +0000
-->
     <para>
      Fix failure to insert default values for <quote>missing</quote>
      attributes during tuple conversion (Vik Fearing, Andrew Gierth)
     </para>

     <para>
      This could result in values incorrectly reading as NULL, when
      they come from columns that had been added by <literal>ALTER
      TABLE ADD COLUMN</literal> with a constant default.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [7bb3102ce] 2019-12-14 16:32:03 +1300
Branch: REL_12_STABLE [c3dc0cdd6] 2019-12-14 16:34:21 +1300
Branch: master [7c85be08a] 2019-12-14 18:35:58 +1300
Branch: REL_12_STABLE [fd005e1a8] 2019-12-14 19:03:44 +1300
-->
     <para>
      Fix unlikely panic in the checkpointer process, caused by opening
      relation segments that might already have been removed (Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [38fc05607] 2020-01-10 18:31:22 -0800
Branch: REL_12_STABLE [93078e63f] 2020-01-10 18:31:25 -0800
Branch: REL_11_STABLE [2e86e154d] 2020-01-10 18:31:26 -0800
Branch: REL_10_STABLE [cb9774245] 2020-01-10 18:31:26 -0800
-->
     <para>
      Fix crash after FileClose() failure (Noah Misch)
     </para>

     <para>
      This issue could only be observed
      with <varname>data_sync_retry</varname> enabled, since otherwise
      FileClose() failure would be reported as a PANIC.
     </para>
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: master [5a20b0219] 2019-12-10 18:00:30 +0900
Branch: REL_12_STABLE [547e454cb] 2019-12-10 18:00:31 +0900
-->
     <para>
      Fix handling of multiple <literal>AFTER ROW</literal> triggers on a
      foreign table (Etsuro Fujita)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [affdde2e1] 2020-01-20 23:26:51 -0800
Branch: REL_12_STABLE [21fdfd0e8] 2020-01-20 23:29:35 -0800
Branch: REL_11_STABLE [c8e0e560e] 2020-01-20 23:29:38 -0800
Branch: REL_10_STABLE [8bb006a41] 2020-01-20 23:30:47 -0800
Branch: REL9_6_STABLE [d4c339924] 2020-01-20 23:31:48 -0800
Branch: REL9_5_STABLE [f651976d9] 2020-01-20 23:31:52 -0800
Branch: REL9_4_STABLE [ba1dfbe22] 2020-01-20 23:32:21 -0800
-->
     <para>
      Fix unlikely crash with pass-by-reference aggregate transition
      states (Andres Freund, Teodor Sigaev)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4c70098ff] 2020-01-23 13:42:09 -0500
Branch: REL_12_STABLE [be13f227f] 2020-01-23 13:42:10 -0500
Branch: REL_11_STABLE [fb12aefaa] 2020-01-23 13:42:10 -0500
Branch: REL_10_STABLE [212b870d6] 2020-01-23 13:42:10 -0500
Branch: REL9_6_STABLE [9e24575f6] 2020-01-23 13:42:10 -0500
Branch: REL9_5_STABLE [a576f2a8f] 2020-01-23 13:42:10 -0500
Branch: REL9_4_STABLE [600b953d7] 2020-01-23 13:42:10 -0500
Branch: master [9a3a75cb8] 2020-01-23 16:15:32 -0500
Branch: REL_12_STABLE [f309c812e] 2020-01-23 16:15:32 -0500
Branch: REL_11_STABLE [7a9fef299] 2020-01-23 16:15:32 -0500
Branch: REL_10_STABLE [d6a9548b2] 2020-01-23 16:15:32 -0500
Branch: REL9_6_STABLE [451f50813] 2020-01-23 16:15:32 -0500
Branch: REL9_5_STABLE [0e63d9641] 2020-01-23 16:15:32 -0500
Branch: REL9_4_STABLE [8fc33e6cc] 2020-01-23 16:15:32 -0500
-->
     <para>
      Improve error reporting in <function>to_date()</function>
      and <function>to_timestamp()</function>
      (Tom Lane, &Aacute;lvaro Herrera)
     </para>

     <para>
      Reports about incorrect month or day names in input strings could
      truncate the input in the middle of a multi-byte character, leading
      to an improperly encoded error message that could cause follow-on
      failures.  Truncate at the next whitespace instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1a3efa1eb] 2019-12-12 12:30:43 -0500
Branch: REL_12_STABLE [07c4b6ac7] 2019-12-12 12:30:44 -0500
Branch: REL_11_STABLE [332584da9] 2019-12-12 12:30:44 -0500
Branch: REL_10_STABLE [c965c42a5] 2019-12-12 12:30:44 -0500
Branch: REL9_6_STABLE [6e2ac8d66] 2019-12-12 12:30:44 -0500
Branch: REL9_5_STABLE [323c47925] 2019-12-12 12:30:44 -0500
Branch: REL9_4_STABLE [6aa126311] 2019-12-12 12:30:44 -0500
-->
     <para>
      Fix off-by-one result for <literal>EXTRACT(ISOYEAR
      FROM <replaceable>timestamp</replaceable>)</literal> for BC dates
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d57d61533] 2019-11-13 15:53:53 -0500
Branch: REL_12_STABLE [5a6eea092] 2019-11-13 15:53:53 -0500
-->
     <para>
      Ensure that the <literal>&lt;&gt;</literal> operator for
      type <type>char</type> reports indeterminate-collation errors as
      such, rather than as <quote>cache lookup failed for collation
      0</quote> (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [cb5b28613] 2020-02-07 22:06:31 +0900
Branch: REL_12_STABLE [598b466e8] 2020-02-07 22:07:44 +0900
Branch: REL_12_STABLE [4faea7fdf] 2020-02-08 12:29:38 +0900
-->
     <para>
      Avoid treating TID scans as sequential scans (Tatsuhito Kasahara)
     </para>

     <para>
      A refactoring oversight caused TID scans (selection by CTID) to be
      counted as sequential scans in the statistics views, and to take
      whole-table predicate locks as sequential scans do.  The latter
      behavior could cause unnecessary serialization errors in
      serializable transaction mode.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4a0aab14d] 2019-11-21 16:21:43 -0500
Branch: REL_12_STABLE [5186f7625] 2019-11-21 16:21:43 -0500
Branch: REL_11_STABLE [669138ebd] 2019-11-21 16:21:44 -0500
Branch: REL_10_STABLE [b9f3d7a53] 2019-11-21 16:21:44 -0500
Branch: REL9_6_STABLE [52434ba73] 2019-11-21 16:21:44 -0500
Branch: REL9_5_STABLE [bcd541897] 2019-11-21 16:21:44 -0500
Branch: REL9_4_STABLE [f09829017] 2019-11-21 16:21:44 -0500
-->
     <para>
      Avoid stack overflow in <literal>information_schema</literal> views
      when a self-referential view exists in the system catalogs
      (Tom Lane)
     </para>

     <para>
      A self-referential view can't work; it will always result in
      infinite recursion.  We handled that situation correctly when
      trying to execute the view, but not when inquiring whether it is
      automatically updatable.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [b175bd59f] 2020-01-07 17:38:48 -0300
Branch: REL_12_STABLE [fce9ba819] 2020-01-07 17:38:48 -0300
Branch: REL_11_STABLE [896db774e] 2020-01-07 17:38:48 -0300
Branch: REL_10_STABLE [8de3b68fa] 2020-01-07 17:55:21 -0300
Branch: master [f5d28710c] 2020-01-08 14:33:49 -0300
Branch: REL_12_STABLE [20c4df8c8] 2020-01-08 14:33:49 -0300
Branch: REL_11_STABLE [af43581e8] 2020-01-08 14:33:49 -0300
Branch: REL_10_STABLE [da42b9f3f] 2020-01-08 14:33:49 -0300
-->
     <para>
      Ensure that walsender processes always show NULL for transaction
      start time in <structname>pg_stat_activity</structname>
      (&Aacute;lvaro Herrera)
     </para>

     <para>
      Previously, the <structfield>xact_start</structfield> column would
      sometimes show the process start time.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [e69d64454] 2019-12-24 13:05:43 +1300
Branch: REL_12_STABLE [8052aaf52] 2019-12-24 13:07:54 +1300
Branch: REL_11_STABLE [9e551a14c] 2019-12-24 13:09:56 +1300
Branch: REL_10_STABLE [8e89bc6df] 2019-12-24 13:11:13 +1300
Branch: REL9_6_STABLE [15861deb6] 2019-12-24 13:12:50 +1300
Branch: REL9_5_STABLE [893eaf0be] 2019-12-24 13:13:13 +1300
Branch: REL9_4_STABLE [5c0a132cf] 2019-12-24 13:13:30 +1300
-->
     <para>
      Improve performance of hash joins with very large inner relations
      (Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e369f3708] 2020-01-06 16:42:20 -0500
Branch: REL_12_STABLE [b89845267] 2020-01-06 16:42:20 -0500
-->
     <para>
      Reduce spinlock contention when there are many active walsender
      processes (Pierre Ducroquet)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7d91b604d] 2020-02-04 13:07:13 -0500
Branch: REL_12_STABLE [9a85860e1] 2020-02-04 13:07:13 -0500
Branch: REL_11_STABLE [842a23efa] 2020-02-04 13:07:13 -0500
-->
     <para>
      Fix placement of <quote>Subplans Removed</quote> field
      in <command>EXPLAIN</command> output (Daniel Gustafsson, Tom Lane)
     </para>

     <para>
      In non-text output formats, this field was emitted inside
      the <quote>Plans</quote> sub-group, resulting in syntactically
      invalid output.  Attach it to the parent Append or MergeAppend plan
      node as intended.  This causes the field to change position in text
      output format too: if there are any InitPlans attached to the same
      plan node, <quote>Subplans Removed</quote> will now appear before
      those.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3ec20c709] 2020-01-26 16:32:19 -0500
Branch: REL_12_STABLE [bad494380] 2020-01-26 16:31:48 -0500
-->
     <para>
      Fix <command>EXPLAIN</command>'s <literal>SETTINGS</literal> option
      to print as empty in non-text output formats (Tom Lane)
     </para>

     <para>
      In the non-text output formats, fields are supposed to appear when
      requested, even if they have empty or zero values.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [553d2ec27] 2019-11-26 14:41:48 -0500
Branch: REL_12_STABLE [21a4edd12] 2019-11-26 14:41:48 -0500
Branch: REL_11_STABLE [1d9056f56] 2019-11-26 14:41:48 -0500
-->
     <para>
      Allow the planner to apply potentially-leaky tests to child-table
      statistics, if the user can read the corresponding column of the
      table that's actually named in the query (Dilip Kumar, Amit Langote)
     </para>

     <para>
      This change fixes a performance problem for partitioned tables that
      was created by the fix for CVE-2017-7484.  That security fix
      disallowed applying leaky operators to statistics for columns that
      the current user doesn't have permission to read directly.  However,
      it's somewhat common to grant permissions only on the parent
      partitioned table and not bother to do so on individual partitions.
      In such cases, the user can read the column via the parent, so
      there's no point in this security restriction; it only results in
      poorer planner estimates than necessary.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6ea364e7e] 2019-12-14 13:49:15 -0500
Branch: REL_12_STABLE [d04e2553d] 2019-12-14 13:49:15 -0500
-->
     <para>
      Fix planner errors induced by overly-aggressive collapsing of joins
      to single-row subqueries (Tom Lane)
     </para>

     <para>
      This mistake led to errors such as <quote>failed to construct the
      join relation</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b3c265d7b] 2019-11-19 17:03:34 -0500
Branch: REL_12_STABLE [bffe18e3e] 2019-11-19 17:03:35 -0500
-->
     <para>
      Fix <quote>no = operator for
      opfamily <replaceable>NNNN</replaceable></quote> planner error when
      trying to match a <literal>LIKE</literal> or regex pattern-match
      operator to a binary-compatible index opclass (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [652686a33] 2020-01-12 14:36:59 -0500
Branch: REL_12_STABLE [70c17a812] 2020-01-12 14:37:00 -0500
Branch: REL_11_STABLE [5832be6ca] 2020-01-12 14:37:00 -0500
Branch: REL_10_STABLE [8c8b456b5] 2020-01-12 14:37:00 -0500
Branch: REL9_6_STABLE [2dd10477c] 2020-01-12 14:37:00 -0500
Branch: REL9_5_STABLE [784c58da1] 2020-01-12 14:37:00 -0500
Branch: REL9_4_STABLE [6bd567b65] 2020-01-12 14:37:00 -0500
-->
     <para>
      Fix edge-case crashes and misestimations in selectivity calculations
      for the <literal>&lt;@</literal> and <literal>@&gt;</literal> range
      operators (Michael Paquier, Andrey Borodin, Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [c676e659b] 2019-11-28 22:20:45 +0100
Branch: REL_12_STABLE [ef3fed2ce] 2019-11-28 22:26:25 +0100
Branch: master [6d61c3f1c] 2019-11-28 23:25:14 +0100
Branch: REL_12_STABLE [79d6e6afa] 2019-11-28 23:28:53 +0100
-->
     <para>
      Fix incorrect estimation for <literal>OR</literal> clauses when
      using most-common-value extended statistics (Tomas Vondra)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [d482f7f86] 2019-11-16 01:17:15 +0100
Branch: REL_12_STABLE [28555a53c] 2019-11-16 01:25:14 +0100
Branch: REL_11_STABLE [25a9ff6ca] 2019-11-16 01:58:38 +0100
Branch: REL_10_STABLE [0b0f281cc] 2019-11-16 01:42:20 +0100
-->
     <para>
      Ignore system columns when applying most-common-value
      extended statistics (Tomas Vondra)
     </para>

     <para>
      This prevents <quote>negative bitmapset member not allowed</quote>
      planner errors for affected queries.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [168d20640] 2019-11-21 10:23:28 +0900
Branch: REL_12_STABLE [c644407f7] 2019-11-21 10:23:38 +0900
Branch: REL_11_STABLE [62074a343] 2019-11-21 10:23:43 +0900
Branch: REL_10_STABLE [f4095026c] 2019-11-21 10:23:49 +0900
-->
     <para>
      Fix BRIN index logic to support hypothetical BRIN indexes
      (Julien Rouhaud, Heikki Linnakangas)
     </para>

     <para>
      Previously, if an <quote>index adviser</quote> extension tried to
      get the planner to produce a plan involving a hypothetical BRIN
      index, that would fail, because the BRIN cost estimation code would
      always try to physically access the index's metapage.  Now it checks
      to see if the index is only hypothetical, and uses default
      assumptions about the index parameters if so.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [d751ba523] 2020-01-14 09:52:21 +0000
Branch: REL_12_STABLE [fd5476b79] 2020-01-14 09:51:28 +0000
Branch: REL_11_STABLE [9bdb1f0e3] 2020-01-14 09:50:51 +0000
Branch: REL_10_STABLE [353cd826f] 2020-01-14 09:50:13 +0000
Branch: REL9_6_STABLE [fd87262de] 2020-01-14 09:49:23 +0000
Branch: REL9_5_STABLE [bb09a9414] 2020-01-14 09:48:44 +0000
Branch: REL9_4_STABLE [9be6fcb3e] 2020-01-14 09:47:44 +0000
-->
     <para>
      Improve error reporting for attempts to use automatic updating of
      views with conditional <literal>INSTEAD</literal> rules (Dean Rasheed)
     </para>

     <para>
      This has never been supported, but previously the error was thrown
      only at execution time, so that it could be masked by planner errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fc7695891] 2019-12-23 12:08:23 -0500
Branch: REL_12_STABLE [976cb11f6] 2019-12-23 12:08:23 -0500
Branch: REL_11_STABLE [31dfa40a8] 2019-12-23 12:08:24 -0500
Branch: REL_10_STABLE [4af2531d0] 2019-12-23 12:08:24 -0500
Branch: REL9_6_STABLE [354d913f9] 2019-12-23 12:08:24 -0500
Branch: REL9_5_STABLE [6609c3ad9] 2019-12-23 12:08:24 -0500
Branch: REL9_4_STABLE [0d245d13c] 2019-12-23 12:08:24 -0500
Branch: master [74b35eb46] 2020-01-31 17:03:55 -0500
Branch: REL_12_STABLE [65aa15513] 2020-01-31 17:03:55 -0500
Branch: REL_11_STABLE [25dc267a1] 2020-01-31 17:03:55 -0500
Branch: REL_10_STABLE [de3d2df75] 2020-01-31 17:03:55 -0500
Branch: REL9_6_STABLE [742c646c1] 2020-01-31 17:03:55 -0500
Branch: REL9_5_STABLE [59047b6d0] 2020-01-31 17:03:55 -0500
Branch: REL9_4_STABLE [f521ef0ae] 2020-01-31 17:03:55 -0500
-->
     <para>
      Prevent a composite type from being included in itself indirectly
      via a range type (Tom Lane, Julien Rouhaud)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [39ebb943d] 2019-12-23 12:53:12 -0500
Branch: REL_12_STABLE [7fbb39a96] 2019-12-23 12:53:13 -0500
Branch: REL_11_STABLE [281dd22ac] 2019-12-23 12:53:13 -0500
Branch: REL_10_STABLE [ea1205a02] 2019-12-23 12:53:13 -0500
-->
     <para>
      Disallow partition key expressions that return pseudo-types, such
      as <type>record</type> (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [2acab054b] 2019-12-17 17:44:27 -0500
Branch: REL_12_STABLE [97ba30fab] 2019-12-17 17:44:28 -0500
Branch: REL_11_STABLE [fc449abc3] 2019-12-17 17:44:28 -0500
Branch: REL_10_STABLE [5c5a268c6] 2019-12-17 17:44:28 -0500
Branch: REL9_6_STABLE [275a8ac4f] 2019-12-17 17:44:28 -0500
Branch: REL9_5_STABLE [da5dd4218] 2019-12-17 17:44:28 -0500
Branch: REL9_4_STABLE [298d056d9] 2019-12-17 17:44:28 -0500
-->
     <para>
      Fix error reporting for index expressions of prohibited types
      (Amit Langote)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [bf2efc55d] 2019-11-16 20:00:19 -0500
Branch: REL_12_STABLE [fcaf29d87] 2019-11-16 20:00:19 -0500
Branch: REL_11_STABLE [d898edf4f] 2019-11-16 20:00:19 -0500
Branch: REL_10_STABLE [a1b2cf095] 2019-11-16 20:00:19 -0500
Branch: REL9_6_STABLE [e4865bbdc] 2019-11-16 20:00:19 -0500
Branch: REL9_5_STABLE [ecb533af6] 2019-11-16 20:00:20 -0500
Branch: REL9_4_STABLE [65da6dd1d] 2019-11-16 20:00:20 -0500
-->
     <para>
      Fix dumping of views that contain only a <literal>VALUES</literal>
      list to handle cases where a view output column has been renamed
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [2c7b5dad6] 2019-11-13 12:11:49 -0500
Branch: REL_12_STABLE [eec569fac] 2019-11-13 12:11:49 -0500
Branch: REL_11_STABLE [94a9cb43f] 2019-11-13 12:11:49 -0500
Branch: REL_10_STABLE [e25c4b3b2] 2019-11-13 12:11:50 -0500
-->
     <para>
      Ensure that data types and collations used
      in <literal>XMLTABLE</literal> constructs are accounted for when
      computing dependencies of a view or rule (Tom Lane)
     </para>

     <para>
      Previously it was possible to break a view
      using <literal>XMLTABLE</literal> by dropping a type, if the type
      was not otherwise referenced in the view.  This fix does not
      correct the dependencies already recorded for existing views, only
      for newly-created ones.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7618eaf5f] 2019-11-13 13:41:04 -0500
Branch: REL_12_STABLE [d9802590a] 2019-11-13 13:41:04 -0500
Branch: REL_11_STABLE [d66e68207] 2019-11-13 13:41:04 -0500
Branch: REL_10_STABLE [4be69e2ea] 2019-11-13 13:41:04 -0500
-->
     <para>
      Prevent unwanted downcasing and truncation of RADIUS authentication
      parameters (Marcos David)
     </para>

     <para>
      The <filename>pg_hba.conf</filename> parser mistakenly treated these
      fields as SQL identifiers, which in general they aren't.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [790026972] 2019-11-24 14:42:59 -0500
Branch: REL_12_STABLE [c47f498c9] 2019-11-24 14:42:59 -0500
Branch: REL_11_STABLE [377d1b95b] 2019-11-24 14:42:59 -0500
Branch: REL_10_STABLE [dbe15524b] 2019-11-24 14:42:59 -0500
Branch: REL9_6_STABLE [111298aa6] 2019-11-24 14:42:59 -0500
-->
     <para>
      Transmit incoming <command>NOTIFY</command> messages to the client
      before sending <literal>ReadyForQuery</literal>, rather than after
      (Tom Lane)
     </para>

     <para>
      This change ensures that, with libpq and other client libraries that
      act similarly to it, any notifications received during a transaction
      will be available by the time the client thinks the transaction is
      complete.  This probably makes no difference in practical
      applications (which would need to cope with asynchronous
      notifications in any case); but it makes it easier to build test
      cases with reproducible behavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [2c0cdc818] 2020-01-11 17:14:08 -0500
Branch: REL_12_STABLE [fde155424] 2020-01-11 17:14:08 -0500
-->
     <para>
      Fix bugs in handling of non-blocking I/O when using GSSAPI
      encryption (Tom Lane)
     </para>

     <para>
      These errors could result in dropping data (usually leading to
      subsequent wire-protocol-violation errors) or in
      a <quote>livelock</quote> situation where a sending process goes to
      sleep although not all its data has been sent.
      Moreover, <application>libpq</application> failed to keep separate
      encryption state for each connection, creating the possibility for
      failures in applications using multiple encrypted database
      connections.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e60b480d3] 2019-12-20 15:34:07 -0500
Branch: REL_12_STABLE [e8f60e6fe] 2019-12-20 15:34:07 -0500
Branch: REL_11_STABLE [1a77ea02d] 2019-12-20 15:34:08 -0500
Branch: REL_10_STABLE [d09cfa3e2] 2019-12-20 15:34:08 -0500
Branch: REL9_6_STABLE [c11bd6c10] 2019-12-20 15:34:08 -0500
Branch: REL9_5_STABLE [5e22a1111] 2019-12-20 15:34:08 -0500
Branch: REL9_4_STABLE [875c7d70d] 2019-12-20 15:34:08 -0500
-->
     <para>
      Allow <application>libpq</application> to parse all GSS-related
      connection parameters even when the GSSAPI code hasn't been compiled
      in (Tom Lane)
     </para>

     <para>
      This makes the behavior similar to our SSL support, where it was
      long ago deemed to be a good idea to always accept all the related
      parameters, even if some are ignored or restricted due to lack of
      the feature in a particular build.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [3ff660bbe] 2019-11-30 14:51:27 +0100
Branch: REL_12_STABLE [0dafed6fe] 2019-11-30 15:04:02 +0100
Branch: REL_11_STABLE [9668bf5d5] 2019-11-30 15:05:31 +0100
Branch: REL_10_STABLE [f71b22f53] 2019-11-30 15:07:47 +0100
Branch: REL9_6_STABLE [c59414da7] 2019-11-30 15:10:14 +0100
Branch: REL9_5_STABLE [a17602de1] 2019-11-30 15:14:12 +0100
Branch: REL9_4_STABLE [d9b974e99] 2019-11-30 15:16:58 +0100
-->
     <para>
      Fix incorrect handling of <literal>%b</literal>
      and <literal>%B</literal> format codes
      in <application>ecpg</application>'s
      <function>PGTYPEStimestamp_fmt_asc()</function> function
      (Tomas Vondra)
     </para>

     <para>
      Due to an off-by-one error, these codes would print the wrong month
      name, or possibly crash.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [44f1fc8df] 2020-01-19 19:15:15 -0500
Branch: REL_12_STABLE [c7c2cc670] 2020-01-19 19:15:15 -0500
-->
     <para>
      Avoid crash after an out-of-memory failure
      in <application>ecpglib</application> (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [2425f8f71] 2020-01-31 14:41:49 -0500
Branch: REL_12_STABLE [0c84199f7] 2020-01-31 14:41:49 -0500
Branch: REL_11_STABLE [63634883f] 2020-01-31 14:41:49 -0500
Branch: REL_10_STABLE [8b1d447a7] 2020-01-31 14:41:49 -0500
Branch: REL9_6_STABLE [cb4c04a4e] 2020-01-31 14:41:49 -0500
Branch: REL9_5_STABLE [1b78759a6] 2020-01-31 14:41:49 -0500
Branch: REL9_4_STABLE [5d60df830] 2020-01-31 14:41:49 -0500
-->
     <para>
      Fix
      parallel <application>pg_dump</application>/<application>pg_restore</application>
      to more gracefully handle failure to create worker processes
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [cd23a2019] 2020-01-20 12:57:17 -0500
Branch: REL_12_STABLE [71b121f42] 2020-01-20 12:57:17 -0500
Branch: REL_11_STABLE [4ea5cf403] 2020-01-20 12:57:17 -0500
Branch: REL_10_STABLE [6f6daa1be] 2020-01-20 12:57:17 -0500
Branch: REL9_6_STABLE [208e262f9] 2020-01-20 12:57:17 -0500
Branch: REL9_5_STABLE [b1392a950] 2020-01-20 12:57:17 -0500
Branch: REL9_4_STABLE [42e538fe6] 2020-01-20 12:57:18 -0500
-->
     <para>
      Prevent possible crash or lockup when attempting to terminate a
      parallel <application>pg_dump</application>/<application>pg_restore</application>
      run via a signal (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [29aeda6e4] 2019-11-13 11:35:37 -0500
Branch: REL_12_STABLE [1cd57b05e] 2019-11-13 11:35:37 -0500
Branch: REL_11_STABLE [8e4ef3287] 2019-11-13 11:35:37 -0500
Branch: REL_10_STABLE [c443e3c43] 2019-11-13 11:35:37 -0500
Branch: REL9_6_STABLE [f378d4dac] 2019-11-13 11:35:37 -0500
Branch: REL9_5_STABLE [fb26754af] 2019-11-13 11:35:37 -0500
Branch: REL9_4_STABLE [56c06999d] 2019-11-13 11:35:37 -0500
-->
     <para>
      In <application>pg_upgrade</application>, look inside arrays and
      ranges while searching for non-upgradable data types in tables
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [8fa8e0115] 2020-02-10 12:14:58 -0300
Branch: REL_12_STABLE [87d014da9] 2020-02-10 12:14:58 -0300
Branch: REL_11_STABLE [ca902add6] 2020-02-10 12:14:58 -0300
Branch: REL_10_STABLE [163161723] 2020-02-10 12:14:58 -0300
Branch: REL9_6_STABLE [5575fc208] 2020-02-10 12:14:58 -0300
Branch: REL9_5_STABLE [1b2ae4bcd] 2020-02-10 12:16:40 -0300
Branch: REL9_4_STABLE [6f1e443a6] 2020-02-10 12:14:58 -0300
-->
     <para>
      Apply more thorough syntax checking
      to <application>createuser</application>'s
      <option>--connection-limit</option> option (&Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4ba4bfaf2] 2019-12-26 15:19:39 -0500
Branch: REL_12_STABLE [883c27a1c] 2019-12-26 15:19:39 -0500
Branch: REL_11_STABLE [ee206cb83] 2019-12-26 15:19:39 -0500
-->
     <para>
      Cope with changes of the specific type referenced by a PL/pgSQL
      composite-type variable in more cases (Ashutosh Sharma, Tom Lane)
     </para>

     <para>
      Dropping and re-creating the composite type referenced by a PL/pgSQL
      variable could lead to <quote>could not open relation with
      OID <replaceable>NNNN</replaceable></quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [215824f91] 2020-01-26 14:31:08 -0500
Branch: REL_12_STABLE [7294f99a0] 2020-01-26 14:31:08 -0500
Branch: REL_11_STABLE [5220ced0d] 2020-01-26 14:31:08 -0500
Branch: REL_10_STABLE [603e03b4c] 2020-01-26 14:31:08 -0500
Branch: REL9_6_STABLE [43a648f57] 2020-01-26 14:31:08 -0500
-->
     <para>
      Avoid crash in <filename>postgres_fdw</filename> when trying to
      send a command like <literal>UPDATE remote_tab SET (x,y) = (SELECT
      ...)</literal> to the remote server (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [b52739436] 2019-12-03 18:40:07 +0100
Branch: REL_12_STABLE [a8a8c6b29] 2019-12-03 18:40:48 +0100
Branch: REL_11_STABLE [267eb954c] 2019-12-03 18:41:29 +0100
Branch: REL_10_STABLE [46ce37b67] 2019-12-03 18:41:50 +0100
Branch: REL9_6_STABLE [fabdad822] 2019-12-03 18:42:25 +0100
Branch: REL9_5_STABLE [a2fdeb786] 2019-12-03 18:42:54 +0100
Branch: REL9_4_STABLE [44381b1af] 2019-12-03 18:43:15 +0100
-->
     <para>
      In <filename>contrib/dict_int</filename>,
      reject <varname>maxlen</varname> settings less than one
      (Tomas Vondra)
     </para>

     <para>
      This prevents a possible crash with silly settings for that parameter.
     </para>
    </listitem>

    <listitem>
<!--
Author: Joe Conway <mail@joeconway.com>
Branch: master [d5b9c2baf] 2019-12-23 13:33:25 -0500
Branch: REL_12_STABLE [b5e7569dd] 2019-12-23 13:33:34 -0500
Branch: REL_11_STABLE [f49e5efbc] 2019-12-23 13:33:42 -0500
Branch: REL_10_STABLE [81be0c57e] 2019-12-23 13:33:50 -0500
Branch: REL9_6_STABLE [3757c1640] 2019-12-23 13:33:57 -0500
Branch: REL9_5_STABLE [70fc6c4ef] 2019-12-23 13:34:05 -0500
Branch: REL9_4_STABLE [4a3cdb531] 2019-12-23 13:34:12 -0500
-->
     <para>
      Disallow NULL category values
      in <filename>contrib/tablefunc</filename>'s
      <function>crosstab()</function> function (Joe Conway)
     </para>

     <para>
      This case never worked usefully, and it would crash on some
      platforms.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [7d0bcb047] 2019-12-06 15:13:55 +0900
Branch: REL_12_STABLE [902276ff1] 2019-12-06 15:14:26 +0900
Branch: REL_11_STABLE [7ad544fd8] 2019-12-06 15:14:31 +0900
-->
     <para>
      Fix <application>configure</application>'s probe for
      OpenSSL's <function>SSL_clear_options()</function> function so that
      it works with OpenSSL versions before 1.1.0 (Michael Paquier, Daniel
      Gustafsson)
     </para>

     <para>
      This problem could lead to failure to set the SSL compression option
      as desired, when <productname>PostgreSQL</productname> is built against
      an old version of OpenSSL.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [62c9b5223] 2020-01-21 13:46:39 +0900
Branch: REL_12_STABLE [ef8e6b2c2] 2020-01-21 13:46:55 +0900
Branch: REL_11_STABLE [7c7026bb7] 2020-01-21 13:47:01 +0900
Branch: REL_10_STABLE [1ef7332b7] 2020-01-21 13:47:05 +0900
Branch: REL9_6_STABLE [9740cdbe5] 2020-01-21 13:47:10 +0900
Branch: REL9_5_STABLE [4a49149b9] 2020-01-21 13:47:13 +0900
Branch: REL9_4_STABLE [dbe405b78] 2020-01-21 13:47:17 +0900
-->
     <para>
      Mark some timeout and statistics-tracking GUC variables
      as <literal>PGDLLIMPORT</literal>, to allow extensions to access
      them on Windows (Pascal Legrand)
     </para>

     <para>
      This applies to
      <literal>idle_in_transaction_session_timeout</literal>,
      <literal>lock_timeout</literal>,
      <literal>statement_timeout</literal>,
      <literal>track_activities</literal>,
      <literal>track_counts</literal>, and
      <literal>track_functions</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [543852fd8] 2020-01-17 15:29:11 +0100
Branch: REL_12_STABLE [162c951df] 2020-01-17 15:30:51 +0100
Branch: REL_11_STABLE [8c37e4469] 2020-01-17 15:31:33 +0100
Branch: REL_10_STABLE [a801452c9] 2020-01-17 15:32:03 +0100
-->
     <para>
      Avoid memory leak in sanity checks for <quote>slab</quote> memory
      contexts (Tomas Vondra)
     </para>

     <para>
      This isn't an issue for production builds, since they wouldn't
      ordinarily have memory context checking enabled; but the leak could
      be quite severe in a debug build.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [3ccc66dac] 2020-02-06 14:43:21 +0900
Branch: REL_12_STABLE [3d214a8e5] 2020-02-06 14:44:22 +0900
Branch: REL_11_STABLE [ac25e1044] 2020-02-06 14:44:40 +0900
Branch: REL_10_STABLE [c17abac60] 2020-02-06 14:44:59 +0900
-->
     <para>
      Fix multiple statistics entries reported by the LWLock statistics
      mechanism (Fujii Masao)
     </para>

     <para>
      The LWLock statistics code (which is not built by default; it
      requires compiling with <option>-DLWLOCK_STATS</option>)
      could report multiple entries for the same LWLock and backend
      process, as a result of faulty hashtable key creation.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [28e6a2fd6] 2019-12-09 15:03:51 -0500
Branch: REL_12_STABLE [001362cfd] 2019-12-09 15:03:51 -0500
Branch: REL_11_STABLE [2ed302ab9] 2019-12-09 15:03:51 -0500
Branch: REL_10_STABLE [096ea540e] 2019-12-09 15:03:52 -0500
Branch: REL9_6_STABLE [df44e411c] 2019-12-09 15:03:52 -0500
Branch: REL9_5_STABLE [1a0c65120] 2019-12-09 15:03:52 -0500
Branch: REL9_4_STABLE [7309e75fa] 2019-12-09 15:03:52 -0500
-->
     <para>
      Fix race condition that led to delayed delivery of interprocess
      signals on Windows (Amit Kapila)
     </para>

     <para>
      This caused visible timing oddities in <command>NOTIFY</command>,
      and perhaps other misbehavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [6969deeb8] 2019-11-20 18:29:37 +1300
Branch: REL_12_STABLE [2189f49c4] 2019-11-20 18:30:56 +1300
-->
     <para>
      Fix handling of a corner-case error result from
      Windows' <function>ReadFile()</function> function
      (Thomas Munro, Juan Jos&eacute; Santamar&iacute;a Flecha)
     </para>

     <para>
      So far as is known, this oversight just resulted in noisy log
      messages, not any actual query misbehavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6d7547c21] 2019-12-16 15:10:55 -0500
Branch: REL_12_STABLE [95f43fee9] 2019-12-16 15:10:55 -0500
Branch: REL_11_STABLE [2cf51809b] 2019-12-16 15:10:55 -0500
Branch: REL_10_STABLE [81b052c31] 2019-12-16 15:10:55 -0500
Branch: REL9_6_STABLE [65cb25e4f] 2019-12-16 15:10:55 -0500
Branch: REL9_5_STABLE [cd0380351] 2019-12-16 15:10:55 -0500
Branch: REL9_4_STABLE [cfb2a4cce] 2019-12-16 15:10:56 -0500
Branch: master [5406513e9] 2019-12-21 17:39:36 -0500
Branch: REL_12_STABLE [90281a3a2] 2019-12-21 17:39:36 -0500
Branch: REL_11_STABLE [b3c4e2418] 2019-12-21 17:39:36 -0500
Branch: REL_10_STABLE [a69f5697a] 2019-12-21 17:39:36 -0500
Branch: REL9_6_STABLE [739201b0e] 2019-12-21 17:39:36 -0500
Branch: REL9_5_STABLE [35b28d983] 2019-12-21 17:39:37 -0500
Branch: REL9_4_STABLE [f1a4020ef] 2019-12-21 17:39:37 -0500
-->
     <para>
      On Windows, retry a few times after
      an <literal>ERROR_ACCESS_DENIED</literal> file access failure
      (Alexander Lakhin, Tom Lane)
     </para>

     <para>
      This helps cope with cases where a file open attempt fails because
      the targeted file is flagged for deletion but not yet actually gone.
      <application>pg_ctl</application>, for example, frequently failed
      with such an error when probing to see if the postmaster had shut
      down yet.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0da33c762] 2019-12-10 13:17:08 -0500
Branch: REL_12_STABLE [be9d4b928] 2019-12-10 13:17:08 -0500
-->
     <para>
      On Windows, work around sharing violations for the postmaster's log
      file when <application>pg_ctl</application> is used to start the
      postmaster very shortly after it's been stopped, for example by
      <literal>pg_ctl restart</literal> (Alexander Lakhin)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-12-1">
  <title>Release 12.1</title>

  <formalpara>
  <title>Release date:</title>
  <para>2019-11-14</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 12.0.
   For information about new features in major release 12, see
   <xref linkend="release-12"/>.
  </para>

  <sect2>
   <title>Migration to Version 12.1</title>

   <para>
    A dump/restore is not required for those running 12.X.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [93765bd95] 2019-10-09 22:00:50 -0700
Branch: REL_12_STABLE [f224c7c11] 2019-10-09 22:13:48 -0700
Branch: master [ae5cae54c] 2019-10-16 02:37:34 -0700
Branch: REL_12_STABLE [3b25de620] 2019-10-16 02:38:13 -0700
-->
     <para>
      Fix crash when <command>ALTER TABLE</command> adds a column without
      a default value along with making other changes that require a table
      rewrite (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [5d3500da7] 2019-10-23 15:04:48 +0900
Branch: REL_12_STABLE [7668d4847] 2019-10-23 15:05:09 +0900
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [8270a0d9a] 2019-10-25 10:20:08 +0900
Branch: REL_12_STABLE [7f84b0ef0] 2019-10-25 10:20:16 +0900
-->
     <para>
      Fix lock handling in <command>REINDEX CONCURRENTLY</command>
      (Michael Paquier)
     </para>

     <para>
      <command>REINDEX CONCURRENTLY</command> neglected to take a
      session-level lock on the new index version, potentially allowing
      other sessions to manipulate it too soon.
      Also, a query-cancel or session-termination interrupt arriving at the
      wrong time could result in failure to release the session-level
      locks that <command>REINDEX CONCURRENTLY</command> does hold.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [0d21f919e] 2019-10-16 14:51:34 +0200
Branch: REL_12_STABLE [1cd5bc3cc] 2019-10-16 14:51:23 +0200
-->
     <para>
      Avoid crash due to race condition when reporting the progress of
      a <command>CREATE INDEX CONCURRENTLY</command> or <command>REINDEX
      CONCURRENTLY</command> command (&Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [68ac9cf24] 2019-10-28 11:57:31 +0900
Branch: REL_12_STABLE [5e5f32284] 2019-10-28 11:58:29 +0900
-->
     <para>
      Avoid creating duplicate dependency entries during <command>REINDEX
      CONCURRENTLY</command> (Michael Paquier)
     </para>

     <para>
      This bug resulted in bloat in <structname>pg_depend</structname>,
      but no worse consequences than that.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [6bda2af03] 2019-10-17 09:59:21 +1300
Branch: REL_12_STABLE [486a8f152] 2019-10-17 11:08:49 +1300
Branch: REL_11_STABLE [6f1e336de] 2019-10-17 11:01:35 +1300
Branch: REL_10_STABLE [583d86f92] 2019-10-17 10:55:26 +1300
Branch: REL9_6_STABLE [0640f032a] 2019-10-17 11:57:33 +1300
Branch: REL9_5_STABLE [c1443eebe] 2019-10-17 10:28:28 +1300
Branch: REL9_4_STABLE [080cf32d2] 2019-10-17 10:14:51 +1300
-->
     <para>
      Prevent <command>VACUUM</command> from trying to freeze
      an old multixact ID involving a still-running transaction
      (Nathan Bossart, Jeremy Schneider)
     </para>

     <para>
      This case would lead to <command>VACUUM</command> failing until the
      old transaction terminates.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [cef82eda1] 2019-10-15 10:40:13 -0700
Branch: REL_12_STABLE [6d3fe6b6b] 2019-10-15 10:40:51 -0700
-->
     <para>
      Fix <quote>wrong type of slot</quote> error when trying
      to <command>CLUSTER</command> on an expression index (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [b4bcc6bfd] 2019-11-07 13:59:24 -0300
Branch: REL_12_STABLE [b75ccddcd] 2019-11-07 13:59:24 -0300
Branch: REL_11_STABLE [e4baecf1e] 2019-11-07 14:26:10 -0300
-->
     <para>
      <command>SET CONSTRAINTS ... DEFERRED</command> failed on
      partitioned tables, incorrectly complaining about lack of triggers
      (&Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [dc816e581] 2019-11-02 14:16:04 +0900
Branch: REL_12_STABLE [7963c4c4b] 2019-11-02 14:16:11 +0900
Branch: REL_11_STABLE [f10815c5b] 2019-11-02 14:17:12 +0900
-->
     <para>
      Fix failure when creating indexes for a partition, if the parent
      partitioned table contains any dropped columns (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [1df5875d3] 2019-10-13 17:51:55 +0900
Branch: REL_12_STABLE [3a58c5f14] 2019-10-13 17:53:08 +0900
Branch: master [14ac4237c] 2019-10-14 08:58:38 +0900
Branch: REL_12_STABLE [9fd9af97f] 2019-10-14 08:58:47 +0900
-->
     <para>
      Fix dropping of indexed columns in partitioned tables
      (Amit Langote, Michael Paquier)
     </para>

     <para>
      Previously this might fail with an error message complaining about
      the dependencies of the indexes.  It should automatically drop the
      indexes, instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [d80be6f2f] 2019-10-29 11:08:09 +0900
Branch: REL_12_STABLE [eae1ba65f] 2019-10-29 11:08:16 +0900
-->
     <para>
      Ensure that a partition index can be dropped after a failure to
      reindex it concurrently (Michael Paquier)
     </para>

     <para>
      The
      index's <structname>pg_class</structname>.<structfield>relispartition</structfield>
      flag was left in the wrong state in such a case,
      causing <command>DROP INDEX</command> to fail.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [529ebb20a] 2019-11-05 11:42:24 -0500
Branch: REL_12_STABLE [a9db37a18] 2019-11-05 11:42:25 -0500
-->
     <para>
      Fix handling of equivalence class members for partition-wise joins
      (Amit Langote)
     </para>

     <para>
      This oversight could lead either to failure to use a feasible
      partition-wise join plan, or to a <quote>could not find pathkey item
      to sort</quote> planner failure.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [b7a1c5539] 2019-10-03 10:54:52 +0100
Branch: REL_12_STABLE [0b11dc019] 2019-10-03 11:12:39 +0100
Branch: REL_11_STABLE [0a445f279] 2019-10-03 11:14:30 +0100
Branch: REL_10_STABLE [ede0ab6cc] 2019-10-03 11:15:38 +0100
Branch: REL9_6_STABLE [6db0d7f35] 2019-10-03 11:17:38 +0100
Branch: REL9_5_STABLE [d2427f11b] 2019-10-03 11:18:15 +0100
Branch: REL9_4_STABLE [3473f81dd] 2019-10-03 11:18:20 +0100
-->
     <para>
      Ensure that offset expressions in <literal>WINDOW</literal> clauses
      are processed when a query's expressions are manipulated (Andrew Gierth)
     </para>

     <para>
      This oversight could result in assorted failures when the offsets
      are nontrivial expressions.  One example is that a function
      parameter reference in such an expression would fail if the function
      was inlined.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3887e9455] 2019-10-07 12:39:09 -0400
Branch: REL_12_STABLE [7e8d0eb63] 2019-10-07 12:39:09 -0400
Branch: REL_11_STABLE [021065aac] 2019-10-07 12:39:09 -0400
Branch: REL_10_STABLE [1b5c2ddcd] 2019-10-07 12:39:09 -0400
Branch: REL9_6_STABLE [c69e982a6] 2019-10-07 12:39:09 -0400
Branch: REL9_5_STABLE [8c2910ce5] 2019-10-07 12:39:10 -0400
-->
     <para>
      Avoid postmaster failure if a parallel query requests a background
      worker when no postmaster child process array slots remain free
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [d986d4e87] 2019-10-04 13:50:49 -0700
Branch: REL_12_STABLE [60e97d63e] 2019-10-04 13:57:37 -0700
-->
     <para>
      Fix crash triggered by an EvalPlanQual recheck on a table with
      a <literal>BEFORE UPDATE</literal> trigger (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a30531c5c] 2019-11-05 13:40:37 -0500
Branch: REL_12_STABLE [791864193] 2019-11-05 13:40:37 -0500
Branch: REL_11_STABLE [2bfe015b5] 2019-11-05 13:40:37 -0500
-->
     <para>
      Fix <quote>unexpected relkind</quote> error when a query tries to
      access a TOAST table (John Hsu, Michael Paquier, Tom Lane)
     </para>

     <para>
      The error should say that permission is denied, but this case got
      broken during code refactoring.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [3c8c55dd5] 2019-10-17 13:47:01 +1300
Branch: REL_12_STABLE [3af7c64fe] 2019-10-17 14:00:15 +1300
Branch: REL_11_STABLE [6737111a7] 2019-10-17 13:58:58 +1300
Branch: REL_10_STABLE [89a3cdb32] 2019-10-17 13:57:23 +1300
Branch: REL9_6_STABLE [fd5ffa425] 2019-10-17 13:52:59 +1300
Branch: REL9_5_STABLE [cdbb39213] 2019-10-17 13:50:59 +1300
-->
     <para>
      Provide a relevant error context line when an error occurs while
      setting GUC parameters during parallel worker startup (Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [a586cc4b6] 2019-10-04 13:34:28 -0700
Branch: REL_12_STABLE [c025165da] 2019-10-04 13:34:39 -0700
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [b8e19b932] 2019-10-09 13:30:43 +0900
Branch: REL_12_STABLE [07c314968] 2019-10-09 13:31:13 +0900
Branch: REL_11_STABLE [e34358c43] 2019-10-09 13:31:17 +0900
Branch: REL_10_STABLE [fbfc835b4] 2019-10-09 13:31:22 +0900
Branch: REL9_6_STABLE [4e7a8874a] 2019-10-09 13:31:27 +0900
Branch: REL9_5_STABLE [c50f95272] 2019-10-09 13:31:33 +0900
Branch: REL9_4_STABLE [59800f7ce] 2019-10-09 13:31:38 +0900
-->
     <para>
      Ensure that <function>fsync()</function> is applied only to files
      that are opened read/write (Andres Freund, Michael Paquier)
     </para>

     <para>
      Some code paths tried to do this after opening a file read-only,
      but on some platforms that causes <quote>bad file descriptor</quote>
      or similar errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8e10405c7] 2019-10-03 17:34:25 -0400
Branch: REL_12_STABLE [8381242df] 2019-10-03 17:34:25 -0400
Branch: REL_11_STABLE [e5ff97571] 2019-10-03 17:34:25 -0400
Branch: REL_10_STABLE [226551e7c] 2019-10-03 17:34:26 -0400
Branch: REL9_6_STABLE [677989cc0] 2019-10-03 17:34:26 -0400
Branch: REL9_5_STABLE [54d641da0] 2019-10-03 17:34:26 -0400
Branch: REL9_4_STABLE [6899be289] 2019-10-03 17:34:26 -0400
-->
     <para>
      Allow encoding conversion to succeed on longer strings than before
      (&Aacute;lvaro Herrera, Tom Lane)
     </para>

     <para>
      Previously, there was a hard limit of 0.25GB on the input string,
      but now it will work as long as the converted output is not over 1GB.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [a9056cc63] 2019-11-06 04:13:30 +0000
Branch: REL_12_STABLE [f57c63107] 2019-11-06 04:33:35 +0000
Branch: REL_11_STABLE [be99485b9] 2019-11-06 04:33:42 +0000
Branch: REL_10_STABLE [6da5310e8] 2019-11-06 04:33:49 +0000
Branch: REL9_6_STABLE [747aac88f] 2019-11-06 04:33:55 +0000
-->
     <para>
      Avoid creating unnecessarily-bulky tuple stores for window functions
      (Andrew Gierth)
     </para>

     <para>
      In some cases the tuple storage would include all columns of the
      source table(s), not just the ones that are needed by the query.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c477f3e44] 2019-10-03 13:56:26 -0400
Branch: REL_12_STABLE [9a407209a] 2019-10-03 13:56:26 -0400
Branch: REL_11_STABLE [82d0a46ea] 2019-10-03 13:56:26 -0400
Branch: REL_10_STABLE [9ad1b572d] 2019-10-03 13:56:26 -0400
Branch: REL9_6_STABLE [e5e4f12a5] 2019-10-03 13:56:26 -0400
Branch: REL9_5_STABLE [1534531fe] 2019-10-03 13:56:26 -0400
Branch: REL9_4_STABLE [4829576ba] 2019-10-03 13:56:27 -0400
-->
     <para>
      Allow <function>repalloc()</function> to give back space when a
      large chunk is reduced in size (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [df86e52ca] 2019-10-02 15:53:07 +0900
Branch: REL_12_STABLE [2a724cdbf] 2019-10-02 15:53:51 +0900
Branch: REL_11_STABLE [b978de0eb] 2019-10-02 15:53:56 +0900
Branch: REL_10_STABLE [7ca35472c] 2019-10-02 15:54:01 +0900
Branch: REL9_6_STABLE [ac1efdd08] 2019-10-02 15:54:11 +0900
Branch: REL9_5_STABLE [ae205dfe6] 2019-10-02 15:54:16 +0900
-->
     <para>
      Ensure that temporary WAL and history files are removed at the end
      of archive recovery (Sawada Masahiko)
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [ec1259e88] 2019-10-18 22:32:18 +0900
Branch: REL_12_STABLE [9dfbf9a04] 2019-10-18 22:34:05 +0900
Branch: REL_11_STABLE [f7b70700b] 2019-10-18 22:35:07 +0900
Branch: REL_10_STABLE [c455ee88c] 2019-10-18 22:35:19 +0900
Branch: REL9_6_STABLE [579996bc2] 2019-10-18 22:35:30 +0900
Branch: REL9_5_STABLE [1b2ba8874] 2019-10-18 22:35:41 +0900
Branch: REL9_4_STABLE [14c59185b] 2019-10-18 22:35:52 +0900
-->
     <para>
      Avoid failure in archive recovery
      if <varname>recovery_min_apply_delay</varname> is enabled
      (Fujii Masao)
     </para>

     <para>
      <varname>recovery_min_apply_delay</varname> is not typically used in
      this configuration, but it should work.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [20961ceaf] 2019-10-11 15:47:59 +0900
Branch: REL_12_STABLE [fcf7f8d92] 2019-10-11 15:49:32 +0900
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [9b95a36be] 2019-10-18 22:24:18 +0900
Branch: REL_12_STABLE [03666dfa1] 2019-10-18 22:25:42 +0900
-->
     <para>
      Ignore <varname>restore_command</varname>,
      <varname>recovery_end_command</varname>,
      and <varname>recovery_min_apply_delay</varname> settings during
      crash recovery (Fujii Masao)
     </para>

     <para>
      Now that these settings can be specified
      in <filename>postgresql.conf</filename>, they could be turned on
      during crash recovery, but honoring them then is undesirable.
      Ignore these settings until crash recovery is complete.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [1c60e40ad] 2019-11-09 08:35:44 +0100
Branch: REL_12_STABLE [d891d2c89] 2019-11-09 08:35:51 +0100
Branch: REL_11_STABLE [7961da188] 2019-11-09 08:36:11 +0100
Branch: REL_10_STABLE [2e00d5976] 2019-11-09 09:15:35 +0100
Branch: master [ef8fcbff5] 2019-11-09 13:19:27 +0100
Branch: REL_12_STABLE [f96756304] 2019-11-09 16:00:34 +0100
Branch: REL_11_STABLE [aa9884578] 2019-11-09 16:01:23 +0100
Branch: REL_10_STABLE [806f9dc02] 2019-11-09 16:03:00 +0100
-->
     <para>
      Fix logical replication failure when publisher and subscriber have
      different ideas about a table's replica identity columns
      (Jehan-Guillaume de Rorthais, Peter Eisentraut)
     </para>

     <para>
      Declaring a column as part of the replica identity on the
      subscriber, when it does not exist at all on the publisher, led
      to <quote>negative bitmapset member not allowed</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [38ddeab13] 2019-10-17 15:06:06 +0200
Branch: REL_12_STABLE [1391c13ce] 2019-10-17 15:06:06 +0200
Branch: REL_11_STABLE [45e4067c0] 2019-10-17 15:06:05 +0200
Branch: REL_10_STABLE [0d9fcbada] 2019-10-17 15:06:05 +0200
Branch: REL9_6_STABLE [5f038991e] 2019-10-17 15:06:05 +0200
Branch: REL9_5_STABLE [b2ab06e02] 2019-10-17 15:06:05 +0200
Branch: REL9_4_STABLE [abd5071d2] 2019-10-17 15:06:05 +0200
-->
     <para>
      Avoid unwanted delay during shutdown of a logical replication
      walsender (Craig Ringer, &Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [3f60f690f] 2019-10-18 14:26:29 +0900
Branch: REL_12_STABLE [04510dbe3] 2019-10-18 14:26:53 +0900
Branch: REL_11_STABLE [feed5ee47] 2019-10-18 14:27:00 +0900
Branch: REL_10_STABLE [47698b4b6] 2019-10-18 14:27:04 +0900
-->
     <para>
      Fix timeout handling in logical replication walreceiver processes
      (Julien Rouhaud)
     </para>

     <para>
      Erroneous logic prevented <varname>wal_receiver_timeout</varname>
      from working in logical replication deployments.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [5f6b1eb0c] 2019-11-06 16:12:21 +0900
Branch: REL_12_STABLE [9ae4bdadf] 2019-11-06 16:12:28 +0900
Branch: REL_11_STABLE [cb6d7f985] 2019-11-06 16:12:34 +0900
Branch: REL_10_STABLE [f7b0d0704] 2019-11-06 16:12:40 +0900
Branch: REL9_6_STABLE [16b43e091] 2019-11-06 16:12:47 +0900
Branch: REL9_5_STABLE [404d25f3c] 2019-11-06 16:12:51 +0900
Branch: REL9_4_STABLE [15d90a02a] 2019-11-06 16:12:56 +0900
-->
     <para>
      Correctly time-stamp replication messages for logical
      decoding (Jeff Janes)
     </para>

     <para>
      This oversight resulted, for example,
      in <structname>pg_stat_subscription</structname>.<structfield>last_msg_send_time</structfield>
      usually reading as NULL.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [20345197f] 2019-11-01 22:38:32 +0900
Branch: REL_12_STABLE [7b8c2de64] 2019-11-01 22:38:45 +0900
Branch: REL_11_STABLE [61f238392] 2019-11-01 22:38:51 +0900
Branch: REL_10_STABLE [b99bfc3c9] 2019-11-01 22:38:55 +0900
Branch: REL9_6_STABLE [52684bc7d] 2019-11-01 22:39:01 +0900
Branch: REL9_5_STABLE [0927d0c25] 2019-11-01 22:39:05 +0900
Branch: REL9_4_STABLE [f88f7206e] 2019-11-01 22:39:09 +0900
-->
     <para>
      Fix race condition during backend exit, when the backend process has
      previously waited for synchronous replication to occur (Dongming Liu)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3affe76ef] 2019-11-05 14:27:37 -0500
Branch: REL_12_STABLE [f9bd3b6d9] 2019-11-05 14:27:37 -0500
Branch: REL_11_STABLE [97ddc47b9] 2019-11-05 14:27:37 -0500
Branch: REL_10_STABLE [0238a5028] 2019-11-05 14:27:37 -0500
Branch: REL9_6_STABLE [383602f9a] 2019-11-05 14:27:37 -0500
Branch: REL9_5_STABLE [970372037] 2019-11-05 14:27:37 -0500
Branch: REL9_4_STABLE [762b25653] 2019-11-05 14:27:38 -0500
-->
     <para>
      Avoid logging complaints about abandoned connections when using PAM
      authentication (Tom Lane)
     </para>

     <para>
      libpq-based clients will typically make two connection attempts when
      a password is required, since they don't prompt their user for a
      password until their first connection attempt fails.  Therefore the
      server is coded not to generate useless log spam when a client
      closes the connection upon being asked for a password.  However,
      the PAM authentication code hadn't gotten that memo, and would
      generate several messages about a phantom authentication failure.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5ac0d9360] 2019-09-22 17:45:59 -0400
Branch: REL_12_STABLE Release: REL_12_0 [860216efa] 2019-09-22 17:46:00 -0400
Branch: REL_11_STABLE [7e7abed05] 2019-09-22 17:46:00 -0400
Branch: REL_10_STABLE [096d34c3b] 2019-09-22 17:46:00 -0400
Branch: REL9_6_STABLE [6ddd164aa] 2019-09-22 17:46:00 -0400
Branch: REL9_5_STABLE [35eb13270] 2019-09-22 17:46:00 -0400
Branch: REL9_4_STABLE [8a17afe84] 2019-09-22 17:46:00 -0400
Branch: master [61aa9f544] 2019-10-04 10:34:40 -0400
Branch: REL_12_STABLE [6c3b6406d] 2019-10-04 10:34:21 -0400
Branch: REL_11_STABLE [b8ddf0bdf] 2019-10-04 10:34:21 -0400
Branch: REL_10_STABLE [9faa9794f] 2019-10-04 10:34:21 -0400
Branch: REL9_6_STABLE [30e5b3bbe] 2019-10-04 10:34:21 -0400
Branch: REL9_5_STABLE [8b77f783b] 2019-10-04 10:34:21 -0400
Branch: REL9_4_STABLE [b6a6c129f] 2019-10-04 10:34:21 -0400
-->
     <para>
      Fix misbehavior of <function>bitshiftright()</function> (Tom Lane)
     </para>

     <para>
      The bitstring right shift operator failed to zero out padding space
      that exists in the last byte of the result when the bitstring length
      is not a multiple of 8.  While invisible to most operations, any
      nonzero bits there would result in unexpected comparison behavior,
      since bitstring comparisons don't bother to ignore the extra bits,
      expecting them to always be zero.
     </para>

     <para>
      If you have inconsistent data as a result of saving the output
      of <function>bitshiftright()</function> in a table, it's possible to
      fix it with something like
<programlisting>
UPDATE mytab SET bitcol = ~(~bitcol) WHERE bitcol != ~(~bitcol);
</programlisting>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [bd1ef5799] 2019-10-28 12:21:13 -0400
Branch: REL_12_STABLE [43e43771b] 2019-10-28 12:21:13 -0400
-->
     <para>
      Fix result of text <function>position()</function> function (also
      known as <function>strpos()</function>) for an empty search string
      (Tom Lane)
     </para>

     <para>
      Historically, and per the SQL standard, the result should be one in
      such cases, but 12.0 returned zero.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a7145f6bc] 2019-11-07 11:22:58 -0500
Branch: REL_12_STABLE [f6e72dc9c] 2019-11-07 11:22:59 -0500
Branch: REL_11_STABLE [b49b7f944] 2019-11-07 11:23:00 -0500
Branch: REL_10_STABLE [5f794f757] 2019-11-07 11:23:02 -0500
Branch: REL9_6_STABLE [15783d057] 2019-11-07 11:23:03 -0500
Branch: REL9_5_STABLE [84780d468] 2019-11-07 11:23:04 -0500
Branch: REL9_4_STABLE [8d380864a] 2019-11-07 11:23:06 -0500
Branch: REL9_6_STABLE [a55018760] 2019-11-09 15:50:16 -0500
Branch: REL9_5_STABLE [30f6998ff] 2019-11-09 15:50:16 -0500
Branch: REL9_4_STABLE [18622caa3] 2019-11-09 15:50:16 -0500
-->
     <para>
      Fix detection of edge-case integer overflow in interval
      multiplication (Yuya Watari)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8af1624e3] 2019-11-02 16:45:32 -0400
Branch: REL_12_STABLE [43753c2cf] 2019-11-02 16:45:32 -0400
Branch: REL_11_STABLE [65cdf8bc1] 2019-11-02 16:45:32 -0400
Branch: REL_10_STABLE [680aabd2f] 2019-11-02 16:45:32 -0400
Branch: REL9_6_STABLE [51b9ac558] 2019-11-02 16:45:32 -0400
Branch: master [db27b60f0] 2019-11-03 16:10:23 -0500
Branch: REL_12_STABLE [6dd92138d] 2019-11-03 16:10:38 -0500
Branch: REL_11_STABLE [88d03d73c] 2019-11-03 16:10:45 -0500
Branch: REL_10_STABLE [4077e9ae1] 2019-11-03 16:10:56 -0500
Branch: REL9_6_STABLE [d43bd9dce] 2019-11-03 16:11:05 -0500
-->
     <para>
      Avoid crashes if <literal>ispell</literal> text search dictionaries
      contain wrong affix data (Arthur Zakirov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [70a6c37d5] 2019-10-21 08:57:32 +0530
Branch: REL_12_STABLE [62f4dd379] 2019-10-21 09:04:35 +0530
-->
     <para>
      Avoid memory leak while vacuuming a GiST index (Dilip Kumar)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [db477b691] 2019-10-21 14:18:01 -0400
Branch: REL_12_STABLE [4f2ad5226] 2019-10-21 14:18:16 -0400
Branch: REL_11_STABLE [a05a04d0e] 2019-10-21 14:18:31 -0400
Branch: REL_10_STABLE [aebe3ef0e] 2019-10-21 14:18:38 -0400
Branch: REL9_6_STABLE [185253ab8] 2019-10-21 14:18:47 -0400
Branch: REL9_5_STABLE [e3267407e] 2019-10-21 14:18:55 -0400
Branch: REL9_4_STABLE [fedcab352] 2019-10-21 14:19:03 -0400
-->
     <para>
      On Windows, recognize additional spellings of the <quote>Norwegian
      (Bokm&aring;l)</quote> locale name (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [4f4061b2d] 2019-10-21 11:17:13 +0900
Branch: REL_12_STABLE [2b0f959b5] 2019-10-21 11:17:43 +0900
Branch: master [57379cd5a] 2019-10-23 11:34:18 +0900
Branch: REL_12_STABLE [a6a95d4f3] 2019-10-23 11:34:42 +0900
-->
     <para>
      Fix <application>libpq</application> to allow trailing whitespace in
      the string values of integer parameters (Michael Paquier)
     </para>

     <para>
      Version 12 tightened <application>libpq</application>'s validation
      of integer parameters, but disallowing trailing whitespace seems
      undesirable.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [ba19a6b73] 2019-10-21 11:39:15 +0900
Branch: REL_12_STABLE [ed5109a61] 2019-10-21 11:39:28 +0900
-->
     <para>
      In <application>libpq</application>, correctly
      report <literal>CONNECTION_BAD</literal> connection status after a
      failure caused by a syntactically
      invalid <option>connect_timeout</option> parameter value (Lars Kanis)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c8cb98ec4] 2019-11-07 14:21:52 -0500
Branch: REL_12_STABLE [101654987] 2019-11-07 14:21:52 -0500
Branch: REL_11_STABLE [89f56fc22] 2019-11-07 14:21:52 -0500
Branch: REL_10_STABLE [831ca9513] 2019-11-07 14:21:52 -0500
Branch: REL9_6_STABLE [baa483984] 2019-11-07 14:21:52 -0500
Branch: REL9_5_STABLE [b705d6391] 2019-11-07 14:21:52 -0500
Branch: REL9_4_STABLE [b20233aac] 2019-11-07 14:21:52 -0500
-->
     <para>
      Avoid compile failure if an ECPG client
      includes <filename>ecpglib.h</filename> while
      having <literal>ENABLE_NLS</literal> defined (Tom Lane)
     </para>

     <para>
      This risk was created by a misplaced
      declaration: <function>ecpg_gettext()</function> should not be
      visible to client code.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [1752e3516] 2019-10-17 09:58:01 +0200
Branch: REL_12_STABLE [b304b2b65] 2019-10-17 09:58:01 +0200
-->
     <para>
      Fix scheduling of parallel restore of a foreign key constraint on a
      partitioned table (&Aacute;lvaro Herrera)
     </para>

     <para>
      <application>pg_dump</application> failed to emit full dependency
      information for partitioned tables' foreign keys.  This could allow
      parallel <application>pg_restore</application> to try to recreate a
      foreign key constraint too soon.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5102f3944] 2019-11-04 16:25:05 -0500
Branch: REL_12_STABLE [ca27a84c9] 2019-11-04 16:25:05 -0500
Branch: REL_11_STABLE [078f5bc8e] 2019-11-04 16:25:05 -0500
Branch: REL_10_STABLE [ee8b95f26] 2019-11-04 16:25:05 -0500
Branch: REL9_6_STABLE [648f17879] 2019-11-04 16:25:05 -0500
Branch: REL9_5_STABLE [74d32ee70] 2019-11-04 16:25:05 -0500
Branch: REL9_4_STABLE [da5cd7a68] 2019-11-04 16:25:05 -0500
-->
     <para>
      In <application>pg_dump</application>, ensure stable output order
      for similarly-named triggers and row-level-security policy objects
      (Benjie Gillam)
     </para>

     <para>
      Previously, if two triggers on different tables had the same names,
      they would be sorted in OID-based order, which is less desirable
      than sorting them by table name.  Likewise for RLS policies.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [0ccfc2822] 2019-10-14 22:31:56 +0200
Branch: REL_12_STABLE [eaf900e84] 2019-10-14 23:40:58 +0200
Branch: master [3a0e85739] 2019-10-15 00:25:04 +0200
Branch: REL_12_STABLE [702fd3b71] 2019-10-15 00:35:51 +0200
-->
     <para>
      In <application>pg_upgrade</application>, reject tables with
      columns of type <type>sql_identifier</type>, as that has changed
      representation in version 12 (Tomas Vondra)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [8d48e6a72] 2019-10-16 13:23:14 +0200
Branch: REL_12_STABLE [ebb4caa91] 2019-10-16 13:25:25 +0200
Branch: REL_11_STABLE [a970b6cde] 2019-10-16 13:26:22 +0200
Branch: REL_10_STABLE [2218fdca4] 2019-10-16 13:26:53 +0200
Branch: REL9_6_STABLE [0a643de08] 2019-10-16 13:27:24 +0200
Branch: REL9_5_STABLE [f57b01dd7] 2019-10-16 13:27:51 +0200
Branch: REL9_4_STABLE [235a52ca0] 2019-10-16 13:31:00 +0200
Branch: REL9_6_STABLE [e09ab32a2] 2019-10-16 16:20:07 +0200
Branch: REL9_5_STABLE [984aa0ede] 2019-10-16 16:23:09 +0200
Branch: REL9_4_STABLE [bc3a94dc0] 2019-10-16 16:28:48 +0200
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [a524f50d0] 2019-10-16 13:23:18 +0200
Branch: REL_12_STABLE [a8e49ae0c] 2019-10-16 13:25:37 +0200
Branch: REL_11_STABLE [d071a2539] 2019-10-16 13:26:26 +0200
Branch: REL_10_STABLE [e86ece221] 2019-10-16 13:26:56 +0200
-->
     <para>
      Improve <application>pg_upgrade</application>'s checks for the use
      of a data type that has changed representation, such
      as <type>line</type> (Tomas Vondra)
     </para>

     <para>
      The previous coding could be fooled by cases where the data type of
      interest underlies a stored column of a domain or composite type.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [6f3823b03] 2019-10-04 09:14:51 +0900
Branch: REL_12_STABLE [c2e3b311d] 2019-10-04 09:16:03 +0900
-->
     <para>
      In <application>pg_rewind</application>
      with the <option>--dry-run</option> option, avoid
      updating <filename>pg_control</filename>
      (Alexey Kondratov)
     </para>

     <para>
      This could lead to failures in
      subsequent <application>pg_rewind</application> attempts.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [a0c96856e] 2019-11-07 16:31:36 +0900
Branch: REL_12_STABLE [e5cfb8cbb] 2019-11-07 16:32:37 +0900
Branch: REL_11_STABLE [fb53c4c07] 2019-11-07 16:32:58 +0900
Branch: REL_10_STABLE [127ad57f5] 2019-11-07 16:33:06 +0900
Branch: REL9_6_STABLE [aa7cd6a8e] 2019-11-07 16:33:23 +0900
Branch: REL9_5_STABLE [b1bebc2ce] 2019-11-07 16:33:47 +0900
Branch: REL9_4_STABLE [1accf9974] 2019-11-07 16:33:58 +0900
-->
     <para>
      Fix failure in <application>pg_waldump</application> with
      the <option>-s</option> option, when a continuation WAL record ends
      exactly at a page boundary (Andrey Lepikhov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [e4d92126f] 2019-10-29 22:53:05 -0700
Branch: REL_12_STABLE [d4b5206b2] 2019-10-29 22:53:30 -0700
Branch: REL_11_STABLE [3b24cf732] 2019-10-29 22:53:33 -0700
Branch: REL_10_STABLE [82200115e] 2019-10-29 22:53:37 -0700
Branch: REL9_6_STABLE [bc4f56c18] 2019-10-29 22:54:36 -0700
Branch: REL9_5_STABLE [39ff656a4] 2019-10-29 22:55:19 -0700
-->
     <para>
      In <application>pg_waldump</application> with
      the <option>--bkp-details</option> option, avoid emitting extra
      newlines for WAL records involving full-page writes (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [e0f76f204] 2019-10-29 19:18:07 -0700
Branch: REL_12_STABLE [4ab353c47] 2019-10-29 19:28:34 -0700
Branch: REL_11_STABLE [af67aee69] 2019-10-29 19:28:34 -0700
Branch: REL_10_STABLE [e3ff8c360] 2019-10-29 19:28:34 -0700
Branch: REL9_6_STABLE [95f2efd50] 2019-10-29 19:28:34 -0700
Branch: REL9_5_STABLE [c3882f8b8] 2019-10-29 19:28:34 -0700
-->
     <para>
      Fix small memory leak in <application>pg_waldump</application>
      (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [06a367c38] 2019-10-10 14:24:56 -0400
Branch: REL_12_STABLE [7ed1bcaed] 2019-10-10 14:24:57 -0400
-->
     <para>
      Put back <function>pqsignal()</function> as an
      exported <application>libpq</application> symbol (Tom Lane)
     </para>

     <para>
      This function was removed on the grounds that no clients should be
      using it, but that turns out to break usage of
      current <application>libpq</application> with very old versions
      of <application>psql</application>, and perhaps other applications.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d995fd667] 2019-10-21 13:52:25 -0400
Branch: REL_12_STABLE [ca658c91a] 2019-10-21 13:52:25 -0400
Branch: REL_11_STABLE [4e19bd41d] 2019-10-21 13:52:25 -0400
Branch: REL_10_STABLE [328b81348] 2019-10-21 13:52:25 -0400
Branch: REL9_6_STABLE [34621cb12] 2019-10-21 13:52:25 -0400
Branch: REL9_5_STABLE [8835e0bd4] 2019-10-21 13:52:26 -0400
Branch: REL9_4_STABLE [6d2b18d07] 2019-10-21 13:52:26 -0400
Branch: master [44273ce4f] 2019-10-21 12:32:35 -0400
Branch: REL_12_STABLE [aa5bb828a] 2019-10-21 12:32:35 -0400
Branch: REL_11_STABLE [99c51d5ed] 2019-10-21 12:32:36 -0400
Branch: REL_10_STABLE [e167b1ae3] 2019-10-21 12:32:36 -0400
Branch: REL9_6_STABLE [62ca50ad7] 2019-10-21 12:32:36 -0400
Branch: REL9_5_STABLE [11330c311] 2019-10-21 12:32:36 -0400
Branch: REL9_4_STABLE [727c2ccfe] 2019-10-21 12:32:36 -0400
-->
     <para>
      Fix <application>configure</application>'s test for presence of
      libperl so that it works on recent Red Hat releases (Tom Lane)
     </para>

     <para>
      Previously, it could fail if the user sets <literal>CFLAGS</literal>
      to <literal>-O0</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [89b4d7744] 2019-10-18 20:20:28 -0700
Branch: REL_12_STABLE [ef13f914e] 2019-10-18 20:20:31 -0700
Branch: REL_11_STABLE [af4477b00] 2019-10-18 20:20:32 -0700
Branch: REL_10_STABLE [083929372] 2019-10-18 20:20:32 -0700
Branch: REL9_6_STABLE [09d74aef3] 2019-10-18 20:20:32 -0700
Branch: REL9_5_STABLE [62e881946] 2019-10-18 20:20:32 -0700
Branch: REL9_4_STABLE [930787c7f] 2019-10-18 20:20:33 -0700
-->
     <para>
      Ensure correct code generation for spinlocks on PowerPC (Noah Misch)
     </para>

     <para>
      The previous spinlock coding allowed the compiler to select register
      zero for use with an assembly instruction that does not accept that
      register, causing a build failure.  We have seen only one long-ago
      report that matches this bug, but it could cause problems for people
      trying to build modified <productname>PostgreSQL</productname> code
      or use atypical compiler options.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [5f3d271d0] 2019-10-12 00:21:47 -0700
Branch: REL_12_STABLE [3fb14cfcb] 2019-10-12 00:21:50 -0700
Branch: REL_11_STABLE [e5b4926ef] 2019-10-12 00:21:50 -0700
Branch: REL_10_STABLE [77cc4a595] 2019-10-12 00:21:50 -0700
Branch: REL9_6_STABLE [c73f4f680] 2019-10-12 00:21:50 -0700
Branch: REL9_5_STABLE [e40eb31c0] 2019-10-12 00:21:51 -0700
Branch: REL9_4_STABLE [b705582b4] 2019-10-12 00:21:51 -0700
-->
     <para>
      On AIX, don't use the compiler option <option>-qsrcmsg</option>
      (Noah Misch)
     </para>

     <para>
      This avoids an internal compiler error with xlc v16.1.0, with little
      consequence other than changing the format of compiler error messages.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [ad7595b89] 2019-10-04 15:34:40 -0400
Branch: REL_12_STABLE [ec38d2311] 2019-10-04 15:39:27 -0400
Branch: REL_11_STABLE [3b9c22700] 2019-10-04 15:39:19 -0400
Branch: REL_10_STABLE [62d2caed6] 2019-10-04 15:39:12 -0400
Branch: REL9_6_STABLE [1e9a0487d] 2019-10-04 15:39:02 -0400
Branch: REL9_5_STABLE [6ca51b155] 2019-10-04 15:38:48 -0400
Branch: REL9_4_STABLE [8f8809091] 2019-10-04 15:38:36 -0400
-->
     <para>
      Fix MSVC build process to cope with spaces in the file path of
      OpenSSL (Andrew Dunstan)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-12">
  <title>Release 12</title>

  <formalpara>
   <title>Release date:</title>
   <para>2019-10-03</para>
  </formalpara>

  <sect2>
   <title>Overview</title>

   <para>
    Major enhancements in <productname>PostgreSQL</productname> 12 include:
   </para>

   <!-- Items in this list summarize one or more items below -->

   <itemizedlist>

    <listitem>
     <para>
      General performance improvements, including:
      <itemizedlist>
       <listitem>
        <para>
         Optimizations to space utilization and read/write performance for
         B-tree indexes
        </para>
       </listitem>

       <listitem>
        <para>
         Partitioning performance enhancements, including improved query
         performance on tables with thousands of partitions, improved
         insertion performance with <xref linkend="sql-insert"/> and <xref
         linkend="sql-copy"/>, and the ability to execute <link
         linkend="sql-altertable-attach-partition"><command>ALTER TABLE ATTACH
         PARTITION</command></link> without blocking queries
        </para>
       </listitem>

       <listitem>
        <para>
         Automatic (but overridable) inlining
         of <link linkend="queries-with">common table expressions</link>
         (<acronym>CTEs</acronym>)
        </para>
       </listitem>

       <listitem>
        <para>
         Reduction of <acronym>WAL</acronym> overhead for creation of
         <link linkend="gist">GiST</link>, <link linkend="gin">GIN</link>, and
         <link linkend="spgist">SP-GiST</link> indexes
        </para>
       </listitem>

       <listitem>
        <para>
         Support for covering <link linkend="gist">GiST</link> indexes, via
         the <link linkend="indexes-index-only-scans"><literal>INCLUDE</literal></link>
         clause
        </para>
       </listitem>

       <listitem>
        <para>
         Multi-column most-common-value (MCV) statistics can be defined
         via <xref linkend="sql-createstatistics"/>, to support better
         plans for queries that test several non-uniformly-distributed
         columns
        </para>
       </listitem>
      </itemizedlist>
     </para>
    </listitem>

    <listitem>
     <para>
      Enhancements to administrative functionality, including:
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sql-reindex-concurrently"><command>REINDEX
         CONCURRENTLY</command></link> can rebuild an index without
         blocking writes to its table
        </para>
       </listitem>

       <listitem>
        <para>
         <xref linkend="app-pgchecksums"/> can enable/disable page checksums
         (used for detecting data corruption) in an offline cluster
        </para>
       </listitem>

       <listitem>
        <para>
         Progress reporting statistics for <xref linkend="sql-createindex"/>,
         <xref linkend="sql-reindex"/>, <xref linkend="sql-cluster"/>,
         <link linkend="sql-vacuum">VACUUM FULL</link>, and
         <xref linkend="app-pgchecksums"/>
        </para>
       </listitem>
      </itemizedlist>
     </para>
    </listitem>

    <listitem>
     <para>
       Support for the <link
       linkend="functions-sqljson-path"><acronym>SQL/JSON</acronym>
       path</link> language
     </para>
    </listitem>

    <listitem>
     <para>
       Stored <link linkend="ddl-generated-columns">generated columns</link>
     </para>
    </listitem>

    <listitem>
     <para>
       <link linkend="collation-nondeterministic">Nondeterministic</link> ICU
       collations, enabling case-insensitive and accent-insensitive grouping
       and ordering
     </para>
    </listitem>

    <listitem>
     <para>
      New authentication features, including:
      <itemizedlist>
       <listitem>
        <para>
         Encryption of TCP/IP connections when using
         <link linkend="gssapi-auth"><acronym>GSSAPI</acronym></link>
         authentication
        </para>
       </listitem>

       <listitem>
        <para>
         Discovery of LDAP servers using <acronym>DNS SRV</acronym> records
        </para>
       </listitem>

       <listitem>
        <para>
         Multi-factor authentication, using the <link linkend="auth-cert">
         <literal>clientcert=verify-full</literal></link> option combined
         with an additional authentication method in
         <filename>pg_hba.conf</filename>
        </para>
       </listitem>
      </itemizedlist>
     </para>
    </listitem>

   </itemizedlist>

   <para>
    The above items are explained in more detail in the sections below.
   </para>

  </sect2>

  <sect2>

  <title>Migration to Version 12</title>

   <para>
    A dump/restore using <xref linkend="app-pg-dumpall"/> or use of <xref
    linkend="pgupgrade"/> or logical replication is required for those
    wishing to migrate data from any previous release.  See <xref
    linkend="upgrading"/> for general information on migrating to new major
    releases.
   </para>

   <para>
    Version 12 contains a number of changes that may affect compatibility
    with previous releases.  Observe the following incompatibilities:
   </para>

   <itemizedlist>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
2018-11-20 [578b22971] Remove WITH OIDS support, change oid catalog column visi
-->

     <para>
      Remove the special behavior of <link
      linkend="datatype-oid">oid</link> columns (Andres Freund,
      John Naylor)
     </para>

     <para>
      Previously, a normally-invisible <structfield>oid</structfield>
      column could be specified during table creation using <literal>WITH
      OIDS</literal>; that ability has been removed.  Columns can still be
      explicitly declared as type <type>oid</type>.  Operations on tables
      that have columns created using <literal>WITH OIDS</literal> will
      need adjustment.
     </para>

     <para>
      The system catalogs that previously had
      hidden <structfield>oid</structfield> columns now have
      ordinary <structfield>oid</structfield> columns.
      Hence, <command>SELECT *</command> will now output those columns,
      whereas previously they would be displayed only if selected
      explicitly.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
2018-10-11 [cda6a8d01] Remove deprecated abstime, reltime, tinterval datatypes.
-->

     <para>
      Remove data types <type>abstime</type>, <type>reltime</type>,
      and <type>tinterval</type> (Andres Freund)
     </para>

     <para>
      These are obsoleted by SQL-standard types such
      as <type>timestamp</type>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
2018-10-11 [2d10defa7] Remove timetravel extension.
-->

     <para>
      Remove the <filename>timetravel</filename> extension
      (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter_e@gmx.net>
2018-11-25 [2dedf4d9a] Integrate recovery.conf into postgresql.conf
-->

     <para>
      Move <filename>recovery.conf</filename> settings into <link
      linkend="runtime-config-wal-archive-recovery"><filename>postgresql.conf</filename></link>
      (Masao Fujii, Simon Riggs, Abhijit Menon-Sen, Sergei Kornilov)
     </para>

     <para>
      <filename>recovery.conf</filename> is no longer used,
      and the server will not start if that file exists.  <link
      linkend="runtime-config-wal-archive-recovery">recovery.signal</link>
      and <filename>standby.signal</filename> files are now used to switch
      into non-primary mode.  The <varname>trigger_file</varname> setting
      has been renamed to <xref linkend="guc-promote-trigger-file"/>.  The
      <varname>standby_mode</varname> setting has been removed.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter_e@gmx.net>
2018-11-28 [f2cbffc7a] Only allow one recovery target setting
-->

     <para>
      Do not allow multiple conflicting <link
      linkend="runtime-config-wal-recovery-target"><varname>recovery_target</varname>*</link>
      specifications (Peter Eisentraut)
     </para>

     <para>
      Specifically, only allow one of <xref
      linkend="guc-recovery-target"/>, <xref
      linkend="guc-recovery-target-lsn"/>,
      <xref linkend="guc-recovery-target-name"/>,
      <xref linkend="guc-recovery-target-time"/>, and <xref
      linkend="guc-recovery-target-xid"/>.  Previously, multiple different
      instances of these parameters could be specified, and the last one
      was honored.  Now, only one can be specified, though the same one can
      be specified multiple times and the last specification is honored.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-01-13 [0acb3bc33] Change default of recovery_target_timeline to <literal>latest</literal>
-->

     <para>
      Cause recovery to advance to the latest timeline by default
      (Peter Eisentraut)
     </para>

     <para>
      Specifically, <xref linkend="guc-recovery-target-timeline"/> now
      defaults to <literal>latest</literal>.  Previously, it defaulted
      to <literal>current</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2018-07-29 [a7dc63d90] Refactor geometric functions and operators
2018-08-16 [c4c340088] Use the built-in float datatypes to implement geometric
2018-09-26 [2e2a392de] Fix problems in handling the line data type
-->

     <para>
      Refactor code for <link linkend="functions-geometry">geometric
      functions and operators</link> (Emre Hasegeli)
     </para>

     <para>
      This could lead to more accurate, but slightly different, results
      compared to previous releases.  Notably, cases involving NaN,
      underflow, overflow, and division by zero are handled more
      consistently than before.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
2019-02-13 [02ddd4993] Change floating-point output format for improved perform
2018-10-12 [f1885386f] Make float exponent output on Windows look the same as e
-->

     <para>
      Improve performance by using a new algorithm for output
      of <link linkend="datatype-float"><type>real</type></link>
      and <type>double precision</type> values (Andrew Gierth)
     </para>

     <para>
      Previously, displayed floating-point values were rounded to 6
      (for <type>real</type>) or 15 (for <type>double precision</type>)
      digits by default, adjusted by the value of
      <xref linkend="guc-extra-float-digits"/>.  Now,
      whenever <varname>extra_float_digits</varname> is more than zero (as
      it now is by default), only the minimum number of digits required to
      preserve the exact binary value are output.  The behavior is the
      same as before when <varname>extra_float_digits</varname> is set to
      zero or less.
     </para>

     <para>
      Also, formatting of floating-point exponents is now uniform across
      platforms: two digits are used unless three are necessary.  In
      previous releases, Windows builds always printed three digits.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-12-29 [6645ad6bd] Use a separate random seed for SQL random()/setseed() fu
2018-12-29 [4203842a1] Use pg_strong_random() to select each server process's r
-->

     <para>
       <link linkend="functions-math-random-table"><function>random()</function></link>
      and <function>setseed()</function> now behave uniformly across
      platforms (Tom Lane)
     </para>

     <para>
      The sequence of <function>random()</function> values generated
      following a <function>setseed()</function> call with a particular
      seed value is likely to be different now than before.  However, it
      will also be repeatable, which was not previously guaranteed because
      of interference from other uses of random numbers inside the server.
      The SQL <function>random()</function> function now has its own
      private per-session state to forestall that.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-05-14 [7c850320d] Fix SQL-style substring() to have spec-compliant greedin
-->

     <para>
      Change SQL-style
      <link linkend="functions-similarto-regexp"><function>substring()</function></link>
      to have standard-compliant greediness behavior (Tom Lane)
     </para>

     <para>
      In cases where the pattern can be matched in more than one way, the
      initial sub-pattern is now treated as matching the least possible
      amount of text rather than the greatest; for example, a pattern such
      as <literal>%#"aa*#"%</literal> now selects the first group
      of <literal>a</literal>'s from the input, not the last group.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-04-23 [c06e3550d] Don't request pretty-printed output from xmlNodeDump().
-->

     <para>
      Do not pretty-print the result
      of <link linkend="functions-xml"><function>xpath()</function></link>
      or the <literal>XMLTABLE</literal> construct (Tom Lane)
     </para>

     <para>
      In some cases, these functions would insert extra whitespace
      (newlines and/or spaces) in nodeset values.  This is undesirable
      since depending on usage, the whitespace might be considered
      semantically significant.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2019-03-13 [6dd263cfa] Rename pg_verify_checksums to pg_checksums
-->

     <para>
      Rename command-line tool
      <application>pg_verify_checksums</application> to <xref
      linkend="app-pgchecksums"/> (Michaël Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2019-04-04 [413ccaa74] pg_restore: Require -f - to mean stdout
-->

     <para>
      In <xref linkend="app-pgrestore"/>, require specification of
      <literal>-f -</literal> to send the dump contents to standard output
      (Euler Taveira)
     </para>

     <para>
      Previously, this happened by default if no destination was
      specified, but that was deemed to be unfriendly.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-11-14 [eaf746a5b] Make psql's "\pset format" command reject non-unique abb
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-11-26 [a7eece4fc] Fix breakage of "\pset format latex".
-->

     <para>
      Disallow non-unique abbreviations
      in <application>psql</application>'s <command>\pset format</command>
      command (Daniel Vérité)
     </para>

     <para>
      Previously, for example, <command>\pset format a</command> chose
      <literal>aligned</literal>; it will now fail since that could
      equally well mean <literal>asciidoc</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
2019-03-20 [dd299df81] Make heap TID a tiebreaker nbtree index column.
-->

     <para>
      In new btree indexes, the maximum index entry length is
      reduced by eight bytes, to improve handling of duplicate entries
      (Peter Geoghegan)
     </para>

     <para>
      This means that a <xref linkend="sql-reindex"/> operation on an
      index <application>pg_upgrade</application>'d from a previous
      release could potentially fail.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-03-21 [bfb456c1b] Improve error reporting for DROP FUNCTION/PROCEDURE/AGGR
-->

     <para>
      Cause <link linkend="sql-dropfunction"><command>DROP IF EXISTS
      FUNCTION</command></link>/<literal>PROCEDURE</literal>/<literal>AGGREGATE</literal>/<literal>ROUTINE</literal>
      to generate an error if no argument list is supplied and there are
      multiple matching objects (David Rowley)
     </para>

     <para>
      Also improve the error message in such cases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2019-06-16 [6cbfb784c] Rework the pg_statistic_ext catalog
2019-06-16 [aa087ec64] Add pg_stats_ext view for extended statistics
-->

     <para>
      Split the <link
      linkend="catalog-pg-statistic-ext"><structname>pg_statistic_ext</structname></link>
      catalog into two catalogs, and add the <link
      linkend="view-pg-stats-ext"><structname>pg_stats_ext</structname></link>
      view of it (Dean Rasheed, Tomas Vondra)
     </para>

     <para>
      This change supports hiding potentially-sensitive statistics data
      from unprivileged users.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter_e@gmx.net>
2018-11-01 [96b00c433] Remove obsolete pg_constraint.consrc column
-->

     <para>
      Remove obsolete <link
      linkend="catalog-pg-constraint"><structname>pg_constraint</structname></link>.<structfield>consrc</structfield>
      column (Peter Eisentraut)
     </para>

     <para>
      This column has been deprecated for a long time, because it did not
      update in response to other catalog changes (such as column renamings).
      The recommended way to get a text version of a check constraint's
      expression from <structname>pg_constraint</structname>
      is <literal>pg_get_expr(conbin, conrelid)</literal>.
      <function>pg_get_constraintdef()</function> is also a useful
      alternative.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter_e@gmx.net>
2018-11-01 [fe5038236] Remove obsolete pg_attrdef.adsrc column
-->

     <para>
      Remove obsolete <link
      linkend="catalog-pg-attrdef"><structname>pg_attrdef</structname></link>.<structfield>adsrc</structfield>
      column (Peter Eisentraut)
     </para>

     <para>
      This column has been deprecated for a long time, because it did not
      update in response to other catalog changes (such as column renamings).
      The recommended way to get a text version of a default-value expression
      from <structname>pg_attrdef</structname> is <literal>pg_get_expr(adbin,
      adrelid)</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-12-19 [586b98fdf] Make type "name" collation-aware.
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-04-05 [478cacb50] Ensure consistent name matching behavior in processSQLNa
-->

     <para>
      Mark table columns of type <link
      linkend="datatype-character-special-table">name</link> as having
      <quote>C</quote> collation by default (Tom Lane, Daniel Vérité)
     </para>

     <para>
      The comparison operators for data type <type>name</type> can now use
      any collation, rather than always using <quote>C</quote> collation.
      To preserve the previous semantics of queries, columns of
      type <type>name</type> are now explicitly marked as
      having <quote>C</quote> collation.  A side effect of this is that
      regular-expression operators on <type>name</type> columns will now
      use the <quote>C</quote> collation by default, not the database
      collation, to determine the behavior of locale-dependent regular
      expression patterns (such as <literal>\w</literal>).  If you want
      non-C behavior for a regular expression on a <type>name</type>
      column, attach an explicit <literal>COLLATE</literal> clause.  (For
      user-defined <type>name</type> columns, another possibility is to
      specify a different collation at table creation time; but that just
      moves the non-backwards-compatibility to the comparison operators.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-12-20 [7c15cef86] Base information_schema.sql_identifier domain on name, n
2018-12-20 [5bbee34d9] Avoid producing over-length specific_name outputs in inf
2018-12-18 [6b0faf723] Make collation-aware system catalog columns use "C" coll
-->

     <para>
      Treat object-name columns in
      the <link linkend="information-schema"><structname>information_schema</structname></link>
      views as being of type <type>name</type>, not <type>varchar</type>
      (Tom Lane)
     </para>

     <para>
      Per the SQL standard, object-name columns in
      the <structname>information_schema</structname> views are declared
      as being of domain type <type>sql_identifier</type>.
      In <productname>PostgreSQL</productname>, the underlying catalog
      columns are really of type <type>name</type>.  This change
      makes <type>sql_identifier</type> be a domain
      over <type>name</type>, rather than <type>varchar</type> as before.
      This eliminates a semantic mismatch in comparison and sorting
      behavior, which can greatly improve the performance of queries
      on <structname>information_schema</structname> views that restrict
      an object-name column.  Note however that inequality restrictions,
      for example
<programlisting>
SELECT ... FROM information_schema.tables WHERE table_name &lt; 'foo';
</programlisting>
      will now use <quote>C</quote>-locale comparison semantics by
      default, rather than the database's default collation as before.
      Sorting on these columns will also follow <quote>C</quote> ordering
      rules.  The previous behavior (and inefficiency) can be enforced by
      adding a <literal>COLLATE "default"</literal> clause.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter_e@gmx.net>
2018-07-10 [bcbd94080] Remove dynamic_shared_memory_type=none
-->

     <para>
      Remove the ability to disable dynamic shared memory (Kyotaro
      Horiguchi)
     </para>

     <para>
      Specifically, <xref linkend="guc-dynamic-shared-memory-type"/>
      can no longer be set to <literal>none</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-09-12 [e7a221797] Parse more strictly integer parameters from connection s
-->

     <para>
      Parse libpq integer connection parameters more strictly (Fabien
      Coelho)
     </para>

     <para>
      In previous releases, using an incorrect integer value for
      connection parameters <literal>connect_timeout</literal>,
      <literal>keepalives</literal>, <literal>keepalives_count</literal>,
      <literal>keepalives_idle</literal>,
      <literal>keepalives_interval</literal> and <literal>port</literal>
      resulted in libpq either ignoring those values or failing with
      incorrect error messages.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>

  <sect2>
   <title>Changes</title>

    <para>
     Below you will find a detailed account of the changes between
     <productname>PostgreSQL</productname> 12 and the previous
     major release.
    </para>

   <sect3>
    <title>Server</title>

    <sect4>
     <title><link linkend="ddl-partitioning">Partitioning</link></title>

     <itemizedlist>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-11-07 [c6e4133fa] Postpone calculating total_table_pages until after pruni
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-11-15 [34c9e455d] Improve performance of partition pruning remapping a lit
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2018-11-16 [3f2393ede] Redesign initialization of partition routing structures
Author: Robert Haas <rhaas@postgresql.org>
2019-02-21 [9eefba181] Delay lock acquisition for partitions until we route a t
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-03-30 [428b260f8] Speed up planning when partitions can be pruned at plan
-->

       <para>
        Improve performance of many operations on partitioned tables
        (Amit Langote, David Rowley, Tom Lane, Álvaro Herrera)
       </para>

       <para>
        Allow tables with thousands of child partitions to be processed
        efficiently by operations that only affect a small number of
        partitions.
       </para>
      </listitem>

      <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2019-04-03 [f56f8f8da] Support foreign keys that reference partitioned tables
-->

       <para>
        Allow <link linkend="ddl-constraints-fk">foreign keys</link>
        to reference partitioned tables (Álvaro Herrera)
       </para>
      </listitem>

      <listitem>
<!--
Author: Peter Eisentraut <peter_e@gmx.net>
2018-08-01 [0d5f05cde] Allow multi-inserts during COPY into a partitioned table
-->

       <para>
        Improve speed of <command>COPY</command> into partitioned tables
        (David Rowley)
       </para>
      </listitem>

      <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-01-25 [7c079d741] Allow generalized expression syntax for partition bounds
-->

       <para>
        Allow partition bounds to be any expression (Kyotaro Horiguchi,
        Tom Lane, Amit Langote)
       </para>

       <para>
        Such expressions are evaluated at partitioned-table creation time.
        Previously, only simple constants were allowed as partition bounds.
       </para>
      </listitem>

      <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2018-12-17 [ca4103025] Fix tablespace handling for partitioned tables
-->

       <para>
        Allow <command>CREATE TABLE</command>'s tablespace specification
        for a partitioned table to affect the tablespace of its children
        (David Rowley, Álvaro Herrera)
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-04-05 [959d00e9d] Use Append rather than MergeAppend for scanning ordered
-->

       <para>
        Avoid sorting when partitions are already being scanned in the
        necessary order (David Rowley)
       </para>
      </listitem>

      <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
2019-03-07 [898e5e329] Allow ATTACH PARTITION with only ShareUpdateExclusiveLoc
-->

       <para>
        <link linkend="sql-altertable"><command>ALTER TABLE ATTACH
        PARTITION</command></link> is now performed with reduced locking
        requirements (Robert Haas)
       </para>
      </listitem>

      <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2019-02-08 [3677a0b26] Add pg_partition_root to display top-most parent of a pa
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2019-03-04 [b96f6b194] pg_partition_ancestors
Author: Michael Paquier <michael@paquier.xyz>
2018-10-30 [d5eec4eef] Add pg_partition_tree to display information about parti
-->

       <para>
        Add partition introspection functions (Michaël Paquier, Álvaro
        Herrera, Amit Langote)
       </para>

       <para>
        The new function <link
        linkend="functions-info-partition"><function>pg_partition_root()</function></link>
        returns the top-most parent of a partition tree, <link
        linkend="functions-info-partition"><function>pg_partition_ancestors()</function></link>
        reports all ancestors of a partition, and <link
        linkend="functions-info-partition"><function>pg_partition_tree()</function></link>
        displays information about partitions.
       </para>
      </listitem>

      <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-12-18 [f94cec644] Include partitioned indexes to system view pg_indexes
-->

       <para>
        Include partitioned indexes in the system view <link
        linkend="view-pg-indexes"><structname>pg_indexes</structname></link>
        (Suraj Kharage)
       </para>
      </listitem>

      <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2019-04-07 [1c5d9270e] psql \dP: list partitioned tables and indexes
-->

       <para>
        Add <application>psql</application> command <command>\dP</command>
        to list partitioned tables and indexes (Pavel Stehule)
       </para>
      </listitem>

      <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2018-11-19 [d56e0fde8] psql: Describe partitioned tables/indexes as such
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2019-03-26 [1af25ca0c] Improve psql's \d display of foreign key constraints
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2019-04-17 [b036982db] psql: display tablespace for partitioned indexes
-->

       <para>
        Improve <application>psql</application> <command>\d</command>
        and <command>\z</command> display of partitioned tables (Pavel
        Stehule, Michaël Paquier, Álvaro Herrera)
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-02-11 [1d92a0c9f] Redesign the partition dependency mechanism.
-->

       <para>
        Fix bugs that could cause <command>ALTER TABLE DETACH
        PARTITION</command> to leave behind incorrect dependency state,
        allowing subsequent operations to misbehave, for example by not
        dropping a former partition child index when its table is dropped
        (Tom Lane)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Indexes</title>

     <itemizedlist>

      <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
2019-03-20 [dd299df81] Make heap TID a tiebreaker nbtree index column.
Author: Peter Geoghegan <pg@bowt.ie>
2019-03-20 [fab250243] Consider secondary factors during nbtree splits.
Author: Peter Geoghegan <pg@bowt.ie>
2019-03-25 [f21668f32] Add "split after new tuple" nbtree optimization.
-->

       <para>
        Improve performance and space utilization of btree indexes with
        many duplicates (Peter Geoghegan, Heikki Linnakangas)
       </para>

       <para>
        Previously, duplicate index entries were stored unordered within
        their duplicate groups.  This caused overhead during index
        inserts, wasted space due to excessive page splits, and it reduced
        <command>VACUUM</command>'s ability to recycle entire pages.
        Duplicate index entries are now sorted in heap-storage order.
       </para>

       <para>
        Indexes <application>pg_upgrade</application>'d from previous
        releases will not have these benefits.
       </para>
      </listitem>

      <listitem>
<!--
see commits above
-->

       <para>
        Allow multi-column btree indexes to be smaller (Peter Geoghegan,
        Heikki Linnakangas)
       </para>

       <para>
        Internal pages and min/max leaf page indicators now only store
        index keys until the change key, rather than all indexed keys.
        This also improves the locality of index access.
       </para>

       <para>
        Indexes <application>pg_upgrade</application>'d from previous
        releases will not have these benefits.
       </para>
      </listitem>

      <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
2018-07-28 [d2086b08b] Reduce path length for locking leaf B-tree pages during
-->

       <para>
        Improve speed of btree index insertions by reducing locking
        overhead (Alexander Korotkov)
       </para>
      </listitem>

      <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
2019-03-10 [f2e403803] Support for INCLUDE attributes in GiST indexes
-->

       <para>
        Support <link
        linkend="indexes-index-only-scans"><literal>INCLUDE</literal></link> columns
        in <link linkend="gist">GiST</link> indexes (Andrey Borodin)
       </para>
      </listitem>

      <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
2018-09-19 [2a6368343] Add support for nearest-neighbor (KNN) searches to SP-Gi
-->

       <para>
        Add support for nearest-neighbor (<acronym>KNN</acronym>) searches
        of <link linkend="spgist">SP-GiST</link> indexes (Nikita Glukhov,
        Alexander Korotkov, Vlad Sterzhanov)
       </para>

      </listitem>

      <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
2019-04-03 [9155580fd] Generate less WAL during GiST, GIN and SP-GiST index bui
-->

       <para>
        Reduce the <acronym>WAL</acronym> write overhead
        of <acronym>GiST</acronym>, <acronym>GIN</acronym>, and
        <acronym>SP-GiST</acronym> index creation (Anastasia Lubennikova,
        Andrey V. Lepikhov)
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-03-03 [80b9e9c46] Improve performance of index-only scans with many index
-->

       <para>
        Allow index-only scans to be more efficient on indexes with many
        columns (Konstantin Knizhnik)
       </para>
      </listitem>

      <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
2019-03-05 [fe280694d] Scan GiST indexes in physical order during VACUUM.
-->

       <para>
        Improve the performance of vacuum scans of GiST indexes (Andrey
        Borodin, Konstantin Kuznetsov, Heikki Linnakangas)
       </para>
      </listitem>

      <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
2019-03-22 [7df159a62] Delete empty pages during GiST VACUUM.
-->

       <para>
        Delete empty leaf pages during <acronym>GiST</acronym>
        <command>VACUUM</command> (Andrey Borodin)
       </para>
      </listitem>

      <listitem>
<!--
Author: Peter Eisentraut <peter_e@gmx.net>
2018-11-14 [1b5d797cd] Lower lock level for renaming indexes
-->

       <para>
        Reduce locking requirements for index renaming (Peter Eisentraut)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Optimizer</title>

     <itemizedlist>

      <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2019-03-27 [7300a6995] Add support for multivariate MCV lists
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2019-03-27 [a63b29a1d] Minor improvements for the multivariate MCV lists
-->

       <para>
        Allow <xref linkend="sql-createstatistics"/> to create
        most-common-value statistics for multiple columns (Tomas Vondra)
       </para>

       <para>
        This improves optimization for queries that test several columns,
        requiring an estimate of the combined effect of
        several <literal>WHERE</literal> clauses.  If the columns are
        correlated and have non-uniform distributions then multi-column
        statistics will allow much better estimates.
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-02-16 [608b167f9] Allow user control of CTE materialization, and change th
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-04-09 [947613127] Prevent inlining of multiply-referenced CTEs with outer
-->

       <para>
        Allow <link linkend="queries-with">common table expressions</link>
        (<acronym>CTEs</acronym>) to be inlined into the outer query
        (Andreas Karlsson, Andrew Gierth, David Fetter, Tom Lane)
       </para>

       <para>
        Specifically, <acronym>CTE</acronym>s are automatically inlined if
        they have no side-effects, are not recursive, and are referenced
        only once in the query.  Inlining can be prevented by
        specifying <literal>MATERIALIZED</literal>, or forced for
        multiply-referenced <acronym>CTE</acronym>s by
        specifying <literal>NOT MATERIALIZED</literal>.  Previously,
        <acronym>CTE</acronym>s were never inlined and were always
        evaluated before the rest of the query.
       </para>
      </listitem>

      <listitem>
<!--
Author: Peter Eisentraut <peter_e@gmx.net>
2018-07-16 [f7cb2842b] Add plan_cache_mode setting
-->

       <para>
        Allow control over when generic plans are used for prepared
        statements (Pavel Stehule)
       </para>

       <para>
        This is controlled by the <xref linkend="guc-plan-cache_mode"/>
        server parameter.
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-03-25 [8edd0e794] Suppress Append and MergeAppend plan nodes that have a s
-->

       <para>
        Improve optimization of partition and <literal>UNION ALL</literal>
        queries that have only a single child (David Rowley)
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-12-13 [04fe805a1] Drop no-op CoerceToDomain nodes from expressions at plan
-->

       <para>
        Improve processing of <link linkend="domains">domains</link> that
        have no check constraints (Tom Lane)
       </para>

       <para>
        Domains that are being used purely as type aliases no longer cause
        optimization difficulties.
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-12-30 [6f19a8c41] Teach eval_const_expressions to constant-fold LEAST/GREA
-->

       <para>
        Pre-evaluate calls of <link
        linkend="functions-greatest-least"><literal>LEAST</literal></link>
        and <literal>GREATEST</literal> when their arguments are constants
        (Vik Fearing)
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-02-20 [e04a3905e] Improve planner's understanding of strictness of type co
2019-03-01 [65ce07e02] Teach optimizer's predtest.c more things about ScalarArr
-->

       <para>
        Improve optimizer's ability to verify that partial indexes
        with <literal>IS NOT NULL</literal> conditions are usable in
        queries (Tom Lane, James Coleman)
       </para>

       <para>
        Usability can now be recognized in more cases where the calling
        query involves casts or
        large <literal><replaceable>x</replaceable> IN
        (<replaceable>array</replaceable>)</literal> clauses.
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-12-14 [5e0928005] Make pg_statistic and related code account more honestly
-->

       <para>
        Compute <command>ANALYZE</command> statistics using the collation
        defined for each column (Tom Lane)
       </para>

       <para>
        Previously, the database's default collation was used for all
        statistics.  This potentially gives better optimizer behavior for
        columns with non-default collations.
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-03-25 [f7111f72d] Improve planner's selectivity estimates for inequalities
-->

       <para>
        Improve selectivity estimates for inequality comparisons
        on <link linkend="ddl-system-columns"><structfield>ctid</structfield></link>
        columns (Edmund Horner)
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-12-30 [b5415e3c2] Support parameterized TidPaths.
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-12-30 [0a6ea4001] Add a hash opclass for type "tid".
-->

       <para>
        Improve optimization of joins on columns of type <link
        linkend="datatype-oid"><type>tid</type></link>
        (Tom Lane)
       </para>

       <para>
        These changes primarily improve the efficiency of self-joins
        on <structfield>ctid</structfield> columns.
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-07-11 [39a96512b] Mark built-in btree comparison functions as leakproof wh
2019-09-21 [d9110d7e1] Straighten out leakproofness markings on text comparison
-->

       <para>
        Fix the leakproofness designations of some btree comparison operators
        and support functions (Tom Lane)
       </para>

       <para>
        This allows some optimizations that previously would not have been
        applied in the presence of security barrier views or row-level
        security.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>General Performance</title>

     <itemizedlist>

      <listitem>
<!--
Author: Bruce Momjian <bruce@momjian.us>
2018-09-21 [1f7fc7670] doc:  JIT is enabled by default in PG 12
-->

       <para>
        Enable <link linkend="jit">Just-in-Time</link>
        (<acronym>JIT</acronym>) compilation by default, if the server
        has been built with support for it (Andres Freund)
       </para>

       <para>
        Note that this support is not built by default, but has to be
        selected explicitly while configuring the build.
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-01-06 [afb0d0712] Replace the data structure used for keyword lookup.
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-01-09 [c64d0cd5c] Use perfect hashing, instead of binary search, for keywo
-->

       <para>
        Speed up keyword lookup (John Naylor, Joerg Sonnenberger, Tom Lane)
       </para>
      </listitem>

      <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
2019-01-25 [9556aa01c] Use single-byte Boyer-Moore-Horspool search even with mu
-->

       <para>
        Improve search performance for multi-byte characters
        in <function>position()</function> and related functions (Heikki
        Linnakangas)
       </para>
      </listitem>

      <listitem>
<!--
Author: Stephen Frost <sfrost@snowman.net>
2019-04-02 [4d0e994ee] Add support for partial TOAST decompression
-->

       <para>
        Allow <link linkend="storage-toast">toasted</link>
        values to be minimally decompressed (Paul Ramsey)
       </para>

       <para>
        This is useful for routines that only need to examine the initial
        portion of a toasted field.
       </para>
      </listitem>

      <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
2019-03-13 [bbb96c370] Allow ALTER TABLE .. SET NOT NULL to skip provably unnec
-->

       <para>
        Allow <link linkend="sql-altertable"><command>ALTER TABLE ... SET
        NOT NULL</command></link> to avoid unnecessary table scans (Sergei
        Kornilov)
       </para>

       <para>
        This can be optimized when the table's column constraints can be
        recognized as disallowing nulls.
       </para>
      </listitem>

      <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
2019-03-08 [3c5926301] Avoid some table rewrites for ALTER TABLE .. SET DATA TY
-->

       <para>
        Allow <command>ALTER TABLE ... SET DATA TYPE</command> changing between
        <type>timestamp</type> and <type>timestamptz</type> to avoid a
        table rewrite when the session time zone is <acronym>UTC</acronym>
        (Noah Misch)
       </para>

       <para>
        In the <acronym>UTC</acronym> time zone, these two data types are
        binary compatible.
       </para>
      </listitem>

      <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
2018-07-22 [86eaf208e] Hand code string to integer conversion for performance.
-->

       <para>
        Improve speed in converting strings to
        <type>int2</type> or <type>int4</type> integers (Andres Freund)
       </para>
      </listitem>

      <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
2019-03-15 [bb16aba50] Enable parallel query with SERIALIZABLE isolation.
-->

       <para>
        Allow parallelized queries when in <link
        linkend="xact-serializable"><literal>SERIALIZABLE</literal></link>
        isolation mode (Thomas Munro)
       </para>

       <para>
        Previously, parallelism was disabled when in this mode.
       </para>
      </listitem>

      <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
2018-11-07 [3fd2a7932] Provide pg_pread() and pg_pwrite() for random I/O.
Author: Thomas Munro <tmunro@postgresql.org>
2018-11-07 [c24dcd0cf] Use pg_pread() and pg_pwrite() for data files and WAL.
-->

       <para>
        Use <function>pread()</function> and <function>pwrite()</function>
        for random I/O (Oskari Saarenmaa, Thomas Munro)
       </para>

       <para>
        This reduces the number of system calls required for I/O.
       </para>
      </listitem>

      <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
2018-07-24 [1bc180cd2] Use setproctitle_fast() to update the ps status, if avai
-->

       <para>
        Improve the speed of setting the <link
        linkend="guc-update-process-title">process title</link> on
        <systemitem class="osname">FreeBSD</systemitem> (Thomas Munro)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Monitoring</title>

     <itemizedlist>

      <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2019-04-03 [799e22034] Log all statements from a sample of transactions
-->

       <para>
        Allow logging of statements from only a percentage of transactions
        (Adrien Nayrat)
       </para>

       <para>
        The parameter <xref linkend="guc-log-transaction-sample-rate"/>
        controls this.
       </para>
      </listitem>

      <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2019-04-02 [ab0dfc961] Report progress of CREATE INDEX operations
Author: Peter Eisentraut <peter@eisentraut.org>
2019-04-07 [03f9e5cba] Report progress of REINDEX operations
-->

       <para>
        Add progress reporting to <command>CREATE INDEX</command> and
        <command>REINDEX</command> operations (Álvaro Herrera, Peter
        Eisentraut)
       </para>

       <para>
        Progress is reported in the <link
        linkend="create-index-progress-reporting"><structname>pg_stat_progress_create_index</structname></link>
        system view.
       </para>
      </listitem>

      <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
2019-03-25 [6f97457e0] Add progress reporting for CLUSTER and VACUUM FULL.
-->

       <para>
        Add progress reporting to <command>CLUSTER</command> and
        <command>VACUUM FULL</command> (Tatsuro Yamada)
       </para>

       <para>
        Progress is reported in the <link
        linkend="cluster-progress-reporting"><structname>pg_stat_progress_cluster</structname></link>
        system view.
       </para>
      </listitem>

      <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2019-04-02 [280e5f140] Add progress reporting to pg_checksums
-->

       <para>
        Add progress reporting to <xref linkend="app-pgchecksums"/>
        (Michael Banck, Bernd Helmle)
       </para>

       <para>
        This is enabled with the option <option>--progress</option>.
       </para>
      </listitem>

      <listitem>
<!--
Author: Magnus Hagander <magnus@hagander.net>
2019-03-09 [6b9e875f7] Track block level checksum failures in pg_stat_database
-->

       <para>
        Add counter of checksum failures to
        <structname>pg_stat_database</structname> (Magnus Hagander)
       </para>
      </listitem>

      <listitem>
<!--
Author: Magnus Hagander <magnus@hagander.net>
2019-04-12 [77bd49adb] Show shared object statistics in pg_stat_database
-->

       <para>
        Add tracking of global objects in system view
        <structname>pg_stat_database</structname> (Julien Rouhaud)
       </para>

       <para>
        Global objects are shown with a <link
        linkend="pg-stat-database-view"><structname>pg_stat_database</structname></link>.<structfield>datid</structfield>
        value of zero.
       </para>
      </listitem>

      <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-10-09 [c48101620] Add pg_ls_archive_statusdir function
-->

       <para>
        Add the ability to list the contents of the archive directory
        (Christoph Moench-Tegeder)
       </para>

       <para>
        The function is <link
        linkend="functions-admin-genfile-table"><function>pg_ls_archive_statusdir()</function></link>.
       </para>
      </listitem>

      <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-10-05 [9cd92d1a3] Add pg_ls_tmpdir function
-->

       <para>
        Add the ability to list the contents of temporary directories
        (Nathan Bossart)
       </para>

       <para>
        The function, <link
        linkend="functions-admin-genfile-table"><function>pg_ls_tmpdir()</function></link>,
        optionally allows specification of a tablespace.
       </para>
      </listitem>

      <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-02-01 [f60a0e967] Add more columns to pg_stat_ssl
-->

       <para>
        Add information about the client certificate to the system view <link
        linkend="pg-stat-ssl-view"><structname>pg_stat_ssl</structname></link>
        (Peter Eisentraut)
       </para>

       <para>
        The new columns are <structfield>client_serial</structfield>
        and <structfield>issuer_dn</structfield>.  Column
        <structfield>clientdn</structfield> has been renamed to
        <structfield>client_dn</structfield> for clarity.
       </para>
      </listitem>

      <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-02-21 [f9692a769] Hide other user's pg_stat_ssl rows
-->

       <para>
        Restrict visibility of rows in <structname>pg_stat_ssl</structname>
        for unprivileged users (Peter Eisentraut)
       </para>
      </listitem>

      <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-01-30 [689d15e95] Log PostgreSQL version number on startup
-->

       <para>
        At server start, emit a log message including the server
        version number (Christoph Berg)
       </para>
      </listitem>

      <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
2019-03-06 [342cb650e] Don't log incomplete startup packet if it's empty
-->

       <para>
        Prevent logging <quote>incomplete startup packet</quote> if a new
        connection is immediately closed (Tom Lane)
       </para>

       <para>
        This avoids log spam from certain forms of monitoring.
       </para>
      </listitem>

      <listitem>
<!--
Author: Stephen Frost <sfrost@snowman.net>
2018-09-28 [8bddc8640] Add application_name to connection authorized msg
-->

       <para>
        Include the <xref linkend="guc-application-name"/>, if set,
        in <xref linkend="guc-log-connections"/> log messages (Don Seiler)
       </para>
      </listitem>

      <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-02-27 [6ae578a91] Set fallback_application_name for a walreceiver to clust
-->

       <para>
        Make the walreceiver set its application name to the cluster name,
        if set (Peter Eisentraut)
       </para>
      </listitem>

      <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-12-09 [7fee252f6] Add timestamp of last received message from standby to p
-->

       <para>
        Add the timestamp of the last received standby message to <link
        linkend="pg-stat-replication-view"><structname>pg_stat_replication</structname></link>
        (Lim Myungkyu)
       </para>
      </listitem>

      <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-07-02 [c55de5e51] Add wait event for fsync of WAL segments
-->

       <para>
        Add a <link linkend="wait-event-table">wait event</link> for fsync
        of <acronym>WAL</acronym> segments (Konstantin Knizhnik)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title><acronym>Authentication</acronym></title>

     <itemizedlist>

      <listitem>
<!--
Author: Stephen Frost <sfrost@snowman.net>
2019-04-03 [b0b39f72b] GSSAPI encryption support
-->

       <para>
        Add <link linkend="gssapi-auth"><acronym>GSSAPI</acronym></link>
        encryption support (Robbie Harwood, Stephen Frost)
       </para>

       <para>
        This feature allows TCP/IP connections to be encrypted when using
        GSSAPI authentication, without having to set up a separate
        encryption facility such as SSL.
        In support of this, add <literal>hostgssenc</literal>
        and <literal>hostnogssenc</literal> record types in <link
        linkend="auth-pg-hba-conf"><filename>pg_hba.conf</filename></link>
        for selecting connections that do or do not use GSSAPI encryption,
        corresponding to the existing <literal>hostssl</literal>
        and <literal>hostnossl</literal> record types.
        There is also a new <xref linkend="libpq-connect-gssencmode"/>
        libpq option, and a <xref linkend="pg-stat-gssapi-view"/> system
        view.
       </para>
      </listitem>

      <listitem>
<!--
Author: Magnus Hagander <magnus@hagander.net>
2019-03-09 [0516c61b7] Add new clientcert hba option verify-full
-->

       <para>
        Allow the <link
        linkend="auth-cert"><literal>clientcert</literal></link>
        <filename>pg_hba.conf</filename> option to check that the database
        user name matches the client certificate's common name
        (Julian Markwort, Marius Timmer)
       </para>

       <para>
        This new check is enabled with
        <literal>clientcert=verify-full</literal>.
       </para>
      </listitem>

      <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
2019-03-21 [0f086f84a] Add DNS SRV support for LDAP server discovery.
-->

       <para>
        Allow discovery of an <link
        linkend="auth-ldap"><acronym>LDAP</acronym></link> server using
        <acronym>DNS SRV</acronym> records (Thomas Munro)
       </para>

       <para>
        This avoids the requirement of specifying
        <literal>ldapserver</literal>.  It is only supported if
        <productname>PostgreSQL</productname> is compiled with
        <productname>OpenLDAP</productname>.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Server Configuration</title>

     <itemizedlist>

      <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2019-03-23 [ed308d783] Add options to enable and disable checksums in pg_checks
-->

       <para>
        Add ability to enable/disable cluster checksums using <xref
        linkend="app-pgchecksums"/> (Michael Banck, Michaël Paquier)
       </para>

       <para>
        The cluster must be shut down for these operations.
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-03-10 [cbccac371] Reduce the default value of autovacuum_vacuum_cost_delay
-->

       <para>
        Reduce the default value of <xref
        linkend="guc-autovacuum-vacuum-cost-delay"/> to 2ms (Tom Lane)
       </para>

       <para>
        This allows autovacuum operations to proceed faster by default.
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-03-10 [caf626b2c] Convert [autovacuum_]vacuum_cost_delay into floating-poi
-->

       <para>
        Allow <xref linkend="guc-vacuum-cost-delay"/> to specify
        sub-millisecond delays, by accepting fractional values (Tom Lane)
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-03-10 [caf626b2c] Convert [autovacuum_]vacuum_cost_delay into floating-poi
-->

       <para>
        Allow time-based server parameters to use units of <link
        linkend="config-setting">microseconds</link>
        (<literal>us</literal>) (Tom Lane)
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-03-11 [1a83a80a2] Allow fractional input values for integer GUCs, and impr
-->

       <para>
        Allow fractional input for integer server parameters (Tom Lane)
       </para>

       <para>
        For example, <command>SET work_mem = '30.1GB'</command> is now
        allowed, even though <varname>work_mem</varname> is an integer
        parameter.  The value will be rounded to an integer after any
        required units conversion.
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-03-10 [caf626b2c] Convert [autovacuum_]vacuum_cost_delay into floating-poi
-->

       <para>
        Allow units to be defined for floating-point server parameters
        (Tom Lane)
       </para>
      </listitem>

      <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
2019-04-02 [475861b26] Add wal_recycle and wal_init_zero GUCs.
-->

       <para>
        Add <xref linkend="guc-wal-recycle"/> and <xref
        linkend="guc-wal-init-zero"/> server parameters to control
        <acronym>WAL</acronym> file recycling (Jerry Jelinek)
       </para>

       <para>
        Avoiding file recycling can be beneficial on copy-on-write file
        systems like <productname>ZFS</productname>.
       </para>
      </listitem>

      <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2019-04-06 [249d64999] Add support TCP user timeout in libpq and the backend se
-->

       <para>
        Add server parameter <xref linkend="guc-tcp-user-timeout"/> to
        control the server's <acronym>TCP</acronym> timeout (Ryohei Nagaura)
       </para>
      </listitem>

      <listitem>
<!--
Author: Peter Eisentraut <peter_e@gmx.net>
2018-11-20 [e73e67c71] Add settings to control SSL/TLS protocol version
-->

       <para>
        Allow control of the minimum and maximum <acronym>SSL</acronym>
        protocol versions (Peter Eisentraut)
       </para>

       <para>
        The server parameters are <xref
        linkend="guc-ssl-min-protocol-version"/> and <xref
        linkend="guc-ssl-max-protocol-version"/>.
       </para>
      </listitem>

      <listitem>
<!--
Author: Peter Eisentraut <peter_e@gmx.net>
2018-07-30 [98efa76fe] Add ssl_library preset parameter
-->

       <para>
        Add server parameter <xref linkend="guc-ssl-library"/> to report
        the <acronym>SSL</acronym> library version used by the server
        (Peter Eisentraut)
       </para>
      </listitem>

      <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
2019-02-03 [f1bebef60] Add shared_memory_type GUC.
-->

       <para>
        Add server parameter <xref linkend="guc-shared-memory-type"/>
        to control the type of shared memory to use (Andres Freund)
       </para>

       <para>
        This allows selection of <productname>System V</productname>
        shared memory, if desired.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Streaming Replication and Recovery</title>

    <itemizedlist>

     <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-02-07 [13b89f96d] Allow some recovery parameters to be changed with reload
-->

      <para>
       Allow some recovery parameters to be changed with reload (Peter
       Eisentraut)
      </para>

      <para>
       These parameters are <xref linkend="guc-archive-cleanup-command"/>,
       <xref linkend="guc-promote-trigger-file"/>, <xref
       linkend="guc-recovery-end-command"/>, and <xref
       linkend="guc-recovery-min-apply-delay"/>.
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-09-22 [db361db2f] Make GUC wal_sender_timeout user-settable
-->

      <para>
       Allow the streaming replication timeout (<xref
       linkend="guc-wal-sender-timeout"/>) to be set per connection
       (Takayuki Tsunakawa)
      </para>

      <para>
       Previously, this could only be set cluster-wide.
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-10-25 [10074651e] Add pg_promote function
Author: Michael Paquier <michael@paquier.xyz>
2018-11-06 [8f045e242] Switch pg_promote to be parallel-safe
-->

      <para>
       Add function <link
       linkend="functions-recovery-control"><function>pg_promote()</function></link>
       to promote standbys to primaries (Laurenz Albe, Michaël Paquier)
      </para>

      <para>
       Previously, this operation was only possible by using <xref
       linkend="app-pg-ctl"/> or creating a trigger file.
      </para>
     </listitem>

     <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2019-04-05 [9f06d79ef] Add facility to copy replication slots
-->

      <para>
       Allow replication slots to be copied (Masahiko Sawada)
      </para>

      <para>
       The functions for this are <link
       linkend="functions-replication-table"><function>pg_copy_physical_replication_slot()</function></link>
       and <function>pg_copy_logical_replication_slot()</function>.
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2019-02-12 [ea92368cd] Move max_wal_senders out of max_connections for connecti
-->

      <para>
       Make <xref linkend="guc-max-wal-senders"/> not count as part of
       <xref linkend="guc-max-connections"/> (Alexander Kukushkin)
      </para>
     </listitem>

     <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-01-11 [ff8530605] Add value 'current' for recovery_target_timeline
-->

      <para>
       Add an explicit value of <literal>current</literal> for <xref
       linkend="guc-recovery-target-timeline"/> (Peter Eisentraut)
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-09-07 [8582b4d04] Improve handling of corrupted two-phase state files at r
-->

      <para>
       Make recovery fail if a <link
       linkend="sql-prepare-transaction">two-phase transaction</link>
       status file is corrupt (Michaël Paquier)
      </para>

      <para>
       Previously, a warning was logged and recovery continued,
       allowing the transaction to be lost.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Utility Commands</title>

    <itemizedlist>

     <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-03-29 [5dc92b844] REINDEX CONCURRENTLY
-->

      <para>
       Add <xref linkend="sql-reindex"/> <literal>CONCURRENTLY</literal>
       option to allow reindexing without locking out writes (Michaël
       Paquier, Andreas Karlsson, Peter Eisentraut)
      </para>

      <para>
       This is also controlled by the <xref linkend="app-reindexdb"/>
       application's <option>--concurrently</option> option.
      </para>
     </listitem>

     <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-03-30 [fc22b6623] Generated columns
-->

      <para>
       Add support for <link linkend="ddl-generated-columns">generated
       columns</link> (Peter Eisentraut)
      </para>

      <para>
       The content of generated columns are computed from expressions
       (including references to other columns in the same table)
       rather than being specified by <command>INSERT</command> or
       <command>UPDATE</command> commands.
      </para>
     </listitem>

     <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2019-01-20 [31f381740] Allow COPY FROM to filter data using WHERE conditions
-->

      <para>
       Add a <literal>WHERE</literal> clause
       to <link linkend="sql-copy"><command>COPY FROM</command></link> to
       control which rows are accepted (Surafel Temesgen)
      </para>

      <para>
       This provides a simple way to filter incoming data.
      </para>
     </listitem>

     <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
2018-10-09 [212fab992] Relax transactional restrictions on ALTER TYPE ... ADD V
-->

      <para>
       Allow enumerated values to be added more flexibly
       (Andrew Dunstan, Tom Lane, Thomas Munro)
      </para>

      <para>
       Previously, <link linkend="sql-altertype"><command>ALTER TYPE
       ... ADD VALUE</command></link> could not be called in a transaction
       block, unless it was part of the same transaction that created the
       enumerated type.  Now it can be called in a later transaction, so
       long as the new enumerated value is not referenced until after it is
       committed.
      </para>
     </listitem>

     <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-03-24 [280a408b4] Transaction chaining
-->

      <para>
       Add commands to end a transaction and start a new one (Peter
       Eisentraut)
      </para>

      <para>
       The commands are <link linkend="sql-commit"><command>COMMIT AND
       CHAIN</command></link>
       and <link linkend="sql-rollback"><command>ROLLBACK AND
       CHAIN</command></link>.
      </para>
     </listitem>

     <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
2019-04-08 [119dcfad9] Add vacuum_truncate reloption.
Author: Fujii Masao <fujii@postgresql.org>
2019-05-08 [b84dbc8eb] Add TRUNCATE parameter to VACUUM.
-->

      <para>
       Add <xref linkend="sql-vacuum"/> and <command>CREATE
       TABLE</command> options to prevent <command>VACUUM</command>
       from truncating trailing empty pages (Takayuki Tsunakawa)
      </para>

      <para>
       These options are <varname>vacuum_truncate</varname> and
       <varname>toast.vacuum_truncate</varname>.  Use of these options
       reduces <command>VACUUM</command>'s locking requirements, but
       prevents returning disk space to the operating system.
      </para>
     </listitem>

     <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
2019-04-04 [a96c41fee] Allow VACUUM to be run with index cleanup disabled.
Author: Michael Paquier <michael@paquier.xyz>
2019-06-25 [ce59b75d4] Add toast-level reloption for vacuum_index_cleanup
-->

      <para>
       Allow <command>VACUUM</command> to skip index cleanup
       (Masahiko Sawada)
      </para>

      <para>
       This change adds a <command>VACUUM</command> command
       option <literal>INDEX_CLEANUP</literal> as well as a table storage
       option <literal>vacuum_index_cleanup</literal>.  Use of this option
       reduces the ability to reclaim space and can lead to index bloat,
       but it is helpful when the main goal is to freeze old tuples.
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-10-04 [803b1301e] Add option SKIP_LOCKED to VACUUM and ANALYZE
-->

      <para>
       Add the ability to skip <command>VACUUM</command> and
       <command>ANALYZE</command> operations on tables that cannot be
       locked immediately (Nathan Bossart)
      </para>

      <para>
       This option is called <literal>SKIP_LOCKED</literal>.
      </para>
     </listitem>

     <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
2019-03-29 [41b54ba78] Allow existing VACUUM options to take a Boolean argument
-->

      <para>
       Allow <command>VACUUM</command> and <command>ANALYZE</command>
       to take optional Boolean argument specifications (Masahiko Sawada)
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-08-10 [f841ceb26] Improve TRUNCATE by avoiding early lock queue
2018-08-27 [a556549d7] Improve VACUUM and ANALYZE by avoiding early lock queue
-->

      <para>
       Prevent <xref linkend="sql-truncate"/>,
       <command>VACUUM</command> and <command>ANALYZE</command>
       from requesting a lock on
       tables for which the user lacks permission (Michaël Paquier)
      </para>

      <para>
       This prevents unauthorized locking, which could interfere with
       user queries.
      </para>
     </listitem>

     <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2019-04-04 [ea569d64a] Add SETTINGS option to EXPLAIN, to print modified settin
-->

      <para>
       Add <xref linkend="sql-explain"/> option
       <literal>SETTINGS</literal> to output non-default optimizer
       settings (Tomas Vondra)
      </para>

      <para>
       This output can also be obtained when using <xref linkend="auto-explain"/>
       by setting <varname>auto_explain.log_settings</varname>.
      </para>
     </listitem>

     <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
2019-03-19 [01bde4fa4] Implement OR REPLACE option for CREATE AGGREGATE.
-->

      <para>
       Add <literal>OR REPLACE</literal> option to
       <xref linkend="sql-createaggregate"/>
       (Andrew Gierth)
      </para>
     </listitem>

     <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-03-19 [590a87025] Ignore attempts to add TOAST table to shared or catalog
-->

      <para>
       Allow modifications of system catalogs' options using <xref
       linkend="sql-altertable"/> (Peter Eisentraut)
      </para>

      <para>
       Modifications of catalogs' <literal>reloptions</literal> and
       autovacuum settings are now supported.  (Setting <xref
       linkend="guc-allow-system-table-mods"/> is still required.)
      </para>
     </listitem>

     <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-03-13 [f177660ab] Include all columns in default names for foreign key con
-->

      <para>
       Use all key columns' names when selecting default constraint
       names for foreign keys (Peter Eisentraut)
      </para>

      <para>
       Previously, only the first column name was included in the constraint
       name, resulting in ambiguity for multi-column foreign keys.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Data Types</title>

    <itemizedlist>

     <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-06-19 [d8594d123] Update list of combining characters
2019-06-24 [82be666ee] Update unicode_norm_table.h to Unicode 12.1.0
-->

      <para>
       Update assorted knowledge about Unicode to match Unicode 12.1.0
       (Peter Eisentraut)
      </para>

      <para>
       This fixes, for example, cases
       where <application>psql</application> would misformat output
       involving combining characters.
      </para>
     </listitem>

     <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-09-24 [fd582317e] Sync our Snowball stemmer dictionaries with current upst
-->

      <para>
       Update Snowball stemmer dictionaries with support for new languages
       (Arthur Zakirov)
      </para>

      <para>
       This adds word stemming support for Arabic, Indonesian, Irish,
       Lithuanian, Nepali, and Tamil to <link linkend="textsearch">full
       text search</link>.
      </para>
     </listitem>

     <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-03-22 [5e1963fb7] Collations with nondeterministic comparison
-->

      <para>
       Allow creation of <link
       linkend="collation">collations</link> that report
       string equality for strings that are not bit-wise equal (Peter
       Eisentraut)
      </para>

      <para>
       This feature supports <quote>nondeterministic</quote> collations
       that can define case- and accent-agnostic equality comparisons.
       Thus, for example, a case-insensitive uniqueness constraint on a
       text column can be made more easily than before.  This is only
       supported for <acronym>ICU</acronym> collations.
      </para>
     </listitem>

     <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-03-17 [b8f9a2a69] Add support for collation attributes on older ICU versio
-->

      <para>
       Add support for <acronym>ICU</acronym> collation attributes on older
       ICU versions (Peter Eisentraut)
      </para>

      <para>
       This allows customization of the collation rules in a consistent way
       across all ICU versions.
      </para>
     </listitem>

     <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-12-19 [2ece7c07d] Add text-vs-name cross-type operators, and unify name_op
-->

      <para>
       Allow data
       type <link linkend="datatype-character-special-table">name</link>
       to more seamlessly be compared to other text types (Tom Lane)
      </para>

      <para>
       Type <type>name</type> now behaves much like a domain over
       type <type>text</type> that has default collation <quote>C</quote>.
       This allows cross-type comparisons to be processed more efficiently.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Functions</title>

    <itemizedlist>

     <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
2019-03-16 [72b646033] Partial implementation of SQL/JSON path language
Author: Alexander Korotkov <akorotkov@postgresql.org>
2019-03-16 [16d489b0f] Numeric error suppression in jsonpath
Author: Alexander Korotkov <akorotkov@postgresql.org>
2019-04-01 [0a02e2ae0] GIN support for @@ and @? jsonpath operators
-->

      <para>
       Add support for the <acronym>SQL/JSON</acronym> <link
       linkend="functions-sqljson-path">path</link> language
       (Nikita Glukhov, Teodor Sigaev, Alexander Korotkov, Oleg Bartunov,
       Liudmila Mantrova)
      </para>

      <para>
       This allows execution of complex queries on <type>JSON</type>
       values using an <acronym>SQL</acronym>-standard language.
      </para>
     </listitem>

     <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-03-12 [f1d85aa98] Add support for hyperbolic functions, as well as log10()
-->

      <para>
       Add support for <link linkend="functions-math-hyp-table">hyperbolic
       functions</link> (Lætitia Avrot)
      </para>

      <para>
       Also add <function>log10()</function> as an alias for
       <function>log()</function>, for standards compliance.
      </para>
     </listitem>

     <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
2018-10-06 [e954a727f] Improve the accuracy of floating point statistical aggre
-->
      <para>
       Improve the accuracy of statistical aggregates like <link
       linkend="functions-aggregate-statistics-table"><function>variance()</function></link>
       by using more precise algorithms (Dean Rasheed)
      </para>
     </listitem>

     <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-11-14 [600b04d6b] Add a timezone-specific variant of date_trunc().
-->

      <para>
       Allow <link
       linkend="functions-datetime-table"><function>date_trunc()</function></link>
       to have an additional argument to control the time zone (Vik
       Fearing, Tom Lane)
      </para>

      <para>
       This is faster and simpler than using the <literal>AT TIME
       ZONE</literal> clause.
      </para>
     </listitem>

     <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
2018-09-09 [cf9846724] Improve behavior of to_timestamp()/to_date() functions
-->

      <para>
       Adjust <link
       linkend="functions-formatting-table"><function>to_timestamp()</function></link>/<function>to_date()</function>
       functions to be more forgiving of template mismatches (Artur
       Zakirov, Alexander Korotkov, Liudmila Mantrova)
      </para>

      <para>
       This new behavior more closely matches the
       <productname>Oracle</productname> functions of the same name.
      </para>
     </listitem>

     <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2019-03-07 [251cf2e27] Fix minor deficiencies in XMLTABLE, xpath(), xmlexists()
-->

      <para>
       Fix assorted bugs in <link
       linkend="functions-xml"><acronym>XML</acronym> functions</link>
       (Pavel Stehule, Markus Winand, Chapman Flack)
      </para>

      <para>
       Specifically, in <literal>XMLTABLE</literal>,
       <function>xpath()</function>, and <function>xmlexists()</function>,
       fix some cases where nothing was output for a node, or an
       unexpected error was thrown, or necessary escaping of XML special
       characters was omitted.
      </para>
     </listitem>

     <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2019-03-07 [eaaa5986a] Fix the BY {REF,VALUE} clause of XMLEXISTS/XMLTABLE
-->

      <para>
       Allow the <literal>BY VALUE</literal> clause
       in <function>XMLEXISTS</function> and <function>XMLTABLE</function>
       (Chapman Flack)
      </para>

      <para>
       This SQL-standard clause has no effect
       in <productname>PostgreSQL</productname>'s implementation, but it
       was unnecessarily being rejected.
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2019-03-27 [5bde1651b] Switch function current_schema[s]() to be parallel-unsaf
-->

      <para>
       Prevent <link
       linkend="functions-info-session-table"><function>current_schema()</function></link>
       and <function>current_schemas()</function> from being run by
       parallel workers, as they are not parallel-safe (Michaël Paquier)
      </para>
     </listitem>

     <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-01-30 [5f5c01459] Allow RECORD and RECORD[] to be specified in function co
-->

      <para>
       Allow <type>RECORD</type> and <type>RECORD[]</type> to be used
       as column types in a query's column definition list for a <link
       linkend="queries-tablefunctions">table function</link> that is declared
       to return <type>RECORD</type> (Elvis Pranskevichus)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title><link linkend="plpgsql">PL/pgSQL</link></title>

    <itemizedlist>

     <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-01-04 [4879a5172] Support plpgsql variable names that conflict with unrese
-->

      <para>
       Allow SQL commands and variables with the same names as those
       commands to be used in the same PL/pgSQL function (Tom Lane)
      </para>

      <para>
       For example, allow a variable called <varname>comment</varname> to
       exist in a function that calls
       the <command>COMMENT</command> <acronym>SQL</acronym> command.
       Previously this combination caused a parse error.
      </para>
     </listitem>

     <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2018-07-25 [167075be3] Add strict_multi_assignment and too_many_rows plpgsql ch
-->

      <para>
       Add new optional warning and error checks to PL/pgSQL (Pavel
       Stehule)
      </para>

      <para>
       The new checks allow for run-time validation of
       <literal>INTO</literal> column counts and single-row results.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Client Interfaces</title>

    <itemizedlist>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2019-04-06 [249d64999] Add support TCP user timeout in libpq and the backend se
-->

      <para>
       Add connection parameter <xref linkend="libpq-tcp-user-timeout"/>
       to control <application>libpq</application>'s <acronym>TCP</acronym>
       timeout (Ryohei Nagaura)
      </para>
     </listitem>

     <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-04-04 [7bac3acab] Add a "SQLSTATE-only" error verbosity option to libpq an
-->

      <para>
       Allow <application>libpq</application> (and thus
       <application>psql</application>) to report only the
       <literal>SQLSTATE</literal> value in error messages (Didier Gautheron)
      </para>
     </listitem>

     <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-09-11 [2970afa6c] Add PQresultMemorySize function to report allocated size
-->

      <para>
       Add <application>libpq</application>
       function <link linkend="libpq-pqresultmemorysize"><function>PQresultMemorySize()</function></link>
       to report the memory used by a query result (Lars Kanis, Tom Lane)
      </para>
     </listitem>

     <listitem>
<!--
Author: Peter Eisentraut <peter_e@gmx.net>
2018-09-07 [1fea1e325] libpq: Change "options" dispchar to normal
-->

      <para>
       Remove the no-display/debug flag from <application>libpq</application>'s
       <literal>options</literal> connection parameter (Peter Eisentraut)
      </para>

      <para>
       This allows this parameter to be set by
       <application>postgres_fdw</application>.
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Meskes <meskes@postgresql.org>
2019-02-18 [050710b36] Add bytea datatype to ECPG.
-->

      <para>
       Allow <xref linkend="app-ecpg"/> to create variables of data type
       <type>bytea</type> (Ryo Matsumura)
      </para>

      <para>
       This allows ECPG clients to interact with <type>bytea</type> data
       directly, rather than using an encoded form.
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Meskes <meskes@postgresql.org>
2019-05-22 [a1dc6ab46] Implement PREPARE AS statement for ECPG.
-->

      <para>
       Add <command>PREPARE AS</command> support to
       <productname>ECPG</productname> (Ryo Matsumura)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Client Applications</title>

    <itemizedlist>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2019-01-31 [00d1e88d3] Add - -min-xid-age and - -min-mxid-age options to vacuumdb
-->

      <para>
       Allow <xref linkend="app-vacuumdb"/> to select tables for vacuum
       based on their wraparound horizon (Nathan Bossart)
      </para>

      <para>
       The options are <option>--min-xid-age</option> and
       <option>--min-mxid-age</option>.
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2019-01-08 [354e95d1f] Add - -disable-page-skipping and - -skip-locked to vacuumd
-->

      <para>
       Allow <application>vacuumdb</application> to disable waiting for locks
       or skipping all-visible pages (Nathan Bossart)
      </para>

      <para>
       The options are <option>--skip-locked</option> and
       <option>--disable-page-skipping</option>.
      </para>
     </listitem>

     <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-04-01 [cc8d41511] Unified logging system for command-line programs
-->

      <para>
       Add colorization to the output of command-line utilities (Peter
       Eisentraut)
      </para>

      <para>
       This is enabled by setting the environment variable
       <envar>PG_COLOR</envar> to <literal>always</literal>
       or <literal>auto</literal>.  The specific colors used can be
       adjusted by setting the environment variable
       <envar>PG_COLORS</envar>, using ANSI escape codes for colors.
       For example, the default behavior is equivalent to
       <literal>PG_COLORS="error=01;31:warning=01;35:locus=01"</literal>.
      </para>
     </listitem>

     </itemizedlist>

    <sect4>
     <title><xref linkend="app-psql"/></title>

     <itemizedlist>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-11-26 [aa2ba50c2] Add CSV table output mode in psql.
-->

       <para>
        Add <acronym>CSV</acronym> table output mode in
        <application>psql</application> (Daniel Vérité)
       </para>

       <para>
        This is controlled by <command>\pset format csv</command> or the
        command-line <option>--csv</option> option.
       </para>
      </listitem>

      <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-03-11 [27f3dea64] psql: Add documentation URL to \help output
-->

       <para>
        Show the manual page <acronym>URL</acronym> in
        <application>psql</application>'s <command>\help</command> output
        for a SQL command (Peter Eisentraut)
       </para>
      </listitem>

      <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2018-11-19 [6e5f8d489] psql: Show IP address in \conninfo
2019-06-14 [313f56ce2] Tweak libpq's PQhost, PQhostaddr, and psql's \connect
-->

       <para>
        Display the <acronym>IP</acronym> address in
        <application>psql</application>'s <command>\conninfo</command>
        (Fabien Coelho)
       </para>
      </listitem>

      <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-12-23 [11a60d496] Add completion for storage parameters after CREATE TABLE
Author: Michael Paquier <michael@paquier.xyz>
2018-10-26 [5953c9969] Improve tab completion of CREATE EVENT TRIGGER in psql
Author: Michael Paquier <michael@paquier.xyz>
2018-10-26 [292ef6e27] Add tab completion of EXECUTE FUNCTION for CREATE TRIGGE
Author: Michael Paquier <michael@paquier.xyz>
2019-01-28 [23349b18d] Add tab completion for ALTER INDEX ALTER COLUMN in psql
Author: Michael Paquier <michael@paquier.xyz>
2018-12-20 [4cba9c2a3] Add more tab completion for CREATE TABLE in psql
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-09-20 [a7c4dad1a] Fix psql's tab completion for ALTER DATABASE ... SET TAB
Author: Michael Paquier <michael@paquier.xyz>
2018-12-25 [f89ae34ab] Improve tab completion of ALTER INDEX/TABLE with SET STA
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-09-20 [c9a8a401f] Fix psql's tab completion for TABLE.
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-09-21 [121213d9d] Improve tab completion for ANALYZE, EXPLAIN, and VACUUM.
-->

       <para>
        Improve tab completion of <command>CREATE TABLE</command>,
        <command>CREATE TRIGGER</command>,
        <command>CREATE EVENT TRIGGER</command>,
        <command>ANALYZE</command>, <command>EXPLAIN</command>,
        <command>VACUUM</command>, <command>ALTER TABLE</command>,
        <command>ALTER INDEX</command>, <command>ALTER DATABASE</command>,
        and <command>ALTER INDEX ALTER COLUMN</command>
        (Dagfinn Ilmari Mannsåker, Tatsuro Yamada, Michaël Paquier,
        Tom Lane, Justin Pryzby)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title><link linkend="pgbench"><application>pgbench</application></link></title>

     <itemizedlist>

      <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2019-01-10 [6260cc550] pgbench: add \cset and \gset commands
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2019-03-25 [25ee70511] pgbench: Remove \cset
-->

       <para>
        Allow values produced by queries to be assigned
        to <application>pgbench</application> variables (Fabien Coelho,
        Álvaro Herrera)
       </para>

       <para>
        The command for this is <command>\gset</command>.
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-09-25 [5b7e03670] Avoid unnecessary precision loss for pgbench's - -rate ta
-->

       <para>
        Improve precision of <application>pgbench</application>'s
        <option>--rate</option> option (Tom Lane)
       </para>
      </listitem>

      <listitem>
<!--
Author: Peter Eisentraut <peter_e@gmx.net>
2018-10-15 [5b75a4f82] pgbench: Report errors during run better
-->
       <para>
        Improve <application>pgbench</application>'s error reporting with
        clearer messages and return codes (Peter Eisentraut)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Server Applications</title>

    <itemizedlist>

     <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
2018-09-01 [ec7436993] Implement "pg_ctl logrotate" command
-->

      <para>
       Allow control of log file rotation via <xref linkend="app-pg-ctl"/>
       (Kyotaro Horiguchi, Alexander Kuzmenkov, Alexander Korotkov)
      </para>

      <para>
       Previously, this was only possible via an <acronym>SQL</acronym>
       function or a process signal.
      </para>
     </listitem>

     <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
2019-01-14 [bb24439ce] Detach postmaster process from pg_ctl's session at serve
-->

      <para>
       Properly detach the new server process
       during <literal><application>pg_ctl</application> start</literal>
       (Paul Guo)
      </para>

      <para>
       This prevents the server from being shut down if the shell script
       that invoked <application>pg_ctl</application> is interrupted later.
      </para>
     </listitem>

     <listitem>
<!--
Author: Peter Eisentraut <peter_e@gmx.net>
2018-11-07 [3a769d823] pg_upgrade: Allow use of file cloning
-->

      <para>
       Allow <xref linkend="pgupgrade"/> to use the file system's cloning
       feature, if there is one (Peter Eisentraut)
      </para>

      <para>
       The <option>--clone</option> option has the advantages of
       <option>--link</option>, while preventing the old cluster from
       being changed after the new cluster has started.
      </para>
     </listitem>

     <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-12-01 [2d34ad843] Add a - -socketdir option to pg_upgrade.
-->

      <para>
       Allow specification of the socket directory to use
       in <application>pg_upgrade</application> (Daniel Gustafsson)
      </para>

      <para>
       This is controlled by <option>--socketdir</option>; the default
       is the current directory.
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2019-03-23 [e0090c869] Add option -N/- -no-sync to pg_checksums
-->

      <para>
       Allow <xref linkend="app-pgchecksums"/> to disable fsync operations
       (Michaël Paquier)
      </para>

      <para>
       This is controlled by the <option>--no-sync</option> option.
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-07-10 [8a00b96aa] Add pg_rewind - -no-sync
-->

      <para>
       Allow <xref linkend="app-pgrewind"/> to disable fsync operations
       (Michaël Paquier)
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-09-14 [0ba06e0bf] Allow concurrent-safe open() and fopen() in frontend
2018-09-20 [40cfe8606] Enforce translation mode for Windows frontends to text
-->

      <para>
       Fix <xref linkend="pgtestfsync"/> to report accurate
       <literal>open_datasync</literal> durations on
       <productname>Windows</productname> (Laurenz Albe)
      </para>
     </listitem>

    </itemizedlist>

    <sect4>
     <title><link linkend="app-pgdump"><application>pg_dump</application></link>,
     <link linkend="app-pg-dumpall"><application>pg_dumpall</application></link>,
     <link linkend="app-pgrestore"><application>pg_restore</application></link></title>

     <itemizedlist>

      <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2019-03-07 [7e413a0f8] pg_dump: allow multiple rows per insert
2019-06-14 [a193cbec1] Add pg_dumpall rows-per-insert
-->

       <para>
        When <application>pg_dump</application> emits data
        with <command>INSERT</command> commands rather
        than <command>COPY</command>, allow more than one data row to be
        included in each <command>INSERT</command> (Surafel Temesgen,
        David Rowley)
       </para>

       <para>
        The option controlling this is <option>--rows-per-insert</option>.
       </para>
      </listitem>

      <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
2018-07-13 [387a5cfb9] Add pg_dump - -on-conflict-do-nothing option.
-->

       <para>
        Allow <application>pg_dump</application> to emit <command>INSERT
        ... ON CONFLICT DO NOTHING</command> (Surafel Temesgen)
       </para>

       <para>
        This avoids conflict failures during restore.
        The option is <option>--on-conflict-do-nothing</option>.
       </para>
      </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-09-14 [548e50976] Improve parallel scheduling logic in pg_dump/pg_restore.
-->

       <para>
        Decouple the order of operations in a
        parallel <application>pg_dump</application> from the order used by
        a subsequent parallel <application>pg_restore</application> (Tom
        Lane)
       </para>

       <para>
        This allows <application>pg_restore</application> to perform
        more-fully-parallelized parallel restores, especially in cases
        where the original dump was not done in parallel.  Scheduling of a
        parallel <application>pg_dump</application> is also somewhat
        improved.
       </para>
      </listitem>

      <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
2019-02-18 [af25bc03e] Provide an extra-float-digits setting for pg_dump / pg_d
-->

       <para>
        Allow the <xref linkend="guc-extra-float-digits"/> setting to be
        specified for <application>pg_dump</application> and
        <application>pg_dumpall</application> (Andrew Dunstan)
       </para>

       <para>
        This is primarily useful for making dumps that are exactly
        comparable across different source server versions.  It is not
        recommended for normal use, as it may result in loss of precision
        when the dump is restored.
       </para>
      </listitem>

      <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
2019-03-01 [f092de050] Add - -exclude-database option to pg_dumpall
-->

       <para>
        Add <option>--exclude-database</option> option to
        <application>pg_dumpall</application> (Andrew Dunstan)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Source Code</title>

    <itemizedlist>

     <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
2018-11-16 [4da597edf] Make TupleTableSlots extensible, finish split of
Author: Andres Freund <andres@anarazel.de>
2019-03-06 [8586bf7ed] tableam: introduce table AM infrastructure.
Author: Andres Freund <andres@anarazel.de>
2019-03-06 [3b925e905] tableam: Add pg_dump support.
Author: Andres Freund <andres@anarazel.de>
2019-03-11 [c2fe139c2] tableam: Add and use scan APIs.
Author: Andres Freund <andres@anarazel.de>
2019-03-23 [5db6df0c0] tableam: Add tuple_{insert, delete, update, lock} and us
Author: Andres Freund <andres@anarazel.de>
2019-03-28 [d25f51910] tableam: relation creation, VACUUM FULL/CLUSTER, SET TAB
Author: Andres Freund <andres@anarazel.de>
2019-03-29 [d3a5fc17e] Show table access methods as such in psql's \dA.
Author: Andres Freund <andres@anarazel.de>
2019-03-31 [73c954d24] tableam: sample scan.
Author: Andres Freund <andres@anarazel.de>
2019-03-31 [bfbcad478] tableam: bitmap table scan.
existin
-->

      <para>
       Add <xref linkend="sql-create-access-method"/> command to create
       new table types (Andres Freund, Haribabu Kommi, Álvaro Herrera,
       Alexander Korotkov, Dmitry Dolgov)
      </para>

      <para>
       This enables the development of new <link linkend="tableam">table
       access methods</link>, which can optimize storage for different
       use cases.  The existing <literal>heap</literal> access method
       remains the default.
      </para>
     </listitem>

      <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-02-09 [1fb57af92] Create the infrastructure for planner support functions.
2019-02-09 [a391ff3c3] Build out the planner support function infrastructure.
2019-02-11 [74dfe58a5] Allow extensions to generate lossy index conditions.
-->

       <para>
        Add <link linkend="xfunc-optimization">planner support
        function</link> interfaces to improve optimizer estimates,
        inlining, and indexing for functions (Tom Lane)
       </para>

       <para>
        This allows extensions to create planner support functions that
        can provide function-specific selectivity, cost, and row-count
        estimates that can depend on the function's arguments.  Support
        functions can also supply simplified representations and index
        conditions, greatly expanding optimization possibilities.
       </para>
      </listitem>

     <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2019-03-12 [a6417078c] Create a script that can renumber manually-assigned OIDs
2019-03-12 [3aa0395d4] Remove remaining hard-wired OID references in the initia
-->

      <para>
       Simplify renumbering manually-assigned OIDs, and establish a new
       project policy for management of such OIDs (John Naylor, Tom Lane)
      </para>

      <para>
       Patches that manually assign OIDs for new built-in objects (such as
       new functions) should now randomly choose OIDs in the range
       8000&mdash;9999.  At the end of a development cycle, the OIDs used
       by committed patches will be renumbered down to lower numbers,
       currently somewhere in the 4<replaceable>xxx</replaceable> range,
       using the new <link
       linkend="system-catalog-oid-assignment"><command>renumber_oids.pl</command></link>
       script.  This approach should greatly reduce the odds of OID
       collisions between different in-process patches.
      </para>

      <para>
       While there is no specific policy reserving any OIDs for external
       use, it is recommended that forks and other projects needing
       private manually-assigned OIDs use numbers in the high
       7<replaceable>xxx</replaceable> range.  This will avoid conflicts
       with recently-merged patches, and it should be a long time before
       the core project reaches that range.
      </para>
     </listitem>

     <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
2018-10-02 [a33245a85] Don't build static libraries on Cygwin
-->

      <para>
       Build <productname>Cygwin</productname> binaries using dynamic
       instead of static libraries (Marco Atzeri)
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2019-01-01 [1707a0d2a] Remove configure switch - -disable-strong-random
-->

      <para>
       Remove <application>configure</application> switch
       <option>--disable-strong-random</option> (Michaël Paquier)
      </para>

      <para>
       A strong random-number source is now required.
      </para>
     </listitem>

     <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2018-09-26 [96bf88d52] Always use our own versions of *printf().
2018-09-26 [26e9d4d4e] Convert elog.c's useful_strerror() into a globally-used
2018-09-26 [758ce9b77] Incorporate strerror_r() into src/port/snprintf.c, too.
2018-09-26 [d6c55de1f] Implement %m in src/port/snprintf.c, and teach elog.c to
-->

      <para>
       <function>printf</function>-family functions, as well
       as <function>strerror</function>
       and <function>strerror_r</function>, now behave uniformly across
       platforms within Postgres code (Tom Lane)
      </para>

      <para>
       Notably, <function>printf</function>
       understands <literal>%m</literal> everywhere; on
       Windows, <function>strerror</function> copes with Winsock error
       codes (it used to do so in backend but not frontend code);
       and <function>strerror_r</function> always follows the GNU return
       convention.
      </para>
     </listitem>

     <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
2018-08-23 [d9dd406fe] Require C99 (and thus MSCV 2013 upwards).
-->

      <para>
       Require a C99-compliant compiler, and <acronym>MSVC</acronym>
       2013 or later on <productname>Windows</productname> (Andres Freund)
      </para>
     </listitem>

     <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-01-11 [96b8b8b6f] Create INSTALL file using Pandoc
2019-03-27 [2488ea7a9] Use Pandoc also for plain-text documentation output
-->

      <para>
       Use <application>pandoc</application>,
       not <application>lynx</application>, for generating plain-text
       documentation output files (Peter Eisentraut)
      </para>

      <para>
       This affects only the <filename>INSTALL</filename> file generated
       during <literal>make dist</literal> and the seldom-used
       plain-text <filename>postgres.txt</filename> output file.
       Pandoc produces better output than lynx and avoids some
       locale/encoding issues.  Pandoc version 1.13 or later is required.
      </para>
     </listitem>

     <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2019-03-27 [ea55aec0a] doc: Add some images
-->

      <para>
       Support use of images in the <productname>PostgreSQL</productname>
       documentation (Jürgen Purtz)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Additional Modules</title>

    <itemizedlist>

     <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
2019-04-02 [ffab494a4] postgres_fdw: Perform the (ORDERED, NULL) upperrel opera
Author: Etsuro Fujita <efujita@postgresql.org>
2019-04-02 [d50d172e5] postgres_fdw: Perform the (FINAL, NULL) upperrel operati
-->

      <para>
       Allow <literal>ORDER BY</literal> sorts
       and <literal>LIMIT</literal> clauses to be pushed
       to <xref linkend="postgres-fdw"/> foreign servers in more
       cases (Etsuro Fujita)
      </para>
     </listitem>

     <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
2018-12-04 [f8f6e4467] postgres_fdw: Improve cost and size estimation for aggre
Author: Etsuro Fujita <efujita@postgresql.org>
2019-01-24 [fd1afdbaf] postgres_fdw: Account for tlist eval costs in estimate_p
Author: Etsuro Fujita <efujita@postgresql.org>
2019-05-09 [edbcbe277] postgres_fdw: Fix cost estimation for aggregate pushdown
-->

      <para>
       Improve optimizer cost accounting for
       <application>postgres_fdw</application> queries (Etsuro Fujita)
      </para>
     </listitem>

     <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
2018-07-08 [a45adc747] Fix WITH CHECK OPTION on views referencing postgres_fdw
-->

      <para>
       Properly honor <literal>WITH CHECK OPTION</literal> on views
       that reference <application>postgres_fdw</application> tables
       (Etsuro Fujita)
      </para>

      <para>
       While <literal>CHECK OPTION</literal>s on
       <application>postgres_fdw</application> tables are ignored (because
       the reference is foreign), views on such tables are considered
       local, so this change enforces <literal>CHECK OPTION</literal>s
       on them.  Previously, only <command>INSERT</command>s and
       <command>UPDATE</command>s with <literal>RETURNING</literal>
       clauses that returned <literal>CHECK OPTION</literal> values
       were validated.
      </para>
     </listitem>

     <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
2019-01-11 [43cbedab8] Extend pg_stat_statements_reset to reset statistics spec
-->

      <para>
       Allow <link
       linkend="pgstatstatements"><function>pg_stat_statements_reset()</function></link>
       to be more granular (Haribabu Kommi, Amit Kapila)
      </para>

      <para>
       The function now allows reset of statistics for specific databases,
       users, and queries.
      </para>
     </listitem>

     <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
2018-07-31 [2d36a5e9d] Provide a log_level setting for auto_explain
-->

      <para>
       Allow control of the <xref linkend="auto-explain"/> log level
       (Tom Dunstan, Andrew Dunstan)
      </para>

      <para>
       The default is <literal>LOG</literal>.
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2019-01-10 [e1c1d5444] Update unaccent rules with release 34 of CLDR for Latin-
-->

      <para>
       Update <xref linkend="unaccent"/> rules with new
       punctuation and symbols (Hugh Ranalli, Michaël Paquier)
      </para>
     </listitem>

     <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
2019-02-01 [456e3718e] Add combining characters to unaccent.rules.
-->

      <para>
       Allow <application>unaccent</application> to handle some accents
       encoded as combining characters (Hugh Ranalli)
      </para>
     </listitem>

     <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
2018-09-02 [5e8d670c3] Add Greek characters to unaccent.rules.
-->

      <para>
       Allow <application>unaccent</application> to remove accents from
       Greek characters (Tasos Maschalidis)
      </para>
     </listitem>

     <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
2019-03-20 [c1afd175b] Allow amcheck to re-find tuples using new search.
-->

      <para>
       Add a parameter to
       <xref linkend="amcheck"/>'s <function>bt_index_parent_check()</function>
       function to check each index tuple from the root of the tree
       (Peter Geoghegan)
      </para>
     </listitem>

     <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
2018-08-28 [1aaf532de] Rework option set of oid2name
Author: Michael Paquier <michael@paquier.xyz>
2018-08-28 [bfea331a5] Rework option set of vacuumlo
-->

      <para>
       Improve <xref linkend="oid2name"/> and <xref linkend="vacuumlo"/>
       option handling to match other commands (Tatsuro Yamada)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

  </sect2>

  <sect2 id="release-12-acknowledgements">
   <title>Acknowledgments</title>

   <para>
    The following individuals (in alphabetical order) have contributed to this
    release as patch authors, committers, reviewers, testers, or reporters of
    issues.
   </para>

   <simplelist>
    <member>Abhijit Menon-Sen</member>
    <member>Achilleas Mantzios</member>
    <member>Adam Berlin</member>
    <member>Adam Bielanski</member>
    <member>Aditya Toshniwal</member>
    <member>Adrien Nayrat</member>
    <member>Alan Jackson</member>
    <member>Albert Schabhuetl</member>
    <member>Aleksander Alekseev</member>
    <member>Alex Aktsipetrov</member>
    <member>Alex Kliukin</member>
    <member>Alex Macy</member>
    <member>Alexander Korotkov</member>
    <member>Alexander Kukushkin</member>
    <member>Alexander Kuzmenkov</member>
    <member>Alexander Lakhin</member>
    <member>Alexandra Ryzhevich</member>
    <member>Alexey Bashtanov</member>
    <member>Alexey Ermakov</member>
    <member>Alexey Kondratov</member>
    <member>Alexey Kryuchkov</member>
    <member>Alexey Stepanov</member>
    <member>Allison Kaptur</member>
    <member>Álvaro Herrera</member>
    <member>Alyssa Ross</member>
    <member>Amit Kapila</member>
    <member>Amit Khandekar</member>
    <member>Amit Langote</member>
    <member>Amul Sul</member>
    <member>Anastasia Lubennikova</member>
    <member>André Hänsel</member>
    <member>Andrea Gelmini</member>
    <member>Andreas Joseph Krogh</member>
    <member>Andreas Karlsson</member>
    <member>Andreas Kunert</member>
    <member>Andreas Scherbaum</member>
    <member>Andreas Seltenreich</member>
    <member>Andrei Yahorau</member>
    <member>Andres Freund</member>
    <member>Andrew Dunstan</member>
    <member>Andrew Fletcher</member>
    <member>Andrew Gierth</member>
    <member>Andrew Krasichkov</member>
    <member>Andrey Borodin</member>
    <member>Andrey Klychkov</member>
    <member>Andrey Lepikhov</member>
    <member>Andy Abelisto</member>
    <member>Anthony Greene</member>
    <member>Anthony Skorski</member>
    <member>Antonin Houska</member>
    <member>Arne Roland</member>
    <member>Arseny Sher</member>
    <member>Arthur Zakirov</member>
    <member>Ash Marath</member>
    <member>Ashutosh Bapat</member>
    <member>Ashutosh Sharma</member>
    <member>Ashwin Agrawal</member>
    <member>Aya Iwata</member>
    <member>Bartosz Polnik</member>
    <member>Basil Bourque</member>
    <member>Bernd Helmle</member>
    <member>Brad DeJong</member>
    <member>Brigitte Blanc-Lafay</member>
    <member>Bruce Klein</member>
    <member>Bruce Momjian</member>
    <member>Bruno Wolff</member>
    <member>Chapman Flack</member>
    <member>Chen Huajun</member>
    <member>Chris Travers</member>
    <member>Chris Wilson</member>
    <member>Christian Hofstaedtler</member>
    <member>Christoph Berg</member>
    <member>Christoph Moench-Tegeder</member>
    <member>Clemens Ladisch</member>
    <member>Colm McHugh</member>
    <member>Corey Huinker</member>
    <member>Craig Ringer</member>
    <member>Dagfinn Ilmari Mannsåker</member>
    <member>Daisuke Higuchi</member>
    <member>Daniel Fiori</member>
    <member>Daniel Gustafsson</member>
    <member>Daniel Vérité</member>
    <member>Daniel Westermann</member>
    <member>Daniel Wilches</member>
    <member>Darafei Praliaskouski</member>
    <member>Daryl Waycott</member>
    <member>Dave Cramer</member>
    <member>David Binderman</member>
    <member>David Fetter</member>
    <member>David G. Johnston</member>
    <member>David Rowley</member>
    <member>David Steele</member>
    <member>Davy Machado</member>
    <member>Dean Rasheed</member>
    <member>Derek Hans</member>
    <member>Derek Nelson</member>
    <member>Devrim Gündüz</member>
    <member>Dian Fay</member>
    <member>Didier Gautheron</member>
    <member>Dilip Kumar</member>
    <member>Dmitry Dolgov</member>
    <member>Dmitry Marakasov</member>
    <member>Dmitry Molotkov</member>
    <member>Dmitry Shalashov</member>
    <member>Don Seiler</member>
    <member>Donald Dong</member>
    <member>Doug Rady</member>
    <member>Edmund Horner</member>
    <member>Eduards Bezverhijs</member>
    <member>Elvis Pranskevichus</member>
    <member>Emanuel Araújo</member>
    <member>Emre Hasegeli</member>
    <member>Eric Cyr</member>
    <member>Erik Rijkers</member>
    <member>Ertugrul Kahveci</member>
    <member>Etsuro Fujita</member>
    <member>Eugen Konkov</member>
    <member>Euler Taveira</member>
    <member>Fabien Coelho</member>
    <member>Fabrízio de Royes Mello</member>
    <member>Feike Steenbergen</member>
    <member>Filip Rembialkowski</member>
    <member>Gaby Schilders</member>
    <member>Geert Lobbestael</member>
    <member>George Tarasov</member>
    <member>Georgios Kokolatos</member>
    <member>Gianni Ciolli</member>
    <member>Gilles Darold</member>
    <member>Greg Stark</member>
    <member>Grigory Smolkin</member>
    <member>Guillaume Lelarge</member>
    <member>Gunnlaugur Thor Briem</member>
    <member>Gurjeet Singh</member>
    <member>Hadi Moshayedi</member>
    <member>Hailong Li</member>
    <member>Hans Buschmann</member>
    <member>Haribabu Kommi</member>
    <member>Haruka Takatsuka</member>
    <member>Hayato Kuroda</member>
    <member>Heikki Linnakangas</member>
    <member>Hironobu Suzuki</member>
    <member>Hubert Lubaczewski</member>
    <member>Hugh Ranalli</member>
    <member>Ian Barwick</member>
    <member>Ibrar Ahmed</member>
    <member>Ildar Musin</member>
    <member>Insung Moon</member>
    <member>Ioseph Kim</member>
    <member>Isaac Morland</member>
    <member>Ivan Panchenko</member>
    <member>Jack Kelly</member>
    <member>Jacob Champion</member>
    <member>Jaime Casanova</member>
    <member>Jakob Egger</member>
    <member>Jakub Glapa</member>
    <member>Jakub Janecek</member>
    <member>James Coleman</member>
    <member>James Inform</member>
    <member>James Robinson</member>
    <member>James Sewell</member>
    <member>James Tomson</member>
    <member>Jan Chochol</member>
    <member>Jaroslav Sivy</member>
    <member>Jean-Christophe Arnu</member>
    <member>Jean-Marc Voillequin</member>
    <member>Jean-Pierre Pelletier</member>
    <member>Jeevan Chalke</member>
    <member>Jeevan Ladhe</member>
    <member>Jeff Davis</member>
    <member>Jeff Janes</member>
    <member>Jeremy Evans</member>
    <member>Jeremy Schneider</member>
    <member>Jeremy Smith</member>
    <member>Jerry Jelinek</member>
    <member>Jesper Pedersen</member>
    <member>Jianing Yang</member>
    <member>Jie Zhang</member>
    <member>Jim Nasby</member>
    <member>Jimmy Yih</member>
    <member>Joe Conway</member>
    <member>Joe Wildish</member>
    <member>Joerg Sonnenberger</member>
    <member>John Klann</member>
    <member>John Naylor</member>
    <member>Jonah Harris</member>
    <member>Jonathan S. Katz</member>
    <member>Jorge Gustavo Rocha</member>
    <member>José Arthur Benetasso Villanova</member>
    <member>Joshua D. Drake</member>
    <member>Juan José Santamaría Flecha</member>
    <member>Julian Hsiao</member>
    <member>Julian Markwort</member>
    <member>Julian Schauder</member>
    <member>Julien Rouhaud</member>
    <member>Jürgen Purtz</member>
    <member>Jürgen Strobel</member>
    <member>Justin Pryzby</member>
    <member>Kaiting Chen</member>
    <member>Karen Huddleston</member>
    <member>Karl Czajkowski</member>
    <member>Karl O. Pinc</member>
    <member>Keiichi Hirobe</member>
    <member>Keith Fiske</member>
    <member>Ken Tanzer</member>
    <member>Kenji Uno</member>
    <member>Kevin Grittner</member>
    <member>Kevin Hale Boyes</member>
    <member>Kieran McCusker</member>
    <member>Kirk Jamison</member>
    <member>Kohei KaiGai</member>
    <member>Konstantin Knizhnik</member>
    <member>Konstantin Kuznetsov</member>
    <member>Kristjan Tammekivi</member>
    <member>Kuntal Ghosh</member>
    <member>Kyle Samson</member>
    <member>Kyotaro Horiguchi</member>
    <member>Lætitia Avrot</member>
    <member>Lars Kanis</member>
    <member>Laurenz Albe</member>
    <member>Lim Myungkyu</member>
    <member>Liu Huailing</member>
    <member>Liudmila Mantrova</member>
    <member>Lloyd Albin</member>
    <member>Luca Ferrari</member>
    <member>Luis M. Carril</member>
    <member>Lukas Eder</member>
    <member>Lukas Fittl</member>
    <member>Madelaine Thibaut</member>
    <member>Madeleine Thompson</member>
    <member>Magnus Hagander</member>
    <member>Mahendra Singh</member>
    <member>Mai Peng</member>
    <member>Maksim Milyutin</member>
    <member>Maksym Boguk</member>
    <member>Malthe Borch</member>
    <member>Manuel Rigger</member>
    <member>Marco Atzeri</member>
    <member>Marco Slot</member>
    <member>Marina Polyakova</member>
    <member>Mario De Frutos Dieguez</member>
    <member>Marius Timmer</member>
    <member>Mark Chambers</member>
    <member>Mark Dilger</member>
    <member>Marko Tiikkaja</member>
    <member>Markus Winand</member>
    <member>Martín Marqués</member>
    <member>Masahiko Sawada</member>
    <member>Masao Fujii</member>
    <member>Mateusz Guzik</member>
    <member>Mathias Brossard</member>
    <member>Matt Williams</member>
    <member>Matthias Otterbach</member>
    <member>Matvey Arye</member>
    <member>Melanie Plageman</member>
    <member>Mi Tar</member>
    <member>Michael Banck</member>
    <member>Michael Davidson</member>
    <member>Michael Meskes</member>
    <member>Michael Paquier</member>
    <member>Michael Vitale</member>
    <member>Michel Pelletier</member>
    <member>Mikalai Keida</member>
    <member>Mike Palmiotto</member>
    <member>Mithun Cy</member>
    <member>Morgan Owens</member>
    <member>Murat Kabilov</member>
    <member>Nathan Bossart</member>
    <member>Nawaz Ahmed</member>
    <member>Neeraj Kumar</member>
    <member>Nick Barnes</member>
    <member>Nico Williams</member>
    <member>Nikita Glukhov</member>
    <member>Nikolay Shaplov</member>
    <member>Ning Yu</member>
    <member>Nishant Fnu</member>
    <member>Noah Misch</member>
    <member>Norbert Benkocs</member>
    <member>Noriyoshi Shinoda</member>
    <member>Oleg Bartunov</member>
    <member>Oleg Samoilov</member>
    <member>Oleksii Kliukin</member>
    <member>Ondrej Bouda</member>
    <member>Oskari Saarenmaa</member>
    <member>Pan Bian</member>
    <member>Patrick Francelle</member>
    <member>Patrick McHardy</member>
    <member>Paul A. Jungwirth</member>
    <member>Paul Bonaud</member>
    <member>Paul Guo</member>
    <member>Paul Martinez</member>
    <member>Paul Ramsey</member>
    <member>Paul Schaap</member>
    <member>Paul van der Linden</member>
    <member>Pavan Deolasee</member>
    <member>Pavel Oskin</member>
    <member>Pavel Raiskup</member>
    <member>Pavel Stehule</member>
    <member>Peifeng Qiu</member>
    <member>Peter Billen</member>
    <member>Peter Eisentraut</member>
    <member>Peter Geoghegan</member>
    <member>Peter Neave</member>
    <member>Petr Fedorov</member>
    <member>Petr Jelínek</member>
    <member>Petr Slavov</member>
    <member>Petru-Florin Mihancea</member>
    <member>Phil Bayer</member>
    <member>Phil Florent</member>
    <member>Philip Dubé</member>
    <member>Pierre Ducroquet</member>
    <member>Piotr Gabriel Kosinski</member>
    <member>Piotr Stefaniak</member>
    <member>Piotr Wlodarczyk</member>
    <member>Prabhat Sahu</member>
    <member>Quentin Rameau</member>
    <member>Rafael Castro</member>
    <member>Rafia Sabih</member>
    <member>Rahila Syed</member>
    <member>Rajkumar Raghuwanshi</member>
    <member>Rares Salcudean</member>
    <member>Raúl Marín Rodríguez</member>
    <member>Regina Obe</member>
    <member>Renaud Navarro</member>
    <member>Richard Guo</member>
    <member>Rick Otten</member>
    <member>Rikard Falkeborn</member>
    <member>RK Korlapati</member>
    <member>Robbie Harwood</member>
    <member>Robert Haas</member>
    <member>Robert Treat</member>
    <member>Robert Vollmert</member>
    <member>Roger Curley</member>
    <member>Roman Zharkov</member>
    <member>Ronan Dunklau</member>
    <member>Rui Hai Jiang</member>
    <member>Rushabh Lathia</member>
    <member>Ryan Lambert</member>
    <member>Ryo Matsumura</member>
    <member>Ryohei Nagaura</member>
    <member>Ryohei Takahashi</member>
    <member>Samuel Williams</member>
    <member>Sand Stone</member>
    <member>Sanyo Capobiango</member>
    <member>Satoru Koizumi</member>
    <member>Sean Johnston</member>
    <member>Serge Latyntsev</member>
    <member>Sergei Kornilov</member>
    <member>Sergey Pashkov</member>
    <member>Sergio Conde Gómez</member>
    <member>Shawn Debnath</member>
    <member>Shay Rojansky</member>
    <member>Sho Kato</member>
    <member>Shohei Mochizuki</member>
    <member>Shouyu Luo</member>
    <member>Simon Riggs</member>
    <member>Sivasubramanian Ramasubramanian</member>
    <member>Slawomir Chodnicki</member>
    <member>Stas Kelvish</member>
    <member>Stefan Kadow</member>
    <member>Stepan Yankevych</member>
    <member>Stephen Amell</member>
    <member>Stephen Frost</member>
    <member>Steve Rogerson</member>
    <member>Steve Singer</member>
    <member>Steven Winfield</member>
    <member>Surafel Temesgen</member>
    <member>Suraj Kharage</member>
    <member>Suresh Kumar R</member>
    <member>Takayuki Tsunakawa</member>
    <member>Takeshi Ideriha</member>
    <member>Takuma Hoshiai</member>
    <member>Tasos Maschalidis</member>
    <member>Tatsuo Ishii</member>
    <member>Tatsuro Yamada</member>
    <member>Teodor Sigaev</member>
    <member>Thom Brown</member>
    <member>Thomas Munro</member>
    <member>Thomas Poty</member>
    <member>Tillmann Schulz</member>
    <member>Tim Möhlmann</member>
    <member>Timur Birsh</member>
    <member>Tobias Bussmann</member>
    <member>Tom Cassidy</member>
    <member>Tom Dunstan</member>
    <member>Tom Gottfried</member>
    <member>Tom Lane</member>
    <member>Tomas Vondra</member>
    <member>Tushar Ahuja</member>
    <member>Ulf Adams</member>
    <member>Vaishnavi Prabakaran</member>
    <member>Victor Petrovykh</member>
    <member>Victor Wagner</member>
    <member>Victor Yegorov</member>
    <member>Vijaykumar Jain</member>
    <member>Vik Fearing</member>
    <member>Vlad Sterzhanov</member>
    <member>Vladimir Baranoff</member>
    <member>Vladimir Kriukov</member>
    <member>Wu Fei</member>
    <member>Yaroslav Schekin</member>
    <member>Yi Huang</member>
    <member>Yoshikazu Imai</member>
    <member>Yugo Nagata</member>
    <member>Yulian Khodorkovskiy</member>
    <member>Yuming Wang</member>
    <member>YunQiang Su</member>
    <member>Yuri Kurenkov</member>
    <member>Yusuke Egashira</member>
    <member>Yuzuko Hosoya</member>
    <member>Zhou Digoal</member>
   </simplelist>
  </sect2>

 </sect1>
