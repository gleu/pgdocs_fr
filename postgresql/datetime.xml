<?xml version="1.0" encoding="UTF-8"?>
<appendix id="datetime-appendix">
 <title>Support de date/heure</title>

 <para>
  <productname>PostgreSQL</productname> utilise un analyseur heuristique interne
  pour le support des dates/heures saisies. Les dates et heures, saisies
  sous la forme de chaînes de caractères, sont découpées en champs distincts
  après détermination du type d'information contenue dans chaque champ. Chaque champ est
  interprété&nbsp;; une valeur peut lui être affectée, il peut être ignoré ou
  encore être rejeté. Le parseur contient des tables de recherche internes
  pour tous les champs textuels y compris les mois, les jours de la semaine et
  les fuseaux horaires.
 </para>

 <para>
  Cette annexe décrit le contenu des tables de
  correspondance et les méthodes utilisées par le parseur pour décoder
  les dates et heures.
 </para>

 <sect1 id="datetime-input-rules">
  <title>Interprétation des Date/Heure saisies</title>

  <para>
   Les chaînes en entrée de type date/heure sont décodées en utilisant le
   processus suivant.
  </para>

  <procedure>
   <step>
    <para>
     Diviser la chaîne saisie en lexèmes et catégoriser les lexèmes en
     chaînes, heures, fuseaux horaires et nombres.
    </para>

    <substeps>
     <step>
      <para>
       Si le lexème numérique contient un double-point (<literal>:</literal>),
       c'est une chaîne de type heure. On inclut tous les chiffres et
       double-points qui suivent.
      </para>
     </step>

     <step>
      <para>
       Si le lexème numérique contient un tiret (<literal>-</literal>), une
       barre oblique (<literal>/</literal>) ou au moins deux points
       (<literal>.</literal>), c'est une chaîne de type date qui contient peut-être
       un mois sous forme textuelle. Si un lexème de date a déjà été reconnu, il
       est alors interprété comme un nom de fuseau horaire
       (par exemple <literal>America/New_York</literal>).
      </para>
     </step>

     <!-- e.g. : par exemple
     i.e. : id est, c'est-à-dire -->
     <step>
      <para>
       Si le lexème n'est que numérique alors il s'agit soit d'un champ simple
       soit d'une date concaténée ISO 8601 (<literal>19990113</literal> pour
       le 13 janvier 1999, par exemple) ou d'une heure concaténée ISO 8601
       (<literal>141516</literal> pour 14:15:16, par exemple).
      </para>
     </step>

     <step>
      <para>
       Si le lexème débute par le signe plus (<literal>+</literal>) ou le
       signe  moins (<literal>-</literal>), alors il s'agit soit d'un fuseau horaire numérique,
       soit d'un champ spécial.
      </para>
     </step>
    </substeps>
   </step>

   <step>
    <para>
     Si le lexème est une chaîne texte alphabétique, le comparer avec les
     différentes chaînes possibles&nbsp;:
    </para>

    <substeps>
     <step>
      <para>
       Vérifier si le jeton correspond à une abréviation connue d'un fuseau
       horaire. Ces abréviations sont fournies par le fichier de configuration
       décrit dans <xref linkend="datetime-config-files"/>.
      </para>
     </step>

     <step>
      <para>
       S'il n'est pas trouvé, rechercher dans la table interne
       pour vérifier si le lexème est une chaîne spéciale
       (<literal>today</literal>, par exemple),
       un jour (<literal>Thursday</literal>, par exemple),
       un mois (<literal>January</literal>, par exemple),
       ou du bruit (<literal>at</literal>, <literal>on</literal>, par exemple).
      </para>
     </step>

     <!-- Le passage suivant ne figure pas dans la doc PG 8.2.3
      <step>
       <para>
	Si pas trouvé, faire une recherche binaire similaire dans une table de
	correspondance pour faire correspondre le marqueur avec un fuseau horaire.
       </para>
      </step>
-->
     <step>
      <para>
       Si le lexème n'est toujours pas trouvé, une erreur est levée.
      </para>
     </step>
    </substeps>
   </step>

   <step>
    <para>
     Lorsque le lexème est un nombre ou un champ de nombre&nbsp;:
    </para>

    <substeps>
     <step>
      <para>
       S'il y a huit ou six chiffres,
       et qu'aucun autre champ date n'a été lu, alors il est interprété comme
       une <quote>date concaténée</quote> (<literal>19990118</literal> ou
       <literal>990118</literal>, par exemple).
       L'interprétation est <literal>AAAAMMJJ</literal> ou <literal>AAMMJJ</literal>.
      </para>
     </step>

     <step>
      <para>
       Si le lexème est composé de trois chiffres
       et qu'une année est déjà lue, alors il est interprété comme un jour de l'année.
      </para>
     </step>

     <step>
      <para>
       Si quatre ou six chiffres et une année sont déjà lus, alors il est
       interprété comme une heure (<literal>HHMM</literal> ou <literal>HHMMSS</literal>).
      </para>
     </step>

     <step>
      <para>
       Si le lexème est composé de trois chiffres ou plus et qu'aucun champ
       date n'a été trouvé, il est interprété
       comme une année (cela impose l'ordre aa-mm-jj des champs dates restants).
      </para>
     </step>

     <step>
      <para>
       Dans tous les autres cas, le champ date est supposé suivre l'ordre
       imposé par le paramètre
       <varname>datestyle</varname> : mm-jj-aa, jj-mm-aa, ou aa-mm-jj.
       Si un champ jour ou mois est en dehors des limites, une erreur est
       levée.
      </para>
     </step>
    </substeps>
   </step>

   <!-- negate : rendre négatif et non annuler -->
   <step>
    <para>
     Si BC est indiqué, le signe de l'année est inversé et un est ajouté pour
     le stockage interne.  (Il n'y a pas d'année zéro dans le calendrier Grégorien,
     alors numériquement 1 BC devient l'année zéro.)
    </para>
   </step>

   <step>
    <para>
     Si BC n'est pas indiqué et que le champ année est composé de deux chiffres, alors
     l'année est ajustée à quatre chiffres. Si le champ vaut moins que 70,
     alors on ajoute 2000, sinon 1900.

     <tip>
      <para>
       Les années du calendrier Grégorien AD 1&ndash;99 peuvent être saisie avec 4
       chiffres, deux zéros en tête (<literal>0099</literal> pour
       AD 99, par exemple).
      </para>
     </tip>
    </para>
   </step>
  </procedure>
 </sect1>


 <sect1 id="datetime-invalid-input">
  <title>Gestion des horodatages ambigus ou invalides</title>

  <para>
   D'ordinaire, si une chaîne date/heure est syntaxiquement valide mais
   contient des valeurs de champs hors de l'intervalle, une erreur sera
   renvoyée. Par exemple, une entrée indiquant le 31 février sera rejetée.
  </para>

  <para>
   Lors d'un changement d'heure, il est possible qu'une chaîne apparemment
   valide représente un horodatage inexistant ou ambigu. Ce genre de cas n'est
   pas rejeté. L'ambiguité est résolue en déterminant le décalage UTC à
   appliquer. Par exemple, supposons que le paramètre
   <xref linkend="guc-timezone"/> est configuré à
   <literal>America/New_York</literal>&nbsp;:
   <programlisting>
=&gt; SELECT '2018-03-11 02:30'::timestamptz;
      timestamptz
------------------------
 2018-03-11 03:30:00-04
(1 row)
   </programlisting>
   Comme ce jour était une transition vers l'avant pour ce fuseau horaire,
   l'heure 2:30AM n'existe pas&nbsp;; les horloges passent directement de 2h
   à 3h EDT. <productname>PostgreSQL</productname> interpréte l'heure donnée
   comme s'il s'agissait de l'heure standard (UTC-5), qui se décline donc en
   3:30 EDT (UTC-4).
  </para>

  <para>
   De la même façon, prenons en considération ce comportement lors d'une
   transition en arrière&nbsp;:
   <programlisting>
=&gt; SELECT '2018-11-04 02:30'::timestamptz;
      timestamptz
------------------------
 2018-11-04 02:30:00-05
(1 row)
   </programlisting>
   À cette date, il existe deux interprétations possibles de 2:30AM&nbsp;;
   soit 2:30AM EDT, soit une heure après la transition, 2:30AM EST.
   De nouveau, <productname>PostgreSQL</productname> interprète l'heure donnée
   comme s'il s'agissait de l'heure standard (UTC-5). Nous ouvons forcer
   l'interprétation en spécifiant le temps et sa règle de conversion&nbsp;:
   <programlisting>
=&gt; SELECT '2018-11-04 02:30 EDT'::timestamptz;
      timestamptz
------------------------
 2018-11-04 01:30:00-05
(1 row)
   </programlisting>
   Cet horodatage peut être interprété soit comme 2:30 UTC-4 soit comme
   1:30 UTC-5&nbsp;; le code de sortie de l'horodatage a choisi ce dernier.
  </para>

  <para>
   La règle précise qui se trouve appliquée dans de tels cas est qu'un
   horodatage invalide qui semble survenir pendant une transition vers
   l'avant est affecté au décalage UTC qui prévaut dans le fuseau horaire
   juste avant la transition alors qu'un horodatage ambigu qui semble
   survenir pendant une transition vers l'arrière se voit affecté le décalage
   UTC qui prévaut juste après la transition. Dans la plupart des fuseaux
   horaires, ceci est équivalent à dire que <quote>l'interprétation du temps
    standard est préféré lorsqu'il y a un doute</quote>.
  </para>

  <para>
   Dans tous les cas, le décalage UTC associé à un horodatage peut être
   spécifié explicitement, en utilisant soit un décalage numérique UTC ou une
   abréviation de fuseau horaire correspondent au décalage TUC fixé. La règle
   donnée s'applique seulement si nécessaire pour convertir un décalage UTC
   pour un fuseau horaire pour lequel le décalage varie.
  </para>
 </sect1>

 <sect1 id="datetime-keywords">
  <title>Mots clés Date/Heure</title>

  <para>
   <xref linkend="datetime-month-table"/> présente les lexèmes
   reconnus comme des noms de mois.
  </para>

  <table id="datetime-month-table">
   <title>Noms de mois</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Mois</entry>
      <entry>Abréviations</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>January (Janvier)</entry>
      <entry>Jan</entry>
     </row>
     <row>
      <entry>February (Février)</entry>
      <entry>Feb</entry>
     </row>
     <row>
      <entry>March (Mars)</entry>
      <entry>Mar</entry>
     </row>
     <row>
      <entry>April (Avril)</entry>
      <entry>Apr</entry>
     </row>
     <row>
      <entry>May (Mai)</entry>
      <entry></entry>
     </row>
     <row>
      <entry>June (Juin)</entry>
      <entry>Jun</entry>
     </row>
     <row>
      <entry>July (Juillet)</entry>
      <entry>Jul</entry>
     </row>
     <row>
      <entry>August (Août)</entry>
      <entry>Aug</entry>
     </row>
     <row>
      <entry>September (Septembre)</entry>
      <entry>Sep, Sept</entry>
     </row>
     <row>
      <entry>October (Octobre)</entry>
      <entry>Oct</entry>
     </row>
     <row>
      <entry>November (Novembre)</entry>
      <entry>Nov</entry>
     </row>
     <row>
      <entry>December (Décembre)</entry>
      <entry>Dec</entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   <xref linkend="datetime-dow-table"/> présente les lexèmes
   reconnus comme des noms de jours de la semaine.
  </para>

  <table id="datetime-dow-table">
   <title>Noms des jours de la semaine</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Jour</entry>
      <entry>Abréviation</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>Sunday (Dimanche)</entry>
      <entry>Sun</entry>
     </row>
     <row>
      <entry>Monday (Lundi)</entry>
      <entry>Mon</entry>
     </row>
     <row>
      <entry>Tuesday (Mardi)</entry>
      <entry>Tue, Tues</entry>
     </row>
     <row>
      <entry>Wednesday (Mercredi)</entry>
      <entry>Wed, Weds</entry>
     </row>
     <row>
      <entry>Thursday (Jeudi)</entry>
      <entry>Thu, Thur, Thurs</entry>
     </row>
     <row>
      <entry>Friday (Vendredi)</entry>
      <entry>Fri</entry>
     </row>
     <row>
      <entry>Saturday (Samedi)</entry>
      <entry>Sat</entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   <xref linkend="datetime-mod-table"/> présente les lexèmes utilisés par
   divers modificateurs.
  </para>

  <table id="datetime-mod-table">
   <title>Modificateurs de Champs Date/Heure</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Identifiant</entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><literal>AM</literal></entry>
      <entry>L'heure précède 12:00</entry>
     </row>
     <row>
      <entry><literal>AT</literal></entry>
      <entry>Ignoré</entry>
     </row>
     <row>
      <entry><literal>JULIAN</literal>, <literal>JD</literal>, <literal>J</literal></entry>
      <entry>Le champ suivant est une date du calendrier Julien</entry>
     </row>
     <row>
      <entry><literal>ON</literal></entry>
      <entry>Ignoré</entry>
     </row>
     <row>
      <entry><literal>PM</literal></entry>
      <entry>L'heure suit 12:00</entry>
     </row>
     <row>
      <entry><literal>T</literal></entry>
      <entry>Le champ suivant est une heure</entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="datetime-config-files">
  <title>Fichiers de configuration date/heure</title>

  <indexterm>
   <primary>fuseau horaire</primary>
   <secondary>saisie d'abréviations</secondary>
  </indexterm>

  <para>
   Comme il n'existe pas de réel standard des abréviations de fuseaux
   horaire, <productname>PostgreSQL</productname> permet de personnaliser
   l'ensemble des abréviations acceptées par le serveur. Le paramètre
   d'exécution <xref linkend="guc-timezone-abbreviations"/> détermine
   l'ensemble des abréviations actives. Bien que tout utilisateur de la base
   puisse modifier ce paramètre, les valeurs possibles sont
   sous le contrôle de l'administrateur de bases de données &mdash; ce sont en fait
   les noms des fichiers de configuration stockés dans
   <filename>.../share/timezonesets/</filename> du répertoire d'installation.
   En ajoutant ou en modifiant les fichiers de ce répertoire, l'administrateur
   peut définir les règles d'abréviation des fuseaux horaires.
  </para>

  <para>
   <varname>timezone_abbreviations</varname> peut prendre tout nom
   de fichier situé dans <filename>.../share/timezonesets/</filename>, sous
   réserve que ce nom soit purement alphabétique. (L'interdiction de
   caractères non alphabétique dans <varname>timezone_abbreviations</varname>
   empêche la lecture de fichiers en dehors du répertoire prévu et
   celle de fichiers de sauvegarde ou autre.)
  </para>

  <para>
   Un fichier d'abréviation de zones horaires peut contenir des lignes blanches
   et des commentaires (commençant avec un <literal>#</literal>). Les
   autres lignes doivent suivre l'un des formats suivants&nbsp;:

   <synopsis>
<replaceable>abréviation_fuseau_horaire</replaceable> <replaceable>décalage</replaceable>
<replaceable>abréviation_fuseau_horaire</replaceable> <replaceable>décalage</replaceable> D
<replaceable>abréviation_fuseau_horaire</replaceable> <replaceable>nom_fuseau_horaire</replaceable>
@INCLUDE <replaceable>nom_fichier</replaceable>
@OVERRIDE
   </synopsis>
  </para>

  <para>
   Un <replaceable>abréviation_fuseau_horaire</replaceable> n'est que
   l'abréviation définie. Le <replaceable>décalage</replaceable> est un entier
   donner le décalage en secondes à partir d'UTC, une valeur positive
   signifiant à l'est de Greenwich, une valeur négative à l'ouest. Ainsi,
   -18000 représente cinq heures à l'ouest de Greenwich, soit l'heure standard
   de la côte ouest nord américaine. <literal>D</literal> indique que le nom
   du fuseau représente une heure soumise à des règles de changement d'heure
   plutôt que l'heure standard.
  </para>

  <para>
   Autrement, un <replaceable>nom_fuseau_horaire</replaceable> peut être
   indiqué, référençant un nom de fuseau horaire défini dans la base de
   données IANA. La définition du fuseau est consultée pour voir si
   l'abréviation est ou était utilisée pour ce fuseau et, si c'est bien le
   cas, la signification appropriée est utilisée &mdash; la signification qui
   était utilisée pour l'horodatage dont la valeur était en cours de
   détermination ou la signification utilisée immédiatement avant ça si elle
   n'était pas actuelle à ce moment, ou la signification la plus ancienne si
   elle était utilisée seulement après ce moment. Ce comportement est
   essentiel pour gérer les abréviations dont la signification a varié dans
   l'histoire. Il est aussi permis de définir une abréviation en terme de nom
   de fuseau horaire pour lequel cette abréviation n'apparaît pas&nbsp;; alors
   utiliser l'abréviation est équivalent à écrire le nom du fuseau horaire.
  </para>

  <tip>
   <para>
    Utiliser un entier simple pour le <replaceable>décalage</replaceable> est
    préféré lors de la définition d'une abréviation dont le décalage à partir
    d'UTC n'a jamais changé, car ce type d'abréviation est bien moins coûteuse
    à traiter que celles qui réclament de consulter la définition du fuseau
    horaire.
   </para>
  </tip>

  <para>
   La syntaxe <literal>@INCLUDE</literal> autorise l'inclusion d'autres fichiers
   du répertoire <filename>.../share/timezonesets/</filename>. Les inclusions
   peuvent être imbriquées jusqu'à une certaine profondeur.
  </para>

  <para>
   La syntaxe <literal>@OVERRIDE</literal> indique que les entrées suivantes
   du fichier peuvent surcharger les entrées précédentes (c'est-à-dire des
   entrées obtenues à partir de fichiers inclus). Sans cela, les définitions en
   conflit au sein d'une même abréviation lèvent une erreur.
  </para>

  <para>
   Dans une installation non modifiée, le fichier <filename>Default</filename>
   contient toutes les abréviations de fuseaux horaire, sans conflit, pour la
   quasi-totalité du monde. Les fichiers supplémentaires <filename>Australia</filename>
   et <filename>India</filename> sont fournis pour ces régions&nbsp;: ces
   fichiers incluent le fichier <literal>Default</literal> puis
   ajoutent ou modifient les fuseaux horaires si nécessaire.
  </para>

  <para>
   Pour des raisons de référence, une installation standard contient aussi
   des fichiers <filename>Africa.txt</filename>, <filename>America.txt</filename>,
   etc. qui contiennent des informations sur les abréviations connues et
   utilisées en accord avec la base de données de fuseaux horaires
   IANA. Les définitions des noms de zone trouvées dans ces
   fichiers peuvent être copiées et collées dans un fichier de configuration
   personnalisé si nécessaire. Il ne peut pas être fait directement référence
   à ces fichiers dans le paramètre
   <varname>timezone_abbreviations</varname> à cause du point dans leur nom.
  </para>

  <note>
   <para>
    Si une erreur survient lors de la lecture des abréviations de
    fuseaux horaires, aucune nouvelle valeur n'est acceptée mais les anciennes
    sont conservées. Si l'erreur survient au démarrage de la base, celui-ci échoue.
   </para>
  </note>

  <caution>
   <para>
    Les abréviations de fuseau horaire définies dans le fichier de configuration
    surchargent les informations sans fuseau définies nativement dans
    <productname>PostgreSQL</productname>.
    Par exemple, le fichier de configuration <filename>Australia</filename>
    définit <literal>SAT</literal> (<foreignphrase>South Australian Standard
     Time</foreignphrase>, soit l'heure standard pour l'Australie du sud). Si
    ce fichier est actif, <literal>SAT</literal> n'est plus reconnu comme
    abréviation de samedi (<foreignphrase>Saturday</foreignphrase>).
   </para>
  </caution>

  <caution>
   <para>
    Si les fichiers de <filename>.../share/timezonesets/</filename> sont
    modifiés, il revient à l'utilisateur de procéder à leur sauvegarde &mdash;
    une sauvegarde normale de base n'inclut pas ce répertoire.
   </para>
  </caution>

 </sect1>

 <sect1 id="datetime-posix-timezone-specs">
  <title>Spécification <acronym>POSIX</acronym> des fuseaux horaires</title>

  <indexterm zone="datetime-posix-timezone-specs">
   <primary>fuseau horaire</primary>
   <secondary>specification <acronym>POSIX</acronym></secondary>
  </indexterm>

  <para>
   <productname>PostgreSQL</productname> accepte les fuseaux horaires écrits suivant
   les règles du standard <acronym>POSIX</acronym> pour la variable
   d'environnement <varname>TZ</varname>. Les spécifications de fuseau horaire
   <acronym>POSIX</acronym> sont inadéquates pour gérer la complexité des
   fuseaux horaires du monde, mais il existe parfois des raisons pour les
   utiliser.
  </para>

  <para>
   Une spécification POSIX de fuseau horaire a la forme suivante&nbsp;:
   <synopsis>
<replaceable>STD</replaceable> <replaceable>decalage</replaceable> <optional> <replaceable>DST</replaceable> <optional> <replaceable>decalage_dst</replaceable> </optional> <optional> , <replaceable>regle</replaceable> </optional> </optional>
   </synopsis>
   (Pour des raisons de lisibilité, nous affichons des espaces entre les
   champs mais les espaces ne doivent pas être utilisés.) Les champs
   correspondent à&nbsp;:

   <itemizedlist>
    <listitem>
     <para>
      <replaceable>STD</replaceable> est l'abréviation de fuseau horaire à
      utiliser.
     </para>
    </listitem>
    <listitem>
     <para>
      <replaceable>decalage</replaceable> est le décalage de l'heure standard
      par rapport à UTC.
     </para>
    </listitem>
    <listitem>
     <para>
      <replaceable>DST</replaceable> est l'abréviation de fuseau horaire à
      utiliser pour les changements d'heure. Si ce champ et les suivants sont
      soumis, le fuseau d'horaire utilise un décalage UTC fixé sans règle de
      changement d'heure.
     </para>
    </listitem>
    <listitem>
     <para>
      <replaceable>dstoffset</replaceable> est le décalage du changement
      d'heure à partir d'UTC. Ce champ est typiquement omis parce qu'il vaut
      par défaut une heure de moins que <replaceable>decalage</replaceable>
      par rapport à l'heure standard, ce qui est généralement la bonne valeur.
     </para>
    </listitem>
    <listitem>
     <para>
      <replaceable>rule</replaceable> définit la règle pour quand le
      changement d'heure est en effet, comme décrit ci-dessous.
     </para>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   Dans cette syntaxe, une abréviation de fuseau horaire peut être une chaîne
   de lettres, tel que <literal>EST</literal>, ou une chaîne arbitraire
   entourée par des crochets, tel que <literal>&lt;UTC-05&gt;</literal>. Notez
   que les abréviations de fuseau horaire sont seulement utilisées pour
   l'affichage, et même seulement pour certains formats de sortie. Les
   abréviations de fuseaux horaires reconnus dans une entrée d'un champ de
   type timestamp sont expliquées dans <xref
   linkend="datetime-config-files"/>.
  </para>

  <para>
   Les champs de décalage spécifient les heures et, en option, les minutes et
   secondes, de différence par rapport à UTC. Ils ont comme format
   <replaceable>hh</replaceable><optional><literal>:</literal><replaceable>mm</replaceable><optional><literal>:</literal><replaceable>ss</replaceable></optional></optional>
   avec un option un signe au début (<literal>+</literal> ou
   <literal>-</literal>). Le signe positif est utilisé pour les fuseaux
   horaires à l'<emphasis>ouest</emphasis> de Greenwich. (Notez que c'est
   l'inverse de la convention prise par l'ISO-8601 utilisée ailleurs dans
   <productname>PostgreSQL</productname>.) <replaceable>hh</replaceable> peut avoir un
   ou deux chiffres&nbsp;; <replaceable>mm</replaceable> et
   <replaceable>ss</replaceable> (s'ils sont utilisées) doivent en avoir deux.
  </para>

  <para>
   La <replaceable>règle</replaceable> de transition de changement d'heure
   doit avoir le format
   <synopsis>
<replaceable>dstdate</replaceable> <optional> <literal>/</literal> <replaceable>dsttime</replaceable> </optional> <literal>,</literal> <replaceable>stddate</replaceable> <optional> <literal>/</literal> <replaceable>stdtime</replaceable> </optional>
   </synopsis>

   (Comme précédemment, les espaces ne doivent pas être inclus en pratique.)
   Les champs <replaceable>dstdate</replaceable> et
   <replaceable>dsttime</replaceable> définissent quand le changement d'heure
   commence alors que <replaceable>stddate</replaceable> et
   <replaceable>stdtime</replaceable> définissent quand l'heure standard
   commence. (Dans certains cas, notamment dans les régions au sud de
   l'équateur, le premier peut être plus tard dans l'année que le deuxième.)
   Les champs date doivent avoir un des formats suivants&nbsp;:

   <variablelist>
    <varlistentry>
     <term><replaceable>n</replaceable></term>
     <listitem>
      <para>
       Un entier dénote un jour de l'année, en comptant à partir de zéro et
       jusqu'à 364 ou 365 (ce dernier pour les années bissextiles).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>J</literal><replaceable>n</replaceable></term>
     <listitem>
      <para>
       Dans ce format, <replaceable>n</replaceable> va de 1 à 365,
       et le 29 février n'est pas compté même dans le cas d'une année
       bissextile. (Donc, une transition survenant le 29 février ne peut
       pas être décrite de cette façon. Néanmoins, les jours après février
       ont le même numéro qu'il s'agisse d'une année bissextile ou pas,
       donc cette forme est généralement plus utile que la forme entière
       standard pour les transitions sur des dates fixées.)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>M</literal><replaceable>m</replaceable><literal>.</literal><replaceable>n</replaceable><literal>.</literal><replaceable>d</replaceable></term>
     <listitem>
      <para>
       This form specifies a transition that always happens during the same
       month and on the same day of the week.  <replaceable>m</replaceable>
       identifies the month, from 1 to 12.  <replaceable>n</replaceable>
       specifies the <replaceable>n</replaceable>'th occurrence of the
       weekday identified by <replaceable>d</replaceable>.
       <replaceable>n</replaceable> is a number between 1 and 4, or 5
       meaning the last occurrence of that weekday in the month (which
       could be the fourth or the fifth).  <replaceable>d</replaceable> is
       a number between 0 and 6, with 0 indicating Sunday.
       For example, <literal>M3.2.0</literal> means <quote>the second
        Sunday in March</quote>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

  <note>
   <para>
    Le format <literal>M</literal> est suffisant pour décrire les lois de
    transition de changement d'heure les plus communes. Mais notez qu'aucune
    de ces variantes ne peut gérer les changements d'heure, donc en pratique,
    les données historiques stockées pour les fuseaux horaires nommés (dans la
    base de données IANA des fuseaux horaires) est nécessaire pour interpréter
    correctement les anciennes dates et heures.
   </para>
  </note>

  <para>
   Les champs heure dans une règle de transition ont le même format que les
   champs de décalage décrits précédemment, sauf qu'elles ne peuvent pas
   contenir de signes. Ils définissent l'heure locale actuelle à laquelle le
   changement survient. En cas d'omission, la valeur par défaut est
   <literal>02:00:00</literal>.
  </para>

  <para>
   Si une abréviation de changement d'heure est donné par que le champ
   <replaceable>rule</replaceable> de la transition est omis, le comportement
   de remplacement est d'utiliser la règle <literal>M3.2.0,M11.1.0</literal>,
   qui correspond à la pratique des États-Unis de 2020 (c'est-à-dire practice
   as of 2020 (that is, avancer au deuxième dimanche de Mars, retour au
   premier dimanche de novembre, les deux transitions se produisant à 2 heures
   du matin, heure courante). Notez que cette règle ne donne pas les bonnes
   dates de transition pour les États-Unis pour les années antérieures à 2007.
  </para>

  <para>
   Comme exemple, <literal>CET-1CEST,M3.5.0,M10.5.0/3</literal> décrit la
   pratique de changement d'heure actuel (en 2020) à Paris. Cette
   spécification indique que l'heure standard a l'abréviation
   <literal>CET</literal> et est une heure avant (est) UTC&nbsp;; le
   changement d'heure a pour abréviation <literal>CEST</literal> et est
   implicitement deux heures avant TC&nbsp;; le DST commence le dernier
   dimanche de mars à 2 heures du matin, fuseau CET, et termine le dernier
   dimanche d'octobre à 3 heures du matin, fuseau CEST.
  </para>

  <para>
   Les quatre noms de fuseau horaire <literal>EST5EDT</literal>,
   <literal>CST6CDT</literal>, <literal>MST7MDT</literal> et
   <literal>PST8PDT</literal> ressemblent beaucoup à des spécifications POSIX
   de fuseaux. Néanmoins, ils sont en fait traités comme des fuseaux horaires
   nommés parce que, pour des raisons historiques, il existe des fichiers avec
   ces noms dans la base de données IANA des fuseaux horaires. L'implication
   réelle de ceci est que ces noms de fuseaux horaires produiront des
   transactions valides historiques pour les changements d'heure, même quand
   une spécification POSIX pure ne le ferait pas.
  </para>

  <para>
   Il est nécessaire de faire attention au fait qu'il est facile de mal
   orthographier une spécification POSIX de fuseau horaire car il n'y a pas de
   vérification sur le côté raisonnable des abréviations. Par exemple,
   <literal>SET TIMEZONE TO FOOBAR0</literal> fonctionnera, laissant le
   système utiliser réellement une abréviation spéciale pour UTC.
  </para>

 </sect1>

 <sect1 id="datetime-units-history">
  <title>Histoire des unités</title>

  <indexterm zone="datetime-units-history">
   <primary>calendrier Grégorien</primary>
  </indexterm>
  <indexterm zone="datetime-units-history">
   <primary>date Julien</primary>
  </indexterm>

  <para>
   Le standard SQL précise que à l'intérieur de la définition d'un
   <quote>litéral datetime</quote>, les <quote>valeurs datetime</quote>
   sont contraintes par les règles naturelles des dates et heures suivant
   le calendrier Grégorien.
   <productname>PostgreSQL</productname> suit le standard SQL en comptant les
   dates exclusivement dans le calendrier Grégorien, même pour les années
   datant d'avant l'apparition de ce calendrier. La règle est connue sous le
   nom (anglais) de <firstterm>proleptic Gregorian calendar</firstterm>.
  </para>

  <para>
   Le calendrier Julien a été introduit par Julius Caesar en -45. Il était
   couramment utilisé dans le monde occidental jusqu'en l'an 1582, date à
   laquelle des pays ont commencé à se convertir au
   calendrier Grégorien.  Dans le calendrier Julien, l'année tropicale est
   arrondie à 365 jours 1/4, soit 365,25 jours. Cela conduit à une erreur
   de l'ordre d'un jour tous les 128 ans.
  </para>

  <para>
   L'erreur grandissante du calendrier poussa le Pape
   Gregoire XIII a réformé le calendrier en accord avec les
   instructions du Concile de Trent.
   Dans le calendrier Grégorien, l'année tropicale est arrondie à
   365 + 97/400 jours, soit 365,2425 jours. Il faut donc à peu prés 3300
   ans pour que l'année tropicale subissent un décalage d'un an dans le
   calendrier Grégorien.
  </para>

  <para>
   L'arrondi 365+97/400 est obtenu à l'aide de 97 années bissextiles
   tous les 400 ans. Les règles suivantes sont utilisées&nbsp;:

   <simplelist>
    <member>
     toute année divisible par 4 est bissextile&nbsp;;
    </member>
    <member>
     cependant, toute année divisible par 100 n'est pas bissextile&nbsp;;
    </member>
    <member>
     cependant, toute années divisible par 400 est bissextile.
    </member>
   </simplelist>

   1700, 1800, 1900, 2100 et 2200 ne sont donc pas des années bissextiles.
   1600, 2000 et 2400 si.

   Par opposition, dans l'ancien calendrier Julien, toutes les années
   divisibles par 4 sont bissextiles.
  </para>

  <para>
   En février 1582, le pape décrèta que 10 jours devaient être
   supprimés du mois d'octobre 1582, le 15 octobre devant ainsi arriver après
   le 4 octobre.
   Cela a été appliqué en Italie, Pologne, Portugal et Espagne. Les autres pays
   catholiques ont suivi peu après, mais les pays protestants ont été plus
   rétifs et les contrées orthodoxes grèques n'ont pas effectué le changement
   avant le début du 20ème siècle.

   La réforme a été appliquée par la Grande Bretagne et ses colonies (y compris
   les actuels Etats-Unis) en 1752.
   Donc le 2 septembre 1752 a été suivi du 14 septembre 1752.

   C'est pour cela que la commande <command>cal</command> produit
   la sortie suivante&nbsp;:

   <screen>$ <userinput>cal 9 1752</userinput>
   septembre 1752
di lu ma me je ve sa
       1  2 14 15 16
17 18 19 20 21 22 23
24 25 26 27 28 29 30</screen>
  </para>

   <para>
   Bien sûr, ce calendrier est seulement valide pour la Grande-Bretagne et
   ses colonies. Comme il serait difficile d'essayer de tracer les calendriers
   réels utilisés dans les différents endroits géographiques à différentes
   époques, <productname>PostgreSQL</productname> n'essaie pas de le faire, et
   suit les règles du calendrier Grégorien pour toutes les dates, même si cette
   méthode n'est pas vraie historiquement.
    </para>

  <para>
   Divers calendriers ont été développés dans différentes parties du monde,
   la plupart précède le système Grégorien.

   Par exemple,
   les débuts du calendrier chinois peuvent être évalués aux alentours du 14ème
   siècle avant J.-C. La légende veut que l'empereur Huangdi inventa le
   calendrier en 2637 avant J-C.

   La République de Chine utilise le calendrier Grégorien pour les besoins
   civils. Le calendrier chinois est utilisé pour déterminer les festivals.
  </para>

  <para>
   Le système de <firstterm>dates Julien</firstterm> est un autre
   type de calendrier, non relatif au calendrier Julien, malgré la
   similarité du nom.
   Le système de date Julien a été inventé par le précepteur
   français Joseph Justus Scaliger (1540&ndash;1609) et tient probablement son nom
   du père de Scaliger, le précepteur italien Julius Caesar Scaliger
   (1484&ndash;1558). Dans le système de date Julien, chaque jour est un nombre
   séquentiel, commençant à partir de JD 0, appelé quelque fois
   <emphasis>la</emphasis> date Julien. JD 0 correspond au 1er janvier
   4713 avant JC dans le calendrier Julien, ou au 24 novembre 4714 avant JC
   dans le calendrier grégorien. Le comptage de la date Julien est le plus
   souvent utilisé par les astronomes pour donner un nom à leurs observations,
   et du coup une date part de midi UTC jusqu'au prochain midi UTC, plutôt que
   de minuit à minuit&nbsp;: JD 0 désigne les 24 heures de midi UTC le 24
   novembre 4714 avant JC au 25 novembre 4714 avant JC à minuit.
  </para>

  <para>
   Bien que <productname>PostgreSQL</productname> accepte la saisie et
   l'affichage des dates en notation de date Julien (et les utilise aussi pour
   quelques calculs internes de date et heure), il n'utilise pas le coup
   des dates de midi à midi. <productname>PostgreSQL</productname> traite une
   date Julien comme allant de minuit à minuit.
  </para>
 </sect1>
</appendix>
