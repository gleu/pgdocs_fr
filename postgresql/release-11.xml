<?xml version="1.0" encoding="UTF-8"?>
<!-- doc/src/sgml/release-11.sgml -->
<!-- See header comment in release.sgml about typical markup -->

 <sect1 id="release-11-15">
  <title>Release 11.15</title>

  <formalpara>
  <title>Release date:</title>
  <para>2022-02-10</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.14.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.15</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 11.14,
    see <xref linkend="release-11-14"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4ace45677] 2022-01-01 16:12:03 -0500
Branch: REL_14_STABLE [cabea571d] 2022-01-01 16:12:03 -0500
Branch: REL_13_STABLE [45ae42714] 2022-01-01 16:12:03 -0500
Branch: REL_12_STABLE [f789b7732] 2022-01-01 16:12:03 -0500
Branch: REL_11_STABLE [e3a4c7981] 2022-01-01 16:12:03 -0500
Branch: REL_10_STABLE [70a31a0e3] 2022-01-01 16:12:03 -0500
Branch: master [9a3ddeb51] 2022-01-03 15:42:27 -0500
Branch: REL_14_STABLE [d228af79d] 2022-01-03 15:42:27 -0500
Branch: REL_13_STABLE [20d08b2c6] 2022-01-03 15:42:27 -0500
Branch: REL_12_STABLE [9c4f38908] 2022-01-03 15:42:27 -0500
Branch: REL_11_STABLE [ec3674521] 2022-01-03 15:42:27 -0500
Branch: REL_10_STABLE [7d344f004] 2022-01-03 15:42:27 -0500
-->
     <para>
      Fix index-only scan plans for cases where not all index columns can
      be returned (Tom Lane)
     </para>

     <para>
      If an index has both returnable and non-returnable columns, and one
      of the non-returnable columns is an expression using a table column
      that appears in a returnable index column, then a query using that
      expression could result in an index-only scan plan that attempts to
      read the non-returnable column, instead of recomputing the
      expression from the returnable column as intended.  The
      non-returnable column would read as NULL, resulting in wrong query
      results.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9c356f4b2] 2021-12-16 15:36:02 -0500
Branch: REL_14_STABLE [f9a8bc9f2] 2021-12-16 15:36:02 -0500
Branch: REL_13_STABLE [da0d8a454] 2021-12-16 15:36:02 -0500
Branch: REL_12_STABLE [e1fd61c8c] 2021-12-16 15:36:02 -0500
Branch: REL_11_STABLE [c43d72b24] 2021-12-16 15:36:02 -0500
Branch: REL_10_STABLE [1acf34586] 2021-12-16 15:36:02 -0500
-->
     <para>
      Ensure that casting to an unspecified typmod generates a RelabelType
      node rather than a length-coercion function call (Tom Lane)
     </para>

     <para>
      While the coercion function should do the right thing (nothing),
      this translation is undesirably inefficient.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [44bd3ed33] 2021-11-26 11:14:27 -0300
Branch: REL_14_STABLE [d24dac954] 2021-11-26 11:14:27 -0300
Branch: REL_13_STABLE [ef41c3fd6] 2021-11-26 11:14:27 -0300
Branch: REL_12_STABLE [9c6ab1ef3] 2021-11-26 11:14:27 -0300
Branch: REL_11_STABLE [2c3fddcbb] 2021-11-26 11:14:27 -0300
Branch: REL_10_STABLE [72cf39d51] 2021-11-26 11:14:27 -0300
-->
     <para>
      Fix WAL replay failure when database consistency is reached exactly
      at a WAL page boundary (&Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [f192e1bdf] 2022-01-27 20:13:55 +0100
Branch: REL_14_STABLE [fb2f8e534] 2022-01-27 20:15:37 +0100
Branch: REL_13_STABLE [e90f258ac] 2022-01-27 20:16:39 +0100
Branch: REL_12_STABLE [4b8af2bf8] 2022-01-27 20:17:36 +0100
Branch: REL_11_STABLE [5cb88648e] 2022-01-27 20:18:22 +0100
Branch: REL_10_STABLE [4ef38fbe8] 2022-01-27 20:19:39 +0100
-->
     <para>
      Fix startup of a physical replica to tolerate transaction ID
      wraparound (Abhijit Menon-Sen, Tomas Vondra)
     </para>

     <para>
      If a replica server is started while the set of active transactions
      on the primary crosses a wraparound boundary (so that there are some
      newer transactions with smaller XIDs than older ones), the replica
      would fail with <quote>out-of-order XID insertion in
      KnownAssignedXids</quote>.  The replica would retry, but could never
      get past that error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6aa518614] 2022-01-24 15:33:38 -0500
Branch: REL_14_STABLE [1efcc5946] 2022-01-24 15:33:34 -0500
Branch: REL_13_STABLE [d67354d87] 2022-01-24 15:33:34 -0500
Branch: REL_12_STABLE [689f75d6e] 2022-01-24 15:33:34 -0500
Branch: REL_11_STABLE [4ec54498c] 2022-01-24 15:33:34 -0500
Branch: REL_10_STABLE [9af6d4b5a] 2022-01-24 15:33:34 -0500
Branch: master [3c06ec6d1] 2022-01-24 12:09:46 -0500
Branch: REL_14_STABLE [ef9706bbc] 2022-01-24 12:09:46 -0500
Branch: REL_13_STABLE [c94c6612d] 2022-01-24 12:09:46 -0500
Branch: REL_12_STABLE [a8ce5c8d7] 2022-01-24 12:09:46 -0500
Branch: REL_11_STABLE [449a69623] 2022-01-24 12:09:46 -0500
Branch: REL_10_STABLE [daf658982] 2022-01-24 12:09:46 -0500
-->
     <para>
      Remove lexical limitations for SQL commands issued on a logical
      replication connection (Tom Lane)
     </para>

     <para>
      The walsender process would fail for a SQL command containing an
      unquoted semicolon, or with dollar-quoted literals containing odd
      numbers of single or double quote marks, or when the SQL command
      starts with a comment.  Moreover, faulty error recovery could lead
      to unexpected errors in later commands too.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [237d1f317] 2022-01-21 14:54:04 +0900
Branch: REL_14_STABLE [84db5169d] 2022-01-21 14:54:47 +0900
Branch: REL_13_STABLE [b5f634116] 2022-01-21 14:54:51 +0900
Branch: REL_12_STABLE [1c0452c48] 2022-01-21 14:54:55 +0900
Branch: REL_11_STABLE [0ffe2975c] 2022-01-21 14:54:59 +0900
Branch: REL_10_STABLE [919be95c6] 2022-01-21 14:55:04 +0900
-->
     <para>
      Fix possible loss of the commit timestamp for the last
      subtransaction of a transaction (Alex Kingsborough, Kyotaro Horiguchi)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [1fabec7d7] 2022-01-21 11:22:55 -0800
Branch: REL_14_STABLE [2b7dbe4bd] 2022-01-21 11:24:12 -0800
Branch: REL_13_STABLE [fd48e5f5d] 2022-01-21 11:24:12 -0800
Branch: REL_12_STABLE [1c6d055ba] 2022-01-21 11:24:12 -0800
Branch: REL_11_STABLE [2c15b29f7] 2022-01-21 11:24:12 -0800
Branch: REL_10_STABLE [f862cc09f] 2022-01-21 11:24:12 -0800
-->
     <para>
      Be sure to <function>fsync</function>
      the <filename>pg_logical/mappings</filename> subdirectory during
      checkpoints (Nathan Bossart)
     </para>

     <para>
      On some filesystems this oversight could lead to losing logical
      rewrite status files after a system crash.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [20b9fa308] 2022-01-15 19:06:48 +0100
Branch: REL_14_STABLE [ea212bd95] 2022-01-15 19:05:22 +0100
Branch: REL_13_STABLE [d6817032d] 2022-01-15 19:14:00 +0100
Branch: REL_12_STABLE [9d1bcf5dc] 2022-01-15 19:02:58 +0100
Branch: REL_11_STABLE [491182e52] 2022-01-15 18:32:20 +0100
Branch: REL_10_STABLE [9211c2e38] 2022-01-15 18:30:45 +0100
-->
     <para>
      Build extended statistics for partitioned tables (Justin Pryzby)
     </para>

     <para>
      A previous bug fix disabled building of extended statistics for
      old-style inheritance trees, but it also prevented building them for
      partitioned tables, which was an unnecessary restriction.
      This change allows <command>ANALYZE</command> to compute values for
      statistics objects for partitioned tables.  (But note that
      autovacuum does not process partitioned tables as such, so you must
      periodically issue manual <command>ANALYZE</command> on the
      partitioned table if you want to maintain such statistics.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [36c4bc6e7] 2022-01-15 02:20:54 +0100
Branch: REL_14_STABLE [2cc007fd0] 2022-01-15 02:26:26 +0100
Branch: REL_13_STABLE [acfde7c58] 2022-01-15 02:30:06 +0100
Branch: REL_12_STABLE [76569ad6f] 2022-01-15 03:14:55 +0100
Branch: REL_11_STABLE [b3cac25f4] 2022-01-15 02:40:40 +0100
Branch: REL_10_STABLE [ff0e7c7e8] 2022-01-15 03:05:06 +0100
-->
     <para>
      Ignore extended statistics for inheritance trees (Justin Pryzby)
     </para>

     <para>
      Currently, extended statistics values are only computed locally for
      each table, not for entire inheritance trees.  However the values
      were mistakenly consulted when planning queries across inheritance
      trees, possibly resulting in worse-than-default estimates.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7ead9925f] 2022-01-06 16:46:46 -0500
Branch: REL_14_STABLE [f285d9583] 2022-01-06 16:46:46 -0500
Branch: REL_13_STABLE [86d4bbb56] 2022-01-06 16:46:46 -0500
Branch: REL_12_STABLE [ccc7c3ad8] 2022-01-06 16:46:46 -0500
Branch: REL_11_STABLE [2ce113a4f] 2022-01-06 16:46:46 -0500
Branch: REL_10_STABLE [e5b044c84] 2022-01-06 16:46:46 -0500
-->
     <para>
      Disallow altering data type of a partitioned table's columns when
      the partitioned table's row type is used as a composite type
      elsewhere (Tom Lane)
     </para>

     <para>
      This restriction has long existed for regular tables, but through an
      oversight it was not checked for partitioned tables.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [f0d43947a] 2021-11-25 15:04:56 +0900
Branch: REL_14_STABLE [e415916e2] 2021-11-25 15:05:24 +0900
Branch: REL_13_STABLE [37827de43] 2021-11-25 15:05:28 +0900
Branch: REL_12_STABLE [216156fec] 2021-11-25 15:05:31 +0900
Branch: REL_11_STABLE [dffe80e55] 2021-11-25 15:05:34 +0900
Branch: REL_10_STABLE [817c469c2] 2021-11-25 15:05:37 +0900
-->
     <para>
      Disallow <literal>ALTER TABLE ... DROP NOT NULL</literal> for a
      column that is part of a replica identity index (Haiying Tang, Hou
      Zhijie)
     </para>

     <para>
      The same prohibition already existed for primary key indexes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d8fbbb925] 2022-01-22 13:32:40 -0500
Branch: REL_14_STABLE [3839e29c5] 2022-01-22 13:32:40 -0500
Branch: REL_13_STABLE [31b7b4d26] 2022-01-22 13:32:40 -0500
Branch: REL_12_STABLE [e2d53c876] 2022-01-22 13:32:40 -0500
Branch: REL_11_STABLE [26c841ed1] 2022-01-22 13:32:40 -0500
-->
     <para>
      Correctly update cached table state during <command>ALTER TABLE ADD
      PRIMARY KEY USING INDEX</command> (Hou Zhijie)
     </para>

     <para>
      Concurrent sessions failed to update their opinion of whether the
      table has a primary key, possibly causing incorrect logical
      replication behavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [354a1f8d2] 2021-11-16 08:10:13 +0530
Branch: REL_14_STABLE [232fd72a5] 2021-11-16 08:34:24 +0530
Branch: REL_13_STABLE [63c3eeddc] 2021-11-16 08:46:12 +0530
Branch: REL_12_STABLE [9816e2d31] 2021-11-16 09:05:51 +0530
Branch: REL_11_STABLE [40fb634b1] 2021-11-16 09:25:04 +0530
Branch: REL_10_STABLE [2c0443c59] 2021-11-16 09:44:00 +0530
-->
     <para>
      Correctly update cached table state when switching <literal>REPLICA
      IDENTITY</literal> index (Tang Haiying, Hou Zhijie)
     </para>

     <para>
      Concurrent sessions failed to update their opinion of which index is
      the replica identity one, possibly causing incorrect logical
      replication behavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [babe545ca] 2021-12-01 13:44:46 -0500
Branch: REL_14_STABLE [8f4b0200e] 2021-12-01 13:44:47 -0500
Branch: REL_13_STABLE [7413caabe] 2021-12-01 13:44:47 -0500
Branch: REL_12_STABLE [5cf08b4db] 2021-12-01 13:44:47 -0500
Branch: REL_11_STABLE [82d354411] 2021-12-01 13:44:47 -0500
Branch: REL_10_STABLE [fec187dc3] 2021-12-01 13:44:47 -0500
-->
     <para>
      Avoid leaking memory during <command>REASSIGN OWNED BY</command>
      operations that reassign ownership of many objects (Justin Pryzby)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [43c217512] 2022-01-13 17:49:46 -0500
Branch: REL_14_STABLE [4aee39ddb] 2022-01-13 17:49:26 -0500
Branch: REL_13_STABLE [ca14c4184] 2022-01-13 17:49:26 -0500
Branch: REL_12_STABLE [45a3cefad] 2022-01-13 17:49:26 -0500
Branch: REL_11_STABLE [3a1bfe256] 2022-01-13 17:49:26 -0500
Branch: REL_10_STABLE [3433a1fc7] 2022-01-13 17:49:26 -0500
-->
     <para>
      Fix display of whole-row variables appearing
      in <literal>INSERT ... VALUES</literal> rules (Tom Lane)
     </para>

     <para>
      A whole-row variable would be printed as <quote>var.*</quote>,
      but that allows it to be expanded to individual columns when
      the rule is reloaded, resulting in different semantics.
      Attach an explicit cast to prevent that, as we do elsewhere.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [f66885bec] 2022-01-04 13:01:05 -0300
Branch: REL_14_STABLE [f185f35a8] 2022-01-04 13:01:05 -0300
Branch: REL_13_STABLE [29f9fb8fe] 2022-01-04 13:01:05 -0300
Branch: REL_12_STABLE [6b681cd05] 2022-01-04 13:01:05 -0300
Branch: REL_11_STABLE [28cd57416] 2022-01-04 13:01:05 -0300
Branch: REL_10_STABLE [026a93727] 2022-01-04 13:01:05 -0300
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [67a8cb5cb] 2022-01-04 13:21:23 -0300
Branch: REL_14_STABLE [f9db153c2] 2022-01-04 13:21:23 -0300
Branch: REL_13_STABLE [33fdd9f85] 2022-01-04 13:21:23 -0300
Branch: REL_12_STABLE [397b43948] 2022-01-04 13:21:23 -0300
Branch: REL_11_STABLE [b63851a45] 2022-01-04 13:21:23 -0300
Branch: REL_10_STABLE [4a8282425] 2022-01-04 13:21:23 -0300
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [2e577c944] 2021-12-22 15:38:00 +0900
Branch: REL_14_STABLE [8a22a40b2] 2021-12-22 15:38:05 +0900
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [ece8c7619] 2021-12-14 10:58:15 +0900
Branch: REL_14_STABLE [4be3e005e] 2021-12-14 10:58:25 +0900
Branch: REL_13_STABLE [3f710fc2b] 2021-12-14 10:58:29 +0900
Branch: REL_12_STABLE [65af1e842] 2021-12-14 10:58:33 +0900
Branch: REL_11_STABLE [8abb6c27e] 2021-12-14 10:58:37 +0900
-->
     <para>
      Fix or remove some incorrect assertions (Simon Riggs, Michael
      Paquier, Alexander Lakhin)
     </para>

     <para>
      These errors should affect only debug builds, not production.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1f655fdc3] 2022-01-21 15:36:27 -0500
Branch: REL_14_STABLE [f4ebf0dbe] 2022-01-21 15:36:28 -0500
Branch: REL_13_STABLE [64ebb43df] 2022-01-21 15:36:28 -0500
Branch: REL_12_STABLE [5521d8139] 2022-01-21 15:36:29 -0500
Branch: REL_11_STABLE [37f5dc8b8] 2022-01-21 15:36:29 -0500
Branch: REL_10_STABLE [0c7c94f90] 2022-01-21 15:36:30 -0500
-->
     <para>
      Fix race condition that could lead to failure to localize error
      messages that are reported early in multi-threaded use
      of <application>libpq</application>
      or <application>ecpglib</application> (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f3f467b8f] 2022-01-17 12:52:44 -0500
Branch: REL_14_STABLE [050949877] 2022-01-17 12:52:44 -0500
Branch: REL_13_STABLE [f27af7b88] 2022-01-17 12:52:44 -0500
Branch: REL_12_STABLE [38f099ef9] 2022-01-17 12:52:44 -0500
Branch: REL_11_STABLE [8b107467c] 2022-01-17 12:52:44 -0500
Branch: REL_10_STABLE [9d66c43eb] 2022-01-17 12:52:45 -0500
-->
     <para>
      Avoid calling <function>strerror</function>
      from <application>libpq</application>'s <function>PQcancel</function>
      function (Tom Lane)
     </para>

     <para>
      <function>PQcancel</function> is supposed to be safe to call from a
      signal handler, but <function>strerror</function> is not safe.  The
      faulty usage only occurred in the unlikely event of failure to
      send the cancel message to the server, perhaps explaining the lack
      of reports.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d6eb5a0c2] 2021-11-12 14:55:32 -0500
Branch: REL_14_STABLE [99389cb66] 2021-11-12 14:55:32 -0500
Branch: REL_13_STABLE [843925fad] 2021-11-12 14:55:32 -0500
Branch: REL_12_STABLE [523adcc12] 2021-11-12 14:55:32 -0500
Branch: REL_11_STABLE [b062ca508] 2021-11-12 14:55:32 -0500
Branch: REL_10_STABLE [3bc46e4e9] 2021-11-12 14:55:32 -0500
-->
     <para>
      Make <application>psql</application>'s <command>\password</command>
      command default to setting the password
      for <literal>CURRENT_USER</literal>, not the connection's original
      user name (Tom Lane)
     </para>

     <para>
      This agrees with the documented behavior, and avoids probable
      permissions failure if <command>SET ROLE</command> or <command>SET
      SESSION AUTHORIZATION</command> has been done since the session began.
      To prevent confusion, the role name to be acted on is now
      included in the password prompt.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [2131c049d] 2022-01-17 13:30:04 -0500
Branch: REL_14_STABLE [4e8726566] 2022-01-17 13:30:04 -0500
Branch: REL_13_STABLE [d18ec312f] 2022-01-17 13:30:04 -0500
Branch: REL_12_STABLE [6d1a854c1] 2022-01-17 13:30:04 -0500
Branch: REL_11_STABLE [92e6c1c9b] 2022-01-17 13:30:04 -0500
Branch: REL_10_STABLE [62bfa554b] 2022-01-17 13:30:04 -0500
-->
     <para>
      In <application>psql</application> and some other client programs,
      avoid trying to invoke <function>gettext()</function> from a
      control-C signal handler (Tom Lane)
     </para>

     <para>
      While no reported failures have been traced to this mistake, it seems
      highly unlikely to be a safe thing to do.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [282b6d00a] 2021-11-21 14:13:35 -0500
Branch: REL_14_STABLE [3bd7556bb] 2021-11-21 14:13:35 -0500
Branch: REL_13_STABLE [33edf4a3c] 2021-11-21 14:13:35 -0500
Branch: REL_12_STABLE [93295932d] 2021-11-21 14:13:35 -0500
Branch: REL_11_STABLE [c2242d364] 2021-11-21 14:13:35 -0500
Branch: REL_10_STABLE [3ce5d0884] 2021-11-21 14:13:35 -0500
-->
     <para>
      Allow canceling the initial password prompt
      in <application>pg_receivewal</application>
      and <application>pg_recvlogical</application> (Tom Lane, Nathan
      Bossart)
     </para>

     <para>
      Previously it was impossible to terminate these programs via control-C
      while they were prompting for a password.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b55f2b692] 2021-11-22 17:16:29 -0500
Branch: REL_14_STABLE [0fdf67476] 2021-11-22 17:16:29 -0500
Branch: REL_13_STABLE [d4f6a36d8] 2021-11-22 17:16:29 -0500
Branch: REL_12_STABLE [69949ea68] 2021-11-22 17:16:29 -0500
Branch: REL_11_STABLE [54619a25d] 2021-11-22 17:16:29 -0500
Branch: REL_10_STABLE [2b36973d9] 2021-11-22 17:16:29 -0500
-->
     <para>
      Fix <application>pg_dump</application>'s dump ordering for
      user-defined casts (Tom Lane)
     </para>

     <para>
      In rare cases, the output script might refer to a user-defined cast
      before it had been created.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [248c3a937] 2021-11-17 14:16:34 -0500
Branch: REL_14_STABLE [53c4a580e] 2021-11-17 14:16:34 -0500
Branch: REL_13_STABLE [c8b5221b5] 2021-11-17 14:16:34 -0500
Branch: REL_12_STABLE [8378dad4c] 2021-11-17 14:16:34 -0500
Branch: REL_11_STABLE [a414eb850] 2021-11-17 14:16:34 -0500
Branch: REL_10_STABLE [13799bb93] 2021-11-17 14:16:34 -0500
Branch: master [3cac2c8ca] 2021-11-17 13:08:25 -0500
Branch: REL_14_STABLE [6b413b41b] 2021-11-17 13:08:25 -0500
Branch: REL_13_STABLE [bbda88c33] 2021-11-17 13:08:25 -0500
Branch: REL_12_STABLE [12bf11889] 2021-11-17 13:08:25 -0500
-->
     <para>
      Fix possible mis-reporting of errors
      in <application>pg_dump</application>
      and <application>pg_basebackup</application> (Tom Lane)
     </para>

     <para>
      The previous code failed to check for errors from some kernel calls,
      and could report the wrong errno values in other cases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [54b1cb7eb] 2022-01-08 14:54:39 -0500
Branch: REL_14_STABLE [043c1e1a7] 2022-01-08 14:54:39 -0500
Branch: REL_13_STABLE [823d4c7e2] 2022-01-08 14:54:39 -0500
Branch: REL_12_STABLE [3a69d45af] 2022-01-08 14:54:39 -0500
Branch: REL_11_STABLE [38cbdd22d] 2022-01-08 14:54:39 -0500
Branch: REL_10_STABLE [b21986908] 2022-01-08 14:54:39 -0500
-->
     <para>
      Fix results of index-only scans
      on <filename>contrib/btree_gist</filename> indexes
      on <type>char(<replaceable>N</replaceable>)</type> columns (Tom Lane)
     </para>

     <para>
      Index-only scans returned column values with trailing spaces
      removed, which is not the expected behavior.  That happened because
      that's how the data was stored in the index.  This fix changes the
      code to store <type>char(<replaceable>N</replaceable>)</type> values
      with the expected amount of space padding.
      The behavior of such an index will not change immediately unless
      you <command>REINDEX</command> it; otherwise space-stripped values
      will be gradually replaced over time during updates.  Queries that
      do not use index-only scan plans will be unaffected in any case.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [bd233bdd8] 2022-01-25 18:52:44 -0500
Branch: REL_14_STABLE [803f0b173] 2022-02-01 19:03:41 -0500
Branch: REL_13_STABLE [4d7d196ff] 2022-02-01 19:03:41 -0500
Branch: REL_12_STABLE [aa2215d6b] 2022-02-01 19:03:41 -0500
Branch: REL_11_STABLE [e41176bd6] 2022-02-01 19:03:41 -0500
Branch: REL_10_STABLE [a72c43012] 2022-02-01 19:03:41 -0500
-->
     <para>
      Change <application>configure</application> to use
      Python's <application>sysconfig</application> module, rather than
      the deprecated <application>distutils</application> module, to
      determine how to build PL/Python (Peter Eisentraut, Tom Lane, Andres
      Freund)
     </para>

     <para>
      With Python 3.10, this
      avoids <application>configure</application>-time warnings
      about <application>distutils</application> being deprecated and
      scheduled for removal in Python 3.12.  Presumably, once 3.12 is
      out, <literal>configure --with-python</literal> would fail
      altogether.  This future-proofing does come at a
      cost: <application>sysconfig</application> did not exist before
      Python 2.7, nor before 3.2 in the Python 3 branch, so it is no
      longer possible to build PL/Python against long-dead Python
      versions.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [c89f40974] 2022-01-30 16:42:14 -0800
Branch: REL_14_STABLE [8484e3812] 2022-01-30 16:42:42 -0800
Branch: REL_13_STABLE [0dc0fe7b6] 2022-01-30 16:42:45 -0800
Branch: REL_12_STABLE [f173738d5] 2022-01-30 16:42:47 -0800
Branch: REL_11_STABLE [ad95a639a] 2022-01-30 16:42:49 -0800
Branch: REL_10_STABLE [2557a03f8] 2022-01-30 16:43:07 -0800
-->
     <para>
      Fix PL/Perl compile failure on Windows with Perl 5.28 and later
      (Victor Wagner)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [99e4d24a9] 2021-11-25 14:19:22 +0100
Branch: REL_14_STABLE [1cc13b83e] 2021-11-25 14:30:12 +0100
Branch: REL_13_STABLE [04875ae92] 2021-11-25 14:30:46 +0100
Branch: REL_12_STABLE [0d335cbd5] 2021-11-25 14:31:01 +0100
Branch: REL_11_STABLE [a83b1bab0] 2021-11-25 14:32:26 +0100
Branch: REL_10_STABLE [4339e10f0] 2021-11-25 14:32:43 +0100
-->
     <para>
      Fix PL/Python compile failure with Python 3.11 and later (Peter
      Eisentraut)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [b2265d305] 2021-11-24 13:03:23 +0900
Branch: REL_14_STABLE [0e681fa45] 2021-11-24 13:03:55 +0900
Branch: REL_13_STABLE [baef657d3] 2021-11-24 13:03:59 +0900
Branch: REL_12_STABLE [420d5e40b] 2021-11-24 13:04:03 +0900
Branch: REL_11_STABLE [1061e41ff] 2021-11-24 13:04:07 +0900
Branch: REL_10_STABLE [82881a9b9] 2021-11-24 13:04:12 +0900
-->
     <para>
      Add support for building with Visual Studio 2022 (Hans Buschmann)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [c3879a7b4] 2022-01-07 16:07:45 -0500
Branch: REL_14_STABLE [a7772e874] 2022-01-07 16:14:04 -0500
Branch: REL_13_STABLE [f3ded9c46] 2022-01-07 16:14:16 -0500
Branch: REL_12_STABLE [a4cde9153] 2022-01-07 16:14:23 -0500
Branch: REL_11_STABLE [c7fa0f55d] 2022-01-07 16:14:32 -0500
Branch: REL_10_STABLE [d897361c7] 2022-01-07 16:14:40 -0500
Branch: master [f80900be0] 2022-01-20 10:13:18 -0500
Branch: REL_14_STABLE [156a846d9] 2022-01-20 10:20:40 -0500
Branch: REL_13_STABLE [31680730e] 2022-01-20 10:20:51 -0500
Branch: REL_12_STABLE [22d8c2570] 2022-01-20 10:21:02 -0500
Branch: REL_11_STABLE [0a79feeca] 2022-01-20 10:21:12 -0500
Branch: REL_10_STABLE [a5bd14d93] 2022-01-20 10:21:28 -0500
-->
     <para>
      Allow the <filename>.bat</filename> wrapper scripts in our MSVC
      build system to be called without first changing into their
      directory (Anton Voloshin, Andrew Dunstan)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11-14">
  <title>Release 11.14</title>

  <formalpara>
  <title>Release date:</title>
  <para>2021-11-11</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.13.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.14</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, note that installations using physical replication should
    update standby servers before the primary server, as explained in
    the third changelog entry below.
   </para>

   <para>
    Also, several bugs have been found that may have resulted in corrupted
    indexes, as explained in the next several changelog entries.  If any
    of those cases apply to you, it's recommended to reindex
    possibly-affected indexes after updating.
   </para>

   <para>
    Also, if you are upgrading from a version earlier than 11.11,
    see <xref linkend="release-11-11"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [28e241255] 2021-11-08 11:01:43 -0500
Branch: REL_14_STABLE [9d5a76b8d] 2021-11-08 11:01:43 -0500
Branch: REL_13_STABLE [e92ed93e8] 2021-11-08 11:01:43 -0500
Branch: REL_12_STABLE [d1bd26740] 2021-11-08 11:01:43 -0500
Branch: REL_11_STABLE [9394fb828] 2021-11-08 11:01:43 -0500
Branch: REL_10_STABLE [9ae0f1112] 2021-11-08 11:01:43 -0500
Branch: REL9_6_STABLE [046c2c846] 2021-11-08 11:01:43 -0500
-->
     <para>
      Make the server reject extraneous data after an SSL or GSS
      encryption handshake (Tom Lane)
     </para>

     <para>
      A man-in-the-middle with the ability to inject data into the TCP
      connection could stuff some cleartext data into the start of a
      supposedly encryption-protected database session.
      This could be abused to send faked SQL commands to the server,
      although that would only work if the server did not demand any
      authentication data.  (However, a server relying on SSL certificate
      authentication might well not do so.)
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Jacob Champion for reporting this problem.
      (CVE-2021-23214)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [160c02588] 2021-11-08 11:14:56 -0500
Branch: REL_14_STABLE [30547d791] 2021-11-08 11:14:56 -0500
Branch: REL_13_STABLE [844b31692] 2021-11-08 11:14:56 -0500
Branch: REL_12_STABLE [36bb95ef2] 2021-11-08 11:14:56 -0500
Branch: REL_11_STABLE [a021a1d2a] 2021-11-08 11:14:56 -0500
Branch: REL_10_STABLE [e65d9c8cd] 2021-11-08 11:14:56 -0500
Branch: REL9_6_STABLE [d83cdfdca] 2021-11-08 11:14:57 -0500
-->
     <para>
      Make <application>libpq</application> reject extraneous data after
      an SSL or GSS encryption handshake (Tom Lane)
     </para>

     <para>
      A man-in-the-middle with the ability to inject data into the TCP
      connection could stuff some cleartext data into the start of a
      supposedly encryption-protected database session.
      This could probably be abused to inject faked responses to the
      client's first few queries, although other details of libpq's
      behavior make that harder than it sounds.  A different line of
      attack is to exfiltrate the client's password, or other sensitive
      data that might be sent early in the session.  That has been shown
      to be possible with a server vulnerable to CVE-2021-23214.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Jacob Champion for reporting this problem.
      (CVE-2021-23222)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [ff9f111bc] 2021-09-29 11:21:51 -0300
Branch: REL_14_STABLE [64a8687a6] 2021-09-29 11:41:01 -0300
Branch: REL_13_STABLE [1d97d3d08] 2021-09-29 11:21:51 -0300
Branch: REL_12_STABLE [1df0a914d] 2021-09-29 11:21:51 -0300
Branch: REL_11_STABLE [cfedb279a] 2021-09-29 11:21:51 -0300
Branch: REL_10_STABLE [d9fe2cc7d] 2021-09-29 11:21:51 -0300
Branch: REL9_6_STABLE [148c6ee3b] 2021-09-29 11:21:51 -0300
Branch: master [d03bca4d7] 2021-09-30 10:01:03 -0300
Branch: REL_14_STABLE [e3731bac5] 2021-09-30 10:01:03 -0300
Branch: master [d186d233d] 2021-10-01 18:03:11 -0300
Branch: REL_14_STABLE [0ce67bce0] 2021-10-01 18:03:11 -0300
Branch: master [010e52337] 2021-10-13 18:49:27 -0300
Branch: REL_14_STABLE [79c7fe1af] 2021-10-13 18:49:27 -0300
Branch: REL_13_STABLE [2cdf97fd1] 2021-10-13 18:49:27 -0300
Branch: REL_12_STABLE [4b7abbe48] 2021-10-13 18:49:27 -0300
Branch: REL_11_STABLE [6287b8e19] 2021-10-13 18:49:27 -0300
Branch: REL_10_STABLE [41cce2326] 2021-10-13 18:49:27 -0300
Branch: REL9_6_STABLE [5ec87619b] 2021-10-13 18:49:27 -0300
Branch: REL_14_STABLE [494ec0037] 2021-11-01 13:07:23 -0300
Branch: REL_13_STABLE [17227825c] 2021-11-01 13:07:23 -0300
Branch: REL_12_STABLE [da782bc93] 2021-11-01 13:07:23 -0300
Branch: REL_11_STABLE [5ef210047] 2021-11-01 13:07:23 -0300
Branch: REL_10_STABLE [656312c2a] 2021-11-01 13:07:23 -0300
Branch: REL9_6_STABLE [99197701e] 2021-11-01 13:07:23 -0300
-->
     <para>
      Fix physical replication for cases where the primary crashes
      after shipping a WAL segment that ends with a partial WAL record
      (&Aacute;lvaro Herrera)
     </para>

     <para>
      If the primary did not survive long enough to finish writing the
      rest of the incomplete WAL record, then the previous crash-recovery
      logic had it back up and overwrite WAL starting from the beginning
      of the incomplete WAL record.  This is problematic since standby
      servers may already have copies of that WAL segment.  They will then
      see an inconsistent next segment, and will not be able to recover
      without manual intervention.  To fix, do not back up over a WAL
      segment boundary when restarting after a crash.  Instead write a new
      type of WAL record at the start of the next WAL segment, informing
      readers that the incomplete WAL record will never be finished and
      must be disregarded.
     </para>

     <para>
      When applying this update, it's best to update standby servers
      before the primary, so that they will be ready to handle this new
      WAL record type if the primary happens to crash.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [3cd9c3b92] 2021-10-23 18:36:38 -0700
Branch: REL_14_STABLE [a5b9a0000] 2021-10-23 18:36:42 -0700
Branch: REL_13_STABLE [a9d0a5409] 2021-10-23 18:36:42 -0700
Branch: REL_12_STABLE [fe5d44a1d] 2021-10-23 18:36:42 -0700
Branch: REL_11_STABLE [df6158139] 2021-10-23 18:36:43 -0700
Branch: REL_10_STABLE [560124a37] 2021-10-23 18:36:43 -0700
Branch: REL9_6_STABLE [518493243] 2021-10-23 18:36:43 -0700
-->
     <para>
      Fix <command>CREATE INDEX CONCURRENTLY</command> to wait for
      the latest prepared transactions (Andrey Borodin)
     </para>

     <para>
      Rows inserted by just-prepared transactions might be omitted from
      the new index, causing queries relying on the index to miss such
      rows.  The previous fix for this type of problem failed to account
      for <command>PREPARE TRANSACTION</command> commands that were still
      in progress when <command>CREATE INDEX CONCURRENTLY</command>
      checked for them.  As before, in installations that have enabled
      prepared transactions (<varname>max_prepared_transactions</varname>
      &gt; 0), it's recommended to reindex any concurrently-built indexes
      in case this problem occurred when they were built.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [fdd965d07] 2021-10-23 18:36:38 -0700
Branch: REL_14_STABLE [dde966efb] 2021-10-23 18:36:42 -0700
Branch: REL_13_STABLE [2e33b4359] 2021-10-23 18:36:42 -0700
Branch: REL_12_STABLE [0869e53d3] 2021-10-23 18:36:42 -0700
Branch: REL_11_STABLE [5141e471b] 2021-10-23 18:36:43 -0700
Branch: REL_10_STABLE [db86746fd] 2021-10-23 18:36:43 -0700
Branch: REL9_6_STABLE [e428699cb] 2021-10-23 18:36:43 -0700
-->
     <para>
      Avoid race condition that can cause backends to fail to add entries
      for new rows to an index being built concurrently (Noah Misch,
      Andrey Borodin)
     </para>

     <para>
      While it's apparently rare in the field, this case could potentially
      affect any index built or reindexed with
      the <literal>CONCURRENTLY</literal> option.  It is recommended to
      reindex any such indexes to make sure they are correct.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ce773f230] 2021-09-02 17:24:41 -0400
Branch: REL_14_STABLE Release: REL_14_0 [23c6bc581] 2021-09-02 17:24:42 -0400
Branch: REL_13_STABLE [be2beadaf] 2021-09-02 17:24:42 -0400
Branch: REL_12_STABLE [a3bf13673] 2021-09-02 17:24:42 -0400
Branch: REL_11_STABLE [ad66373ea] 2021-09-02 17:24:42 -0400
Branch: REL_10_STABLE [2bb20e34c] 2021-09-02 17:24:42 -0400
Branch: REL9_6_STABLE [dea212e24] 2021-09-02 17:24:42 -0400
Branch: master [fd549145d] 2021-09-03 10:01:02 -0400
Branch: REL_14_STABLE Release: REL_14_0 [08b96a2b5] 2021-09-03 10:01:02 -0400
Branch: REL_13_STABLE [9089f1543] 2021-09-03 10:01:02 -0400
Branch: REL_12_STABLE [1fab33c0b] 2021-09-03 10:01:02 -0400
Branch: REL_11_STABLE [2836d57e4] 2021-09-03 10:01:02 -0400
Branch: master [b30cc0fd6] 2021-09-04 16:29:08 -0400
Branch: REL_14_STABLE Release: REL_14_0 [718978d9d] 2021-09-04 16:29:08 -0400
Branch: REL_13_STABLE [2c0dd669c] 2021-09-04 16:29:08 -0400
Branch: REL_12_STABLE [fd295d0c6] 2021-09-04 16:29:08 -0400
Branch: REL_11_STABLE [8782a8452] 2021-09-04 16:29:08 -0400
Branch: REL_10_STABLE [70354dd56] 2021-09-04 16:29:08 -0400
Branch: REL9_6_STABLE [a5e8f7b37] 2021-09-04 16:29:08 -0400
-->
     <para>
      Fix <type>float4</type> and <type>float8</type> hash functions to
      produce uniform results for NaNs (Tom Lane)
     </para>

     <para>
      Since <productname>PostgreSQL</productname>'s floating-point types
      deem all NaNs to be equal, it's important for the hash functions to
      produce the same hash code for all bit-patterns that are NaNs
      according to the IEEE 754 standard.  This failed to happen before,
      meaning that hash indexes and hash-based query plans might produce
      incorrect results for non-canonical NaN values.
      (<literal>'-NaN'::float8</literal> is one way to produce such a
      value on most machines.)  It is advisable to reindex hash indexes
      on floating-point columns, if there is any possibility that they
      might contain such values.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [97ddda8a8] 2021-08-27 23:33:23 -0700
Branch: REL_14_STABLE Release: REL_14_0 [5513c09c8] 2021-08-27 23:33:27 -0700
Branch: REL_13_STABLE [b18669f5e] 2021-08-27 23:33:27 -0700
Branch: REL_12_STABLE [a494f1023] 2021-08-27 23:34:03 -0700
Branch: REL_11_STABLE [6ebd2426b] 2021-08-27 23:34:22 -0700
Branch: REL_10_STABLE [f11c1bb17] 2021-08-27 23:42:53 -0700
Branch: REL9_6_STABLE [978998dbd] 2021-08-27 23:44:55 -0700
-->
     <para>
      Prevent data loss during crash recovery of <command>CREATE
      TABLESPACE</command>, when <varname>wal_level</varname>
      = <literal>minimal</literal> (Noah Misch)
     </para>

     <para>
      If the server crashed between <command>CREATE TABLESPACE</command>
      and the next checkpoint, replay would fully remove the contents of
      the new tablespace's directory, relying on subsequent WAL replay
      to restore everything within that directory.  This interacts badly
      with optimizations that skip writing WAL (one example
      is <command>COPY</command> into a just-created table).  Such
      optimizations are applied only when <varname>wal_level</varname>
      is <literal>minimal</literal>, which is not the default in v10 and
      later.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [d6f1e16c8] 2021-10-18 19:08:25 -0300
Branch: REL_14_STABLE [72d064217] 2021-10-18 19:08:25 -0300
Branch: REL_13_STABLE [fe35528a5] 2021-10-18 19:08:25 -0300
Branch: REL_12_STABLE [8b26be8a3] 2021-10-18 19:08:25 -0300
Branch: REL_11_STABLE [b703b7d31] 2021-10-18 19:08:25 -0300
Branch: REL_10_STABLE [d36bdc4e9] 2021-10-18 19:08:25 -0300
-->
     <para>
      Ensure that the relation cache is invalidated for a table being
      attached to or detached from a partitioned table (Amit Langote,
      &Aacute;lvaro Herrera)
     </para>

     <para>
      This oversight could allow misbehavior of subsequent inserts/updates
      addressed directly to the partition, but only in currently-existing
      sessions.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [8bd534274] 2021-09-08 11:50:37 +0530
Branch: REL_14_STABLE Release: REL_14_0 [8db27fbc1] 2021-09-08 12:08:29 +0530
Branch: REL_13_STABLE [ddfc7299d] 2021-09-08 12:14:59 +0530
Branch: REL_12_STABLE [2eb09f27d] 2021-09-08 12:16:15 +0530
Branch: REL_11_STABLE [96e38fa5e] 2021-09-08 11:20:42 +0530
Branch: REL_10_STABLE [28cde380c] 2021-09-08 11:23:01 +0530
-->
     <para>
      Ensure that the relation cache is invalidated when creating or
      dropping a <literal>FOR ALL TABLES</literal> publication
      (Hou Zhijie, Vignesh C)
     </para>

     <para>
      This oversight could lead to improper replication behavior until all
      currently-existing sessions have exited.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5c056b0c2] 2021-08-06 17:32:54 -0400
Branch: REL_14_STABLE Release: REL_14_0 [e5f6493e3] 2021-08-06 17:32:54 -0400
Branch: REL_13_STABLE [dede14399] 2021-09-20 11:48:52 -0400
Branch: REL_12_STABLE [f230614da] 2021-09-20 11:48:52 -0400
Branch: REL_11_STABLE [914e54501] 2021-09-20 11:48:52 -0400
Branch: REL_10_STABLE [923b7efc2] 2021-09-20 11:48:52 -0400
Branch: REL9_6_STABLE [183b3aced] 2021-09-20 11:48:52 -0400
-->
     <para>
      Don't discard a cast to the same type with unspecified type modifier
      (Tom Lane)
     </para>

     <para>
      For example, if column <literal>f1</literal> is of
      type <literal>numeric(18,3)</literal>, the parser used to simply
      discard a cast like <literal>f1::numeric</literal>, on the grounds
      that it would have no run-time effect.  That's true, but the exposed
      type of the expression should still be considered to be
      plain <literal>numeric</literal>,
      not <literal>numeric(18,3)</literal>.  This is important for
      correctly resolving the type of larger constructs, such
      as recursive <literal>UNION</literal>s.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3e310d837] 2021-10-19 13:54:45 -0400
Branch: REL_14_STABLE [04dae19f4] 2021-10-19 13:54:45 -0400
Branch: REL_13_STABLE [30e61a8cd] 2021-10-19 13:54:46 -0400
Branch: REL_12_STABLE [ae7b1dd59] 2021-10-19 13:54:46 -0400
Branch: REL_11_STABLE [0d08c279b] 2021-10-19 13:54:46 -0400
-->
     <para>
      Fix updates of element fields in arrays of domain over composite
      (Tom Lane)
     </para>

     <para>
      A command such as <literal>UPDATE tab SET fld[1].subfld =
      val</literal> failed if the array's elements were domains rather
      than plain composites.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [db2760a84] 2021-09-03 16:39:03 -0400
Branch: REL_14_STABLE Release: REL_14_0 [2cc018ba8] 2021-09-03 16:39:04 -0400
Branch: REL_13_STABLE [132be6000] 2021-09-03 16:38:55 -0400
Branch: REL_12_STABLE [9046a0536] 2021-09-03 16:38:55 -0400
Branch: REL_11_STABLE [9ebe2852e] 2021-09-03 16:38:55 -0400
Branch: REL_10_STABLE [5d7c6b6c8] 2021-09-03 16:38:55 -0400
-->
     <para>
      Disallow creating an ICU collation if the current database's
      encoding won't support it (Tom Lane)
     </para>

     <para>
      Previously this was allowed, but then the collation could not be
      referenced because of the way collation lookup works; you could not
      use the collation, nor even drop it.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [e54a758d2] 2021-10-06 13:16:51 +0100
Branch: REL_14_STABLE [8e26b868d] 2021-10-06 13:19:25 +0100
Branch: REL_13_STABLE [9ab94ccb1] 2021-10-06 13:20:23 +0100
Branch: REL_12_STABLE [676218034] 2021-10-06 13:21:27 +0100
Branch: REL_11_STABLE [b2a0f1673] 2021-10-06 13:22:33 +0100
Branch: REL_10_STABLE [4853baaac] 2021-10-06 13:23:13 +0100
Branch: REL9_6_STABLE [0de8f9bc8] 2021-10-06 13:24:22 +0100
-->
     <para>
      Fix corner-case loss of precision in
      numeric <function>power()</function> (Dean Rasheed)
     </para>

     <para>
      The result could be inaccurate when the first argument is very close
      to 1.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [65dc30ced] 2021-08-24 16:37:26 -0400
Branch: REL_14_STABLE Release: REL_14_0 [244dd7992] 2021-08-24 16:37:27 -0400
Branch: REL_13_STABLE [071146184] 2021-08-24 16:37:27 -0400
Branch: REL_12_STABLE [92620e82f] 2021-08-24 16:37:27 -0400
Branch: REL_11_STABLE [3ebd32e70] 2021-08-24 16:37:27 -0400
Branch: REL_10_STABLE [062c4c791] 2021-08-24 16:37:27 -0400
Branch: REL9_6_STABLE [7e75fe390] 2021-08-24 16:37:27 -0400
-->
     <para>
      Avoid regular expression errors with capturing parentheses
      inside <literal>{0}</literal> (Tom Lane)
     </para>

     <para>
      Regular expressions like <literal>(.){0}...\1</literal> drew
      <quote>invalid backreference number</quote>.  Other regexp engines
      such as Perl don't complain, though, and for that matter ours
      doesn't either in some closely related cases.  Worse, it could throw
      an assertion failure instead.  Fix it so that no error is thrown and
      instead the back-reference is silently deemed to never match.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9bbf6f734] 2021-08-23 17:41:07 -0400
Branch: REL_14_STABLE Release: REL_14_0 [779557bd2] 2021-08-23 17:41:07 -0400
Branch: REL_13_STABLE [9a327179c] 2021-08-23 17:41:07 -0400
Branch: REL_12_STABLE [b9521a1f9] 2021-08-23 17:41:07 -0400
Branch: REL_11_STABLE [08e080756] 2021-08-23 17:41:07 -0400
Branch: REL_10_STABLE [df87b7c44] 2021-08-23 17:41:07 -0400
Branch: REL9_6_STABLE [d90e14414] 2021-08-23 17:41:07 -0400
-->
     <para>
      Prevent regular expression back-references from sometimes matching
      when they shouldn't (Tom Lane)
     </para>

     <para>
      The regexp engine was careless about clearing match data
      for capturing parentheses after rejecting a partial match.  This
      could allow a later back-reference to match in places where it
      should fail for lack of a defined referent.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [facce1da9] 2021-08-20 14:19:04 -0400
Branch: REL_14_STABLE Release: REL_14_0 [57a2d4a1b] 2021-08-20 14:19:04 -0400
Branch: REL_13_STABLE [b30f7f399] 2021-08-20 14:19:04 -0400
Branch: REL_12_STABLE [adbfde3db] 2021-08-20 14:19:04 -0400
Branch: REL_11_STABLE [9610852ab] 2021-08-20 14:19:04 -0400
Branch: REL_10_STABLE [e0f2acf26] 2021-08-20 14:19:04 -0400
Branch: REL9_6_STABLE [cafebd663] 2021-08-20 14:19:04 -0400
-->
     <para>
      Fix regular expression performance bug with back-references inside
      iteration nodes (Tom Lane)
     </para>

     <para>
      Incorrect back-tracking logic could result in exponential time spent
      looking for a match.  Fortunately the problem is masked in most
      cases by other optimizations.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_14_STABLE Release: REL_14_0 [599c73a91] 2021-09-06 11:29:52 -0400
Branch: REL_13_STABLE [d8a266c5e] 2021-09-06 11:29:52 -0400
Branch: REL_12_STABLE [eb3c8d248] 2021-09-06 11:29:52 -0400
Branch: REL_11_STABLE [90b4647f6] 2021-09-06 11:29:52 -0400
Branch: REL_10_STABLE [b28c862a6] 2021-09-06 11:29:52 -0400
Branch: REL9_6_STABLE [5907c3818] 2021-09-06 11:29:52 -0400
-->
     <para>
      Fix incorrect results from <literal>AT TIME ZONE</literal> applied
      to a <type>time with time zone</type> value (Tom Lane)
     </para>

     <para>
      The results were incorrect if the target time zone was specified by
      a dynamic timezone abbreviation (that is, one that is defined as
      equivalent to a full time zone name, rather than a fixed UTC offset).
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8c1144ba7] 2021-10-01 14:59:35 -0400
Branch: REL_14_STABLE [a54509bfd] 2021-10-01 14:59:35 -0400
Branch: REL_13_STABLE [7adbe186f] 2021-10-01 14:59:35 -0400
Branch: REL_12_STABLE [334fb8c3d] 2021-10-01 14:59:35 -0400
Branch: REL_11_STABLE [5863d348a] 2021-10-01 14:59:35 -0400
Branch: REL_10_STABLE [f951ea3a2] 2021-10-01 14:59:35 -0400
-->
     <para>
      Avoid using MCV-only statistics to estimate the range of a column
      (Tom Lane)
     </para>

     <para>
      There are corner cases in which <command>ANALYZE</command> will
      build a most-common-values (MCV) list but not a histogram, even
      though the MCV list does not account for all the observed values.
      In such cases, keep the planner from using the MCV list alone to
      estimate the range of column values.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7b5d4c29e] 2021-10-01 11:10:12 -0400
Branch: REL_14_STABLE [e6adaa179] 2021-10-01 11:10:12 -0400
Branch: REL_13_STABLE [04ef2021e] 2021-10-01 11:10:12 -0400
Branch: REL_12_STABLE [cded2c460] 2021-10-01 11:10:12 -0400
Branch: REL_11_STABLE [5abbda985] 2021-10-01 11:10:12 -0400
-->
     <para>
      Fix restoration of a Portal's snapshot inside a subtransaction
      (Bertrand Drouvot)
     </para>

     <para>
      If a procedure commits or rolls back a transaction, and then its
      next significant action is inside a new subtransaction, snapshot
      management went wrong, leading to a dangling pointer and probable
      crash.  A typical example in PL/pgSQL is a <literal>COMMIT</literal>
      immediately followed by a <literal>BEGIN ... EXCEPTION</literal>
      block that performs a query.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [409f9ca44] 2021-10-18 11:55:42 +0900
Branch: REL_14_STABLE [5b353aaff] 2021-10-18 11:56:48 +0900
Branch: REL_13_STABLE [8f4fe8d7f] 2021-10-18 11:56:52 +0900
Branch: REL_12_STABLE [a207b8521] 2021-10-18 11:56:54 +0900
Branch: REL_11_STABLE [506aa1f71] 2021-10-18 11:56:57 +0900
Branch: REL_10_STABLE [d1a6a08df] 2021-10-18 11:57:02 +0900
Branch: REL9_6_STABLE [f49bf8263] 2021-10-18 11:57:07 +0900
-->
     <para>
      Clean up correctly if a transaction fails after exporting its
      snapshot (Dilip Kumar)
     </para>

     <para>
      This oversight would only cause a problem if the same session
      attempted to export a snapshot again.  The most likely scenario for
      that is creation of a replication slot (followed by rollback)
      and then creation of another replication slot.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [05e6e78c1] 2021-11-06 19:13:58 +0300
Branch: REL_14_STABLE [b0f6bd48f] 2021-11-06 19:13:53 +0300
Branch: REL_13_STABLE [e1fee28a0] 2021-11-06 18:34:19 +0300
Branch: REL_12_STABLE [8f779a1a3] 2021-11-06 18:34:21 +0300
Branch: REL_11_STABLE [691c0df73] 2021-11-06 18:34:23 +0300
Branch: REL_10_STABLE [774d00573] 2021-11-06 18:34:26 +0300
Branch: REL9_6_STABLE [7381b79ad] 2021-11-06 18:34:31 +0300
-->
     <para>
      Prevent wraparound of overflowed-subtransaction tracking on standby
      servers (Kyotaro Horiguchi, Alexander Korotkov)
     </para>

     <para>
      This oversight could cause significant performance degradation
      (manifesting as excessive SubtransSLRU traffic) on standby servers.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [8a4237908] 2021-10-04 14:05:20 +0900
Branch: REL_14_STABLE [828f7f000] 2021-10-04 14:05:48 +0900
Branch: REL_13_STABLE [194e535a0] 2021-10-04 14:05:52 +0900
Branch: REL_12_STABLE [3c3f118d5] 2021-10-04 14:05:55 +0900
Branch: REL_11_STABLE [0a561d4d0] 2021-10-04 14:05:59 +0900
Branch: REL_10_STABLE [8a6a1fe07] 2021-10-04 14:06:03 +0900
Branch: REL9_6_STABLE [e2b2a9e1c] 2021-10-04 14:06:09 +0900
-->
     <para>
      Ensure that prepared transactions are properly accounted for during
      promotion of a standby server (Michael Paquier, Andres Freund)
     </para>

     <para>
      There was a narrow window where a prepared transaction could be
      omitted from a snapshot taken by a concurrently-running session.
      If that session then used the snapshot to perform data updates,
      erroneous results or data corruption could occur.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c1b7a6c27] 2021-09-10 13:18:32 -0400
Branch: REL_14_STABLE Release: REL_14_0 [d844cd75a] 2021-09-10 13:18:32 -0400
Branch: REL_13_STABLE [fa5d0415f] 2021-09-10 13:18:32 -0400
Branch: REL_12_STABLE [ba408fc96] 2021-09-10 13:18:32 -0400
Branch: REL_11_STABLE [9ea8d3d24] 2021-09-10 13:18:32 -0400
-->
     <para>
      Refuse to rewind a cursor marked <literal>NO SCROLL</literal>
      if it has been held over from a previous transaction due
      to the <literal>WITH HOLD</literal> option (Tom Lane)
     </para>

     <para>
      We have long forbidden fetching backwards from a <literal>NO
      SCROLL</literal> cursor, but for historical reasons the prohibition
      didn't extend to cases in which we rewind the query altogether and
      then re-fetch forwards.  That exception leads to inconsistencies,
      particularly for held-over cursors which may not have stored all the
      data necessary to rewind.  Disallow rewinding for non-scrollable
      held-over cursors to block the worst inconsistencies.  (v15 will
      remove the exception altogether.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [cba79a163] 2021-09-09 13:36:44 -0400
Branch: REL_14_STABLE Release: REL_14_0 [b7056c0a2] 2021-09-09 13:36:44 -0400
Branch: REL_13_STABLE [d8d93bc8b] 2021-09-09 13:36:31 -0400
Branch: REL_12_STABLE [2e75e969c] 2021-09-09 13:36:31 -0400
Branch: REL_11_STABLE [7813451c2] 2021-09-09 13:36:31 -0400
-->
     <para>
      Fix possible failure while saving a <literal>WITH HOLD</literal>
      cursor at transaction end, if it had already been read to completion
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8481f9989] 2021-09-09 11:45:48 -0400
Branch: REL_14_STABLE Release: REL_14_0 [7430c7742] 2021-09-09 11:45:48 -0400
Branch: REL_13_STABLE [04118de78] 2021-09-09 11:45:48 -0400
Branch: REL_12_STABLE [a7a73ce30] 2021-09-09 11:45:48 -0400
Branch: REL_11_STABLE [1a23b669d] 2021-09-09 11:45:48 -0400
Branch: REL_10_STABLE [ca1dd6234] 2021-09-09 11:45:48 -0400
Branch: REL9_6_STABLE [cc4de2bba] 2021-09-09 11:45:48 -0400
-->
     <para>
      Fix detection of a relation that has grown to the maximum allowed
      length (Tom Lane)
     </para>

     <para>
      An attempt to extend a table or index past the limit of 2^32-1
      blocks was rejected, but not soon enough to prevent inconsistent
      internal state from being created.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [362e2dcc4] 2021-09-08 12:05:47 -0400
Branch: REL_14_STABLE Release: REL_14_0 [03d01d746] 2021-09-08 12:05:43 -0400
Branch: REL_13_STABLE [cbba6ba3a] 2021-09-08 12:05:43 -0400
Branch: REL_12_STABLE [1fedbcc7a] 2021-09-08 12:05:43 -0400
Branch: REL_11_STABLE [882b7e728] 2021-09-08 12:05:43 -0400
Branch: REL_10_STABLE [9de082399] 2021-09-08 12:05:43 -0400
Branch: REL9_6_STABLE [595ab8a54] 2021-09-08 12:05:43 -0400
-->
     <para>
      Correctly track the presence of data-modifying CTEs when expanding
      a <literal>DO INSTEAD</literal> rule (Greg Nancarrow, Tom Lane)
     </para>

     <para>
      The previous failure to do this could lead to problems such as
      unsafely choosing a parallel plan.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [5be8ce82e] 2021-08-31 18:33:38 +0200
Branch: REL_14_STABLE Release: REL_14_0 [a371a5ba3] 2021-08-31 18:36:06 +0200
Branch: REL_13_STABLE [1fe1a04af] 2021-08-31 18:38:11 +0200
Branch: REL_12_STABLE [6c8b98669] 2021-08-31 18:40:09 +0200
Branch: REL_11_STABLE [b46ff4b50] 2021-08-31 18:42:11 +0200
Branch: REL_10_STABLE [bfb732c0e] 2021-08-31 18:44:36 +0200
Branch: master [628bc9d13] 2021-08-31 19:31:10 +0200
Branch: REL_14_STABLE Release: REL_14_0 [4090ff2a9] 2021-08-31 19:32:32 +0200
Branch: REL_13_STABLE [c8213aa94] 2021-08-31 19:36:03 +0200
Branch: REL_12_STABLE [5f8dd5dc1] 2021-08-31 19:41:58 +0200
Branch: REL_11_STABLE [bce24d1ed] 2021-08-31 19:42:14 +0200
Branch: REL_10_STABLE [6963e723f] 2021-08-31 19:44:30 +0200
-->
     <para>
      Fix incorrect reporting of permissions failures on extended
      statistics objects (Tomas Vondra)
     </para>

     <para>
      The code typically produced <quote>cache lookup error</quote> rather
      than the intended message.
     </para>
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master [a780b2fcc] 2021-08-25 08:32:04 -0400
Branch: REL_14_STABLE Release: REL_14_0 [11c123988] 2021-08-25 08:33:53 -0400
Branch: REL_13_STABLE [bc062cb93] 2021-08-25 08:40:52 -0400
Branch: REL_12_STABLE [f4b77e82e] 2021-08-25 08:45:00 -0400
Branch: REL_11_STABLE [198cf81e2] 2021-08-25 08:48:01 -0400
Branch: REL_10_STABLE [96f6ef9fe] 2021-08-25 08:55:52 -0400
-->
     <para>
      Fix incorrect snapshot handling in parallel workers (Greg Nancarrow)
     </para>

     <para>
      This oversight could lead to misbehavior in parallel queries if the
      transaction isolation level is less than <literal>REPEATABLE
      READ</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [29b590547] 2021-08-25 09:53:07 +0530
Branch: REL_14_STABLE Release: REL_14_0 [9d7a80ce0] 2021-08-25 10:10:50 +0530
Branch: REL_13_STABLE [794025eff] 2021-08-25 09:23:27 +0530
Branch: REL_12_STABLE [e35705f54] 2021-08-25 09:32:56 +0530
Branch: REL_11_STABLE [bfdbda24b] 2021-08-25 09:43:33 +0530
-->
     <para>
      Fix logical decoding to correctly ignore toast-table changes for
      transient tables (Bertrand Drouvot)
     </para>

     <para>
      Logical decoding normally ignores changes in transient tables such
      as those created during an <command>ALTER TABLE</command> heap
      rewrite.  But that filtering wasn't applied to the associated toast
      table if any, leading to possible errors when rewriting a table
      that's being published.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [596ba75cb] 2021-09-09 23:56:57 +0900
Branch: REL_14_STABLE Release: REL_14_0 [b5ec22bf5] 2021-09-09 23:58:05 +0900
Branch: REL_13_STABLE [dd9b3fced] 2021-09-09 23:58:26 +0900
Branch: REL_12_STABLE [466535254] 2021-09-09 23:58:54 +0900
Branch: REL_11_STABLE [aacb3cfaf] 2021-09-09 23:59:19 +0900
Branch: REL_10_STABLE [f77489046] 2021-09-09 23:59:40 +0900
Branch: REL9_6_STABLE [61e2aa2db] 2021-09-10 00:00:06 +0900
-->
     <para>
      Ensure that walreceiver processes create all required archive
      notification files before exiting (Fujii Masao)
     </para>

     <para>
      If a walreceiver exited exactly at a WAL segment boundary, it failed
      to make a notification file for the last-received segment, thus
      delaying archiving of that segment on the standby.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8d2d6ec77] 2021-08-19 12:12:35 -0400
Branch: REL_14_STABLE Release: REL_14_0 [464900393] 2021-08-19 12:12:35 -0400
Branch: REL_13_STABLE [7fa367d96] 2021-08-19 12:12:35 -0400
Branch: REL_12_STABLE [0c13ee198] 2021-08-19 12:12:35 -0400
Branch: REL_11_STABLE [fbc1eed8a] 2021-08-19 12:12:35 -0400
Branch: REL_10_STABLE [2739a2810] 2021-08-19 12:12:36 -0400
Branch: REL9_6_STABLE [cc7fae5c2] 2021-08-19 12:12:36 -0400
-->
     <para>
      Avoid trying to lock the <literal>OLD</literal>
      and <literal>NEW</literal> pseudo-relations in a rule
      that uses <literal>SELECT FOR UPDATE</literal>
      (Masahiko Sawada, Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [2313dda9d] 2021-08-18 18:12:51 -0400
Branch: REL_14_STABLE Release: REL_14_0 [61f9dae2c] 2021-08-18 18:12:51 -0400
Branch: REL_13_STABLE [ecd4dd9f1] 2021-08-18 18:12:51 -0400
Branch: REL_12_STABLE [eb2f59b34] 2021-08-18 18:12:51 -0400
Branch: REL_11_STABLE [a65319f09] 2021-08-18 18:12:51 -0400
Branch: REL_10_STABLE [82ad7ecb4] 2021-08-18 18:12:51 -0400
Branch: REL9_6_STABLE [c09f56fed] 2021-08-18 18:12:51 -0400
-->
     <para>
      Fix parser's processing of aggregate <literal>FILTER</literal>
      clauses (Tom Lane)
     </para>

     <para>
      If the <literal>FILTER</literal> expression is a plain boolean column,
      the semantic level of the aggregate could be mis-determined, leading
      to not-per-spec behavior.  If the <literal>FILTER</literal>
      expression is itself a boolean-returning aggregate, an error should
      be thrown but was not, likely resulting in a crash at execution.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [edb4d95dd] 2021-09-13 18:26:15 -0700
Branch: REL_14_STABLE Release: REL_14_0 [4e86887e0] 2021-09-13 18:15:28 -0700
Branch: REL_13_STABLE [c49e6f9d9] 2021-09-13 18:26:18 -0700
Branch: REL_12_STABLE [43849b65f] 2021-09-13 18:26:18 -0700
Branch: REL_11_STABLE [dccffd9a2] 2021-09-13 18:26:18 -0700
-->
     <para>
      Avoid trying to clean up LLVM state after an error within LLVM
      (Andres Freund, Justin Pryzby)
     </para>

     <para>
      This prevents a likely crash during backend exit after a fatal LLVM
      error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [d74b54b3d] 2021-11-05 12:29:35 -0300
Branch: REL_14_STABLE [02e20bb2d] 2021-11-05 12:29:35 -0300
Branch: REL_13_STABLE [bf5cdcfd5] 2021-11-05 12:29:34 -0300
Branch: REL_12_STABLE [3eff168a2] 2021-11-05 12:29:34 -0300
Branch: REL_11_STABLE [92224e470] 2021-11-05 12:29:34 -0300
Branch: REL_10_STABLE [58b600f64] 2021-11-05 12:29:34 -0300
Branch: REL9_6_STABLE [e0eaeafd6] 2021-11-05 12:29:35 -0300
-->
     <para>
      Avoid null-pointer-dereference crash when dropping a role that owns
      objects being dropped concurrently (&Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [6b1b405eb] 2021-11-03 10:52:38 +0200
Branch: REL_14_STABLE [4ebd740cd] 2021-11-03 10:54:33 +0200
Branch: REL_13_STABLE [07070c008] 2021-11-03 10:54:36 +0200
Branch: REL_12_STABLE [11a399f9c] 2021-11-03 10:54:39 +0200
Branch: REL_11_STABLE [6bf00da11] 2021-11-03 10:54:42 +0200
Branch: REL_10_STABLE [7b55bb892] 2021-11-03 11:09:08 +0200
Branch: REL9_6_STABLE [8f32afee0] 2021-11-03 11:15:02 +0200
Branch: master [d5ab0681b] 2021-11-03 19:38:17 +0200
Branch: REL_14_STABLE [f4e3b6271] 2021-11-03 19:41:35 +0200
Branch: REL_13_STABLE [b7299b664] 2021-11-03 19:41:38 +0200
Branch: REL_12_STABLE [7dc9a310e] 2021-11-03 19:41:41 +0200
Branch: REL_11_STABLE [b110af5f7] 2021-11-03 19:41:44 +0200
Branch: REL_10_STABLE [245799d39] 2021-11-03 19:41:46 +0200
Branch: REL9_6_STABLE [71aeaf245] 2021-11-03 19:41:49 +0200
-->
     <para>
      Prevent <quote>snapshot reference leak</quote> warning
      when <function>lo_export()</function> or a related function fails
      (Heikki Linnakangas)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3778bcb39] 2021-08-27 19:53:05 -0400
Branch: REL_14_STABLE Release: REL_14_0 [e84d4810c] 2021-08-27 19:53:06 -0400
Branch: REL_13_STABLE [dbb239d51] 2021-08-27 19:42:42 -0400
Branch: REL_12_STABLE [187b5fea9] 2021-08-27 19:42:42 -0400
Branch: REL_11_STABLE [7c1b0f4c3] 2021-08-27 19:42:42 -0400
Branch: REL_10_STABLE [6a787c83c] 2021-08-27 19:42:42 -0400
Branch: REL9_6_STABLE [9e959f7ed] 2021-08-27 19:42:42 -0400
-->
     <para>
      Ensure that scans of SP-GiST indexes are counted in the statistics
      views (Tom Lane)
     </para>

     <para>
      Incrementing the number-of-index-scans counter was overlooked in the
      SP-GiST code, although per-tuple counters were advanced correctly.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [e4ba1005c] 2021-08-16 12:10:22 +0900
Branch: REL_14_STABLE Release: REL_14_0 [f83d80ea1] 2021-08-16 12:11:49 +0900
Branch: REL_13_STABLE [7f0873f32] 2021-08-16 12:11:53 +0900
Branch: REL_12_STABLE [84c1bac57] 2021-08-16 12:11:56 +0900
Branch: REL_11_STABLE [d392e86fa] 2021-08-16 12:11:59 +0900
Branch: REL_10_STABLE [024fd44e0] 2021-08-16 12:12:02 +0900
Branch: REL9_6_STABLE [942416f4b] 2021-08-16 12:12:09 +0900
-->
     <para>
      Recalculate relevant wait intervals
      if <varname>recovery_min_apply_delay</varname> is changed during
      recovery (Soumyadeep Chakraborty, Ashwin Agrawal)
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [37450f2ca] 2021-08-13 16:41:26 +1200
Branch: REL_14_STABLE Release: REL_14_0 [dc23c77d0] 2021-08-13 16:41:56 +1200
Branch: REL_13_STABLE [4873da79d] 2021-08-13 16:42:35 +1200
Branch: REL_12_STABLE [75d8fe818] 2021-08-13 16:43:13 +1200
Branch: REL_11_STABLE [5a6b0f21e] 2021-08-13 16:43:46 +1200
Branch: REL_10_STABLE [4874886b4] 2021-08-13 16:44:18 +1200
-->
     <para>
      Fix infinite loop if a <filename>simplehash.h</filename> hash table
      reaches 2^32 elements (Yura Sokolov)
     </para>

     <para>
      It seems unlikely that this bug has been hit in practice, as it
      would require <varname>work_mem</varname> settings of hundreds of
      gigabytes for existing uses of <filename>simplehash.h</filename>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [83772cc78] 2021-09-23 18:05:10 +0200
Branch: REL_14_STABLE Release: REL_14_0 [bb7628e55] 2021-09-23 18:22:29 +0200
Branch: REL_13_STABLE [b564eb018] 2021-09-23 18:33:59 +0200
Branch: REL_12_STABLE [16d394c05] 2021-09-23 18:41:55 +0200
Branch: REL_11_STABLE [ac7290a20] 2021-09-23 18:48:03 +0200
Branch: REL_10_STABLE [3aac99068] 2021-09-23 18:54:30 +0200
Branch: master [ad8a166ca] 2021-09-23 18:13:36 +0200
Branch: REL_14_STABLE Release: REL_14_0 [abb2f9144] 2021-09-23 18:25:37 +0200
Branch: REL_13_STABLE [c0386f403] 2021-09-23 18:34:01 +0200
Branch: REL_12_STABLE [4185632e9] 2021-09-23 18:43:05 +0200
Branch: REL_11_STABLE [4487a7def] 2021-09-23 18:48:58 +0200
Branch: REL_10_STABLE [d77e085af] 2021-09-23 18:55:22 +0200
-->
     <para>
      Reduce memory consumption during calculation of extended statistics
      (Justin Pryzby, Tomas Vondra)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [fa703b317] 2021-09-13 13:23:50 +0900
Branch: REL_14_STABLE Release: REL_14_0 [cc057fb31] 2021-09-13 13:24:04 +0900
Branch: REL_13_STABLE [b589d212f] 2021-09-13 13:24:20 +0900
Branch: REL_12_STABLE [b34dcf87f] 2021-09-13 13:24:27 +0900
Branch: REL_11_STABLE [b6a10ff4a] 2021-09-13 13:24:35 +0900
Branch: REL_10_STABLE [83a3737a6] 2021-09-13 13:24:47 +0900
Branch: REL9_6_STABLE [3768c468d] 2021-09-13 13:24:56 +0900
-->
     <para>
      Fix <application>ecpg</application> to recover correctly
      after <function>malloc()</function> failure while establishing a
      connection (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4476bcb87] 2021-09-21 19:06:53 -0400
Branch: REL_14_STABLE Release: REL_14_0 [2ad5f963e] 2021-09-21 19:06:54 -0400
Branch: REL_13_STABLE [5f0a073cb] 2021-09-21 19:06:33 -0400
Branch: REL_12_STABLE [e8b0bcae6] 2021-09-21 19:06:33 -0400
Branch: REL_11_STABLE [13921c511] 2021-09-21 19:06:33 -0400
-->
     <para>
      Fix misevaluation of stable functions called in the arguments of a
      PL/pgSQL <command>CALL</command> statement (Tom Lane)
     </para>

     <para>
      They were being called with an out-of-date snapshot, so that they
      would not see any database changes made since the start of the
      session's top-level command.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1bf2518dd] 2021-09-13 12:42:03 -0400
Branch: REL_14_STABLE Release: REL_14_0 [4ffd3fe4d] 2021-09-13 12:42:28 -0400
Branch: REL_13_STABLE [745abdd95] 2021-09-13 12:42:03 -0400
Branch: REL_12_STABLE [b1de90699] 2021-09-13 12:42:03 -0400
Branch: REL_11_STABLE [bdd6ce48d] 2021-09-13 12:42:03 -0400
Branch: REL_10_STABLE [fe70ec907] 2021-09-13 12:42:04 -0400
Branch: REL9_6_STABLE [a460f7eb3] 2021-09-13 12:42:04 -0400
-->
     <para>
      Allow <literal>EXIT</literal> out of the outermost block in a
      PL/pgSQL routine (Tom Lane)
     </para>

     <para>
      If the routine does not require an explicit <literal>RETURN</literal>,
      this usage should be valid, but it was rejected.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [87ad49147] 2021-09-03 21:04:44 -0400
Branch: REL_14_STABLE Release: REL_14_0 [69d670e68] 2021-09-03 21:04:44 -0400
Branch: REL_13_STABLE [742b30cae] 2021-09-03 21:04:44 -0400
Branch: REL_12_STABLE [3b302eb1e] 2021-09-03 21:04:44 -0400
Branch: REL_11_STABLE [beb404d3b] 2021-09-03 21:04:44 -0400
Branch: REL_10_STABLE [6e2f45817] 2021-09-03 21:04:45 -0400
Branch: REL9_6_STABLE [9a070c658] 2021-09-03 21:04:45 -0400
-->
     <para>
      Remove <application>pg_ctl</application>'s hard-coded limits on the
      total length of generated commands (Phil Krylov)
     </para>

     <para>
      For example, this removes a restriction on how many command-line
      options can be passed through to the postmaster.  Individual path
      names that <application>pg_ctl</application> deals with, such as the
      postmaster executable's name or the data directory name, are still
      limited to <literal>MAXPGPATH</literal> bytes in most cases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [2acc84c6f] 2021-10-22 15:22:25 -0400
Branch: REL_14_STABLE [3ad2c2455] 2021-10-22 15:22:25 -0400
Branch: REL_13_STABLE [476006023] 2021-10-22 15:22:26 -0400
Branch: REL_12_STABLE [52b927a73] 2021-10-22 15:22:26 -0400
Branch: REL_11_STABLE [871dfe4b7] 2021-10-22 15:22:26 -0400
Branch: REL_10_STABLE [10f9faf6d] 2021-10-22 15:22:26 -0400
Branch: REL9_6_STABLE [b1df061f7] 2021-10-22 15:22:26 -0400
-->
     <para>
      Fix <application>pg_dump</application> to dump non-global default
      privileges correctly (Neil Chen, Masahiko Sawada)
     </para>

     <para>
      If a global (unrestricted) <command>ALTER DEFAULT
      PRIVILEGES</command> command revoked some present-by-default
      privilege, for example <literal>EXECUTE</literal> for functions, and
      then a restricted <command>ALTER DEFAULT PRIVILEGES</command>
      command granted that privilege again for a selected role or
      schema, <application>pg_dump</application> failed to dump the
      restricted privilege grant correctly.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e2ff7d9a8] 2021-10-16 12:23:57 -0400
Branch: REL_14_STABLE [b5152e3ba] 2021-10-16 12:24:11 -0400
Branch: REL_13_STABLE [6a262ba8c] 2021-10-16 12:24:17 -0400
Branch: REL_12_STABLE [fd182a92a] 2021-10-16 12:24:24 -0400
Branch: REL_11_STABLE [ca7a4ce58] 2021-10-16 12:24:33 -0400
Branch: REL_10_STABLE [2e2a23283] 2021-10-16 12:24:40 -0400
-->
     <para>
      Make <application>pg_dump</application> acquire shared lock on
      partitioned tables that are to be dumped (Tom Lane)
     </para>

     <para>
      This oversight was usually pretty harmless, since
      once <application>pg_dump</application> has locked any of the leaf
      partitions, that would suffice to prevent significant DDL on the
      partitioned table itself.  However problems could ensue when dumping
      a childless partitioned table, since no relevant lock would be held.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [bd3611db5] 2021-08-31 15:04:05 -0400
Branch: REL_14_STABLE Release: REL_14_0 [a20a9f26c] 2021-08-31 15:04:05 -0400
Branch: REL_13_STABLE [db11b4a3d] 2021-08-31 15:04:05 -0400
Branch: REL_12_STABLE [6b9667392] 2021-08-31 15:04:05 -0400
Branch: REL_11_STABLE [a60860ff3] 2021-08-31 15:04:05 -0400
Branch: REL_10_STABLE [ba8f1a0be] 2021-08-31 15:04:05 -0400
Branch: REL9_6_STABLE [dd3105286] 2021-08-31 15:04:05 -0400
Branch: master [6c450a861] 2021-08-31 13:53:49 -0400
Branch: REL_14_STABLE Release: REL_14_0 [9407dbbcb] 2021-08-31 13:53:49 -0400
Branch: REL_13_STABLE [904ce45bf] 2021-08-31 13:53:50 -0400
Branch: REL_12_STABLE [2f1ed9d98] 2021-08-31 13:53:50 -0400
Branch: REL_11_STABLE [c4b298ee1] 2021-08-31 13:53:51 -0400
Branch: REL_10_STABLE [0e7bdc722] 2021-08-31 13:53:51 -0400
Branch: REL9_6_STABLE [4645997c8] 2021-08-31 13:53:33 -0400
-->
     <para>
      Improve <application>pg_dump</application>'s performance by avoiding
      making per-table queries for RLS policies, and by avoiding repetitive
      calls to <function>format_type()</function> (Tom Lane)
     </para>

     <para>
      These changes provide only marginal improvement when dumping from a
      local server, but a dump from a remote server can benefit
      substantially due to fewer network round-trips.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [40dfac4fc] 2021-10-16 15:02:55 -0400
Branch: REL_14_STABLE [3e4c8db93] 2021-10-16 15:03:05 -0400
Branch: REL_13_STABLE [0b5f557b7] 2021-10-16 15:03:10 -0400
Branch: REL_12_STABLE [5b0b2983a] 2021-10-16 15:03:15 -0400
Branch: REL_11_STABLE [58955c84f] 2021-10-16 15:03:21 -0400
-->
     <para>
      Fix crash in <application>pg_dump</application> when attempting to
      dump trigger definitions from a pre-8.3 server (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [998d060f3] 2021-10-19 12:59:54 +0200
Branch: REL_14_STABLE [3e2f32b01] 2021-10-19 12:59:54 +0200
Branch: REL_13_STABLE [687fe8a9d] 2021-10-19 12:59:54 +0200
Branch: REL_12_STABLE [e788883de] 2021-10-19 12:59:54 +0200
Branch: REL_11_STABLE [038892c81] 2021-10-19 12:59:54 +0200
Branch: REL_10_STABLE [4fda03b67] 2021-10-19 12:59:54 +0200
Branch: REL9_6_STABLE [ef1f15819] 2021-10-19 12:59:54 +0200
-->
     <para>
      Fix incorrect filename in <application>pg_restore</application>'s
      error message about an invalid large object TOC file (Daniel
      Gustafsson)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a6bd28beb] 2021-08-10 18:10:29 -0400
Branch: REL_14_STABLE Release: REL_14_0 [a4957b5a7] 2021-08-10 18:10:30 -0400
Branch: REL_13_STABLE [7ba487cf9] 2021-08-10 18:10:30 -0400
Branch: REL_12_STABLE [cd7d9b6b6] 2021-08-10 18:10:30 -0400
Branch: REL_11_STABLE [eefa4c2b5] 2021-08-10 18:10:30 -0400
Branch: REL_10_STABLE [843d2879a] 2021-08-10 18:10:30 -0400
Branch: REL9_6_STABLE [5a9df5d50] 2021-08-10 18:10:30 -0400
-->
     <para>
      Fix failure of <filename>contrib/btree_gin</filename> indexes
      on <type>"char"</type>
      (not <type>char(<replaceable>n</replaceable>)</type>) columns,
      when an indexscan using the <literal>&lt;</literal>
      or <literal>&lt;=</literal> operator is performed (Tom Lane)
     </para>

     <para>
      Such an indexscan failed to return all the entries it should.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a667b0668] 2021-10-31 19:13:48 -0400
Branch: REL_14_STABLE [7104e0b24] 2021-10-31 19:13:48 -0400
Branch: REL_13_STABLE [3a5b313ce] 2021-10-31 19:13:48 -0400
Branch: REL_12_STABLE [16d0da5c8] 2021-10-31 19:13:48 -0400
Branch: REL_11_STABLE [5dd067430] 2021-10-31 19:13:48 -0400
Branch: REL_10_STABLE [d87d5f8d8] 2021-10-31 19:13:48 -0400
Branch: REL9_6_STABLE [fdb60ca83] 2021-10-31 19:13:48 -0400
-->
     <para>
      Change <filename>contrib/pg_stat_statements</filename> to read
      its <quote>query texts</quote> file in units of at most 1GB
      (Tom Lane)
     </para>

     <para>
      Such large query text files are very unusual, but if they do occur,
      the previous coding would fail on Windows 64 (which rejects
      individual read requests of more than 2GB).
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3071bbfe4] 2021-10-06 15:50:24 -0400
Branch: REL_14_STABLE [12ff678e1] 2021-10-06 15:50:24 -0400
Branch: REL_13_STABLE [aee83f39a] 2021-10-06 15:50:24 -0400
Branch: REL_12_STABLE [228897374] 2021-10-06 15:50:24 -0400
Branch: REL_11_STABLE [88807757d] 2021-10-06 15:50:24 -0400
Branch: REL_10_STABLE [2e33fbda1] 2021-10-06 15:50:24 -0400
Branch: REL9_6_STABLE [36c9f7d96] 2021-10-06 15:50:24 -0400
-->
     <para>
      Fix null-pointer crash
      when <filename>contrib/postgres_fdw</filename> tries to report a
      data conversion error (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c32fcac56] 2021-08-13 13:59:43 -0400
Branch: REL_14_STABLE Release: REL_14_0 [4ffbd55d9] 2021-08-13 13:59:44 -0400
Branch: REL_13_STABLE [48695decc] 2021-08-13 13:59:06 -0400
Branch: REL_12_STABLE [cdda2b247] 2021-08-13 13:59:13 -0400
Branch: REL_11_STABLE [8024ff478] 2021-08-13 13:59:18 -0400
Branch: REL_10_STABLE [7915a9515] 2021-08-13 13:59:25 -0400
Branch: REL9_6_STABLE [582a2affa] 2021-08-13 13:59:33 -0400
-->
     <para>
      Add spinlock support for the RISC-V architecture (Marek Szuba)
     </para>

     <para>
      This is essential for reasonable performance on that platform.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master Release: REL_14_BR [22e1943f1] 2021-03-23 11:48:37 +0100
Branch: REL_13_STABLE [a69e1506f] 2021-09-25 11:25:48 +0200
Branch: REL_12_STABLE [90cfd269f] 2021-09-25 11:25:48 +0200
Branch: REL_11_STABLE [0f28d267c] 2021-09-25 11:25:48 +0200
Branch: REL_10_STABLE [841075a65] 2021-09-25 11:25:48 +0200
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [318df8023] 2021-08-10 15:01:52 +0200
Branch: REL_14_STABLE Release: REL_14_0 [4fa2b15e1] 2021-09-25 11:27:20 +0200
Branch: REL_13_STABLE [135d8687a] 2021-09-25 11:27:20 +0200
Branch: REL_12_STABLE [00c72da4a] 2021-09-25 11:27:20 +0200
Branch: REL_11_STABLE [11901cd96] 2021-09-25 11:27:20 +0200
Branch: REL_10_STABLE [e802b594e] 2021-09-25 11:27:20 +0200
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [72bbff4cd] 2021-08-10 15:08:46 +0200
Branch: REL_14_STABLE Release: REL_14_0 [6d0001aab] 2021-09-25 11:27:28 +0200
Branch: REL_13_STABLE [8e7199453] 2021-09-25 11:27:28 +0200
Branch: REL_12_STABLE [7b6ce36fb] 2021-09-25 11:27:28 +0200
Branch: REL_11_STABLE [19e91a40b] 2021-09-25 11:27:28 +0200
Branch: REL_10_STABLE [eb643536b] 2021-09-25 11:27:28 +0200
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [41f30ecc2] 2021-10-20 16:48:24 +0900
Branch: REL_14_STABLE [81aefaea8] 2021-10-20 16:48:57 +0900
Branch: REL_13_STABLE [abb9ee92c] 2021-10-20 16:49:00 +0900
Branch: REL_12_STABLE [1539e0ecd] 2021-10-20 16:49:03 +0900
Branch: REL_11_STABLE [e00d45fea] 2021-10-20 16:49:06 +0900
Branch: REL_10_STABLE [922e3c3b7] 2021-10-20 16:49:10 +0900
Branch: REL9_6_STABLE [d581960df] 2021-10-20 16:49:14 +0900
-->
     <para>
      Support OpenSSL 3.0.0
      (Peter Eisentraut, Daniel Gustafsson, Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [31f860a52] 2021-08-17 14:30:01 +0200
Branch: REL_14_STABLE Release: REL_14_0 [b88377ad6] 2021-08-17 14:30:25 +0200
Branch: REL_13_STABLE [e15f32f0e] 2021-08-17 14:31:00 +0200
Branch: REL_12_STABLE [ed209db77] 2021-08-17 14:31:08 +0200
Branch: REL_11_STABLE [f1d5a94fc] 2021-08-17 14:30:39 +0200
Branch: REL_10_STABLE [ef7e24ff7] 2021-08-17 14:30:51 +0200
Branch: REL9_6_STABLE [0a88d4ece] 2021-08-17 14:31:22 +0200
-->
     <para>
      Set correct type identifier on OpenSSL BIO (I/O abstraction)
      objects created by <productname>PostgreSQL</productname>
      (Itamar Gafni)
     </para>

     <para>
      This oversight probably only matters for code that is doing
      tasks like auditing the OpenSSL installation.  But it's
      nominally a violation of the OpenSSL API, so fix it.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e757080e0] 2021-09-11 15:19:31 -0400
Branch: REL_14_STABLE Release: REL_14_0 [b33283cbd] 2021-09-11 15:19:43 -0400
Branch: REL_13_STABLE [7e420072e] 2021-09-11 15:19:49 -0400
Branch: REL_12_STABLE [3adde7eb6] 2021-09-11 15:19:54 -0400
Branch: REL_11_STABLE [3be381a90] 2021-09-11 15:19:58 -0400
Branch: REL_10_STABLE [daac97eb0] 2021-09-11 15:20:04 -0400
Branch: REL9_6_STABLE [ec89d7ace] 2021-09-11 15:20:12 -0400
-->
     <para>
      Make <function>pg_regexec()</function> robust against an
      out-of-range <replaceable>search_start</replaceable> parameter
      (Tom Lane)
     </para>

     <para>
      Return <literal>REG_NOMATCH</literal>, instead of possibly crashing,
      when <replaceable>search_start</replaceable> is past the end of the
      string.  This case is probably unreachable within
      core <productname>PostgreSQL</productname>, but extensions might be
      more careless about the parameter value.
     </para>
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [7821a0bf2] 2021-10-14 12:24:00 -0700
Branch: REL_14_STABLE [0b90f1c4c] 2021-10-14 12:24:22 -0700
Branch: REL_13_STABLE [20f785732] 2021-10-14 12:24:47 -0700
Branch: REL_12_STABLE [ab11f6e46] 2021-10-14 12:25:07 -0700
Branch: REL_11_STABLE [3f5d481ef] 2021-10-14 12:25:30 -0700
Branch: REL_10_STABLE [9364f64a2] 2021-10-14 12:25:48 -0700
Branch: REL9_6_STABLE [ae6abeb88] 2021-10-14 12:26:26 -0700
-->
     <para>
      Ensure that <function>GetSharedSecurityLabel()</function> can be
      used in a newly-started session that has not yet built its critical
      relation cache entries (Jeff Davis)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9b8d68cc6] 2021-10-02 16:05:42 -0400
Branch: REL_14_STABLE [fa8db4879] 2021-10-02 16:06:09 -0400
Branch: REL_13_STABLE [9c76689de] 2021-10-02 16:06:23 -0400
Branch: REL_12_STABLE [e5b25f19b] 2021-10-02 16:06:45 -0400
Branch: REL_11_STABLE [9cc919b51] 2021-10-02 16:06:55 -0400
Branch: REL_10_STABLE [e323630cd] 2021-10-02 16:07:16 -0400
Branch: REL9_6_STABLE [dbec5a2fe] 2021-10-02 16:07:37 -0400
Branch: master [ad740067a] 2021-10-02 16:05:10 -0400
Branch: REL_14_STABLE [81464999b] 2021-10-02 16:06:09 -0400
Branch: REL_13_STABLE [7ba8eb81f] 2021-10-02 16:06:23 -0400
Branch: REL_12_STABLE [4721e8aa6] 2021-10-02 16:06:45 -0400
Branch: REL_11_STABLE [bb6d42669] 2021-10-02 16:06:55 -0400
Branch: REL_10_STABLE [cb0799db0] 2021-10-02 16:07:16 -0400
Branch: REL9_6_STABLE [37cbe0f79] 2021-10-02 16:07:36 -0400
Branch: master [c1aa3b3c0] 2021-10-04 14:52:39 -0400
Branch: REL_14_STABLE [919c08d90] 2021-10-04 14:52:17 -0400
Branch: REL_13_STABLE [c53ff69e1] 2021-10-04 14:52:17 -0400
Branch: REL_12_STABLE [07873a5dc] 2021-10-04 14:52:17 -0400
Branch: REL_11_STABLE [d0b0b70dc] 2021-10-04 14:52:17 -0400
Branch: REL_10_STABLE [cd2479142] 2021-10-04 14:52:17 -0400
Branch: REL9_6_STABLE [b5f34ae08] 2021-10-04 14:52:17 -0400
-->
     <para>
      Use the CLDR project's data to map Windows time zone names to IANA
      time zones (Tom Lane)
     </para>

     <para>
      When running on Windows, <application>initdb</application> attempts
      to set the new cluster's <varname>timezone</varname> parameter to
      the IANA time zone matching the system's prevailing time zone.
      We were using a mapping table that we'd generated years ago and
      updated only fitfully; unsurprisingly, it contained a number of
      errors as well as omissions of recently-added zones.  It turns out
      that CLDR has been tracking the most appropriate mappings, so start
      using their data.  This change will not affect any existing
      installation, only newly-initialized clusters.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [937aafd6d] 2021-10-29 11:38:18 -0400
Branch: REL_14_STABLE [0c8a40b39] 2021-10-29 11:38:32 -0400
Branch: REL_13_STABLE [4cd72add0] 2021-10-29 11:38:38 -0400
Branch: REL_12_STABLE [14b8d25d6] 2021-10-29 11:38:47 -0400
Branch: REL_11_STABLE [91455f7c6] 2021-10-29 11:38:53 -0400
Branch: REL_10_STABLE [d0fe211ce] 2021-10-29 11:38:58 -0400
Branch: REL9_6_STABLE [22a498b9b] 2021-10-29 11:39:05 -0400
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2021e for DST law changes in Fiji, Jordan, Palestine, and
      Samoa, plus historical corrections for Barbados, Cook Islands,
      Guyana, Niue, Portugal, and Tonga.
     </para>

     <para>
      Also, the Pacific/Enderbury zone has been renamed to Pacific/Kanton.
      Also, the following zones have been merged into nearby, more-populous
      zones whose clocks have agreed with them since 1970: Africa/Accra,
      America/Atikokan, America/Blanc-Sablon, America/Creston,
      America/Curacao, America/Nassau, America/Port_of_Spain,
      Antarctica/DumontDUrville, and Antarctica/Syowa.
      In all these cases, the previous zone name remains as an alias.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11-13">
  <title>Release 11.13</title>

  <formalpara>
  <title>Release date:</title>
  <para>2021-08-12</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.12.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.13</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 11.11,
    see <xref linkend="release-11-11"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [6ee41a301] 2021-05-31 12:03:00 -0400
Branch: REL_13_STABLE [fe6f63286] 2021-05-31 12:03:00 -0400
Branch: REL_12_STABLE [6f9e7f21f] 2021-05-31 12:03:00 -0400
Branch: REL_11_STABLE [fe194f731] 2021-05-31 12:03:00 -0400
-->
     <para>
      Fix mis-planning of repeated application of a projection step
      (Tom Lane)
     </para>

     <para>
      The planner could create an incorrect plan in cases where two
      ProjectionPaths were stacked on top of each other.  The only known
      way to trigger that situation involves parallel sort operations, but
      there may be other instances.  The result would be crashes or
      incorrect query results.
      Disclosure of server memory contents is also possible.
      (CVE-2021-3677)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_14_BR [01e6f1a84] 2021-05-25 10:10:09 +0900
Branch: REL_13_STABLE [a23c0b00f] 2021-05-25 10:11:13 +0900
Branch: REL_12_STABLE [3f8072be8] 2021-05-25 10:11:17 +0900
Branch: REL_11_STABLE [96918b76f] 2021-05-25 10:11:21 +0900
Branch: REL_10_STABLE [c64b5d10d] 2021-05-25 10:11:26 +0900
Branch: REL9_6_STABLE [7777df34d] 2021-05-25 10:11:33 +0900
-->
     <para>
      Disallow SSL renegotiation more completely (Michael Paquier)
     </para>

     <para>
      SSL renegotiation has been disabled for some time, but the server
      would still cooperate with a client-initiated renegotiation request.
      A maliciously crafted renegotiation request could result in a server
      crash (see OpenSSL issue CVE-2021-3449).  Disable the feature
      altogether on OpenSSL versions that permit doing so, which are
      1.1.0h and newer.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [84f5c2908] 2021-05-21 14:03:59 -0400
Branch: REL_13_STABLE [d18ee6f92] 2021-05-21 14:03:53 -0400
Branch: REL_12_STABLE [41c6a5bec] 2021-05-21 14:03:53 -0400
Branch: REL_11_STABLE [ef9480509] 2021-05-21 14:03:53 -0400
Branch: master Release: REL_14_BR [3a09d75b4] 2021-06-10 12:27:27 -0400
Branch: REL_13_STABLE [6e43f1c2d] 2021-06-10 12:27:27 -0400
Branch: REL_12_STABLE [26383da7d] 2021-06-10 12:27:27 -0400
Branch: REL_11_STABLE [eea081ad0] 2021-06-10 12:27:27 -0400
Branch: master Release: REL_14_BR [d102aafb6] 2021-06-22 17:48:39 -0400
Branch: REL_13_STABLE [6f1321d5a] 2021-06-22 17:48:39 -0400
Branch: REL_12_STABLE [29d5d5761] 2021-06-22 17:48:39 -0400
Branch: REL_11_STABLE [77200c569] 2021-06-22 17:48:39 -0400
Branch: master [ef12f32c0] 2021-07-31 11:50:14 -0400
Branch: REL_14_STABLE [ec410c985] 2021-07-31 11:50:14 -0400
Branch: REL_13_STABLE [93f99693f] 2021-07-31 11:50:14 -0400
Branch: REL_12_STABLE [f26043645] 2021-07-31 11:50:14 -0400
Branch: REL_11_STABLE [cefb1230e] 2021-07-31 11:50:14 -0400
Branch: master Release: REL_14_BR [f21fadafa] 2021-05-20 18:32:37 -0400
Branch: REL_13_STABLE [c64183f23] 2021-05-20 18:32:37 -0400
Branch: REL_12_STABLE [8d341d6cb] 2021-05-20 18:32:37 -0400
Branch: REL_11_STABLE [0c1b2cb17] 2021-05-20 18:32:37 -0400
-->
     <para>
      Restore the Portal-level snapshot after <command>COMMIT</command>
      or <command>ROLLBACK</command> within a procedure (Tom Lane)
     </para>

     <para>
      This change fixes cases where an attempt to fetch a toasted value
      immediately after <command>COMMIT</command>/<command>ROLLBACK</command>
      would fail with errors like <quote>no known snapshots</quote> or
      <quote>missing chunk number 0 for toast value</quote>.
     </para>

     <para>
      Some extensions may attempt to execute SQL code outside of any
      Portal.  They are responsible for ensuring that an outer snapshot
      exists before doing so.  Previously, not providing a snapshot might
      work or it might not; now it will consistently fail
      with <quote>cannot execute SQL without an outer snapshot or
      portal</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [ba2c6d6ce] 2021-06-08 17:50:29 -0400
Branch: REL_13_STABLE [c1fd756fd] 2021-06-08 17:50:15 -0400
Branch: REL_12_STABLE [c3b508268] 2021-06-08 17:50:15 -0400
Branch: REL_11_STABLE [2757865fa] 2021-06-08 17:50:15 -0400
Branch: master Release: REL_14_BR [be9009890] 2021-06-08 18:40:06 -0400
Branch: REL_13_STABLE [c5b281841] 2021-06-08 18:40:06 -0400
Branch: REL_12_STABLE [182323300] 2021-06-08 18:40:06 -0400
Branch: REL_11_STABLE [5b7bf9f72] 2021-06-08 18:40:06 -0400
-->
     <para>
      Avoid misbehavior when persisting the output of a cursor that's
      reading a non-stable query (Tom Lane)
     </para>

     <para>
      Previously, we'd always rewind and re-read the whole query result,
      possibly getting results different from the earlier execution,
      causing great confusion later.  For a NO SCROLL cursor, we can fix
      this by only storing the not-yet-read portion of the query output,
      which is sufficient since a NO SCROLL cursor can't be backed up.
      Cursors with the SCROLL option remain at hazard, but that was
      already documented to be an unsafe option to use with a non-stable
      query.  Make those documentation warnings stronger.
     </para>

     <para>
      Also force NO SCROLL mode for the implicit cursor used by
      a <application>PL/pgSQL</application> FOR-over-query loop,
      to avoid this type of problem when persisting such a cursor
      during an intra-procedure commit.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [1103033ae] 2021-06-01 11:12:56 -0400
Branch: REL_13_STABLE [e5b0fffa1] 2021-06-01 11:12:56 -0400
Branch: REL_12_STABLE [762fe98b1] 2021-06-01 11:12:56 -0400
Branch: REL_11_STABLE [dc272157a] 2021-06-01 11:12:56 -0400
Branch: REL_10_STABLE [39862dde4] 2021-06-01 11:12:56 -0400
Branch: REL9_6_STABLE [3eca18522] 2021-06-01 11:12:56 -0400
-->
     <para>
      Reject <literal>SELECT ... GROUP BY GROUPING SETS (()) FOR
      UPDATE</literal> (Tom Lane)
     </para>

     <para>
      This should be disallowed, just as <literal>FOR UPDATE</literal>
      with a plain <literal>GROUP BY</literal> is disallowed, but the test
      for that failed to handle empty grouping sets correctly.
      The end result would be a null-pointer dereference in the executor.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a9da1934e] 2021-07-09 11:02:26 -0400
Branch: REL_14_STABLE [39b6e85f1] 2021-07-09 11:02:26 -0400
Branch: REL_13_STABLE [6edccac16] 2021-07-09 11:02:26 -0400
Branch: REL_12_STABLE [9c729bd30] 2021-07-09 11:02:26 -0400
Branch: REL_11_STABLE [158594f99] 2021-07-09 11:02:26 -0400
Branch: REL_10_STABLE [51df19a05] 2021-07-09 11:02:26 -0400
Branch: REL9_6_STABLE [f0271cb15] 2021-07-09 11:02:26 -0400
-->
     <para>
      Reject cases where a query in <literal>WITH</literal>
      rewrites to just <command>NOTIFY</command> (Tom Lane)
     </para>

     <para>
      Such cases previously crashed.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [e7fc488ad] 2021-07-10 12:42:59 +0100
Branch: REL_14_STABLE [06883d58f] 2021-07-10 12:45:00 +0100
Branch: REL_13_STABLE [f23a9b8a4] 2021-07-10 12:46:13 +0100
Branch: REL_12_STABLE [357b66ef9] 2021-07-10 12:47:45 +0100
Branch: REL_11_STABLE [5763ef42c] 2021-07-10 12:48:59 +0100
Branch: REL_10_STABLE [54a0ec1bd] 2021-07-10 12:50:05 +0100
Branch: REL9_6_STABLE [f8abf6944] 2021-07-10 12:51:22 +0100
-->
     <para>
      In <type>numeric</type> multiplication, round the result rather than
      failing if it would have more than 16383 digits after the decimal
      point (Dean Rasheed)
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [4dd5ce2fd] 2021-07-31 11:21:44 +0100
Branch: REL_14_STABLE [0d6b87497] 2021-07-31 11:23:48 +0100
Branch: REL_13_STABLE [053ec4e0c] 2021-07-31 11:25:39 +0100
Branch: REL_12_STABLE [5c62920fa] 2021-07-31 11:27:02 +0100
Branch: REL_11_STABLE [dcd0ab672] 2021-07-31 11:28:10 +0100
Branch: REL_10_STABLE [39b0bda67] 2021-07-31 11:29:50 +0100
Branch: REL9_6_STABLE [5cf350ce0] 2021-07-31 11:31:18 +0100
Branch: REL_11_STABLE [434ddfb79] 2021-08-05 22:24:28 +0100
Branch: master [2642df9fa] 2021-08-06 21:29:15 +0100
Branch: REL_14_STABLE [032556570] 2021-08-06 21:30:25 +0100
Branch: REL_13_STABLE [da188b993] 2021-08-06 21:31:20 +0100
Branch: REL_12_STABLE [cc4420f88] 2021-08-06 21:31:58 +0100
Branch: REL_11_STABLE [7a9c9acfe] 2021-08-06 21:32:46 +0100
Branch: REL_10_STABLE [f20b6bc96] 2021-08-06 21:33:25 +0100
Branch: REL9_6_STABLE [5b7b92ad7] 2021-08-06 21:34:04 +0100
-->
     <para>
      Fix corner-case errors and loss of precision when
      raising <type>numeric</type> values to very large powers
      (Dean Rasheed)
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [226ec49ff] 2021-08-05 09:24:11 +0100
Branch: REL_14_STABLE [ecbdbdfd9] 2021-08-05 09:27:35 +0100
Branch: REL_13_STABLE [a72ad6315] 2021-08-05 09:29:13 +0100
Branch: REL_12_STABLE [43644bd3b] 2021-08-05 09:30:37 +0100
Branch: REL_11_STABLE [4851940a5] 2021-08-05 09:32:03 +0100
Branch: REL_10_STABLE [661558bc3] 2021-08-05 09:33:55 +0100
Branch: REL9_6_STABLE [ed3e1663c] 2021-08-05 09:35:46 +0100
-->
     <para>
      Fix division-by-zero failure in <function>to_char()</function>
      with <literal>EEEE</literal> format and a <type>numeric</type> input
      value less than 10^(-1001) (Dean Rasheed)
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [55fe60938] 2021-07-09 14:04:30 +1200
Branch: REL_14_STABLE [6de3a21bb] 2021-07-09 14:04:40 +1200
Branch: REL_13_STABLE [6f88b68ff] 2021-07-09 14:04:49 +1200
Branch: REL_12_STABLE [efc42a1e1] 2021-07-09 14:04:56 +1200
Branch: REL_11_STABLE [45bad6a39] 2021-07-09 14:05:05 +1200
Branch: REL_10_STABLE [1efcd5720] 2021-07-09 14:05:15 +1200
Branch: REL9_6_STABLE [674ee3b76] 2021-07-09 14:05:24 +1200
Branch: REL_13_STABLE [87103002c] 2021-07-09 15:12:31 +1200
Branch: REL_12_STABLE [b18621139] 2021-07-09 15:13:01 +1200
Branch: REL_11_STABLE [137af4f27] 2021-07-09 15:13:29 +1200
Branch: REL_10_STABLE [dd76aa54a] 2021-07-09 15:14:01 +1200
Branch: REL9_6_STABLE [3e474a708] 2021-07-09 15:14:26 +1200
-->
     <para>
      Fix <function>pg_size_pretty(bigint)</function> to round negative
      values consistently with the way it rounds positive ones (and
      consistently with the <type>numeric</type> version) (Dean Rasheed,
      David Rowley)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [1250aad42] 2021-06-12 13:29:24 -0400
Branch: REL_13_STABLE [f479ea94b] 2021-06-12 13:29:24 -0400
Branch: REL_12_STABLE [7681b78fb] 2021-06-12 13:29:24 -0400
Branch: REL_11_STABLE [25d1ef1aa] 2021-06-12 13:29:24 -0400
Branch: REL_10_STABLE [26a053533] 2021-06-12 13:29:24 -0400
Branch: REL9_6_STABLE [c1ffbbcbc] 2021-06-12 13:29:24 -0400
-->
     <para>
      Make <literal>pg_filenode_relation(0, 0)</literal> return NULL
      rather than failing (Justin Pryzby)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [626731db2] 2021-07-11 12:54:24 -0400
Branch: REL_14_STABLE [69dfc36fd] 2021-07-11 12:54:24 -0400
Branch: REL_13_STABLE [1c612bc98] 2021-07-11 12:54:24 -0400
Branch: REL_12_STABLE [92340ba5a] 2021-07-11 12:54:24 -0400
Branch: REL_11_STABLE [6bd9ae173] 2021-07-11 12:54:24 -0400
Branch: REL_10_STABLE [1d49c8887] 2021-07-11 12:54:24 -0400
Branch: REL9_6_STABLE [734be249d] 2021-07-11 12:54:24 -0400
-->
     <para>
      Make <command>ALTER EXTENSION</command> lock the extension when
      adding or removing a member object (Tom Lane)
     </para>

     <para>
      The previous coding allowed <command>ALTER EXTENSION
      ADD/DROP</command> to occur concurrently with <command>DROP
      EXTENSION</command>, leading to a crash or corrupt catalog entries.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [29abde637] 2021-07-19 10:36:15 +0530
Branch: REL_14_STABLE [40295d158] 2021-07-19 10:54:21 +0530
Branch: REL_13_STABLE [bfa2a926d] 2021-07-19 11:04:21 +0530
Branch: REL_12_STABLE [f2f459f18] 2021-07-19 11:15:03 +0530
Branch: REL_11_STABLE [eb158e74a] 2021-07-19 11:23:35 +0530
Branch: REL_10_STABLE [22fd784af] 2021-07-19 11:32:08 +0530
-->
     <para>
      Fix <command>ALTER SUBSCRIPTION</command> to reject an empty slot
      name (Japin Li)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [df80fa2ee] 2021-07-16 13:01:43 -0400
Branch: REL_14_STABLE [eef92de11] 2021-07-16 13:01:43 -0400
Branch: REL_13_STABLE [c31516ae5] 2021-07-16 13:01:43 -0400
Branch: REL_12_STABLE [7584ec1f6] 2021-07-16 13:01:43 -0400
Branch: REL_11_STABLE [fed35bd4a] 2021-07-16 13:01:43 -0400
-->
     <para>
      When cloning a partitioned table's triggers to a new partition,
      ensure that their enabled status is copied
      (&Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9179a82d7] 2021-08-07 13:29:32 -0400
Branch: REL_14_STABLE [2c915905e] 2021-08-07 13:29:32 -0400
Branch: REL_13_STABLE [ba9f665a4] 2021-08-07 13:29:32 -0400
Branch: REL_12_STABLE [1ff1e4a60] 2021-08-07 13:29:32 -0400
Branch: REL_11_STABLE [d33fc4110] 2021-08-07 13:29:32 -0400
Branch: REL_10_STABLE [ac818984a] 2021-08-07 13:29:32 -0400
Branch: REL9_6_STABLE [c08b3a9eb] 2021-08-07 13:29:32 -0400
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_14_BR [187682c32] 2021-06-03 15:28:24 +0900
Branch: REL_13_STABLE [75d66d10e] 2021-06-03 15:28:37 +0900
Branch: REL_12_STABLE [4ceaa760b] 2021-06-03 15:28:41 +0900
Branch: REL_11_STABLE [dbc9dbba5] 2021-06-03 15:28:45 +0900
Branch: REL_10_STABLE [20f70f558] 2021-06-03 15:28:53 +0900
Branch: REL9_6_STABLE [d9525c46c] 2021-06-03 15:29:01 +0900
-->
     <para>
      Avoid alias conflicts in queries generated
      for <command>REFRESH MATERIALIZED VIEW CONCURRENTLY</command>
      (Tom Lane, Bharath Rupireddy)
     </para>

     <para>
      This command failed on materialized views containing columns with
      certain names, notably <structfield>mv</structfield>
      and <structfield>newdata</structfield>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6310809c4] 2021-07-24 18:35:52 -0400
Branch: REL_14_STABLE [712ba6b8b] 2021-07-24 18:35:52 -0400
Branch: REL_13_STABLE [f47408cdc] 2021-07-24 18:35:52 -0400
Branch: REL_12_STABLE [899785b4f] 2021-07-24 18:35:52 -0400
Branch: REL_11_STABLE [7b2262a21] 2021-07-24 18:35:52 -0400
Branch: REL_10_STABLE [654372169] 2021-07-24 18:35:52 -0400
Branch: REL9_6_STABLE [1861390e6] 2021-07-24 18:35:52 -0400
-->
     <para>
      Fix <command>PREPARE TRANSACTION</command> to check correctly
      for conflicting session-lifespan and transaction-lifespan locks
      (Tom Lane)
     </para>

     <para>
      A transaction cannot be prepared if it has both session-lifespan and
      transaction-lifespan locks on the same advisory-lock ID value.  This
      restriction was not fully checked, which could lead to a PANIC
      during <command>PREPARE TRANSACTION</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [d21fca084] 2021-06-18 18:00:09 -0400
Branch: REL_13_STABLE [33af10c59] 2021-06-18 18:00:09 -0400
Branch: REL_12_STABLE [c58a41605] 2021-06-18 18:00:09 -0400
Branch: REL_11_STABLE [ea5ae3ae1] 2021-06-18 18:00:09 -0400
Branch: REL_10_STABLE [b7e3a4407] 2021-06-18 18:00:09 -0400
Branch: REL9_6_STABLE [0b29b41e5] 2021-06-18 18:00:09 -0400
-->
     <para>
      Fix misbehavior of <command>DROP OWNED BY</command> when the target
      role is listed more than once in an RLS policy (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [5a0f1c8c0] 2021-06-25 13:59:38 -0400
Branch: REL_13_STABLE [ba815f00a] 2021-06-25 13:59:38 -0400
Branch: REL_12_STABLE [f851696a2] 2021-06-25 13:59:38 -0400
Branch: REL_11_STABLE [fea89d64e] 2021-06-25 13:59:38 -0400
Branch: REL_10_STABLE [f5b780c45] 2021-06-25 13:59:38 -0400
Branch: REL9_6_STABLE [9c7a150ae] 2021-06-25 13:59:38 -0400
-->
     <para>
      Skip unnecessary error tests when removing a role from an RLS policy
      during <command>DROP OWNED BY</command> (Tom Lane)
     </para>

     <para>
      Notably, this fixes some cases where it was necessary to be a
      superuser to use <command>DROP OWNED BY</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master Release: REL_14_BR [0a4efdc7e] 2021-06-18 06:51:12 -0400
Branch: REL_13_STABLE [5b6b5e5ee] 2021-06-18 07:44:58 -0400
Branch: REL_12_STABLE [6432bfe8a] 2021-06-18 07:46:21 -0400
Branch: REL_11_STABLE [306c31804] 2021-06-18 07:53:08 -0400
Branch: REL_11_STABLE [0d3b69ae0] 2021-06-18 11:45:45 -0400
-->
     <para>
      Don't store a <quote>fast default</quote> when adding a column to a
      foreign table (Andrew Dunstan)
     </para>

     <para>
      The fast default is useless since no local heap storage exists for
      such a table, but it confused subsequent operations.  In addition to
      suppressing creation of such catalog entries in <command>ALTER
      TABLE</command> commands, adjust the downstream code to cope
      when one is incorrectly present.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_14_BR [83158f74d] 2020-09-14 13:56:41 +0900
Branch: REL_13_STABLE [acb60edf0] 2021-06-28 10:39:09 +0900
Branch: REL_12_STABLE [e52f7cbec] 2021-06-28 10:43:01 +0900
Branch: REL_11_STABLE [08acba558] 2021-06-28 10:43:04 +0900
Branch: REL_10_STABLE [3c465883b] 2021-06-28 10:43:08 +0900
Branch: REL9_6_STABLE [d3d0cbeb6] 2021-06-28 10:43:13 +0900
Branch: master Release: REL_14_BR [09a69f6e2] 2021-06-28 11:17:05 +0900
Branch: REL_13_STABLE [fd7bc10ab] 2021-06-28 11:17:12 +0900
Branch: REL_12_STABLE [ce8949c4b] 2021-06-28 11:17:16 +0900
Branch: REL_11_STABLE [38ca11ade] 2021-06-28 11:17:20 +0900
Branch: REL_10_STABLE [5160d5bb1] 2021-06-28 11:17:25 +0900
Branch: REL9_6_STABLE [21257a8f6] 2021-06-28 11:17:30 +0900
-->
     <para>
      Allow index state flags to be updated transactionally
      (Michael Paquier, Andrey Lepikhov)
     </para>

     <para>
      This avoids failures when dealing with index predicates that aren't
      really immutable.  While that's not considered a supported case, the
      original reason for using a non-transactional update here is long
      gone, so we may as well change it.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_13_STABLE [102f31a20] 2021-06-18 12:09:22 -0400
Branch: REL_12_STABLE [b2c740c42] 2021-06-18 12:09:22 -0400
Branch: REL_11_STABLE [4b8b3562e] 2021-06-18 12:09:22 -0400
Branch: REL_10_STABLE [f172438ef] 2021-06-18 12:09:22 -0400
Branch: REL9_6_STABLE [1a3d30255] 2021-06-18 12:09:22 -0400
-->
     <para>
      Avoid corrupting the plan cache entry when <command>CREATE
      DOMAIN</command> or <command>ALTER DOMAIN</command> appears
      in a cached plan (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [f560209c6] 2020-09-14 12:35:00 -0400
Branch: REL_13_STABLE [4a20de9d9] 2021-06-25 10:46:10 -0400
Branch: REL_12_STABLE [04a476057] 2021-06-25 10:46:10 -0400
Branch: REL_11_STABLE [c39983600] 2021-06-25 10:46:10 -0400
Branch: REL_10_STABLE [4040139f2] 2021-06-25 10:46:10 -0400
-->
     <para>
      Make walsenders show their latest replication commands
      in <structname>pg_stat_activity</structname> (Tom Lane)
     </para>

     <para>
      Previously, a walsender would show its latest SQL command, which was
      confusing if it's now doing some replication operation instead.
      Now we show replication-protocol commands on the same footing as SQL
      commands.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [93a0bf239] 2021-07-27 15:44:12 -0400
Branch: REL_14_STABLE [ad3b40eb2] 2021-07-27 15:44:12 -0400
Branch: REL_13_STABLE [b8f91d7f9] 2021-07-27 15:44:12 -0400
Branch: REL_12_STABLE [6feb229f5] 2021-07-27 15:44:12 -0400
Branch: REL_11_STABLE [ddd1eac99] 2021-07-27 15:44:12 -0400
Branch: REL_10_STABLE [04fa0e11a] 2021-07-27 15:44:12 -0400
Branch: REL9_6_STABLE [85ec6c322] 2021-07-27 15:44:12 -0400
-->
     <para>
      Make
      <structname>pg_settings</structname>.<structfield>pending_restart</structfield>
      show as true when the pertinent entry
      in <filename>postgresql.conf</filename> has been removed
      (&Aacute;lvaro Herrera)
     </para>

     <para>
      <structfield>pending_restart</structfield> correctly showed the case
      where an entry that cannot be changed without a postmaster restart
      has been modified, but not where the entry had been removed
      altogether.
     </para>
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master Release: REL_14_BR [caba8f0d4] 2021-06-09 16:17:00 -0400
Branch: REL_13_STABLE [082656429] 2021-06-09 16:17:13 -0400
Branch: REL_12_STABLE [5d950c721] 2021-06-09 16:19:52 -0400
Branch: REL_11_STABLE [ca158c168] 2021-06-09 16:20:10 -0400
Branch: REL_10_STABLE [31bda6a22] 2021-06-09 16:20:28 -0400
Branch: REL9_6_STABLE [6eb5b9ae3] 2021-06-09 16:21:14 -0400
Branch: master Release: REL_14_BR [4dcb1d087] 2021-06-10 09:46:08 -0400
Branch: REL_13_STABLE [3465328aa] 2021-06-10 09:47:25 -0400
Branch: REL_12_STABLE [2208d71a0] 2021-06-10 09:34:39 -0400
Branch: REL_11_STABLE [534b9be80] 2021-06-10 09:43:35 -0400
Branch: REL_10_STABLE [1c2c6a9a2] 2021-06-10 09:48:07 -0400
Branch: REL9_6_STABLE [6cd0e55f9] 2021-06-10 09:51:00 -0400
Branch: REL9_6_STABLE [75212a854] 2021-06-09 16:16:21 -0400
Branch: REL_13_STABLE [99a0a2ada] 2021-06-09 12:28:39 -0400
Branch: REL_12_STABLE [6fc2febc2] 2021-06-09 12:29:00 -0400
Branch: REL_11_STABLE [38982b8b7] 2021-06-09 12:30:28 -0400
Branch: REL_10_STABLE [9778a191a] 2021-06-09 12:30:49 -0400
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master Release: REL_14_BR [c3652f976] 2021-06-12 08:43:54 -0400
Branch: REL_13_STABLE [45322bd9b] 2021-06-12 08:51:29 -0400
Branch: REL_12_STABLE [1730a3334] 2021-06-12 08:54:28 -0400
Branch: REL_11_STABLE [8b9e1275c] 2021-06-12 08:55:29 -0400
Branch: REL_10_STABLE [0cd8a55bd] 2021-06-12 08:55:39 -0400
Branch: REL9_6_STABLE [dee7ad20d] 2021-06-12 08:55:55 -0400
Branch: master Release: REL_14_BR [9d97c3408] 2021-06-13 07:19:34 -0400
Branch: REL_13_STABLE [47d5781cb] 2021-06-13 07:19:34 -0400
Branch: REL_12_STABLE [914c716ca] 2021-06-13 07:19:35 -0400
Branch: REL_11_STABLE [8cb3d95c2] 2021-06-13 07:19:36 -0400
Branch: REL_10_STABLE [319d616dd] 2021-06-13 07:19:38 -0400
Branch: REL9_6_STABLE [84cb4be71] 2021-06-13 07:19:40 -0400
Branch: master Release: REL_14_BR [54a5ed220] 2021-06-15 15:35:47 -0400
Branch: REL_13_STABLE [d906d106f] 2021-06-15 15:36:50 -0400
Branch: REL_12_STABLE [fb3d6b0e1] 2021-06-15 15:36:59 -0400
Branch: REL_11_STABLE [c0a758780] 2021-06-15 15:37:07 -0400
Branch: REL_10_STABLE [1dc53c914] 2021-06-15 15:37:15 -0400
Branch: REL9_6_STABLE [e46f6a078] 2021-06-15 15:37:24 -0400
-->
     <para>
      Fix corner-case failure of a new standby to follow a new primary
      (Dilip Kumar, Robert Haas)
     </para>

     <para>
      Under a narrow combination of conditions, the standby could wind up
      trying to follow the wrong WAL timeline.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [a00c138b7] 2021-07-29 01:31:41 +0900
Branch: REL_14_STABLE [f2a3d7404] 2021-07-29 01:33:33 +0900
Branch: REL_13_STABLE [a66b05b42] 2021-07-29 01:34:13 +0900
Branch: REL_12_STABLE [d7ded08e6] 2021-07-29 01:35:00 +0900
Branch: REL_11_STABLE [02ef4d1e2] 2021-07-29 01:35:05 +0900
Branch: REL_10_STABLE [25fe5b2bb] 2021-07-29 01:35:10 +0900
Branch: REL9_6_STABLE [32d182dd0] 2021-07-29 01:35:52 +0900
-->
     <para>
      Update minimum recovery point when WAL replay of a transaction abort
      record causes file truncation (Fujii Masao)
     </para>

     <para>
      File truncation is irreversible, so it's no longer safe to stop
      recovery at a point earlier than that record.  The corresponding
      case for transaction commit was fixed years ago, but this one was
      overlooked.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [50371df26] 2021-07-02 16:04:54 -0400
Branch: REL_14_STABLE [63a952167] 2021-07-02 16:05:20 -0400
Branch: REL_13_STABLE [7fc97752d] 2021-07-02 16:04:54 -0400
Branch: REL_12_STABLE [feff61557] 2021-07-02 16:04:54 -0400
Branch: REL_11_STABLE [32d50b895] 2021-07-02 16:04:54 -0400
Branch: REL_10_STABLE [0b5089e8c] 2021-07-02 16:04:54 -0400
-->
     <para>
      In walreceivers, avoid attempting catalog lookups after an error
      (Masahiko Sawada, Bharath Rupireddy)
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master Release: REL_14_BR [2945a488a] 2020-11-16 18:27:51 +0900
Branch: REL_13_STABLE [8d091922f] 2021-07-25 11:15:30 +0900
Branch: REL_12_STABLE [1bcfda30f] 2021-07-25 11:16:02 +0900
Branch: REL_11_STABLE [9c83398f8] 2021-07-25 11:16:13 +0900
Branch: REL_10_STABLE [710fabfa2] 2021-07-25 11:16:26 +0900
Branch: REL9_6_STABLE [8e5be9cfe] 2021-07-25 11:16:34 +0900
-->
     <para>
      Ensure that a standby server's startup process will respond to a
      shutdown signal promptly while waiting for WAL to arrive (Fujii
      Masao, Soumyadeep Chakraborty)
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master Release: REL_14_BR [b786304c2] 2021-06-28 09:29:38 +0530
Branch: REL_13_STABLE [741deb260] 2021-06-28 08:42:48 +0530
Branch: REL_12_STABLE [b75c1f687] 2021-06-28 09:17:10 +0530
Branch: REL_11_STABLE [c62c3769f] 2021-06-28 09:09:42 +0530
-->
     <para>
      Correctly clear shared state after failing to become a member of a
      transaction commit group (Amit Kapila)
     </para>

     <para>
      Given the right timing, this could cause an assertion failure when
      some later session re-uses the same PGPROC object.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master Release: REL_14_BR [b6d8d2073] 2021-06-24 10:45:23 +0300
Branch: REL_13_STABLE [2a0ab13f8] 2021-06-24 10:45:34 +0300
Branch: REL_12_STABLE [caac19650] 2021-06-24 10:45:43 +0300
Branch: REL_11_STABLE [c78bb32c1] 2021-06-24 10:45:46 +0300
Branch: REL_10_STABLE [a5eacd86b] 2021-06-24 10:45:49 +0300
Branch: REL9_6_STABLE [85ae8ccb2] 2021-06-24 10:45:52 +0300
Branch: master Release: REL_14_BR [9b8ed0f52] 2021-06-24 11:19:03 +0300
Branch: REL_13_STABLE [6fb377e5f] 2021-06-24 11:19:31 +0300
Branch: REL_12_STABLE [8b01a403c] 2021-06-24 11:19:34 +0300
Branch: REL_11_STABLE [eb3bd243a] 2021-06-24 11:19:37 +0300
Branch: REL_10_STABLE [fbbc48995] 2021-06-24 11:19:40 +0300
Branch: REL9_6_STABLE [5956795cb] 2021-06-24 11:19:44 +0300
-->
     <para>
      Add locking to avoid reading incorrect relmapper data in the face of
      a concurrent write from another process (Heikki Linnakangas)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [fe6a20ce5] 2021-06-12 12:59:15 -0400
Branch: REL_13_STABLE [8b5055812] 2021-06-12 12:59:15 -0400
Branch: REL_12_STABLE [1f280e833] 2021-06-12 12:59:15 -0400
Branch: REL_11_STABLE [9eecea7f3] 2021-06-12 12:59:15 -0400
Branch: REL_10_STABLE [4745c119e] 2021-06-12 12:59:15 -0400
-->
     <para>
      Improve checks for violations of replication protocol (Tom Lane)
     </para>

     <para>
      Logical replication workers frequently used Asserts to check for
      cases that could be triggered by invalid or out-of-order replication
      commands.  This seems unwise, so promote these tests to regular
      error checks.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master Release: REL_14_BR [6d0eb3855] 2021-05-21 07:54:27 +0530
Branch: REL_13_STABLE [c83c0257e] 2021-05-21 08:03:38 +0530
Branch: REL_12_STABLE [18c6242b7] 2021-05-21 08:17:25 +0530
Branch: REL_11_STABLE [71787b23e] 2021-05-21 08:31:10 +0530
-->
     <para>
      Fix deadlock when multiple logical replication workers try to
      truncate the same table (Peter Smith, Haiying Tang)
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master Release: REL_14_BR [4daa140a2] 2021-06-15 08:28:36 +0530
Branch: REL_13_STABLE [602a32a68] 2021-06-15 08:41:16 +0530
Branch: REL_12_STABLE [40ad7ebff] 2021-06-15 08:50:12 +0530
Branch: REL_11_STABLE [1f8a934e0] 2021-06-15 09:02:32 +0530
Branch: REL_10_STABLE [35f56c124] 2021-06-15 09:10:24 +0530
Branch: REL9_6_STABLE [43acadfce] 2021-06-15 09:18:38 +0530
Branch: REL_13_STABLE [56e366f67] 2021-06-24 15:21:50 +0530
Branch: REL_12_STABLE [72b51e214] 2021-06-24 15:25:13 +0530
Branch: REL_11_STABLE [e95f617ac] 2021-06-24 15:26:37 +0530
-->
     <para>
      Fix error cases and memory leaks in logical decoding of speculative
      insertions (Dilip Kumar)
     </para>
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [dd0e37cc1] 2021-07-10 10:26:38 -0700
Branch: REL_14_STABLE [10a07973c] 2021-07-10 10:27:07 -0700
Branch: REL_13_STABLE [edd9a2bf7] 2021-07-10 10:27:27 -0700
Branch: REL_12_STABLE [5b1621d2f] 2021-07-10 10:28:15 -0700
Branch: REL_11_STABLE [52c168db9] 2021-07-10 10:28:33 -0700
-->
     <para>
      Avoid leaving an invalid record-type hash table entry behind after
      an error (Sait Talha Nisanci)
     </para>

     <para>
      This could lead to later crashes or memory leakage.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [131ea3e90] 2021-06-16 19:30:17 -0400
Branch: REL_13_STABLE [d03a41d1c] 2021-06-16 19:30:17 -0400
Branch: REL_12_STABLE [17d962cca] 2021-06-16 19:30:17 -0400
Branch: REL_11_STABLE [9cf163266] 2021-06-16 19:30:17 -0400
Branch: REL_10_STABLE [a6f7745a3] 2021-06-16 19:30:17 -0400
Branch: REL9_6_STABLE [c50596cdc] 2021-06-16 19:30:17 -0400
-->
     <para>
      Fix plan cache reference leaks in some error cases in
      <command>CREATE TABLE ... AS EXECUTE</command> (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master Release: REL_14_BR [b1d653890] 2021-05-29 15:12:34 +1200
Branch: REL_13_STABLE [d41fda6aa] 2021-05-29 15:13:44 +1200
Branch: REL_12_STABLE [82248f227] 2021-05-29 15:14:53 +1200
Branch: REL_11_STABLE [a15d84470] 2021-05-29 15:16:15 +1200
-->
     <para>
      Fix race condition in code for sharing tuple descriptors across
      parallel workers (Thomas Munro)
     </para>

     <para>
      Given the right timing, a crash could result.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [30d8bad49] 2021-05-15 12:21:06 -0400
Branch: REL_13_STABLE [c3cc73e14] 2021-05-15 12:21:06 -0400
Branch: REL_12_STABLE [6bcb51968] 2021-05-15 12:21:06 -0400
Branch: REL_11_STABLE [6fcbaea7a] 2021-05-15 12:21:06 -0400
Branch: REL_10_STABLE [c76ceacbd] 2021-05-15 12:21:06 -0400
Branch: REL9_6_STABLE [5d195dc40] 2021-05-15 12:21:06 -0400
-->
     <para>
      Fix possible race condition when releasing BackgroundWorkerSlots
      (Tom Lane)
     </para>

     <para>
      It's likely that this doesn't fix any observable bug on Intel
      hardware, but machines with weaker memory ordering rules could
      have problems.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [41469253e] 2021-07-13 12:40:16 +1200
Branch: REL_14_STABLE [a3b8d91cc] 2021-07-13 12:42:04 +1200
Branch: REL_13_STABLE [204f646a2] 2021-07-13 12:42:43 +1200
Branch: REL_12_STABLE [6f1c7a2d0] 2021-07-13 12:44:36 +1200
Branch: REL_11_STABLE [187e9c399] 2021-07-13 12:45:35 +1200
Branch: REL_10_STABLE [b55e478a4] 2021-07-13 12:46:12 +1200
Branch: REL9_6_STABLE [87b7a652b] 2021-07-13 12:46:52 +1200
Branch: master [5bd38d2f2] 2021-07-13 13:27:05 +1200
Branch: REL_14_STABLE [a92709fed] 2021-07-13 13:27:44 +1200
Branch: REL_13_STABLE [2fde8e49a] 2021-07-13 13:28:19 +1200
Branch: REL_12_STABLE [645c5d119] 2021-07-13 13:30:26 +1200
Branch: REL_11_STABLE [eff751ea5] 2021-07-13 13:31:00 +1200
Branch: REL_10_STABLE [d7f10f39c] 2021-07-13 13:31:29 +1200
Branch: REL9_6_STABLE [d0e44bae4] 2021-07-13 13:32:10 +1200
-->
     <para>
      Fix latent crash in sorting code (Ronan Dunklau)
     </para>

     <para>
      One code path could attempt to free a null pointer.  The case
      appears unreachable in the core server's use of sorting, but perhaps
      it could be triggered by extensions.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [c3c35a733] 2021-05-14 15:07:34 -0400
Branch: REL_13_STABLE [dc714c120] 2021-05-14 15:07:34 -0400
Branch: REL_12_STABLE [4e046281f] 2021-05-14 15:07:34 -0400
Branch: REL_11_STABLE [d776045eb] 2021-05-14 15:07:34 -0400
Branch: REL_10_STABLE [e87a0d2e0] 2021-05-14 15:07:34 -0400
Branch: REL9_6_STABLE [5015d3c35] 2021-05-14 15:07:34 -0400
-->
     <para>
      Prevent infinite loops in SP-GiST index insertion (Tom Lane)
     </para>

     <para>
      In the event that INCLUDE columns take up enough space to prevent a
      leaf index tuple from ever fitting on a page, the text_ops operator
      class would get into an infinite loop vainly trying to make the
      tuple fit.
      While pre-v11 versions don't have INCLUDE columns, back-patch this
      anti-looping fix to them anyway, as it seems like a good defense
      against bugs in operator classes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [eb7a6b922] 2021-05-14 13:29:39 -0400
Branch: REL_13_STABLE [c1b72bf04] 2021-05-14 13:26:55 -0400
Branch: REL_12_STABLE [004288d3c] 2021-05-14 13:26:55 -0400
Branch: REL_11_STABLE [f4ee4082f] 2021-05-14 13:26:55 -0400
Branch: REL_10_STABLE [fe64adc93] 2021-05-14 13:26:55 -0400
Branch: REL9_6_STABLE [4c6cfcc37] 2021-05-14 13:26:55 -0400
Branch: master Release: REL_14_BR [e47f93f98] 2021-05-14 13:29:39 -0400
Branch: REL_13_STABLE [63831c162] 2021-05-14 12:54:26 -0400
Branch: REL_12_STABLE [4c646b179] 2021-05-14 12:54:26 -0400
Branch: REL_11_STABLE [8274f4517] 2021-05-14 12:54:26 -0400
Branch: REL_10_STABLE [39b8ccb08] 2021-05-14 12:54:26 -0400
Branch: REL9_6_STABLE [567328989] 2021-05-14 12:54:26 -0400
-->
     <para>
      Ensure that SP-GiST index insertion can be terminated by a query
      cancel request (Tom Lane, &Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d9809bf86] 2021-07-20 13:01:48 -0400
Branch: REL_14_STABLE [899564e01] 2021-07-20 13:01:48 -0400
Branch: REL_13_STABLE [0fce76b99] 2021-07-20 13:01:48 -0400
Branch: REL_12_STABLE [85189f54a] 2021-07-20 13:01:48 -0400
Branch: REL_11_STABLE [7321d5c3f] 2021-07-20 13:01:48 -0400
Branch: REL_10_STABLE [4eac891b1] 2021-07-20 13:01:48 -0400
Branch: REL9_6_STABLE [dffec69fe] 2021-07-20 13:01:48 -0400
-->
     <para>
      Fix uninitialized-variable bug that could
      cause <application>PL/pgSQL</application> to act as though
      an <literal>INTO</literal> clause
      specified <literal>STRICT</literal>, even though it didn't
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6f5d9bce5] 2021-06-28 14:17:41 -0400
Branch: REL_14_STABLE [cf1f545bf] 2021-06-28 14:17:42 -0400
Branch: REL_13_STABLE [1603deca3] 2021-06-28 14:17:42 -0400
Branch: REL_12_STABLE [240d56fc4] 2021-06-28 14:17:42 -0400
Branch: REL_11_STABLE [34c24e5a4] 2021-06-28 14:17:42 -0400
Branch: REL_10_STABLE [06a2b2fe5] 2021-06-28 14:17:42 -0400
Branch: REL9_6_STABLE [b54be47cd] 2021-06-28 14:17:42 -0400
-->
     <para>
      Don't abort the process for an out-of-memory failure in libpq's
      printing functions (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: John Naylor <john.naylor@postgresql.org>
Branch: master [5fcf3945b] 2021-07-30 15:39:22 -0400
Branch: REL_14_STABLE [f051b87ac] 2021-07-30 16:28:43 -0400
Branch: REL_13_STABLE [171bf1cea] 2021-07-30 16:18:59 -0400
Branch: REL_12_STABLE [d9589eb62] 2021-07-30 15:59:10 -0400
Branch: REL_11_STABLE [c7181a32c] 2021-07-30 16:12:17 -0400
Branch: REL_10_STABLE [231c19a89] 2021-07-30 16:40:42 -0400
Branch: REL9_6_STABLE [cfcb0ceab] 2021-07-30 16:34:33 -0400
Branch: REL_11_STABLE [9455e7f50] 2021-07-30 18:54:38 -0400
Branch: REL_10_STABLE [f3cd6aeb8] 2021-07-30 18:54:10 -0400
Branch: REL9_6_STABLE [fa27389c5] 2021-07-30 18:52:55 -0400
-->
     <para>
      In <application>ecpg</application>, allow the <type>numeric</type>
      value <systemitem>INT_MIN</systemitem> (usually -2147483648) to be
      converted to integer (John Naylor)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [42f94f56b] 2021-06-07 14:15:25 -0400
Branch: REL_13_STABLE [5b6436874] 2021-06-07 14:15:25 -0400
Branch: REL_12_STABLE [fc896f45d] 2021-06-07 14:15:25 -0400
Branch: REL_11_STABLE [89a5499ef] 2021-06-07 14:15:25 -0400
Branch: REL_10_STABLE [4826fe4c5] 2021-06-07 14:15:25 -0400
Branch: REL9_6_STABLE [ac600c541] 2021-06-07 14:15:25 -0400
Branch: REL_10_STABLE [0b116346b] 2021-06-07 13:12:35 -0400
Branch: REL9_6_STABLE [7cdb97632] 2021-06-07 13:12:35 -0400
-->
     <para>
      In <application>psql</application> and other client programs, avoid
      overrunning the ends of strings when dealing with invalidly-encoded
      data (Tom Lane)
     </para>

     <para>
      An incorrectly-encoded multibyte character near the end of a string
      could cause various processing loops to run past the string's
      terminating NUL, with results ranging from no detectable issue to
      a program crash, depending on what happens to be in the following
      memory.  This is reminiscent of CVE-2006-2313, although these
      particular cases do not appear to have interesting security
      consequences.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [f0e21f2f6] 2021-07-16 17:29:22 -0400
Branch: REL_14_STABLE [3c5b7c628] 2021-07-16 17:29:22 -0400
Branch: REL_13_STABLE [cc340af33] 2021-07-16 17:29:22 -0400
Branch: REL_12_STABLE [5992c94dc] 2021-07-16 17:29:22 -0400
Branch: REL_11_STABLE [ccfc3cbb3] 2021-07-16 17:29:22 -0400
-->
     <para>
      Fix <application>pg_dump</application> to correctly handle triggers
      on partitioned tables whose enabled status is different from their
      parent triggers' status
      (Justin Pryzby, &Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [f807e3410] 2021-06-13 14:32:42 -0400
Branch: REL_13_STABLE [bc7885b7f] 2021-06-13 14:32:42 -0400
Branch: REL_12_STABLE [b7c5823ac] 2021-06-13 14:32:42 -0400
Branch: REL_11_STABLE [73fa76241] 2021-06-13 14:32:42 -0400
Branch: REL_10_STABLE [05fccab6a] 2021-06-13 14:32:42 -0400
Branch: REL9_6_STABLE [dd53b46c7] 2021-06-13 14:32:42 -0400
-->
     <para>
      Avoid <quote>invalid creation date in header</quote> warnings
      observed when running <application>pg_restore</application> on an
      archive file created in a different time zone (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Bruce Momjian <bruce@momjian.us>
Branch: master [74cf7d46a] 2021-07-26 22:38:15 -0400
Branch: REL_14_STABLE [695b4a113] 2021-07-26 22:38:14 -0400
Branch: REL_13_STABLE [0a5e708e2] 2021-07-26 22:38:14 -0400
Branch: REL_12_STABLE [7626e9f2b] 2021-07-26 22:38:14 -0400
Branch: REL_11_STABLE [c4ba87f52] 2021-07-26 22:38:14 -0400
Branch: REL_10_STABLE [71121450e] 2021-07-26 22:38:14 -0400
Branch: REL9_6_STABLE [088dbf3bc] 2021-07-26 22:38:14 -0400
-->
     <para>
      Make <application>pg_upgrade</application> carry forward the old
      installation's <literal>oldestXID</literal> value (Bertrand Drouvot)
     </para>

     <para>
      Previously, the new installation's <literal>oldestXID</literal> was
      set to a value old enough to (usually) force immediate
      anti-wraparound autovacuuming.  That's not desirable from a
      performance standpoint; what's worse, installations using large
      values of <varname>autovacuum_freeze_max_age</varname> could suffer
      unwanted forced shutdowns soon after an upgrade.
     </para>
    </listitem>

    <listitem>
<!--
Author: Bruce Momjian <bruce@momjian.us>
Branch: master [e462856a7] 2021-08-03 11:58:15 -0400
Branch: REL_14_STABLE [4051a7775] 2021-08-03 11:58:15 -0400
Branch: REL_13_STABLE [a81c71e3a] 2021-08-03 11:58:15 -0400
Branch: REL_12_STABLE [49e319cea] 2021-08-03 11:58:15 -0400
Branch: REL_11_STABLE [3d2b6cd6f] 2021-08-03 11:58:14 -0400
Branch: REL_10_STABLE [58974a542] 2021-08-03 11:58:14 -0400
Branch: REL9_6_STABLE [5e531bb1d] 2021-08-03 11:58:14 -0400
Branch: master [9e51cc87f] 2021-08-03 12:26:08 -0400
Branch: REL_14_STABLE [3a0ba31a3] 2021-08-03 12:26:08 -0400
Branch: REL_13_STABLE [47a573d91] 2021-08-03 12:26:08 -0400
Branch: REL_12_STABLE [165506217] 2021-08-03 12:26:08 -0400
Branch: REL_11_STABLE [554a7648e] 2021-08-03 12:26:08 -0400
Branch: REL_10_STABLE [fcdc461f5] 2021-08-03 12:26:08 -0400
Branch: REL9_6_STABLE [3ab496ab8] 2021-08-03 12:26:08 -0400
-->
     <para>
      Extend <application>pg_upgrade</application> to detect and warn
      about extensions that should be upgraded (Bruce Momjian)
     </para>

     <para>
      A script file is now produced containing the <command>ALTER
      EXTENSION UPDATE</command> commands needed to bring extensions up to
      the versions that are considered default in the new installation.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [7fbe0c8c4] 2021-07-20 12:12:39 +0900
Branch: REL_14_STABLE [3a0d2d0cb] 2021-07-20 12:12:47 +0900
Branch: REL_13_STABLE [fb2b86015] 2021-07-20 12:12:51 +0900
Branch: REL_12_STABLE [b9a0de15e] 2021-07-20 12:12:54 +0900
Branch: REL_11_STABLE [795a9166e] 2021-07-20 12:12:57 +0900
Branch: REL_10_STABLE [11dbad74c] 2021-07-20 12:13:01 +0900
Branch: master [4ef64c425] 2021-07-26 11:13:37 +0900
Branch: REL_14_STABLE [b0d286719] 2021-07-26 11:14:08 +0900
Branch: REL_13_STABLE [2c7395aad] 2021-07-26 11:14:11 +0900
Branch: REL_12_STABLE [c4ef3b81b] 2021-07-26 11:14:14 +0900
Branch: REL_11_STABLE [9c6fa3403] 2021-07-26 11:14:17 +0900
Branch: REL_10_STABLE [4372f0685] 2021-07-26 11:14:21 +0900
-->
     <para>
      Avoid problems when
      switching <application>pg_receivewal</application> between
      compressed and non-compressed WAL storage (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c7b7311f6] 2021-07-06 12:36:12 -0400
Branch: REL_14_STABLE [86d491421] 2021-07-06 12:36:12 -0400
Branch: REL_13_STABLE [bee18616a] 2021-07-06 12:36:13 -0400
Branch: REL_12_STABLE [bd2e68d0b] 2021-07-06 12:36:13 -0400
Branch: REL_11_STABLE [a9460dbf1] 2021-07-06 12:36:13 -0400
Branch: REL_10_STABLE [b23ac5aef] 2021-07-06 12:36:13 -0400
Branch: REL9_6_STABLE [67f925bbd] 2021-07-06 12:36:13 -0400
-->
     <para>
      In <filename>contrib/postgres_fdw</filename>, avoid attempting
      catalog lookups after an error (Tom Lane)
     </para>

     <para>
      While this usually worked, it's not very safe since the error might
      have been one that made catalog access nonfunctional.  A side effect
      of the fix is that messages about data conversion errors will now
      mention the query's table and column aliases (if used) rather than
      the true underlying name of a foreign table or column.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [741d7f104] 2021-06-22 21:43:12 -0400
Branch: REL_13_STABLE [e2cde85ef] 2021-06-22 21:43:12 -0400
Branch: REL_12_STABLE [f228c401b] 2021-06-22 21:43:12 -0400
Branch: REL_11_STABLE [a1417e437] 2021-06-22 21:43:12 -0400
Branch: REL_10_STABLE [1f32b789d] 2021-06-22 21:43:12 -0400
Branch: REL9_6_STABLE [13f3fd9e4] 2021-06-22 21:43:12 -0400
Branch: master Release: REL_14_BR [4a054069a] 2021-06-23 11:13:00 -0400
Branch: REL_13_STABLE [b961bdfe1] 2021-06-23 11:12:31 -0400
Branch: REL_12_STABLE [d7da3ef08] 2021-06-23 11:12:31 -0400
Branch: REL_11_STABLE [b1aa0f228] 2021-06-23 11:12:31 -0400
Branch: REL_10_STABLE [0a8929ca0] 2021-06-23 11:12:31 -0400
Branch: REL9_6_STABLE [e535a8899] 2021-06-23 11:12:32 -0400
Branch: master Release: REL_14_BR [a443c1b2d] 2021-06-23 18:41:39 -0400
Branch: REL_13_STABLE [5179a1ab7] 2021-06-23 18:41:39 -0400
Branch: REL_12_STABLE [35e6b3bbf] 2021-06-23 18:41:39 -0400
Branch: REL_11_STABLE [94d8d8d89] 2021-06-23 18:41:39 -0400
Branch: REL_10_STABLE [5cb74a803] 2021-06-23 18:41:39 -0400
Branch: REL9_6_STABLE [ad9827a90] 2021-06-23 18:41:39 -0400
Branch: REL_12_STABLE [7a48dfbb8] 2021-06-24 11:30:32 -0400
Branch: REL_11_STABLE [c6cb62f61] 2021-06-24 11:30:32 -0400
Branch: REL_10_STABLE [024e064af] 2021-06-24 11:30:32 -0400
Branch: REL9_6_STABLE [e0a7036e1] 2021-06-24 11:30:32 -0400
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_13_BR [989d23b04] 2019-08-24 11:45:05 +0900
Branch: master Release: REL_13_BR [06fdc4e4d] 2019-08-24 12:34:37 +0900
Branch: REL_12_STABLE [96f3661e4] 2021-06-17 11:57:21 +0900
Branch: REL_11_STABLE [8f3229942] 2021-06-17 11:57:26 +0900
Branch: REL_10_STABLE [feac82fa8] 2021-06-17 11:57:35 +0900
Branch: REL9_6_STABLE [484c81bf7] 2021-06-17 11:57:44 +0900
Branch: master Release: REL_13_BR [9903338b5] 2019-08-24 11:35:43 +0900
Branch: REL_12_STABLE [a8f687927] 2021-06-17 11:01:16 +0900
Branch: REL_11_STABLE [834cb7269] 2021-06-17 11:01:20 +0900
Branch: REL_10_STABLE [0ed218048] 2021-06-17 11:01:25 +0900
Branch: REL9_6_STABLE [b7cd5c5b0] 2021-06-17 11:01:32 +0900
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [642c0697c] 2021-06-27 12:45:04 -0400
Branch: REL_13_STABLE [2d0944865] 2021-06-27 12:45:04 -0400
Branch: REL_12_STABLE [bc031cf13] 2021-06-27 12:45:04 -0400
Branch: REL_11_STABLE [1acab1209] 2021-06-27 12:45:04 -0400
Branch: REL_10_STABLE [7676d9594] 2021-06-27 12:45:04 -0400
Branch: REL9_6_STABLE [de589c112] 2021-06-27 12:45:04 -0400
-->
     <para>
      Improve the isolation-test infrastructure (Tom Lane, Michael Paquier)
     </para>

     <para>
      Allow isolation test steps to be annotated to show the expected
      completion order.  This allows getting stable results from
      otherwise-racy test cases, without the long delays that we
      previously used (not entirely successfully) to fend off race
      conditions.
      Allow non-quoted identifiers as isolation test session/step names
      (formerly, all such names had to be double-quoted).
      Detect and warn about unused steps in isolation tests.
      Improve display of query results in isolation tests.
      Remove isolationtester's <quote>dry-run</quote> mode.
      Remove memory leaks in isolationtester itself.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9753324b7] 2021-07-05 16:51:57 -0400
Branch: REL_14_STABLE [07f1e0696] 2021-07-05 16:51:57 -0400
Branch: REL_13_STABLE [2f487116e] 2021-07-05 16:51:57 -0400
Branch: REL_12_STABLE [3edc2dbc0] 2021-07-05 16:51:57 -0400
Branch: REL_11_STABLE [76c23bbb4] 2021-07-05 16:51:57 -0400
Branch: REL_10_STABLE [8c3e36fcc] 2021-07-05 16:51:57 -0400
Branch: REL9_6_STABLE [b82eabec3] 2021-07-05 16:51:57 -0400
Branch: master Release: REL_14_BR [e135743ef] 2021-05-11 20:59:58 -0400
Branch: REL_13_STABLE [834d9284b] 2021-05-11 20:59:45 -0400
-->
     <para>
      Reduce overhead of cache-clobber testing (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master Release: REL_14_BR [4a682d85a] 2021-06-05 07:16:34 +0200
Branch: REL_13_STABLE [3989f8fb9] 2021-06-17 09:01:22 +0200
Branch: REL_12_STABLE [9438962ce] 2021-06-17 09:02:20 +0200
Branch: REL_11_STABLE [1a2752be8] 2021-06-17 09:02:44 +0200
Branch: REL_10_STABLE [6b6fbfd7e] 2021-06-17 09:03:30 +0200
Branch: REL9_6_STABLE [9c31e4165] 2021-06-17 09:04:15 +0200
Branch: REL_12_STABLE [70293e946] 2021-06-17 16:39:13 +0200
Branch: REL_11_STABLE [ba529a6ff] 2021-06-18 06:51:56 +0200
Branch: REL_10_STABLE [91709e10a] 2021-06-18 06:52:46 +0200
Branch: REL9_6_STABLE [ec52b886d] 2021-06-18 06:52:48 +0200
-->
     <para>
      Fix <application>PL/Python</application>'s regression tests to pass
      with Python 3.10 (Honza Horak)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3779ac62d] 2021-07-24 13:41:17 -0400
Branch: REL_14_STABLE [89ad14cd7] 2021-07-24 13:41:17 -0400
Branch: REL_13_STABLE [c0a6f83de] 2021-07-24 13:41:17 -0400
Branch: REL_12_STABLE [4c8a14e8d] 2021-07-24 13:41:17 -0400
Branch: REL_11_STABLE [9329b9235] 2021-07-24 13:41:17 -0400
Branch: REL_10_STABLE [5a435289d] 2021-07-24 13:41:17 -0400
Branch: REL9_6_STABLE [7e09b504d] 2021-07-24 13:41:17 -0400
-->
     <para>
      Make <literal>printf("%s", NULL)</literal>
      print <literal>(null)</literal> instead of crashing (Tom Lane)
     </para>

     <para>
      This should improve server robustness in corner cases, and it syncs
      our <function>printf</function> implementation with common libraries.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [17707c059] 2021-06-30 11:48:53 +0900
Branch: REL_14_STABLE [607a3a43b] 2021-06-30 11:49:10 +0900
Branch: REL_13_STABLE [41edb2db1] 2021-06-30 11:49:16 +0900
Branch: REL_12_STABLE [b5ee867a7] 2021-06-30 11:49:20 +0900
Branch: REL_11_STABLE [93d3d0cf3] 2021-06-30 11:49:24 +0900
Branch: REL_10_STABLE [d8569db76] 2021-06-30 11:49:29 +0900
Branch: REL9_6_STABLE [68bad2333] 2021-06-30 11:49:36 +0900
-->
     <para>
      Fix incorrect log message when point-in-time recovery stops at
      a <command>ROLLBACK PREPARED</command> record (Simon Riggs)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: REL_14_STABLE [0c83eb2e0] 2021-07-14 17:15:01 +0900
Branch: REL_13_STABLE [522624345] 2021-07-14 17:15:18 +0900
Branch: REL_12_STABLE [b242e1d23] 2021-07-14 17:15:26 +0900
Branch: REL_11_STABLE [85a8c3a4b] 2021-07-14 17:15:31 +0900
-->
     <para>
      Improve <command>ALTER TABLE</command>'s messages for
      wrong-relation-kind errors (Kyotaro Horiguchi)
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [0e1275fb0] 2021-07-28 01:20:16 +0900
Branch: REL_14_STABLE [fd90f6ba7] 2021-07-28 01:21:35 +0900
Branch: REL_13_STABLE [92913fc29] 2021-07-28 01:21:52 +0900
Branch: REL_12_STABLE [de87c481f] 2021-07-28 01:24:24 +0900
Branch: REL_11_STABLE [42e6b5ccb] 2021-07-28 01:24:51 +0900
Branch: REL_10_STABLE [a84f95ffd] 2021-07-28 01:25:53 +0900
Branch: REL9_6_STABLE [78c21d79d] 2021-07-28 01:26:15 +0900
-->
     <para>
      Clarify error messages referring to <quote>non-negative</quote>
      values (Bharath Rupireddy)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d0a02bdb8] 2021-07-09 12:38:55 -0400
Branch: REL_14_STABLE [5620ec833] 2021-07-09 12:38:55 -0400
Branch: REL_13_STABLE [55cccdfdf] 2021-07-09 12:38:55 -0400
Branch: REL_12_STABLE [a5377e7f7] 2021-07-09 12:38:55 -0400
Branch: REL_11_STABLE [b69e8ad6c] 2021-07-09 12:38:55 -0400
Branch: REL_10_STABLE [7e0b53ad6] 2021-07-09 12:38:55 -0400
Branch: REL9_6_STABLE [cd5d3aefa] 2021-07-09 12:38:55 -0400
Branch: master [31e8cfac5] 2021-07-09 14:15:41 -0400
Branch: REL_14_STABLE [7f2eca6f9] 2021-07-09 14:15:41 -0400
Branch: REL_13_STABLE [cbcf5ffb1] 2021-07-09 14:15:41 -0400
Branch: REL_12_STABLE [83a8bf24e] 2021-07-09 14:15:41 -0400
Branch: REL_11_STABLE [29a4fbd46] 2021-07-09 14:15:41 -0400
Branch: REL_10_STABLE [911488b42] 2021-07-09 14:15:41 -0400
Branch: REL9_6_STABLE [8c9c20899] 2021-07-09 14:15:41 -0400
Branch: master [53c38a086] 2021-07-09 16:59:07 -0400
Branch: REL_14_STABLE [9ffad7ae7] 2021-07-09 16:59:07 -0400
Branch: REL_13_STABLE [32d0bdbfc] 2021-07-09 16:59:07 -0400
Branch: REL_12_STABLE [e82cde74d] 2021-07-09 16:59:08 -0400
Branch: REL_11_STABLE [2c28c689f] 2021-07-09 16:59:08 -0400
Branch: REL_10_STABLE [56533fce7] 2021-07-09 16:59:08 -0400
Branch: REL9_6_STABLE [3c612d9f6] 2021-07-09 16:59:08 -0400
Branch: master [9f6be2e79] 2021-07-10 13:19:30 -0400
Branch: REL_14_STABLE [ebc346e5b] 2021-07-10 13:19:31 -0400
Branch: REL_13_STABLE [9fca23c1d] 2021-07-10 13:19:31 -0400
Branch: REL_12_STABLE [03fc042eb] 2021-07-10 13:19:31 -0400
Branch: REL_11_STABLE [946f62f2f] 2021-07-10 13:19:31 -0400
-->
     <para>
      Fix <application>configure</application> to work with OpenLDAP 2.5,
      which no longer has a separate <filename>libldap_r</filename>
      library (Adrian Ho, Tom Lane)
     </para>

     <para>
      If there is no <filename>libldap_r</filename> library, we now
      silently assume that <filename>libldap</filename> is thread-safe.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [b8c4261e5] 2021-07-01 15:12:21 -0400
Branch: REL_14_STABLE [100e9ae53] 2021-07-01 15:15:09 -0400
Branch: REL_13_STABLE [bd0be7f7a] 2021-07-01 14:31:10 -0400
Branch: REL_12_STABLE [c71471c96] 2021-07-01 14:51:54 -0400
Branch: REL_11_STABLE [a7e3a390e] 2021-07-01 14:52:40 -0400
Branch: REL_10_STABLE [b796435be] 2021-07-01 15:07:20 -0400
Branch: REL9_6_STABLE [cbd5d7c85] 2021-07-01 15:11:53 -0400
Branch: master [7355c241e] 2021-07-01 15:47:46 -0400
Branch: REL_14_STABLE [1da2ea0cc] 2021-07-01 15:47:47 -0400
Branch: REL_13_STABLE [8d2be1402] 2021-07-01 15:40:42 -0400
Branch: REL_12_STABLE [383c29d1e] 2021-07-01 15:43:31 -0400
Branch: REL_11_STABLE [418041748] 2021-07-01 15:43:53 -0400
Branch: REL_10_STABLE [177531ee0] 2021-07-01 15:44:06 -0400
Branch: REL9_6_STABLE [1f7ea06d7] 2021-07-01 15:44:22 -0400
-->
     <para>
      Add new make targets <literal>world-bin</literal>
      and <literal>install-world-bin</literal> (Andrew Dunstan)
     </para>

     <para>
      These are the same as <literal>world</literal>
      and <literal>install-world</literal> respectively, except that they
      do not build or install the documentation.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [a0fc81326] 2021-07-01 09:02:46 -0400
Branch: REL_14_STABLE [c4774ce33] 2021-07-01 08:46:21 -0400
Branch: REL_13_STABLE [a8b564b0c] 2021-07-01 08:46:38 -0400
Branch: REL_12_STABLE [a40f8ea0f] 2021-07-01 08:47:04 -0400
Branch: REL_11_STABLE [58ac8300b] 2021-07-01 08:47:21 -0400
Branch: REL_10_STABLE [16ed3ddbb] 2021-07-01 08:48:24 -0400
Branch: REL9_6_STABLE [d173a4699] 2021-07-01 09:01:36 -0400
-->
     <para>
      Fix make rule for TAP tests (<literal>prove_installcheck</literal>)
      to work in PGXS usage (Andrew Dunstan)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master Release: REL_14_BR [9b4e4cfe6] 2021-06-25 11:28:20 +1200
Branch: REL_13_STABLE [d9c05a9ec] 2021-06-25 11:29:00 +1200
Branch: REL_12_STABLE [47d22649e] 2021-06-25 11:29:20 +1200
Branch: REL_11_STABLE [6ada4fd06] 2021-06-25 11:29:47 +1200
-->
     <para>
      Adjust JIT code to prepare for forthcoming LLVM API change
      (Thomas Munro, Andres Freund)
     </para>

     <para>
      LLVM 13 has made an incompatible API change that will cause crashing
      of our previous JIT compiler.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_14_BR [126cdaf47] 2021-06-23 14:01:32 -0400
Branch: REL_13_STABLE [13f365568] 2021-06-23 14:01:32 -0400
Branch: REL_12_STABLE [7eaf65451] 2021-06-23 14:01:32 -0400
Branch: REL_11_STABLE [361acef7e] 2021-06-23 14:01:32 -0400
Branch: REL_10_STABLE [d3a845d1f] 2021-06-23 14:01:32 -0400
Branch: REL9_6_STABLE [006a829b2] 2021-06-23 14:01:33 -0400
-->
     <para>
      Avoid assuming that strings returned by GSSAPI libraries are
      null-terminated (Tom Lane)
     </para>

     <para>
      The GSSAPI spec provides for a string pointer and length.  It seems
      that in practice the next byte after the string is usually zero,
      so that our previous coding didn't actually fail; but we do have
      a report of AddressSanitizer complaints.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_14_BR [025110663] 2021-05-27 20:11:00 +0900
Branch: REL_13_STABLE [ab81d004e] 2021-05-27 20:11:21 +0900
Branch: REL_12_STABLE [a75268f1c] 2021-05-27 20:11:24 +0900
Branch: REL_11_STABLE [cf2e09544] 2021-05-27 20:11:29 +0900
Branch: REL_10_STABLE [8f507dbc6] 2021-05-27 20:11:33 +0900
Branch: REL9_6_STABLE [7a4f2e158] 2021-05-27 20:11:38 +0900
Branch: master Release: REL_14_BR [7ca37fb04] 2020-12-30 12:56:06 -0500
Branch: REL_13_STABLE [e2f21ff60] 2021-06-01 09:27:25 +0900
Branch: REL_12_STABLE [02037af3f] 2021-06-01 09:27:31 +0900
Branch: REL_13_STABLE [949e32ee5] 2021-06-08 13:40:03 +0900
Branch: REL_12_STABLE [b7684bd10] 2021-06-08 13:40:10 +0900
-->
     <para>
      Enable building with GSSAPI on MSVC (Michael Paquier)
     </para>

     <para>
      Fix various incompatibilities with modern Kerberos builds.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master Release: REL_14_BR [fb424ae85] 2021-05-28 09:30:16 -0400
Branch: REL_13_STABLE [c828a7246] 2021-05-28 09:31:50 -0400
Branch: REL_12_STABLE [ae3ef8569] 2021-05-28 09:32:09 -0400
Branch: REL_11_STABLE [3f70d7e44] 2021-05-28 09:32:24 -0400
Branch: REL_10_STABLE [a8c1062a1] 2021-05-28 09:32:31 -0400
Branch: REL9_6_STABLE [abbd70022] 2021-05-28 09:32:46 -0400
Branch: master Release: REL_14_BR [d69fcb9ca] 2021-05-28 09:35:11 -0400
Branch: REL_13_STABLE [bb18bc224] 2021-05-28 09:36:42 -0400
Branch: REL_12_STABLE [40a05cf24] 2021-05-28 09:35:42 -0400
Branch: REL_11_STABLE [a44a2b9ac] 2021-05-28 09:35:49 -0400
Branch: REL_10_STABLE [d5d89629c] 2021-05-28 09:35:55 -0400
Branch: REL9_6_STABLE [34a65fc63] 2021-05-28 09:36:10 -0400
-->
     <para>
      In MSVC builds, include <option>--with-pgport</option> in the set of
      configure options reported by <application>pg_config</application>,
      if it had been specified (Andrew Dunstan)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11-12">
  <title>Release 11.12</title>

  <formalpara>
  <title>Release date:</title>
  <para>2021-05-13</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.11.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.12</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 11.11,
    see <xref linkend="release-11-11"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f02b9085a] 2021-05-10 10:44:38 -0400
Branch: REL_13_STABLE [467395bfd] 2021-05-10 10:44:38 -0400
Branch: REL_12_STABLE [3b0f6a7ae] 2021-05-10 10:44:38 -0400
Branch: REL_11_STABLE [06bfbe854] 2021-05-10 10:44:38 -0400
Branch: REL_10_STABLE [2fb809d3e] 2021-05-10 10:44:38 -0400
Branch: REL9_6_STABLE [0c1caa48d] 2021-05-10 10:44:38 -0400
-->
     <para>
      Prevent integer overflows in array subscripting calculations
      (Tom Lane)
     </para>

     <para>
      The array code previously did not complain about cases where an
      array's lower bound plus length overflows an integer.  This resulted
      in later entries in the array becoming inaccessible (since their
      subscripts could not be written as integers), but more importantly
      it confused subsequent assignment operations.  This could lead to
      memory overwrites, with ensuing crashes or unwanted data
      modifications.
      (CVE-2021-32027)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [049e1e2ed] 2021-05-10 11:02:29 -0400
Branch: REL_13_STABLE [4a8656a7e] 2021-05-10 11:02:29 -0400
Branch: REL_12_STABLE [a5fa3e067] 2021-05-10 11:02:29 -0400
Branch: REL_11_STABLE [b7d1f32ff] 2021-05-10 11:02:29 -0400
Branch: REL_10_STABLE [52a441362] 2021-05-10 11:02:30 -0400
Branch: REL9_6_STABLE [0fcb8e2e0] 2021-05-10 11:02:30 -0400
-->
     <para>
      Fix mishandling of <quote>junk</quote> columns in <literal>INSERT
      ... ON CONFLICT ... UPDATE</literal> target lists (Tom Lane)
     </para>

     <para>
      If the <literal>UPDATE</literal> list contains any multi-column
      sub-selects (which give rise to junk columns in addition to the
      results proper), the <literal>UPDATE</literal> path would end up
      storing tuples that include the values of the extra junk columns.
      That's fairly harmless in the short run, but if new columns are
      added to the table then the values would become accessible, possibly
      leading to malfunctions if they don't match the datatypes of the
      added columns.
     </para>

     <para>
      In addition, in versions supporting cross-partition updates,
      a cross-partition update triggered by such a case had the reverse
      problem: the junk columns were removed from the target list,
      typically causing an immediate crash due to malfunction of the
      multi-column sub-select mechanism.
      (CVE-2021-32028)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_13_STABLE [a71cfc56b] 2021-04-22 11:46:41 -0400
Branch: REL_12_STABLE [3fb93103a] 2021-04-22 11:46:41 -0400
Branch: REL_11_STABLE [27835b547] 2021-04-22 11:46:41 -0400
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d479d0028] 2021-04-22 17:30:55 -0400
Branch: REL_13_STABLE [2602ee468] 2021-04-22 17:30:42 -0400
Branch: REL_12_STABLE [05ce4bf8b] 2021-04-22 17:30:42 -0400
-->
     <para>
      Fix possibly-incorrect computation of <command>UPDATE
      ... RETURNING</command> outputs for joined cross-partition updates
      (Amit Langote, Etsuro Fujita)
     </para>

     <para>
      If an <command>UPDATE</command> for a partitioned table caused a row
      to be moved to another partition with a physically different row
      type (for example, one with a different set of dropped columns),
      computation of <literal>RETURNING</literal> results for that row
      could produce errors or wrong answers.  No error is observed unless
      the <command>UPDATE</command> involves other tables being joined to
      the target table.
      (CVE-2021-32029)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [6f70d7ca1] 2021-05-05 12:21:50 -0400
Branch: REL_13_STABLE [923c13520] 2021-05-05 12:14:21 -0400
Branch: REL_12_STABLE [abce26c9e] 2021-05-05 12:14:21 -0400
Branch: REL_11_STABLE [a25b98d2c] 2021-05-05 12:14:21 -0400
-->
     <para>
      Fix adjustment of constraint deferrability properties in
      partitioned tables (&Aacute;lvaro Herrera)
     </para>

     <para>
      When applied to a foreign-key constraint of a partitioned table,
      <command>ALTER TABLE ... ALTER CONSTRAINT</command> failed to
      adjust the <literal>DEFERRABLE</literal> and/or
      <literal>INITIALLY DEFERRED</literal> markings of the constraints
      and triggers of leaf partitions.  This led to unexpected behavior of
      such constraints.  After updating to this version, any misbehaving
      partitioned tables can be fixed by executing a
      new <command>ALTER</command> command to set the desired properties.
     </para>

     <para>
      This change also disallows applying such an <command>ALTER</command>
      directly to the constraints of leaf partitions.  The only supported
      case is for the whole partitioning hierarchy to have identical
      constraint properties, so such <command>ALTER</command>s must be
      applied at the partition root.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f52c5d674] 2021-03-12 11:08:42 -0500
Branch: REL_13_STABLE [8a2297776] 2021-03-12 11:08:42 -0500
Branch: REL_12_STABLE [e7f7950f6] 2021-03-12 11:08:42 -0500
Branch: REL_11_STABLE [6c34f186c] 2021-03-12 11:08:42 -0500
Branch: REL_10_STABLE [e5794cd59] 2021-03-12 11:08:42 -0500
-->
     <para>
      Forbid marking an identity column as nullable (Vik Fearing)
     </para>

     <para>
      <literal>GENERATED ... AS IDENTITY</literal> implies <literal>NOT
      NULL</literal>, so don't allow it to be combined with an
      explicit <literal>NULL</literal> specification.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [69d5ca484] 2021-04-13 15:10:18 -0400
Branch: REL_13_STABLE [c39aa1e87] 2021-04-13 15:10:18 -0400
Branch: REL_12_STABLE [a7fcb6285] 2021-04-13 15:10:18 -0400
Branch: REL_11_STABLE [c7f0275fb] 2021-04-13 15:10:18 -0400
Branch: REL_10_STABLE [46b6635b7] 2021-04-13 15:10:18 -0400
Branch: REL9_6_STABLE [041f4efd2] 2021-04-13 15:10:18 -0400
-->
     <para>
      Allow <literal>ALTER ROLE/DATABASE ... SET</literal> to set
      the <varname>role</varname>, <varname>session_authorization</varname>,
      and <varname>temp_buffers</varname> parameters (Tom Lane)
     </para>

     <para>
      Previously, over-eager validity checks might reject these commands,
      even if the values would have worked when used later.  This created
      a command ordering hazard for dump/reload and upgrade scenarios.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c402b02b9] 2021-04-12 14:37:49 -0400
Branch: REL_13_STABLE [8a7bd1e6c] 2021-04-12 14:37:22 -0400
Branch: REL_12_STABLE [27011bcff] 2021-04-12 14:37:22 -0400
Branch: REL_11_STABLE [fb2cca828] 2021-04-12 14:37:22 -0400
Branch: REL_10_STABLE [4b0aecee8] 2021-04-12 14:37:22 -0400
Branch: REL9_6_STABLE [a6158a4d9] 2021-04-12 14:37:22 -0400
-->
     <para>
      Fix bug with coercing the result of a <literal>COLLATE</literal>
      expression to a non-collatable type (Tom Lane)
     </para>

     <para>
      This led to a parse tree in which the <literal>COLLATE</literal>
      appears to be applied to a non-collatable value.  While that
      normally has no real impact (since <literal>COLLATE</literal> has no
      effect at runtime), it was possible to construct views that would be
      rejected during dump/reload.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [2efcd502e] 2021-04-30 14:10:26 -0400
Branch: REL_13_STABLE [4d225ba0e] 2021-04-30 14:10:26 -0400
Branch: REL_12_STABLE [89768ee69] 2021-04-30 14:10:26 -0400
Branch: REL_11_STABLE [ebc2ff076] 2021-04-30 14:10:26 -0400
Branch: REL_10_STABLE [0627f3630] 2021-04-30 14:10:26 -0400
Branch: REL9_6_STABLE [73bad52a9] 2021-04-30 14:10:26 -0400
-->
     <para>
      Disallow calling window functions and procedures via
      the <quote>fast path</quote> wire protocol message (Tom Lane)
     </para>

     <para>
      Only plain functions are supported here.  While trying to call
      an aggregate function failed already, calling a window function
      would crash, and calling a procedure would work only if the
      procedure did no transaction control.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [f7aab36d6] 2021-04-28 11:17:58 +0900
Branch: REL_13_STABLE [f3c453787] 2021-04-28 11:18:17 +0900
Branch: REL_12_STABLE [7e76cb1d8] 2021-04-28 11:18:20 +0900
Branch: REL_11_STABLE [5b717e13c] 2021-04-28 11:18:24 +0900
Branch: REL_10_STABLE [90c9bad30] 2021-04-28 11:18:28 +0900
Branch: REL9_6_STABLE [6e41ff056] 2021-04-28 11:18:33 +0900
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [f93f0b5b2] 2021-04-28 11:58:08 +0900
Branch: REL_13_STABLE [a928297bc] 2021-04-28 11:58:43 +0900
Branch: REL_12_STABLE [85a3e0be1] 2021-04-28 11:58:46 +0900
Branch: REL_11_STABLE [669f73666] 2021-04-28 11:58:50 +0900
Branch: REL_10_STABLE [b797918d2] 2021-04-28 11:58:55 +0900
Branch: REL9_6_STABLE [0d05a3a1d] 2021-04-28 11:59:00 +0900
-->
     <para>
      Extend <function>pg_identify_object_as_address()</function>
      to support event triggers (Joel Jacobson)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [7a3972597] 2021-04-12 11:30:50 +0900
Branch: REL_13_STABLE [be79debd9] 2021-04-12 11:31:26 +0900
Branch: REL_12_STABLE [82dd5706e] 2021-04-12 11:31:30 +0900
Branch: REL_11_STABLE [5656f2c3d] 2021-04-12 11:31:35 +0900
Branch: REL_10_STABLE [1cc110f68] 2021-04-12 11:31:40 +0900
Branch: REL9_6_STABLE [6540322fa] 2021-04-12 11:31:46 +0900
-->
     <para>
      Fix <function>to_char()</function>'s handling of Roman-numeral month
      format codes with negative intervals (Julien Rouhaud)
     </para>

     <para>
      Previously, such cases would usually cause a crash.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5c06abb9b] 2021-03-08 18:21:51 -0500
Branch: REL_13_STABLE [fe2b5386b] 2021-03-08 18:21:51 -0500
Branch: REL_12_STABLE [8fff8a874] 2021-03-08 18:21:51 -0500
Branch: REL_11_STABLE [ea42ccbce] 2021-03-08 18:21:51 -0500
Branch: REL_10_STABLE [37228ecde] 2021-03-08 18:21:51 -0500
-->
     <para>
      Check that the argument
      of <function>pg_import_system_collations()</function> is a valid
      schema OID (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b5a66e735] 2021-02-18 22:38:55 -0500
Branch: REL_13_STABLE [bf9d3a5f8] 2021-02-18 22:38:55 -0500
Branch: REL_12_STABLE [e7cddb5f2] 2021-02-18 22:38:55 -0500
Branch: REL_11_STABLE [6e6fecf49] 2021-02-18 22:38:55 -0500
Branch: REL_10_STABLE [b06450979] 2021-02-18 22:38:55 -0500
Branch: REL9_6_STABLE [ab208421e] 2021-02-18 22:38:55 -0500
-->
     <para>
      Fix use of uninitialized value while parsing an
      <literal>\{<replaceable>m</replaceable>,<replaceable>n</replaceable>\}</literal>
      quantifier in a BRE-mode regular expression (Tom Lane)
     </para>

     <para>
      This error could cause the quantifier to act non-greedy, that is
      behave like an
      <literal>{<replaceable>m</replaceable>,<replaceable>n</replaceable>}?</literal>
      quantifier would do in full regular expressions.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [33e52ad9a] 2021-03-26 22:34:58 +0100
Branch: REL_13_STABLE [67251c82a] 2021-03-26 22:37:45 +0100
Branch: REL_12_STABLE [88acb0135] 2021-03-26 22:40:00 +0100
Branch: REL_11_STABLE [2a307df1b] 2021-03-26 22:44:01 +0100
Branch: REL_10_STABLE [e5eb40eed] 2021-03-26 22:46:15 +0100
-->
     <para>
      Don't ignore system columns when estimating the number of groups
      using extended statistics (Tomas Vondra)
     </para>

     <para>
      This led to strange estimates for queries such as <literal>SELECT
      ... GROUP BY a, b, ctid</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ae4867ec7] 2021-02-12 16:26:47 -0500
Branch: REL_13_STABLE [3a02d68a9] 2021-02-12 16:26:47 -0500
Branch: REL_12_STABLE [0347470b3] 2021-02-12 16:26:47 -0500
Branch: REL_11_STABLE [a28df6fa3] 2021-02-12 16:26:47 -0500
Branch: REL_10_STABLE [374f1cefe] 2021-02-12 16:26:47 -0500
Branch: REL9_6_STABLE [f4d781dae] 2021-02-12 16:26:47 -0500
-->
     <para>
      Avoid divide-by-zero when estimating selectivity of a regular
      expression with a very long fixed prefix (Tom Lane)
     </para>

     <para>
      This typically led to a <literal>NaN</literal> selectivity value,
      causing assertion failures or strange planner behavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [23607a815] 2021-04-07 15:58:36 +0200
Branch: REL_13_STABLE [1aad1d181] 2021-04-07 15:59:30 +0200
Branch: REL_12_STABLE [847612fda] 2021-04-07 16:01:27 +0200
Branch: REL_11_STABLE [7d3a53461] 2021-04-07 16:02:51 +0200
Branch: REL_10_STABLE [e4f251be7] 2021-04-07 16:04:05 +0200
Branch: REL9_6_STABLE [df97ee6ea] 2021-04-07 16:05:21 +0200
-->
     <para>
      Fix access-off-the-end-of-the-table error in BRIN index bitmap scans
      (Tomas Vondra)
     </para>

     <para>
      If the page range size used by a BRIN index isn't a power of two,
      there were corner cases in which a bitmap scan could try to fetch
      pages past the actual end of the table, leading to <quote>could not
      open file</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [595b9cba2] 2021-03-22 08:30:53 +0900
Branch: REL_13_STABLE [6e5ce888a] 2021-03-22 08:31:01 +0900
Branch: REL_12_STABLE [4b1dd9b1e] 2021-03-22 08:31:05 +0900
Branch: REL_11_STABLE [f1d550f18] 2021-03-22 08:31:09 +0900
Branch: REL_10_STABLE [1ec7162a8] 2021-03-22 08:31:14 +0900
-->
     <para>
      Avoid incorrect timeline change while recovering uncommitted
      two-phase transactions from WAL (Soumyadeep Chakraborty, Jimmy Yih,
      Kevin Yeap)
     </para>

     <para>
      This error could lead to subsequent WAL records being written under
      the wrong timeline ID, leading to consistency problems, or even
      complete failure to be able to restart the server, later on.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [ad8b67492] 2021-04-06 02:25:37 +0900
Branch: REL_13_STABLE [e7bcfd717] 2021-04-06 02:27:11 +0900
Branch: REL_12_STABLE [dd5b7e486] 2021-04-06 02:27:22 +0900
Branch: REL_11_STABLE [b59d3abaf] 2021-04-06 02:27:30 +0900
Branch: REL_10_STABLE [b9cf9d7d3] 2021-04-06 02:27:39 +0900
Branch: REL9_6_STABLE [e3bf96216] 2021-04-06 02:27:48 +0900
-->
     <para>
      Ensure that locks are released while shutting down a standby
      server's startup process (Fujii Masao)
     </para>

     <para>
      When a standby server is shut down while still in recovery, some
      locks might be left held.  This causes assertion failures in debug
      builds; it's unclear whether any serious consequence could occur
      in production builds.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [4e8c0f1a0] 2021-05-07 11:46:37 -0400
Branch: REL_13_STABLE [ef70b6f8e] 2021-05-07 11:46:37 -0400
Branch: REL_12_STABLE [cfebc7080] 2021-05-07 11:46:37 -0400
Branch: REL_11_STABLE [b40865ebd] 2021-05-07 11:46:37 -0400
Branch: REL_10_STABLE [1803c7626] 2021-05-07 11:46:37 -0400
-->
     <para>
      Fix crash when a logical replication worker does <command>ALTER
      SUBSCRIPTION REFRESH</command> (Peter Smith)
     </para>

     <para>
      The core code won't do this, but a replica trigger could.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [f900a79ec] 2021-02-15 16:04:59 +1300
Branch: REL_13_STABLE [6c23e5ae9] 2021-02-15 16:05:42 +1300
Branch: REL_12_STABLE [a27f3a7f4] 2021-02-15 16:06:18 +1300
Branch: REL_11_STABLE [1fefe8879] 2021-02-15 16:06:25 +1300
Branch: REL_10_STABLE [800131df7] 2021-02-15 16:08:24 +1300
Branch: REL9_6_STABLE [09a3b19e3] 2021-02-15 16:09:14 +1300
-->
     <para>
      Ensure we default to <varname>wal_sync_method</varname>
      = <literal>fdatasync</literal> on recent FreeBSD (Thomas Munro)
     </para>

     <para>
      FreeBSD 13 supports <literal>open_datasync</literal>, which would
      normally become the default choice.  However, it's unclear whether
      that is actually an improvement for Postgres, so preserve the
      existing default for now.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [637668fb1] 2021-02-15 14:27:33 +1300
Branch: REL_13_STABLE [9fe40913c] 2021-02-15 14:20:42 +1300
Branch: REL_12_STABLE [840eda04e] 2021-02-15 14:20:52 +1300
Branch: REL_11_STABLE [acafdd9ed] 2021-02-15 14:21:01 +1300
Branch: REL_10_STABLE [4b426f77c] 2021-02-15 14:22:08 +1300
Branch: REL9_6_STABLE [8a07e5bd8] 2021-02-15 14:22:19 +1300
-->
     <para>
      Ensure we finish cleaning up when interrupted while detaching a DSM
      segment (Thomas Munro)
     </para>

     <para>
      This error could result in temporary files not being cleaned up
      promptly after a parallel query.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_12_STABLE [992cba94d] 2021-03-20 12:38:22 -0400
Branch: REL_11_STABLE [c49e287a8] 2021-03-20 12:38:22 -0400
Branch: REL_10_STABLE [7d9629ed2] 2021-03-20 12:38:22 -0400
-->
     <para>
      Fix memory leak while initializing server's SSL parameters (Michael
      Paquier)
     </para>

     <para>
      This is ordinarily insignificant, but if the postmaster is
      repeatedly sent <systemitem>SIGHUP</systemitem> signals, the leak
      can build up over time.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e835e89a0] 2021-03-20 12:47:21 -0400
Branch: REL_13_STABLE [4b41f6923] 2021-03-20 12:47:35 -0400
Branch: REL_12_STABLE [2f31414f4] 2021-03-20 12:47:42 -0400
Branch: REL_11_STABLE [8c830148d] 2021-03-20 12:47:48 -0400
Branch: REL_10_STABLE [ad6c19066] 2021-03-20 12:47:53 -0400
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9bacdf9f5] 2021-03-18 22:22:47 -0400
Branch: REL_13_STABLE [12354839e] 2021-03-18 22:21:58 -0400
Branch: REL_12_STABLE [4eca51d44] 2021-03-18 22:21:58 -0400
Branch: REL_11_STABLE [20f11ca0d] 2021-03-18 22:21:58 -0400
Branch: REL_10_STABLE [ba986b7bc] 2021-03-18 22:21:58 -0400
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [377b7a830] 2021-03-18 22:22:47 -0400
Branch: REL_13_STABLE [642b0b69b] 2021-03-18 22:09:41 -0400
Branch: REL_12_STABLE [fc552f868] 2021-03-18 22:09:41 -0400
Branch: REL_11_STABLE [26a3ae06d] 2021-03-18 22:09:41 -0400
Branch: REL_10_STABLE [5058e95a6] 2021-03-18 22:09:41 -0400
Branch: REL9_6_STABLE [7e2521770] 2021-03-18 22:09:41 -0400
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d303849b0] 2021-03-18 22:22:47 -0400
Branch: REL_13_STABLE [eba939551] 2021-03-18 21:44:43 -0400
Branch: REL_12_STABLE [92bc14a10] 2021-03-18 21:44:43 -0400
Branch: REL_11_STABLE [099d2914f] 2021-03-18 21:44:43 -0400
Branch: REL_10_STABLE [0b618ddf8] 2021-03-18 21:44:43 -0400
Branch: REL9_6_STABLE [09e961929] 2021-03-18 21:44:43 -0400
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [415ffdc22] 2021-03-18 22:22:47 -0400
Branch: REL_13_STABLE [ea3989f34] 2021-03-18 20:50:56 -0400
Branch: REL_12_STABLE [1452a0bb8] 2021-03-18 20:50:56 -0400
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [28644fac1] 2021-03-18 22:22:47 -0400
Branch: REL_13_STABLE [536836970] 2021-03-18 20:37:09 -0400
Branch: REL_12_STABLE [fbcc9fe33] 2021-03-18 20:37:09 -0400
Branch: REL_11_STABLE [967b693ea] 2021-03-18 20:37:09 -0400
Branch: REL_10_STABLE [2bed650c4] 2021-03-18 20:37:09 -0400
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4b12ab18c] 2021-03-16 16:03:06 -0400
Branch: REL_13_STABLE [4d072bf2a] 2021-03-16 16:02:49 -0400
Branch: REL_12_STABLE [6e3475556] 2021-03-16 16:02:49 -0400
Branch: REL_11_STABLE [a2764d87d] 2021-03-16 16:02:50 -0400
Branch: REL_10_STABLE [7ce7f2b79] 2021-03-16 16:02:50 -0400
-->
     <para>
      Fix assorted minor memory leaks in the server (Tom Lane, Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c2db458c1] 2021-04-13 13:37:07 -0400
Branch: REL_13_STABLE [97b7ad468] 2021-04-13 13:37:07 -0400
Branch: REL_12_STABLE [6530df6c2] 2021-04-13 13:37:07 -0400
Branch: REL_11_STABLE [22f2a98cf] 2021-04-13 13:37:07 -0400
-->
     <para>
      Fix failure when a PL/pgSQL <command>DO</command> block makes use of
      both composite-type variables and transaction control (Tom Lane)
     </para>

     <para>
      Previously, such cases led to errors about leaked tuple descriptors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [51c54bb60] 2021-03-11 14:43:45 -0500
Branch: REL_13_STABLE [3580b4a0c] 2021-03-11 14:43:45 -0500
Branch: REL_12_STABLE [56defbdd0] 2021-03-11 14:43:45 -0500
Branch: REL_11_STABLE [d3a557894] 2021-03-11 14:43:45 -0500
Branch: REL_10_STABLE [d2be6cdc5] 2021-03-11 14:43:45 -0500
Branch: REL9_6_STABLE [a98e53e10] 2021-03-11 14:43:45 -0500
-->
     <para>
      Prevent infinite loop in <application>libpq</application>
      if a ParameterDescription message with a corrupt length is received
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [75dbfe4ca] 2021-03-02 15:39:34 -0300
Branch: REL_13_STABLE [b52fd1e7c] 2021-03-02 15:39:34 -0300
Branch: REL_12_STABLE [f92776791] 2021-03-02 15:39:34 -0300
Branch: REL_11_STABLE [ae1c1d84e] 2021-03-02 15:39:34 -0300
Branch: REL_10_STABLE [926139dd0] 2021-03-02 15:39:34 -0300
-->
     <para>
      When <application>initdb</application> prints instructions about how
      to start the server, make the path shown
      for <application>pg_ctl</application> use backslash separators on
      Windows (Nitin Jadhav)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ea8013854] 2021-03-23 14:27:50 -0400
Branch: REL_13_STABLE [c6eac71a8] 2021-03-23 14:27:50 -0400
Branch: REL_12_STABLE [beac4bd65] 2021-03-23 14:27:50 -0400
Branch: REL_11_STABLE [d75edab42] 2021-03-23 14:27:50 -0400
Branch: REL_10_STABLE [d5a905ed5] 2021-03-23 14:27:50 -0400
Branch: REL9_6_STABLE [4f670c64e] 2021-03-23 14:27:50 -0400
-->
     <para>
      Fix <application>psql</application> to restore the previous behavior
      of <literal>\connect
      service=<replaceable>something</replaceable></literal> (Tom Lane)
     </para>

     <para>
      A previous bug fix caused environment variables (such
      as <varname>PGPORT</varname>) to override entries in the service
      file in this context.  Restore the previous behavior, in which the
      priority is the other way around.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [48d67fd89] 2021-03-12 12:20:15 -0500
Branch: REL_13_STABLE [6ed059933] 2021-03-12 12:20:15 -0500
Branch: REL_12_STABLE [60e5c2b14] 2021-03-12 12:20:15 -0500
Branch: REL_11_STABLE [33aa7d13d] 2021-03-12 12:20:15 -0500
Branch: REL_10_STABLE [8915e7906] 2021-03-12 12:20:15 -0500
Branch: REL9_6_STABLE [a42c4438b] 2021-03-12 12:20:15 -0500
-->
     <para>
      Fix race condition in detection of file modification by
      <application>psql</application>'s <literal>\e</literal> and related
      commands (Laurenz Albe)
     </para>

     <para>
      A very fast typist could fool the code's file-timestamp-based
      detection of whether the temporary edit file was changed.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ec03f2df1] 2021-04-01 13:34:16 -0400
Branch: REL_13_STABLE [35421a470] 2021-04-01 13:34:16 -0400
Branch: REL_12_STABLE [84c5e0dd2] 2021-04-01 13:34:16 -0400
Branch: REL_11_STABLE [25fe401d5] 2021-04-01 13:34:16 -0400
Branch: REL_10_STABLE [1b6961c8f] 2021-04-01 13:34:16 -0400
Branch: REL9_6_STABLE [2c9b857af] 2021-04-01 13:34:16 -0400
-->
     <para>
      Fix missed file version check
      in <application>pg_restore</application> (Tom Lane)
     </para>

     <para>
      When reading a custom-format archive from a non-seekable source,
      <application>pg_restore</application> neglected to check the
      archive version.  If it was fed a newer archive version than it
      can support, it would fail messily later on.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [57c081de0] 2021-04-29 15:24:37 -0400
Branch: REL_13_STABLE [bbcfee0e5] 2021-04-29 15:24:37 -0400
Branch: REL_12_STABLE [ba86371b9] 2021-04-29 15:24:37 -0400
Branch: REL_11_STABLE [404946d40] 2021-04-29 15:24:37 -0400
Branch: REL_10_STABLE [d5722c927] 2021-04-29 15:24:37 -0400
Branch: REL9_6_STABLE [54a233071] 2021-04-29 15:24:38 -0400
-->
     <para>
      Add some more checks to <application>pg_upgrade</application> for
      user tables containing non-upgradable data types (Tom Lane)
     </para>

     <para>
      Fix detection of some cases where a non-upgradable data type is
      embedded within a container type (such as an array or range).
      Also disallow upgrading when user tables contain columns of
      system-defined composite types, since those types' OIDs are not
      stable across versions.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [51893c846] 2021-03-23 09:53:08 +0900
Branch: REL_13_STABLE [34279fd4f] 2021-03-23 09:54:38 +0900
Branch: REL_12_STABLE [4220e06f4] 2021-03-23 09:54:59 +0900
Branch: REL_11_STABLE [4a2627c41] 2021-03-23 09:55:21 +0900
Branch: REL_10_STABLE [5386a8506] 2021-03-23 09:55:33 +0900
Branch: REL9_6_STABLE [e73068b07] 2021-03-23 09:55:49 +0900
-->
     <para>
      Fix <application>pg_waldump</application> to
      count <literal>XACT</literal> records correctly when generating
      per-record statistics (Kyotaro Horiguchi)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [8deb6b38d] 2021-02-23 17:30:21 -0300
Branch: REL_13_STABLE [28f4b6108] 2021-02-23 17:30:21 -0300
Branch: REL_12_STABLE [2796ae2ad] 2021-02-23 17:30:21 -0300
Branch: REL_11_STABLE [258391707] 2021-02-23 17:30:21 -0300
Branch: REL_10_STABLE [bf518fefa] 2021-02-23 17:30:21 -0300
Branch: REL9_6_STABLE [0ccebe779] 2021-02-23 17:30:21 -0300
-->
     <para>
      Fix <filename>contrib/amcheck</filename> to not complain about the
      tuple flags <literal>HEAP_XMAX_LOCK_ONLY</literal>
      and <literal>HEAP_KEYS_UPDATED</literal> both being set
      (Julien Rouhaud)
     </para>

     <para>
      This is a valid state after <literal>SELECT FOR UPDATE</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [455dbc010] 2021-04-12 19:24:41 -0700
Branch: REL_13_STABLE [13881199e] 2021-04-12 19:24:58 -0700
Branch: REL_12_STABLE [4749c7ff4] 2021-04-12 19:27:09 -0700
Branch: REL_11_STABLE [c8da16ba1] 2021-04-12 19:27:31 -0700
Branch: REL_10_STABLE [fb9812b6c] 2021-04-12 19:27:36 -0700
Branch: REL9_6_STABLE [f488d19f3] 2021-04-12 19:27:38 -0700
-->
     <para>
      Adjust VPATH build rules to support recent Oracle Developer Studio
      compiler versions (Noah Misch)
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [c3556f6fa] 2021-04-12 19:24:21 -0700
Branch: REL_13_STABLE [766c8fce5] 2021-04-12 19:24:24 -0700
Branch: REL_12_STABLE [e3ac7d176] 2021-04-12 19:24:25 -0700
Branch: REL_11_STABLE [4a3de4092] 2021-04-12 19:24:25 -0700
Branch: REL_10_STABLE [72a9bd047] 2021-04-12 19:24:25 -0700
Branch: REL9_6_STABLE [14652a19f] 2021-04-12 19:24:26 -0700
-->
     <para>
      Fix testing of PL/Python for Python 3 on Solaris (Noah Misch)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11-11">
  <title>Release 11.11</title>

  <formalpara>
  <title>Release date:</title>
  <para>2021-02-11</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.10.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.11</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, see the second changelog item below,
    which describes cases in which reindexing indexes after the upgrade
    may be advisable.
   </para>

   <para>
    Also, if you are upgrading from a version earlier than 11.6,
    see <xref linkend="release-11-6"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [6214e2b22] 2021-02-08 11:01:51 +0200
Branch: REL_13_STABLE [8e56684d5] 2021-02-08 11:01:55 +0200
Branch: REL_12_STABLE [f50e88899] 2021-02-08 11:01:55 +0200
Branch: REL_11_STABLE [cb5868cc1] 2021-02-08 11:01:55 +0200
-->
     <para>
      Fix information leakage in constraint-violation error messages
      (Heikki Linnakangas)
     </para>

     <para>
      If an <command>UPDATE</command> command attempts to move a row to a
      different partition but finds that it violates some constraint on
      the new partition, and the columns in that partition are in
      different physical positions than in the parent table, the error
      message could reveal the contents of columns that the user does not
      have <literal>SELECT</literal> privilege on.
      (CVE-2021-3393)
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [8a54e12a3] 2021-01-30 00:00:27 -0800
Branch: REL_13_STABLE [86a5b309c] 2021-01-30 00:00:42 -0800
Branch: REL_12_STABLE [be843ce29] 2021-01-30 00:01:56 -0800
Branch: REL_11_STABLE [d1ab4bf6e] 2021-01-30 00:02:08 -0800
Branch: REL_10_STABLE [179775135] 2021-01-30 00:02:11 -0800
Branch: REL9_6_STABLE [d683d6528] 2021-01-30 00:04:05 -0800
Branch: REL9_5_STABLE [77a0e14f0] 2021-01-30 00:05:34 -0800
-->
     <para>
      Fix <command>CREATE INDEX CONCURRENTLY</command> to wait for
      concurrent prepared transactions (Andrey Borodin)
     </para>

     <para>
      At the point where <command>CREATE INDEX CONCURRENTLY</command>
      waits for all concurrent transactions to complete so that it can see
      rows they inserted, it must also wait for all prepared transactions
      to complete, for the same reason.  Its failure to do so meant that
      rows inserted by prepared transactions might be omitted from the new
      index, causing queries relying on the index to miss such rows.
      In installations that have enabled prepared transactions
      (<varname>max_prepared_transactions</varname> &gt; 0),
      it's recommended to reindex any concurrently-built indexes in
      case this problem occurred when they were built.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9624321ec] 2021-02-03 19:38:43 -0500
Branch: REL_13_STABLE [57868d957] 2021-02-03 19:38:29 -0500
Branch: REL_12_STABLE [77e760d5c] 2021-02-03 19:38:29 -0500
Branch: REL_11_STABLE [1c3a87746] 2021-02-03 19:38:29 -0500
-->
     <para>
      Avoid crash when a <literal>CALL</literal> or <literal>DO</literal>
      statement that performs a transaction rollback is executed via
      extended query protocol (Thomas Munro, Tom Lane)
     </para>

     <para>
      In <productname>PostgreSQL</productname> 13, this case reliably
      caused a null-pointer dereference.  In earlier versions the bug
      seems to have no visible symptoms, but it's not quite clear that
      it could never cause a problem.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1d9351a87] 2021-01-28 13:41:55 -0500
Branch: REL_13_STABLE [7f1921cb9] 2021-01-28 13:41:55 -0500
Branch: REL_12_STABLE [7c53a8067] 2021-01-28 13:41:55 -0500
Branch: REL_11_STABLE [6f94531b0] 2021-01-28 13:41:55 -0500
-->
     <para>
      Fix partition pruning logic to handle asymmetric hash partition sets
      (Tom Lane)
     </para>

     <para>
      If a hash-partitioned table has unequally-sized partitions (that is,
      varying modulus values), or it lacks partitions for some remainder
      values, then the planner's pruning logic could mistakenly conclude
      that some partitions don't need to be scanned, leading to failure to
      find rows that the query should find.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a0efda88a] 2021-01-19 13:25:33 -0500
Branch: REL_13_STABLE [188cd4f44] 2021-01-19 13:25:40 -0500
Branch: REL_12_STABLE [625315996] 2021-01-19 13:25:45 -0500
Branch: REL_11_STABLE [794562d07] 2021-01-19 13:25:49 -0500
Branch: REL_10_STABLE [fac54bd5e] 2021-01-19 13:25:54 -0500
Branch: REL9_6_STABLE [fe8edbb82] 2021-01-19 13:26:01 -0500
Branch: REL9_5_STABLE [0ab177bec] 2021-01-19 13:26:05 -0500
-->
     <para>
      Avoid incorrect results when <literal>WHERE CURRENT OF</literal> is
      applied to a cursor whose plan contains a MergeAppend node (Tom
      Lane)
     </para>

     <para>
      This case is unsupported (in general, a cursor using <literal>ORDER
      BY</literal> is not guaranteed to be simply updatable); but the code
      previously did not reject it, and could silently give false matches.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [60661bbf2] 2021-01-18 18:32:30 -0500
Branch: REL_13_STABLE [f0f53195b] 2021-01-18 18:32:40 -0500
Branch: REL_12_STABLE [ba80489c6] 2021-01-18 18:32:45 -0500
Branch: REL_11_STABLE [de622e677] 2021-01-18 18:32:49 -0500
Branch: REL_10_STABLE [5cd94de77] 2021-01-18 18:32:55 -0500
Branch: REL9_6_STABLE [ffbf17463] 2021-01-18 18:33:02 -0500
Branch: REL9_5_STABLE [33a46993f] 2021-01-18 18:33:07 -0500
-->
     <para>
      Fix crash when <literal>WHERE CURRENT OF</literal> is applied to a
      cursor whose plan contains a custom scan node (David Geier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b1738ff6a] 2020-11-30 12:22:43 -0500
Branch: REL_13_STABLE [666a4de93] 2020-11-30 12:22:43 -0500
Branch: REL_12_STABLE [4f728a1f5] 2020-11-30 12:22:43 -0500
Branch: REL_11_STABLE [caecab229] 2020-11-30 12:22:43 -0500
Branch: REL_10_STABLE [785f4462d] 2020-11-30 12:22:43 -0500
Branch: REL9_6_STABLE [ab4cbb4bc] 2020-11-30 12:22:43 -0500
Branch: REL9_5_STABLE [8c5da2d51] 2020-11-30 12:22:43 -0500
-->
     <para>
      Fix planner's handling of a placeholder that is computed at some
      join level and used only at that same level (Tom Lane)
     </para>

     <para>
      This oversight could lead to <quote>failed to build
      any <replaceable>N</replaceable>-way joins</quote> planner errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [660b89928] 2020-11-24 21:58:32 +0000
Branch: REL_13_STABLE [6dda05704] 2020-11-24 21:16:58 +0000
Branch: REL_12_STABLE [ae5aa26dc] 2020-11-24 21:17:02 +0000
Branch: REL_11_STABLE [018e7d98d] 2020-11-24 21:18:37 +0000
Branch: REL_10_STABLE [321c87e5c] 2020-11-24 21:18:59 +0000
Branch: REL9_6_STABLE [6402afd98] 2020-11-24 21:19:50 +0000
Branch: REL9_5_STABLE [59ed45e27] 2020-11-24 21:36:09 +0000
-->
     <para>
      Be more careful about whether index AMs support mark/restore
      (Andrew Gierth)
     </para>

     <para>
      This prevents errors about missing support functions in rare edge
      cases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master Release: REL_13_BR [d061ea21f] 2020-01-31 17:29:38 +1300
Branch: REL_12_STABLE [2ded1f1fb] 2020-11-20 10:51:30 +1300
Branch: REL_11_STABLE [0455f78dd] 2020-11-20 10:52:38 +1300
Branch: REL_10_STABLE [f5332503e] 2020-11-20 10:53:08 +1300
-->
     <para>
      Adjust settings to make it more difficult to run out of DSM slots
      during heavy usage of parallel queries (Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [2ad78a87f] 2021-01-15 12:44:17 +0900
Branch: REL_13_STABLE [60369db86] 2021-01-15 12:45:25 +0900
Branch: REL_12_STABLE [19a1d7685] 2021-01-15 12:45:51 +0900
Branch: REL_11_STABLE [97b025ebe] 2021-01-15 12:46:26 +0900
-->
     <para>
      Fix overestimate of the amount of shared memory needed for parallel
      queries (Takayuki Tsunakawa)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [21378e1fe] 2021-01-20 11:38:17 +0900
Branch: REL_13_STABLE [31e0f9d76] 2021-01-20 11:39:14 +0900
Branch: REL_12_STABLE [5ad672fc2] 2021-01-20 11:39:17 +0900
Branch: REL_11_STABLE [1c3a4d44d] 2021-01-20 11:39:21 +0900
Branch: REL_10_STABLE [74ee3abcf] 2021-01-20 11:39:24 +0900
Branch: REL9_6_STABLE [7dc3be9df] 2021-01-20 11:39:31 +0900
Branch: REL9_5_STABLE [0ddb529cf] 2021-01-20 11:39:35 +0900
-->
     <para>
      Fix <command>ALTER DEFAULT PRIVILEGES</command> to handle duplicated
      arguments safely (Michael Paquier)
     </para>

     <para>
      Duplicate role or schema names within the same command could lead
      to <quote>tuple already updated by self</quote> errors or
      unique-constraint violations.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [08db7c63f] 2020-12-25 10:41:59 -0800
Branch: REL_13_STABLE [9f8a48bb2] 2020-12-25 10:42:02 -0800
Branch: REL_12_STABLE [c96698806] 2020-12-25 10:42:03 -0800
Branch: REL_11_STABLE [e83e8509b] 2020-12-25 10:42:03 -0800
Branch: REL_10_STABLE [d7c197f46] 2020-12-25 10:42:03 -0800
Branch: REL9_6_STABLE [b81d3791e] 2020-12-25 10:42:04 -0800
Branch: REL9_5_STABLE [90383a613] 2020-12-25 10:42:04 -0800
Branch: REL_10_STABLE [d176b9d5e] 2020-12-25 11:02:56 -0800
Branch: REL9_6_STABLE [3f920e876] 2020-12-25 11:03:05 -0800
Branch: REL9_5_STABLE [14649bf50] 2020-12-25 11:06:23 -0800
-->
     <para>
      Flush ACL-related caches when <structname>pg_authid</structname>
      changes (Noah Misch)
     </para>

     <para>
      This change ensures that permissions-related decisions will promptly
      reflect the results of <command>ALTER ROLE ... [NO] INHERIT</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f7f83a55b] 2020-12-01 14:02:27 -0500
Branch: REL_13_STABLE [dffc82a5b] 2020-12-01 14:02:27 -0500
Branch: REL_12_STABLE [5f9b05ada] 2020-12-01 14:02:28 -0500
Branch: REL_11_STABLE [28bb8c496] 2020-12-01 14:02:28 -0500
Branch: REL_10_STABLE [d98e27dc6] 2020-12-01 14:02:28 -0500
Branch: REL9_6_STABLE [f00c44002] 2020-12-01 14:02:28 -0500
Branch: REL9_5_STABLE [fb500296d] 2020-12-01 14:02:28 -0500
-->
     <para>
      Prevent misprocessing of ambiguous <command>CREATE TABLE
      LIKE</command> clauses (Tom Lane)
     </para>

     <para>
      A <literal>LIKE</literal> clause is re-examined after initial
      creation of the new table, to handle importation of indexes and
      such.  It was possible for this re-examination to find a different
      table of the same name, causing unexpected behavior; one example is
      where the new table is a temporary table of the same name as
      the <literal>LIKE</literal> target.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [97390fe8a] 2020-11-19 15:03:17 -0500
Branch: REL_13_STABLE [98f3f1d5c] 2020-11-19 15:03:17 -0500
Branch: REL_12_STABLE [87ab46421] 2020-11-19 15:03:17 -0500
Branch: REL_11_STABLE [c690ebbef] 2020-11-19 15:03:17 -0500
Branch: REL_10_STABLE [513db7b70] 2020-11-19 15:03:17 -0500
Branch: REL9_6_STABLE [159b6775f] 2020-11-19 15:03:17 -0500
Branch: REL9_5_STABLE [6631d5f26] 2020-11-19 15:03:17 -0500
-->
     <para>
      Rearrange order of operations in <command>CREATE TABLE
      LIKE</command> so that indexes are cloned before building foreign
      key constraints (Tom Lane)
     </para>

     <para>
      This fixes the case where a self-referential foreign key constraint
      declared in the outer <command>CREATE TABLE</command> depends on an
      index that's coming from the <literal>LIKE </literal> clause.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [c9a0dc348] 2021-01-15 23:31:22 +0100
Branch: REL_13_STABLE [d26d4c717] 2021-01-15 23:32:54 +0100
Branch: REL_12_STABLE [943a113bc] 2021-01-15 23:33:16 +0100
Branch: REL_11_STABLE [f52db9694] 2021-01-15 23:33:44 +0100
Branch: REL_10_STABLE [c22539756] 2021-01-15 23:34:02 +0100
-->
     <para>
      Disallow <command>CREATE STATISTICS</command> on system catalogs
      (Tomas Vondra)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [dd705a039] 2021-02-06 15:17:01 -0500
Branch: REL_13_STABLE [4353bc878] 2021-02-06 15:17:01 -0500
Branch: REL_12_STABLE [f73321957] 2021-02-06 15:17:01 -0500
Branch: REL_11_STABLE [580069037] 2021-02-06 15:17:02 -0500
Branch: REL_10_STABLE [ad85e5efa] 2021-02-06 15:17:02 -0500
Branch: REL9_6_STABLE [7736ab05f] 2021-02-06 15:17:02 -0500
Branch: REL9_5_STABLE [5ad03374b] 2021-02-06 15:17:02 -0500
-->
     <para>
      Disallow converting an inheritance child table to a view
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [9f35f9437] 2020-12-01 13:21:03 +1300
Branch: REL_13_STABLE [fd3a75d82] 2020-12-01 13:22:01 +1300
Branch: REL_12_STABLE [50f338574] 2020-12-01 13:37:00 +1300
Branch: REL_11_STABLE [d5706ad7b] 2020-12-01 13:46:27 +1300
Branch: REL_10_STABLE [22701755d] 2020-12-01 14:43:04 +1300
Branch: REL9_6_STABLE [d0bbe2122] 2020-12-01 14:50:41 +1300
Branch: REL9_5_STABLE [e00928de8] 2020-12-01 14:54:49 +1300
-->
     <para>
      Ensure that disk space allocated for a dropped relation is released
      promptly at commit (Thomas Munro)
     </para>

     <para>
      Previously, if the dropped relation spanned multiple 1GB segments,
      only the first segment was truncated immediately.  Other segments
      were simply unlinked, which doesn't authorize the kernel to release
      the storage so long as any other backends still have the files open.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [ebfe2dbd6] 2021-01-14 15:32:14 -0300
Branch: REL_13_STABLE [5b01a6f13] 2021-01-14 15:32:14 -0300
Branch: REL_12_STABLE [c9b702552] 2021-01-14 15:32:14 -0300
Branch: REL_11_STABLE [c442b32c2] 2021-01-14 15:32:14 -0300
-->
     <para>
      Prevent dropping a tablespace that is referenced by a partitioned
      relation, but is not used for any actual storage (&Aacute;lvaro
      Herrera)
     </para>

     <para>
      Previously this was allowed, but subsequent operations on the
      partitioned relation would fail.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [c444472af] 2021-02-05 11:14:56 +0200
Branch: REL_13_STABLE [c87cbd51e] 2021-02-05 11:19:48 +0200
Branch: REL_12_STABLE [9b0ce8957] 2021-02-05 11:16:33 +0200
Branch: REL_11_STABLE [d9b4163c5] 2021-02-05 11:16:53 +0200
Branch: REL_10_STABLE [c06632e48] 2021-02-05 11:17:07 +0200
Branch: REL9_6_STABLE [e152ccc7f] 2021-02-05 11:17:13 +0200
Branch: REL9_5_STABLE [aaf266157] 2021-02-05 11:17:27 +0200
-->
     <para>
      Fix handling of backslash-escaped multibyte characters
      in <command>COPY FROM</command> (Heikki Linnakangas)
     </para>

     <para>
      A backslash followed by a multibyte character was not handled
      correctly.  In some client character encodings, this could lead to
      misinterpreting part of a multibyte character as a field separator
      or end-of-copy-data marker.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [2cccb627f] 2020-11-18 12:39:15 +0200
Branch: REL_13_STABLE [340ae3cfb] 2020-11-20 14:41:14 +0200
Branch: REL_12_STABLE [888fa2bae] 2020-11-20 14:46:47 +0200
Branch: REL_11_STABLE [57b5d8484] 2020-11-20 14:49:25 +0200
Branch: REL_10_STABLE [1dbe627fd] 2020-11-20 14:49:42 +0200
Branch: REL9_6_STABLE [02a2dbe91] 2020-11-20 14:57:15 +0200
Branch: REL9_5_STABLE [ded7db4c1] 2020-11-20 14:57:51 +0200
-->
     <para>
      Avoid preallocating executor hash tables
      in <command>EXPLAIN</command> without <literal>ANALYZE</literal>
      (Alexey Bashtanov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9c83b54a9] 2020-11-28 14:03:40 -0500
Branch: REL_13_STABLE [f5de090cc] 2020-11-28 14:03:40 -0500
Branch: REL_12_STABLE [cbc7a7a10] 2020-11-28 14:03:40 -0500
Branch: REL_11_STABLE [40f2fbe71] 2020-11-28 14:03:40 -0500
Branch: REL_10_STABLE [f6324bbbe] 2020-11-28 14:03:40 -0500
Branch: REL9_6_STABLE [8a4069766] 2020-11-28 14:03:40 -0500
Branch: REL9_5_STABLE [60d6c7143] 2020-11-28 14:03:40 -0500
-->
     <para>
      Fix recently-introduced race conditions
      in <command>LISTEN</command>/<command>NOTIFY</command> queue
      handling (Tom Lane)
     </para>

     <para>
      A newly-listening backend could attempt to read SLRU pages that
      were in process of being truncated, possibly causing an error.
     </para>

     <para>
      The queue tail pointer could become
      set to a value that's not equal to the queue position of any
      backend, resulting in effective disabling of the queue truncation
      logic.  Continued use of <command>NOTIFY</command> then led to
      queue-fill warnings, and eventually to inability to send any more
      notifies until the server is restarted.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ff5d5611c] 2020-12-21 13:11:50 -0500
Branch: REL_13_STABLE [38d30a14b] 2020-12-21 13:11:51 -0500
Branch: REL_12_STABLE [38bef9e43] 2020-12-21 13:11:29 -0500
Branch: REL_11_STABLE [75c8ef5ae] 2020-12-21 13:11:29 -0500
Branch: REL_10_STABLE [542248f9d] 2020-12-21 13:11:30 -0500
Branch: REL9_6_STABLE [1d5f3f976] 2020-12-21 13:11:30 -0500
Branch: REL9_5_STABLE [edcdbc44e] 2020-12-21 13:11:30 -0500
-->
     <para>
      Allow the <type>jsonb</type> concatenation operator to handle all
      combinations of JSON data types (Tom Lane)
     </para>

     <para>
      We can concatenate two JSON objects or two JSON arrays.  Handle
      other cases by wrapping non-array inputs in one-element arrays,
      then performing an array concatenation.  Previously, some
      combinations of inputs followed this rule but others arbitrarily
      threw an error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [afcc8772e] 2021-01-08 12:16:00 -0500
Branch: REL_13_STABLE [49c928c0c] 2021-01-08 12:16:00 -0500
Branch: REL_12_STABLE [8354371d0] 2021-01-08 12:16:00 -0500
Branch: REL_11_STABLE [769908811] 2021-01-08 12:16:00 -0500
Branch: REL_10_STABLE [2d540ac5f] 2021-01-08 12:16:00 -0500
Branch: REL9_6_STABLE [085a1cfb3] 2021-01-08 12:16:00 -0500
Branch: REL9_5_STABLE [0c23f30fa] 2021-01-08 12:16:00 -0500
-->
     <para>
      Fix use of uninitialized value while parsing a <literal>*</literal>
      quantifier in a BRE-mode regular expression (Tom Lane)
     </para>

     <para>
      This error could cause the quantifier to act non-greedy, that is
      behave like a <literal>*?</literal> quantifier would do in full
      regular expressions.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [bc43b7c2c] 2021-01-05 11:15:28 +0000
Branch: REL_13_STABLE [e15c384d7] 2021-01-05 11:08:59 +0000
Branch: REL_12_STABLE [258b77005] 2021-01-05 11:07:12 +0000
Branch: REL_11_STABLE [160a9e425] 2021-01-05 11:05:58 +0000
Branch: REL_10_STABLE [275b190b3] 2021-01-05 11:04:41 +0000
Branch: REL9_6_STABLE [9a299dff2] 2021-01-05 11:02:46 +0000
Branch: master [fead67c24] 2021-01-05 11:52:42 +0000
Branch: REL_13_STABLE [5777b6ea2] 2021-01-05 11:51:21 +0000
Branch: REL_12_STABLE [740780a61] 2021-01-05 11:50:11 +0000
Branch: REL_11_STABLE [ab042d010] 2021-01-05 11:48:45 +0000
Branch: REL_10_STABLE [0097193b1] 2021-01-05 11:46:44 +0000
Branch: REL9_6_STABLE [f0b9bada5] 2021-01-05 11:45:17 +0000
-->
     <para>
      Fix numeric <function>power()</function> for the case where the
      exponent is exactly <literal>INT_MIN</literal> (-2147483648)
      (Dean Rasheed)
     </para>

     <para>
      Previously, a result with no significant digits was produced.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4bd3fad80] 2021-01-04 18:32:44 -0500
Branch: REL_13_STABLE [9e7d87ca8] 2021-01-04 18:32:40 -0500
Branch: REL_12_STABLE [7c98759e0] 2021-01-04 18:32:40 -0500
Branch: REL_11_STABLE [50a420bee] 2021-01-04 18:32:40 -0500
-->
     <para>
      Fix integer-overflow cases in <function>substring()</function>
      functions (Tom Lane, Pavel Stehule)
     </para>

     <para>
      If the specified starting index and length overflow an integer when
      added together, <function>substring()</function> misbehaved, either
      throwing a bogus <quote>negative substring length</quote> error for
      a case that should succeed, or failing to complain that a negative
      length is negative (and instead returning the whole string, in most
      cases).
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [6db992833] 2021-01-16 12:21:35 -0800
Branch: REL_13_STABLE [6eb3fc7fc] 2021-01-16 12:21:38 -0800
Branch: REL_12_STABLE [66087f7e9] 2021-01-16 12:21:39 -0800
Branch: REL_11_STABLE [677f6cb1d] 2021-01-16 12:21:39 -0800
Branch: REL_10_STABLE [9afba9b0e] 2021-01-16 12:21:39 -0800
Branch: REL9_6_STABLE [1a31d8c52] 2021-01-16 12:21:39 -0800
Branch: REL9_5_STABLE [c424c75f5] 2021-01-16 12:21:39 -0800
-->
     <para>
      Prevent possible data loss from incorrect detection of the
      wraparound point of an SLRU log
      (Noah Misch)
     </para>

     <para>
      The wraparound point typically falls in the middle of a page, which
      must be rounded off to a page boundary, and that was not done
      correctly.  No issue could arise unless an installation had gotten
      to within one page of SLRU overflow, which is unlikely in a
      properly-functioning system.  If this did happen, it would manifest
      in later <quote>apparent wraparound</quote> or <quote>could not
      access status of transaction</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [ee1b38f65] 2021-01-13 08:19:50 +0530
Branch: REL_13_STABLE [0685c5c1b] 2021-01-13 08:31:45 +0530
Branch: REL_12_STABLE [0b2ae3c92] 2021-01-13 08:40:06 +0530
Branch: REL_11_STABLE [7adc408f4] 2021-01-13 08:50:13 +0530
Branch: REL_10_STABLE [636b6f99c] 2021-01-13 09:01:57 +0530
Branch: REL9_6_STABLE [f2b268ee0] 2021-01-13 09:12:59 +0530
Branch: REL9_5_STABLE [4bccceaa9] 2021-01-13 09:22:03 +0530
-->
     <para>
      Fix memory leak in walsender processes while sending new snapshots
      for logical decoding (Amit Kapila)
     </para>
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [a58db3aa1] 2020-12-14 23:47:30 -0800
Branch: REL_13_STABLE [fde5f130c] 2020-12-14 23:48:44 -0800
Branch: REL_12_STABLE [706d84fe7] 2020-12-14 23:48:04 -0800
Branch: REL_11_STABLE [4ee058a3b] 2020-12-14 23:49:06 -0800
Branch: REL_10_STABLE [ac7df6e8f] 2020-12-14 23:49:29 -0800
Branch: REL9_6_STABLE [f10da1e9c] 2020-12-14 23:49:57 -0800
Branch: REL9_5_STABLE [133a0906d] 2020-12-14 23:50:20 -0800
-->
     <para>
      Fix walsender to accept additional commands after
      terminating replication (Jeff Davis)
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [8900b5a9d] 2021-01-06 12:39:18 +0900
Branch: REL_13_STABLE [0f8977b3f] 2021-01-06 12:30:37 +0900
Branch: REL_12_STABLE [9f540f840] 2021-01-06 12:31:23 +0900
Branch: REL_11_STABLE [e83771880] 2021-01-06 12:31:55 +0900
Branch: REL_10_STABLE [4c20e78f1] 2021-01-06 12:32:32 +0900
Branch: REL9_6_STABLE [0307b98d8] 2021-01-06 12:33:28 +0900
-->
     <para>
      Ensure detection of deadlocks between hot standby backends and the
      startup (WAL-application) process (Fujii Masao)
     </para>

     <para>
      The startup process did not run the deadlock detection code, so that
      in situations where the startup process is last to join a circular
      wait situation, the deadlock might never be recognized.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7519bd16d] 2020-12-24 17:00:43 -0500
Branch: REL_13_STABLE [0217ad806] 2020-12-24 17:00:43 -0500
Branch: REL_12_STABLE [3d8068edc] 2020-12-24 17:00:43 -0500
Branch: REL_11_STABLE [b99b6b9d6] 2020-12-24 17:00:43 -0500
Branch: REL_10_STABLE [1a6b1c460] 2020-12-24 17:00:43 -0500
-->
     <para>
      Ensure that unserviced requests for background workers are cleaned
      up when the postmaster begins a <quote>smart</quote>
      or <quote>fast</quote> shutdown sequence (Tom Lane)
     </para>

     <para>
      Previously, there was a race condition whereby a child process that
      had requested a background worker just before shutdown could wait
      indefinitely, preventing shutdown from completing.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [6db27037b] 2020-12-23 12:51:22 +0900
Branch: REL_13_STABLE [1e54664ee] 2020-12-23 12:51:35 +0900
Branch: REL_12_STABLE [67a9411d2] 2020-12-23 12:51:39 +0900
Branch: REL_11_STABLE [35ad5c7c7] 2020-12-23 12:51:42 +0900
Branch: REL_10_STABLE [f3ee99df7] 2020-12-23 12:51:46 +0900
Branch: REL9_6_STABLE [0b54a80a3] 2020-12-23 12:51:51 +0900
-->
     <para>
      Fix portability problem in parsing
      of <varname>recovery_target_xid</varname> values (Michael Paquier)
     </para>

     <para>
      The target XID is potentially 64 bits wide, but it was parsed
      with <function>strtoul()</function>, causing misbehavior on
      platforms where <type>long</type> is 32 bits (such as Windows).
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [275b3411d] 2020-11-30 14:38:00 -0500
Branch: REL_13_STABLE [fac31b2cd] 2020-11-30 14:38:00 -0500
Branch: REL_12_STABLE [16a1e1ea4] 2020-11-30 14:38:00 -0500
Branch: REL_11_STABLE [942e441ee] 2020-11-30 14:38:00 -0500
-->
     <para>
      Avoid trying to use parallel index build in a standalone backend
      (Yulin Pei)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [29d29d652] 2020-11-15 16:10:58 -0500
Branch: REL_13_STABLE [7c89246d0] 2020-11-15 16:10:48 -0500
Branch: REL_12_STABLE [4ac8ee9d4] 2020-11-15 16:10:48 -0500
Branch: REL_11_STABLE [9cebe4952] 2020-11-15 16:10:48 -0500
-->
     <para>
      Allow index AMs to support included columns without necessarily
      supporting multiple key columns (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [a3367aa3c] 2021-01-28 10:53:10 +0000
Branch: REL_13_STABLE [75e3cca42] 2021-01-28 11:09:40 +0000
Branch: REL_12_STABLE [30f912a41] 2021-01-28 11:09:49 +0000
Branch: REL_11_STABLE [f7f2a28d4] 2021-01-28 11:09:57 +0000
-->
     <para>
      Avoid assertion failure during parallel aggregation of an
      aggregate with a non-strict deserialization function (Andrew Gierth)
     </para>

     <para>
      No such aggregate functions exist in
      core <productname>PostgreSQL</productname>, but some extensions
      such as PostGIS provide some.  The mistake is harmless anyway in a
      non-assert build.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [07d46fceb] 2021-01-25 13:03:43 -0500
Branch: REL_13_STABLE [a26194f22] 2021-01-25 13:03:11 -0500
Branch: REL_12_STABLE [4641b2a30] 2021-01-25 13:03:11 -0500
Branch: REL_11_STABLE [a7cdd3f71] 2021-01-25 13:03:11 -0500
Branch: REL_10_STABLE [d09e8789f] 2021-01-25 13:03:11 -0500
Branch: REL9_6_STABLE [57a7d6f49] 2021-01-25 13:03:12 -0500
Branch: REL9_5_STABLE [41309f716] 2021-01-25 13:03:12 -0500
-->
     <para>
      Avoid assertion failure in <function>pg_get_functiondef()</function>
      when examining a function with a <literal>TRANSFORM</literal> option
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ea80d8d94] 2020-12-28 11:41:25 -0500
Branch: REL_13_STABLE [0ea25ed10] 2020-12-28 11:41:25 -0500
Branch: REL_12_STABLE [fd1347f9d] 2020-12-28 11:41:25 -0500
Branch: REL_11_STABLE [2e15f48d9] 2020-12-28 11:41:25 -0500
Branch: master [5f2e09bcc] 2020-12-28 11:55:23 -0500
Branch: REL_13_STABLE [63d78d106] 2020-12-28 11:55:32 -0500
Branch: REL_12_STABLE [d37965965] 2020-12-28 11:55:37 -0500
Branch: REL_11_STABLE [7966b41de] 2020-12-28 11:55:41 -0500
-->
     <para>
      Fix data structure misallocation in
      PL/pgSQL's <command>CALL</command> statement (Tom Lane)
     </para>

     <para>
      A <command>CALL</command> in a PL/pgSQL procedure, to another
      procedure that has OUT parameters, would fail if the called
      procedure did a <command>COMMIT</command>
      or <command>ROLLBACK</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7e5e1bba0] 2020-11-29 15:22:04 -0500
Branch: REL_13_STABLE [72b930f50] 2020-11-29 15:22:04 -0500
Branch: REL_12_STABLE [3958abdad] 2020-11-29 15:22:04 -0500
Branch: REL_11_STABLE [777ac03a6] 2020-11-29 15:22:04 -0500
Branch: REL_10_STABLE [946277fd4] 2020-11-29 15:22:04 -0500
Branch: REL9_6_STABLE [3f59a05f0] 2020-11-29 15:22:04 -0500
Branch: REL9_5_STABLE [e2d5de150] 2020-11-29 15:22:04 -0500
-->
     <para>
      In <application>psql</application>, re-allow including a password
      in a <replaceable>connection_string</replaceable> argument of a
      <command>\connect</command> command (Tom Lane)
     </para>

     <para>
      This used to work, but a recent bug fix caused the password to be
      ignored (resulting in prompting for a password).
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f76a85000] 2021-01-26 13:04:52 -0500
Branch: REL_13_STABLE [64bdb6e5f] 2021-01-26 13:04:52 -0500
Branch: REL_12_STABLE [82f97d33f] 2021-01-26 13:04:52 -0500
Branch: REL_11_STABLE [3fa7b9078] 2021-01-26 13:04:52 -0500
Branch: REL_10_STABLE [564cb2579] 2021-01-26 13:04:52 -0500
Branch: REL9_6_STABLE [2c2e134b7] 2021-01-26 13:04:52 -0500
Branch: REL9_5_STABLE [131825cd5] 2021-01-26 13:04:52 -0500
-->
     <para>
      Fix assorted bugs
      in <application>psql</application>'s <command>\help</command>
      command (Kyotaro Horiguchi, Tom Lane)
     </para>

     <para>
      <command>\help</command> with two argument words failed to find a
      command description using only the first word, for
      example <literal>\help reset all</literal> should show the help
      for <command>RESET</command> but did not.
      Also, <command>\help</command> often failed to invoke the pager when
      it should.  It also leaked memory.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9eabfe300] 2021-01-12 13:37:38 -0500
Branch: REL_13_STABLE [0011c5a0f] 2021-01-12 13:37:38 -0500
Branch: REL_12_STABLE [436d9c5ca] 2021-01-12 13:37:38 -0500
Branch: REL_11_STABLE [9f15188a1] 2021-01-12 13:37:38 -0500
Branch: master [8e396a773] 2021-01-14 16:19:38 -0500
Branch: REL_13_STABLE [79d3ac72f] 2021-01-14 16:19:38 -0500
Branch: REL_12_STABLE [0d221ecec] 2021-01-14 16:19:38 -0500
Branch: REL_11_STABLE [bb12a7f42] 2021-01-14 16:19:38 -0500
Branch: REL_10_STABLE [1c9791f66] 2021-01-14 16:19:38 -0500
-->
     <para>
      In <application>pg_dump</application>, ensure that the restore
      script runs <command>ALTER PUBLICATION ADD TABLE</command> commands
      as the owner of the publication, and similarly runs <command>ALTER
      INDEX ATTACH PARTITION</command> commands as the owner of the
      partitioned index (Tom Lane)
     </para>

     <para>
      Previously, these commands would be run by the role that started the
      restore script; which will usually work, but in corner cases that
      role might not have adequate permissions.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [f713ff7c6] 2021-01-16 12:21:35 -0800
Branch: REL_13_STABLE [b8daf894f] 2021-01-16 12:21:38 -0800
Branch: REL_12_STABLE [a0d31b1c9] 2021-01-16 12:21:39 -0800
Branch: REL_11_STABLE [c6ff165f9] 2021-01-16 12:21:39 -0800
Branch: REL_10_STABLE [b933c9c0b] 2021-01-16 12:21:39 -0800
Branch: REL9_6_STABLE [ad2b7c9bb] 2021-01-16 12:21:39 -0800
-->
     <para>
      Fix <application>pg_dump</application> to handle <literal>WITH
      GRANT OPTION</literal> in an extension's initial privileges
      (Noah Misch)
     </para>

     <para>
      If an extension's script creates an object and grants privileges
      on it with grant option, then later the user revokes such
      privileges, <application>pg_dump</application> would generate
      incorrect SQL for reproducing the situation.  (Few if any extensions
      do this today.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [2b4f31303] 2020-12-03 15:57:48 +0200
Branch: REL_13_STABLE [abd0abfb7] 2020-12-03 15:57:52 +0200
Branch: REL_12_STABLE [020f153db] 2020-12-03 15:57:54 +0200
Branch: REL_11_STABLE [63e316f0b] 2020-12-03 15:57:57 +0200
Branch: REL_10_STABLE [8b5c353ec] 2020-12-03 15:58:00 +0200
Branch: REL9_6_STABLE [0740857de] 2020-12-03 15:58:02 +0200
Branch: REL9_5_STABLE [81e3c868f] 2020-12-03 15:58:06 +0200
Branch: master [36a4ac20f] 2020-12-04 18:26:46 +0200
Branch: REL_13_STABLE [e41a2efbc] 2020-12-04 18:24:34 +0200
Branch: REL_12_STABLE [ad3fb04b9] 2020-12-04 18:24:57 +0200
Branch: REL_11_STABLE [cda50f211] 2020-12-04 18:25:12 +0200
Branch: REL_10_STABLE [45d363145] 2020-12-04 18:25:23 +0200
Branch: REL9_6_STABLE [a075c84f2] 2020-12-04 18:25:45 +0200
Branch: REL9_5_STABLE [1dd608bba] 2020-12-04 18:25:54 +0200
Branch: master [6ba581cf1] 2020-12-07 14:50:20 +0200
Branch: REL_13_STABLE [e6dc04d43] 2020-12-07 14:50:37 +0200
Branch: REL_12_STABLE [98f8cdd48] 2020-12-07 14:55:22 +0200
Branch: REL_11_STABLE [10d9c9d03] 2020-12-07 14:55:23 +0200
Branch: REL_10_STABLE [d137b14c3] 2020-12-07 14:55:25 +0200
Branch: REL9_6_STABLE [3ea8e660c] 2020-12-07 14:55:27 +0200
Branch: REL9_5_STABLE [beb6b45ab] 2020-12-07 14:55:28 +0200
-->
     <para>
      In <application>pg_rewind</application>, ensure that all WAL is
      accounted for when rewinding a standby server
      (Ian Barwick, Heikki Linnakangas)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c21ea4d53] 2021-01-13 14:52:59 -0500
Branch: REL_13_STABLE [6b045ca6c] 2021-01-13 14:52:49 -0500
Branch: REL_12_STABLE [3e214fafc] 2021-01-13 14:52:49 -0500
Branch: REL_11_STABLE [d8bb22ab3] 2021-01-13 14:52:49 -0500
-->
     <para>
      In <application>pgbench</application>, disallow a digit as the first
      character of a variable name (Fabien Coelho)
     </para>

     <para>
      This prevents trying to substitute variables into timestamp literal
      values, which may contain strings like <literal>12:34</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: REL_13_STABLE [f17e8f33f] 2021-01-26 16:42:13 -0300
Branch: REL_12_STABLE [fdf9d0054] 2021-01-26 16:42:13 -0300
Branch: REL_11_STABLE [fdd405c63] 2021-01-26 16:42:13 -0300
Branch: REL_10_STABLE [11a708f81] 2021-01-26 16:42:13 -0300
Branch: REL9_6_STABLE [bcae842b9] 2021-01-26 16:42:13 -0300
Branch: REL9_5_STABLE [f2dc96236] 2021-01-26 16:42:13 -0300
-->
     <para>
      Report the correct database name in connection failure error
      messages from some client programs (&Aacute;lvaro Herrera)
     </para>

     <para>
      If the database name was defaulted rather than given on the command
      line, <application>pg_dumpall</application>,
      <application>pgbench</application>, <application>oid2name</application>,
      and <application>vacuumlo</application> would produce misleading
      error messages after a connection failure.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5c0f7cc54] 2021-02-02 13:49:08 -0500
Branch: REL_13_STABLE [586891394] 2021-02-02 13:49:08 -0500
Branch: REL_12_STABLE [742846958] 2021-02-02 13:49:08 -0500
Branch: REL_11_STABLE [5fc5ff61c] 2021-02-02 13:49:08 -0500
Branch: REL_10_STABLE [2671125c7] 2021-02-02 13:49:08 -0500
Branch: REL9_6_STABLE [608cf2bfd] 2021-02-02 13:49:08 -0500
Branch: REL9_5_STABLE [f0f9ed68d] 2021-02-02 13:49:08 -0500
-->
     <para>
      Fix memory leak in <filename>contrib/auto_explain</filename>
      (Japin Li)
     </para>

     <para>
      Memory consumed while producing the <literal>EXPLAIN</literal>
      output was not freed until the end of the current transaction (for a
      top-level statement) or the end of the surrounding statement (for a
      nested statement).  This was particularly a problem
      with <varname>log_nested_statements</varname> enabled.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [e3ebcca84] 2020-12-28 19:56:13 +0900
Branch: REL_13_STABLE [546f14374] 2020-12-28 19:57:51 +0900
Branch: REL_12_STABLE [e792ca4ac] 2020-12-28 19:59:00 +0900
Branch: REL_11_STABLE [294cdd7d0] 2020-12-28 19:59:40 +0900
Branch: REL_10_STABLE [744357d84] 2020-12-28 20:00:15 +0900
Branch: REL9_6_STABLE [03b7a1ee7] 2020-12-28 20:00:54 +0900
Branch: REL9_5_STABLE [b5c73eef8] 2020-12-28 20:01:31 +0900
-->
     <para>
      In <filename>contrib/postgres_fdw</filename>, avoid leaking open
      connections to remote servers when a user mapping or foreign server
      object is dropped (Bharath Rupireddy)
     </para>

     <para>
      Open connections that depend on a dropped user mapping or foreign
      server can no longer be referenced, but formerly they were kept
      around anyway for the duration of the local session.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [28d1601ad] 2020-12-08 15:22:12 +0900
Branch: REL_13_STABLE [dfd8bf2b9] 2020-12-08 15:22:38 +0900
Branch: REL_12_STABLE [d7ecba937] 2020-12-08 15:22:43 +0900
Branch: REL_11_STABLE [b88afd8b6] 2020-12-08 15:22:48 +0900
Branch: REL_10_STABLE [5ba1df0f1] 2020-12-08 15:22:53 +0900
Branch: REL9_6_STABLE [95992e5ed] 2020-12-08 15:22:59 +0900
Branch: REL9_5_STABLE [f95d9fd81] 2020-12-08 15:23:02 +0900
-->
     <para>
      In <filename>contrib/pgcrypto</filename>, check for error returns
      from OpenSSL's EVP functions (Michael Paquier)
     </para>

     <para>
      We do not really expect errors here, but this change silences
      warnings from static analysis tools.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ff769831e] 2020-12-22 13:23:49 -0500
Branch: REL_13_STABLE [4b0292253] 2020-12-22 13:23:49 -0500
Branch: REL_12_STABLE [f581e5383] 2020-12-22 13:23:49 -0500
Branch: REL_11_STABLE [a1bd14d54] 2020-12-22 13:23:49 -0500
-->
     <para>
      Make <filename>contrib/pg_prewarm</filename> more robust when the
      cluster is shut down before prewarming is complete (Tom Lane)
     </para>

     <para>
      Previously, autoprewarm would rewrite its status file with only the
      block numbers that it had managed to load so far, thus perhaps
      largely disabling the prewarm functionality in the next startup.
      Instead, suppress status file updates until the initial loading pass
      is complete.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [3836d4b64] 2020-11-12 14:34:37 +0000
Branch: REL_13_STABLE [48ab1fa30] 2020-11-12 14:59:06 +0000
Branch: REL_12_STABLE [7f69ed4ae] 2020-11-12 14:56:58 +0000
Branch: REL_11_STABLE [7e3dc147d] 2020-11-12 14:57:04 +0000
Branch: REL_10_STABLE [068de9dd4] 2020-11-12 14:57:08 +0000
Branch: REL9_6_STABLE [245a35f96] 2020-11-12 14:57:13 +0000
Branch: REL9_5_STABLE [4b212b7c8] 2020-11-12 14:55:51 +0000
-->
     <para>
      In <filename>contrib/pg_trgm</filename>'s GiST index support, avoid
      crash in the rare case that picksplit is called on exactly two index
      items (Andrew Gierth, Alexander Korotkov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ec29427ce] 2020-11-10 22:51:54 -0500
Branch: REL_13_STABLE [afce7908d] 2020-11-10 22:51:55 -0500
Branch: REL_12_STABLE [171c457cd] 2020-11-10 22:51:55 -0500
Branch: REL_11_STABLE [3a89ea0eb] 2020-11-10 22:51:56 -0500
Branch: REL_10_STABLE [e87139b43] 2020-11-10 22:51:57 -0500
Branch: REL9_6_STABLE [cd39c23a2] 2020-11-10 22:51:57 -0500
Branch: REL9_5_STABLE [210564a74] 2020-11-10 22:51:58 -0500
-->
     <para>
      Fix miscalculation of timeouts
      in <filename>contrib/pg_prewarm</filename>
      and <filename>contrib/postgres_fdw</filename>
      (Alexey Kondratov, Tom Lane)
     </para>

     <para>
      The main loop in <filename>contrib/pg_prewarm</filename>'s
      autoprewarm parent process underestimated its desired sleep time by
      a factor of 1000, causing it to consume much more CPU than intended.
      When waiting for a result from a remote
      server, <filename>contrib/postgres_fdw</filename> overestimated the
      desired timeout by a factor of 1000 (though this error had been
      mitigated by imposing a clamp to 60 seconds).
     </para>

     <para>
      Both of these errors stemmed from incorrectly converting
      seconds-and-microseconds to milliseconds.  Introduce a new
      API <function>TimestampDifferenceMilliseconds()</function>
      to make it easier to get this right in the future.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4823621db] 2021-01-15 11:28:51 -0500
Branch: REL_13_STABLE [f44ae4db5] 2021-01-15 11:29:05 -0500
Branch: REL_12_STABLE [f5d044eae] 2021-01-15 11:29:13 -0500
Branch: REL_11_STABLE [046c8face] 2021-01-15 11:29:18 -0500
Branch: REL_10_STABLE [5fa060c8f] 2021-01-15 11:29:26 -0500
Branch: REL9_6_STABLE [fc6d08b27] 2021-01-15 11:29:34 -0500
Branch: REL9_5_STABLE [3934543c2] 2021-01-15 11:29:43 -0500
Branch: master [9d23c15a0] 2021-01-20 12:07:23 -0500
Branch: REL_13_STABLE [6671e8194] 2021-01-20 12:07:31 -0500
Branch: REL_12_STABLE [561dd8d8a] 2021-01-20 12:07:35 -0500
Branch: REL_11_STABLE [cbcff1729] 2021-01-20 12:07:41 -0500
Branch: REL_10_STABLE [a3345383d] 2021-01-20 12:07:46 -0500
Branch: REL9_6_STABLE [cbcf7b130] 2021-01-20 12:07:52 -0500
Branch: REL9_5_STABLE [175f716a8] 2021-01-20 12:07:57 -0500
-->
     <para>
      Improve <application>configure</application>'s heuristics for
      selecting <varname>PG_SYSROOT</varname> on macOS (Tom Lane)
     </para>

     <para>
      The new method is more likely to produce desirable results when
      Xcode is newer than the underlying operating system.  Choosing
      a sysroot that does not match the OS version may result in
      nonfunctional executables.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [49407dc32] 2020-11-20 00:07:09 -0500
Branch: REL_13_STABLE [9e9a31bd0] 2020-11-20 00:58:26 -0500
Branch: REL_12_STABLE [5b8360427] 2020-11-20 00:58:26 -0500
Branch: REL_11_STABLE [d01e37845] 2020-11-20 00:58:26 -0500
Branch: REL_10_STABLE [153bf8d20] 2020-11-20 00:58:26 -0500
Branch: REL9_6_STABLE [e7abc1111] 2020-11-20 00:58:26 -0500
Branch: REL9_5_STABLE [2bb8c0f1d] 2020-11-20 00:58:26 -0500
-->
     <para>
      While building on macOS, specify <option>-isysroot</option> in
      link steps as well as compile steps (James Hilliard)
     </para>

     <para>
      This likewise improves the results when Xcode is out of sync with
      the operating system.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [9543f0861] 2020-12-07 19:34:13 -0800
Branch: REL_13_STABLE [4f64daf73] 2020-12-07 18:32:56 -0800
Branch: REL_12_STABLE [b07490b91] 2020-12-07 18:39:32 -0800
Branch: REL_11_STABLE [f4f924b3e] 2020-12-07 18:40:27 -0800
Branch: master [6c57f2ed1] 2020-11-09 20:01:33 -0800
Branch: REL_13_STABLE [6a192c77d] 2020-12-07 18:32:32 -0800
Branch: REL_12_STABLE [fa7a52fb9] 2020-12-07 18:39:32 -0800
Branch: REL_11_STABLE [90eb343ef] 2020-12-07 18:40:27 -0800
-->
     <para>
      Fix JIT compilation to be compatible with LLVM 11 and LLVM 12
      (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [5da871bfa] 2020-12-07 19:34:13 -0800
Branch: REL_13_STABLE [01c6370a3] 2020-12-07 18:33:03 -0800
Branch: REL_12_STABLE [27b57f806] 2020-12-07 18:39:32 -0800
Branch: REL_11_STABLE [1e16ad101] 2020-12-07 18:40:27 -0800
-->
     <para>
      Fix potential mishandling of references to boolean variables in
      JIT expression compilation (Andres Freund)
     </para>

     <para>
      No field reports attributable to this have been seen, but it seems
      likely that it could cause problems on some architectures.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ad84ecc98] 2020-11-16 15:16:39 -0500
Branch: REL_13_STABLE [53c7b4f62] 2020-11-16 15:16:39 -0500
Branch: REL_12_STABLE [029fa664e] 2020-11-16 15:16:39 -0500
Branch: REL_11_STABLE [89aa30a17] 2020-11-16 15:16:39 -0500
-->
     <para>
      Fix compile failure with ICU 68 and later (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [677f74e5b] 2020-12-01 11:46:56 -0300
Branch: REL_13_STABLE [5a1d1b954] 2020-12-01 11:46:56 -0300
Branch: REL_12_STABLE [f0ff52f25] 2020-12-01 11:46:56 -0300
Branch: REL_11_STABLE [49aaabdf8] 2020-12-01 11:46:56 -0300
-->
     <para>
      Avoid <function>memcpy()</function> with a NULL source pointer and
      zero count during partitioned index creation (&Aacute;lvaro Herrera)
     </para>

     <para>
      While such a call is not known to cause problems in itself, some
      compilers assume that the arguments of <function>memcpy()</function>
      are never NULL, which could result in incorrect optimization of
      nearby code.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c7edf4ac2] 2021-01-24 16:29:47 -0500
Branch: REL_13_STABLE [58a545344] 2021-01-24 16:29:47 -0500
Branch: REL_12_STABLE [5db6ba303] 2021-01-24 16:29:47 -0500
Branch: REL_11_STABLE [c82c015b5] 2021-01-24 16:29:47 -0500
Branch: REL_10_STABLE [728971d5f] 2021-01-24 16:29:48 -0500
Branch: REL9_6_STABLE [7e0786751] 2021-01-24 16:29:48 -0500
Branch: REL9_5_STABLE [c26a0865d] 2021-01-24 16:29:48 -0500
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2021a for DST law changes in Russia (Volgograd zone) and
      South Sudan, plus historical corrections for Australia, Bahamas,
      Belize, Bermuda, Ghana, Israel, Kenya, Nigeria, Palestine,
      Seychelles, and Vanuatu.
     </para>

     <para>
      Notably, the Australia/Currie zone has been corrected to the point
      where it is identical to Australia/Hobart.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11-10">
  <title>Release 11.10</title>

  <formalpara>
  <title>Release date:</title>
  <para>2020-11-12</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.9.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.10</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 11.6,
    see <xref linkend="release-11-6"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [0c3185e96] 2020-11-09 07:32:09 -0800
Branch: REL_13_STABLE [c90c84b3f] 2020-11-09 07:32:12 -0800
Branch: REL_12_STABLE [ac8f6243c] 2020-11-09 07:32:12 -0800
Branch: REL_11_STABLE [43ebfea5a] 2020-11-09 07:32:13 -0800
Branch: REL_10_STABLE [f97ecea1e] 2020-11-09 07:32:13 -0800
Branch: REL9_6_STABLE [ff3de4c21] 2020-11-09 07:32:13 -0800
Branch: REL9_5_STABLE [aefc625de] 2020-11-09 07:32:14 -0800
-->
     <para>
      Block <command>DECLARE CURSOR ... WITH HOLD</command> and firing of
      deferred triggers within index expressions and materialized view
      queries (Noah Misch)
     </para>

     <para>
      This is essentially a leak in the <quote>security restricted
      operation</quote> sandbox mechanism.  An attacker having permission
      to create non-temporary SQL objects could parlay this leak to
      execute arbitrary SQL code as a superuser.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Etienne Stalmans for reporting this problem.
      (CVE-2020-25695)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a45bc8a4f] 2020-09-24 18:19:38 -0400
Branch: REL_13_STABLE [cb8885ac4] 2020-09-24 18:19:38 -0400
Branch: REL_12_STABLE [fb93f784f] 2020-09-24 18:19:38 -0400
Branch: REL_11_STABLE [1738a61c8] 2020-09-24 18:19:39 -0400
Branch: REL_10_STABLE [1888ff8d0] 2020-09-24 18:19:39 -0400
Branch: REL9_6_STABLE [7c154f2fd] 2020-09-24 18:19:39 -0400
Branch: REL9_5_STABLE [56b46d3a1] 2020-09-24 18:19:39 -0400
Branch: master [8e5793ab6] 2020-10-19 19:03:46 -0400
Branch: REL_13_STABLE [1814f915b] 2020-10-19 19:03:46 -0400
Branch: REL_12_STABLE [c6d0b9b16] 2020-10-19 19:03:46 -0400
Branch: REL_11_STABLE [5a9f99bed] 2020-10-19 19:03:47 -0400
Branch: REL_10_STABLE [68f236993] 2020-10-19 19:03:47 -0400
Branch: REL9_6_STABLE [5c78f7977] 2020-10-19 19:03:47 -0400
Branch: REL9_5_STABLE [da129a04a] 2020-10-19 19:03:47 -0400
-->
     <para>
      Fix usage of complex connection-string parameters
      in <application>pg_dump</application>,
      <application>pg_restore</application>,
      <application>clusterdb</application>,
      <application>reindexdb</application>,
      and <application>vacuumdb</application> (Tom Lane)
     </para>

     <para>
      The <option>-d</option> parameter
      of <application>pg_dump</application>
      and <application>pg_restore</application>, or
      the <option>--maintenance-db</option> parameter of the other
      programs mentioned, can be a <quote>connection string</quote>
      containing multiple connection parameters rather than just a
      database name.  In cases where these programs need to initiate
      additional connections, such as parallel processing or processing of
      multiple databases, the connection string was forgotten and just the
      basic connection parameters (database name, host, port, and
      username) were used for the additional connections.  This could lead
      to connection failures if the connection string included any other
      essential information, such as non-default SSL or GSS parameters.
      Worse, the connection might succeed but not be encrypted as
      intended, or be vulnerable to man-in-the-middle attacks that the
      intended connection parameters would have prevented.
      (CVE-2020-25694)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [85c54287a] 2020-10-21 16:19:00 -0400
Branch: REL_13_STABLE [2e4af4110] 2020-10-21 16:19:00 -0400
Branch: REL_12_STABLE [f656517ec] 2020-10-21 16:19:01 -0400
Branch: REL_11_STABLE [20be76d5c] 2020-10-21 16:19:01 -0400
Branch: REL_10_STABLE [8175da6e7] 2020-10-21 16:19:02 -0400
Branch: REL9_6_STABLE [870a23230] 2020-10-21 16:18:41 -0400
Branch: REL9_5_STABLE [6997da09a] 2020-10-21 16:18:41 -0400
-->
     <para>
      When <application>psql</application>'s <command>\connect</command>
      command re-uses connection parameters, ensure that all
      non-overridden parameters from a previous connection string are
      re-used (Tom Lane)
     </para>

     <para>
      This avoids cases where reconnection might fail due to omission of
      relevant parameters, such as non-default SSL or GSS options.
      Worse, the reconnection might succeed but not be encrypted as
      intended, or be vulnerable to man-in-the-middle attacks that the
      intended connection parameters would have prevented.
      This is largely the same problem as just cited
      for <application>pg_dump</application> et al,
      although <application>psql</application>'s behavior is more complex
      since the user may intentionally override some connection
      parameters.
      (CVE-2020-25694)
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [098fb0079] 2020-11-09 07:32:09 -0800
Branch: REL_13_STABLE [67029845b] 2020-11-09 07:32:12 -0800
Branch: REL_12_STABLE [3855e5b47] 2020-11-09 07:32:13 -0800
Branch: REL_11_STABLE [7b356c78f] 2020-11-09 07:32:13 -0800
Branch: REL_10_STABLE [a498db87b] 2020-11-09 07:32:13 -0800
Branch: REL9_6_STABLE [12fd81cb7] 2020-11-09 07:32:14 -0800
Branch: REL9_5_STABLE [a54dfbee1] 2020-11-09 07:32:14 -0800
-->
     <para>
      Prevent <application>psql</application>'s <command>\gset</command>
      command from modifying specially-treated variables (Noah Misch)
     </para>

     <para>
      <command>\gset</command> without a prefix would overwrite whatever
      variables the server told it to.  Thus, a compromised server could
      set specially-treated variables such as <varname>PROMPT1</varname>,
      giving the ability to execute arbitrary shell code in the user's
      session.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Nick Cleaton for reporting this problem.
      (CVE-2020-25696)
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [566372b3d] 2020-08-15 10:15:53 -0700
Branch: REL_13_STABLE Release: REL_13_0 [592a589a0] 2020-08-15 10:15:56 -0700
Branch: REL_12_STABLE [30e68a2ab] 2020-08-15 10:15:56 -0700
Branch: REL_11_STABLE [d4031d784] 2020-08-15 10:15:57 -0700
Branch: REL_10_STABLE [e525770dd] 2020-08-15 10:15:57 -0700
Branch: REL9_6_STABLE [5ae01df6f] 2020-08-15 10:15:57 -0700
Branch: REL9_5_STABLE [3fbbf64ce] 2020-08-15 10:15:57 -0700
Branch: REL_12_STABLE [06e50d8f7] 2020-08-15 16:15:59 -0700
Branch: REL_11_STABLE [6af0b12a5] 2020-08-15 16:16:15 -0700
Branch: REL_10_STABLE [e8e44e890] 2020-08-15 16:16:29 -0700
Branch: REL9_6_STABLE [85aa22cb1] 2020-08-15 16:16:34 -0700
Branch: REL9_5_STABLE [d8a22a387] 2020-08-15 16:16:42 -0700
-->
     <para>
      Prevent possible data loss from concurrent truncations of SLRU logs
      (Noah Misch)
     </para>

     <para>
      This rare problem would manifest in later <quote>apparent
      wraparound</quote> or <quote>could not access status of
      transaction</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [aca74843e] 2020-09-24 10:39:52 +1200
Branch: REL_13_STABLE [052014a20] 2020-09-24 10:27:22 +1200
Branch: REL_12_STABLE [7664cc869] 2020-09-24 10:30:47 +1200
Branch: REL_11_STABLE [c5a5bd0bb] 2020-09-24 10:31:57 +1200
Branch: REL_10_STABLE [dd36d6b00] 2020-09-24 10:33:00 +1200
Branch: REL9_6_STABLE [d38e15979] 2020-09-24 10:35:10 +1200
Branch: REL9_5_STABLE [23d8b3577] 2020-09-24 10:36:27 +1200
-->
     <para>
      Ensure that SLRU directories are properly fsync'd during checkpoints
      (Thomas Munro)
     </para>

     <para>
      This prevents possible data loss in a subsequent operating system
      crash.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d907bd054] 2020-11-03 15:41:32 -0500
Branch: REL_13_STABLE [768dbef0d] 2020-11-03 15:41:32 -0500
Branch: REL_12_STABLE [136f87ea5] 2020-11-03 15:41:32 -0500
Branch: REL_11_STABLE [501035a0a] 2020-11-03 15:41:32 -0500
Branch: REL_10_STABLE [df4405b78] 2020-11-03 15:41:32 -0500
Branch: REL9_6_STABLE [04c4b495b] 2020-11-03 15:41:32 -0500
Branch: REL9_5_STABLE [77df80cf6] 2020-11-03 15:41:32 -0500
-->
     <para>
      Fix <command>ALTER ROLE</command> for users with
      the <literal>BYPASSRLS</literal> attribute (Tom Lane, Stephen Frost)
     </para>

     <para>
      The <literal>BYPASSRLS</literal> attribute is only allowed to be
      changed by superusers, but other <command>ALTER ROLE</command>
      operations, such as password changes, should be allowed with only
      ordinary permission checks.  The previous coding erroneously
      restricted all changes on such a role to superusers.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [bbb927b4d] 2020-10-20 19:22:09 -0300
Branch: REL_13_STABLE [5f6463a20] 2020-10-20 19:22:09 -0300
Branch: REL_12_STABLE [0e6b6f8c7] 2020-10-20 19:22:09 -0300
Branch: REL_11_STABLE [a795f6782] 2020-10-20 19:22:09 -0300
-->
     <para>
      Ensure that <command>ALTER TABLE ONLY ... ENABLE/DISABLE
      TRIGGER</command> does not recurse to child tables
      (&Aacute;lvaro Herrera)
     </para>

     <para>
      Previously the <literal>ONLY</literal> flag was ignored.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [502898192] 2020-08-21 15:00:47 -0400
Branch: REL_13_STABLE Release: REL_13_0 [894f5dea7] 2020-08-21 15:00:48 -0400
Branch: REL_12_STABLE [d9253df12] 2020-08-21 15:00:43 -0400
Branch: REL_11_STABLE [373796524] 2020-08-21 15:00:43 -0400
Branch: REL_10_STABLE [e22e29c25] 2020-08-21 15:00:43 -0400
Branch: REL9_6_STABLE [37681d7e9] 2020-08-21 15:00:43 -0400
Branch: REL9_5_STABLE [21f8b1811] 2020-08-21 15:00:43 -0400
Branch: master [19f5a37b9] 2020-09-13 12:51:21 -0400
Branch: REL_13_STABLE Release: REL_13_0 [b380484a8] 2020-09-13 12:51:21 -0400
Branch: REL_12_STABLE [1371a1e41] 2020-09-13 12:51:21 -0400
Branch: REL_11_STABLE [f11210013] 2020-09-13 12:51:21 -0400
Branch: REL_10_STABLE [783a21eff] 2020-09-13 12:51:21 -0400
Branch: REL9_6_STABLE [1a9c93ec3] 2020-09-13 12:51:21 -0400
Branch: REL9_5_STABLE [86b8ef139] 2020-09-13 12:51:21 -0400
-->
     <para>
      Fix handling of expressions in <command>CREATE TABLE LIKE</command>
      with inheritance (Tom Lane)
     </para>

     <para>
      If a <command>CREATE TABLE</command> command uses
      both <literal>LIKE</literal> and traditional inheritance, column
      references in <literal>CHECK</literal> constraints and expression
      indexes that came from a <literal>LIKE</literal> parent table tended
      to get mis-numbered, resulting in wrong answers and/or bizarre error
      messages.  The same could happen in <literal>GENERATED</literal>
      expressions, in branches that have that feature.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [afc7e0ad5] 2020-09-01 13:40:43 -0400
Branch: REL_13_STABLE Release: REL_13_0 [15dad5776] 2020-09-01 13:40:43 -0400
Branch: REL_12_STABLE [7067ba1b4] 2020-09-01 13:40:43 -0400
Branch: REL_11_STABLE [f00f5e0c1] 2020-09-01 13:40:43 -0400
-->
     <para>
      Disallow <command>DROP INDEX CONCURRENTLY</command> on a partitioned
      table (&Aacute;lvaro Herrera, Michael Paquier)
     </para>

     <para>
      This case failed anyway, but with a confusing error message.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5b7bfc397] 2020-11-05 11:44:32 -0500
Branch: REL_13_STABLE [44b973b91] 2020-11-05 11:44:32 -0500
Branch: REL_12_STABLE [0bdf1ef3d] 2020-11-05 11:44:32 -0500
Branch: REL_11_STABLE [7dc18c619] 2020-11-05 11:44:32 -0500
-->
     <para>
      Allow <command>LOCK TABLE</command> to succeed on a self-referential
      view (Tom Lane)
     </para>

     <para>
      It previously threw an error complaining about infinite recursion,
      but there seems no need to disallow the case.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [489c9c340] 2020-09-30 15:40:23 -0400
Branch: REL_13_STABLE [99fd38c02] 2020-09-30 15:40:23 -0400
Branch: REL_12_STABLE [c5232dca8] 2020-09-30 15:40:23 -0400
Branch: REL_11_STABLE [b0fe0b022] 2020-09-30 15:40:23 -0400
Branch: REL_10_STABLE [db96be24c] 2020-09-30 15:40:23 -0400
Branch: REL9_6_STABLE [19e798268] 2020-09-30 15:40:23 -0400
Branch: REL9_5_STABLE [4857e6fe1] 2020-09-30 15:40:23 -0400
-->
     <para>
      Fix off-by-one conversion of negative years to BC dates
      in <function>to_date()</function>
      and <function>to_timestamp()</function> (Dar Alathar-Yemen, Tom Lane)
     </para>

     <para>
      Also, arrange for the combination of a negative year and an
      explicit <quote>BC</quote> marker to cancel out and produce AD.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [fd26f7823] 2020-09-29 16:21:46 +0900
Branch: REL_13_STABLE [059caf36c] 2020-09-29 16:23:57 +0900
Branch: REL_12_STABLE [4d342b9d4] 2020-09-29 16:24:20 +0900
Branch: REL_11_STABLE [462ff7966] 2020-09-29 16:24:47 +0900
Branch: REL_10_STABLE [334417538] 2020-09-29 16:25:08 +0900
Branch: REL9_6_STABLE [7be02a3bf] 2020-09-29 16:25:20 +0900
Branch: REL9_5_STABLE [40a8fb1e0] 2020-09-29 16:25:51 +0900
-->
     <para>
      Ensure that standby servers will archive WAL timeline history files
      when <varname>archive_mode</varname> is set
      to <literal>always</literal> (Grigory Smolkin, Fujii Masao)
     </para>

     <para>
      This oversight could lead to failure of subsequent PITR recovery
      attempts.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3d65b0593] 2020-09-16 12:07:31 -0400
Branch: REL_13_STABLE Release: REL_13_0 [3e3f8f202] 2020-09-16 12:07:31 -0400
Branch: REL_12_STABLE [8580631ff] 2020-09-16 12:07:31 -0400
Branch: REL_11_STABLE [2c74f7139] 2020-09-16 12:07:31 -0400
Branch: REL_10_STABLE [d6d70f89a] 2020-09-16 12:07:31 -0400
-->
     <para>
      Fix <quote>cache lookup failed for relation 0</quote>
      failures in logical replication workers (Tom Lane)
     </para>

     <para>
      The real-world impact is small, since the failure is unlikely, and
      if it does happen the worker would just exit and be restarted.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c8746f999] 2020-09-04 20:33:36 -0400
Branch: REL_13_STABLE Release: REL_13_0 [9b81a30f9] 2020-09-04 20:33:37 -0400
Branch: REL_12_STABLE [9b47ee6e7] 2020-09-04 20:20:05 -0400
Branch: REL_11_STABLE [7156a0eac] 2020-09-04 20:20:05 -0400
Branch: REL_10_STABLE [9b8a8516e] 2020-09-04 20:20:06 -0400
-->
     <para>
      Prevent logical replication workers from sending redundant ping
      requests (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0038f9438] 2020-08-14 13:26:57 -0400
Branch: REL_13_STABLE Release: REL_13_0 [1c6066fbd] 2020-08-14 13:26:57 -0400
Branch: REL_12_STABLE [42566a250] 2020-08-14 13:26:57 -0400
Branch: REL_11_STABLE [250aaa2de] 2020-08-14 13:26:57 -0400
Branch: REL_10_STABLE [326b5fe0f] 2020-08-14 13:26:57 -0400
Branch: REL9_6_STABLE [b4d8be9f6] 2020-08-14 13:26:57 -0400
-->
     <para>
      During <quote>smart</quote> shutdown, don't terminate background
      processes until all client (foreground) sessions are done (Tom Lane)
     </para>

     <para>
      The previous behavior broke parallel query processing, since the
      postmaster would terminate parallel workers and refuse to launch any
      new ones.  It also caused autovacuum to cease functioning, which
      could have dire long-term effects if the surviving client sessions
      make a lot of data changes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_13_BR [9abb2bfc0] 2019-10-13 15:48:26 -0400
Branch: REL_12_STABLE [8b53dbada] 2020-10-15 12:50:57 -0400
Branch: REL_11_STABLE [85834023a] 2020-10-15 12:50:57 -0400
Branch: REL_10_STABLE [4e95733b0] 2020-10-15 12:50:57 -0400
Branch: REL9_6_STABLE [7753ca49d] 2020-10-15 12:50:57 -0400
-->
     <para>
      Avoid recursive consumption of stack space while processing signals
      in the postmaster (Tom Lane)
     </para>

     <para>
      Heavy use of parallel processing has been observed to cause
      postmaster crashes due to too many concurrent signals requesting
      creation of a parallel worker process.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [bedadc732] 2020-09-09 15:32:45 -0400
Branch: REL_13_STABLE Release: REL_13_0 [35e59398a] 2020-09-09 15:32:34 -0400
Branch: REL_12_STABLE [d038c6c63] 2020-09-09 15:32:34 -0400
Branch: REL_11_STABLE [67dde49a3] 2020-09-09 15:32:34 -0400
Branch: REL_10_STABLE [95cd8902e] 2020-09-09 15:32:34 -0400
Branch: REL9_6_STABLE [b2eaddd9b] 2020-09-09 15:32:34 -0400
Branch: REL9_5_STABLE [581855b6a] 2020-09-09 15:32:34 -0400
Branch: master [58c6feccf] 2020-09-10 12:06:37 -0400
Branch: REL_13_STABLE Release: REL_13_0 [3f29aa48b] 2020-09-10 12:06:26 -0400
Branch: REL_12_STABLE [4e10c0c8a] 2020-09-10 12:06:26 -0400
Branch: REL_11_STABLE [93871b693] 2020-09-10 12:06:26 -0400
Branch: REL_10_STABLE [ac695b8f2] 2020-09-10 12:06:26 -0400
Branch: REL9_6_STABLE [dc71c6409] 2020-09-10 12:06:26 -0400
Branch: REL9_5_STABLE [e2c9bedc9] 2020-09-10 12:06:26 -0400
-->
     <para>
      Avoid running <systemitem>atexit</systemitem> handlers when exiting
      due to SIGQUIT (Kyotaro Horiguchi, Tom Lane)
     </para>

     <para>
      Most server processes followed this practice already, but the
      archiver process was overlooked.  Backends that were still waiting
      for a client startup packet got it wrong, too.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4d346def1] 2020-08-22 14:46:40 -0400
Branch: REL_13_STABLE Release: REL_13_0 [de627adaa] 2020-08-22 14:46:40 -0400
Branch: REL_12_STABLE [6b701eaaa] 2020-08-22 14:46:40 -0400
Branch: REL_11_STABLE [b439adcab] 2020-08-22 14:46:40 -0400
Branch: REL_10_STABLE [6fa403e61] 2020-08-22 14:46:40 -0400
Branch: REL9_6_STABLE [d3701bc8a] 2020-08-22 14:46:40 -0400
Branch: REL9_5_STABLE [7edd36eae] 2020-08-22 14:46:40 -0400
-->
     <para>
      Avoid misoptimization of subquery qualifications that reference
      apparently-constant grouping columns (Tom Lane)
     </para>

     <para>
      A <quote>constant</quote> subquery output column isn't really
      constant if it is a grouping column that appears in only some of the
      grouping sets.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1e7629d2c] 2020-08-14 22:14:03 -0400
Branch: REL_13_STABLE Release: REL_13_0 [b538e83f1] 2020-08-14 22:14:03 -0400
Branch: REL_12_STABLE [912fb290c] 2020-08-14 22:14:03 -0400
Branch: REL_11_STABLE [9d472b51e] 2020-08-14 22:14:03 -0400
Branch: REL_10_STABLE [dea07098a] 2020-08-14 22:14:03 -0400
Branch: REL9_6_STABLE [7241edc4f] 2020-08-14 22:14:03 -0400
Branch: REL9_5_STABLE [5190707d7] 2020-08-14 22:14:03 -0400
-->
     <para>
      Avoid failure when SQL function inlining changes the shape of a
      potentially-hashable subplan comparison expression (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [a811ea5bd] 2020-08-13 17:33:49 -0400
Branch: REL_13_STABLE Release: REL_13_0 [2f29fd4cb] 2020-08-13 17:33:49 -0400
Branch: REL_12_STABLE [1122a903e] 2020-08-13 17:33:49 -0400
Branch: REL_11_STABLE [704de3739] 2020-08-13 17:33:49 -0400
Branch: REL_10_STABLE [385cbe8e4] 2020-08-13 17:33:49 -0400
Branch: REL9_6_STABLE [e5902117d] 2020-08-13 17:33:49 -0400
Branch: REL9_5_STABLE [40bceae7b] 2020-08-13 17:33:49 -0400
Branch: master [6e70443ed] 2020-08-17 16:20:06 -0400
Branch: REL_13_STABLE Release: REL_13_0 [b83f1bcca] 2020-08-17 16:20:06 -0400
Branch: REL_12_STABLE [4f47c8e7d] 2020-08-17 16:20:06 -0400
Branch: REL_11_STABLE [060e5bd70] 2020-08-17 16:20:06 -0400
Branch: REL_10_STABLE [3a45ac076] 2020-08-17 16:20:05 -0400
Branch: REL9_6_STABLE [d4d214903] 2020-08-17 16:20:05 -0400
Branch: REL9_5_STABLE [aa4da2674] 2020-08-17 16:20:05 -0400
-->
     <para>
      While building or re-building an index, tolerate the appearance of
      new HOT chains due to concurrent updates
      (Anastasia Lubennikova, &Aacute;lvaro Herrera)
     </para>

     <para>
      This oversight could lead to <quote>failed to find parent tuple for
      heap-only tuple</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [b7f2dd959] 2020-09-17 16:11:48 +0530
Branch: REL_13_STABLE Release: REL_13_0 [0abd9cd2f] 2020-09-17 15:16:46 +0530
Branch: REL_12_STABLE [4bc63462d] 2020-09-17 15:38:47 +0530
Branch: REL_11_STABLE [956891fab] 2020-09-17 15:53:25 +0530
Branch: REL_10_STABLE [fcc3665a0] 2020-09-17 15:59:42 +0530
-->
     <para>
      Fix failure of parallel B-tree index scans when the index condition
      is unsatisfiable (James Hunter)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [7577dd848] 2020-11-07 00:39:19 +0100
Branch: REL_13_STABLE [6a7b55f37] 2020-11-07 00:40:06 +0100
Branch: REL_12_STABLE [8149e9f9a] 2020-11-07 00:40:40 +0100
Branch: REL_11_STABLE [895d0f0e8] 2020-11-07 00:41:02 +0100
Branch: REL_10_STABLE [0b96fc977] 2020-11-07 00:41:19 +0100
Branch: REL9_6_STABLE [bae31e75f] 2020-11-07 00:41:36 +0100
Branch: REL9_5_STABLE [d2d3a4bd3] 2020-11-07 00:41:52 +0100
-->
     <para>
      Ensure that data is detoasted before being inserted into a BRIN
      index (Tomas Vondra)
     </para>

     <para>
      Index entries are not supposed to contain out-of-line TOAST
      pointers, but BRIN didn't get that memo.  This could lead to errors
      like <quote>missing chunk number 0 for toast value NNN</quote>.
      (If you are faced with such an error from an existing
      index, <command>REINDEX</command> should be enough to fix it.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [1f42d35a1] 2020-08-12 15:33:36 -0400
Branch: REL_13_STABLE Release: REL_13_0 [8782ea2f3] 2020-08-12 15:33:36 -0400
Branch: REL_12_STABLE [0426c75e7] 2020-08-12 15:33:36 -0400
Branch: REL_11_STABLE [7af39993a] 2020-08-12 15:33:36 -0400
Branch: REL_10_STABLE [721ef4d28] 2020-08-12 15:33:36 -0400
Branch: REL9_6_STABLE [7a3c261fb] 2020-08-12 15:33:36 -0400
Branch: REL9_5_STABLE [ce3a8fde8] 2020-08-12 15:33:36 -0400
-->
     <para>
      Handle concurrent desummarization correctly during BRIN index scans
      (Alexander Lakhin, &Aacute;lvaro Herrera)
     </para>

     <para>
      Previously, if a page range was desummarized at just the wrong time,
      an index scan might falsely raise an error indicating index
      corruption.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [10564ee02] 2020-08-27 17:36:13 -0400
Branch: REL_13_STABLE Release: REL_13_0 [1df14a566] 2020-08-27 17:36:13 -0400
Branch: REL_12_STABLE [ff3c16d1e] 2020-08-27 17:36:13 -0400
Branch: REL_11_STABLE [11ecf4bd2] 2020-08-27 17:36:13 -0400
Branch: REL_10_STABLE [0d3ad6540] 2020-08-27 17:36:13 -0400
Branch: REL9_6_STABLE [0dfec43c8] 2020-08-27 17:36:13 -0400
Branch: REL9_5_STABLE [fabd2f9c9] 2020-08-27 17:36:13 -0400
-->
     <para>
      Fix rare <quote>lost saved point in index</quote> errors in scans of
      multicolumn GIN indexes (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0a4b34031] 2020-11-02 21:11:50 -0500
Branch: REL_13_STABLE [a58a631b4] 2020-11-02 21:11:50 -0500
Branch: REL_12_STABLE [d3befe9b9] 2020-11-02 21:11:50 -0500
Branch: REL_11_STABLE [f28b089cb] 2020-11-02 21:11:50 -0500
Branch: REL_10_STABLE [7827497ba] 2020-11-02 21:11:50 -0500
-->
     <para>
      Fix unportable use of <function>getnameinfo()</function>
      in <structname>pg_hba_file_rules</structname> view (Tom Lane)
     </para>

     <para>
      On FreeBSD 11, and possibly other platforms, the
      view's <structfield>address</structfield>
      and <structfield>netmask</structfield> columns were always null due
      to this error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [f90e80b91] 2020-10-31 08:43:28 -0700
Branch: REL_13_STABLE [ab2e2ce46] 2020-10-31 08:43:32 -0700
Branch: REL_12_STABLE [741b84e9f] 2020-10-31 08:44:13 -0700
Branch: REL_11_STABLE [045466675] 2020-10-31 08:45:19 -0700
-->
     <para>
      Avoid crash if <varname>debug_query_string</varname> is NULL
      when starting a parallel worker (Noah Misch)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [ced138e8c] 2020-09-15 21:03:14 -0300
Branch: REL_13_STABLE Release: REL_13_0 [873cb8fca] 2020-09-15 21:03:14 -0300
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_12_STABLE [93f726c04] 2020-10-27 15:37:13 -0400
Branch: REL_11_STABLE [66c036b4f] 2020-10-27 15:37:13 -0400
Branch: REL_10_STABLE [41c742a43] 2020-10-27 15:37:13 -0400
Branch: REL9_6_STABLE [cc623ed2f] 2020-10-27 15:37:13 -0400
Branch: REL9_5_STABLE [7978ad025] 2020-10-27 15:37:13 -0400
-->
     <para>
      Fix use-after-free hazard when an event trigger monitors
      an <command>ALTER TABLE</command> operation (Jehan-Guillaume de
      Rorthais)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [19ad7e1d7] 2020-09-06 12:55:13 -0400
Branch: REL_13_STABLE Release: REL_13_0 [f04203ab7] 2020-09-06 12:55:28 -0400
Branch: REL_12_STABLE [f45dd3fed] 2020-09-06 12:55:37 -0400
Branch: REL_11_STABLE [baef6e5e9] 2020-09-06 12:55:44 -0400
Branch: REL_10_STABLE [f71b93b86] 2020-09-06 12:55:51 -0400
Branch: REL9_6_STABLE [2939f613f] 2020-09-06 12:55:59 -0400
Branch: REL9_5_STABLE [e0b4c7dd0] 2020-09-06 12:56:10 -0400
-->
     <para>
      Fix incorrect error message about inconsistent moving-aggregate
      data types (Jeff Janes)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [be4b0c007] 2020-09-03 16:52:09 -0400
Branch: REL_13_STABLE Release: REL_13_0 [17424e79d] 2020-09-03 16:52:09 -0400
Branch: REL_12_STABLE [82dd373f2] 2020-09-03 16:52:09 -0400
Branch: REL_11_STABLE [526df0a23] 2020-09-03 16:52:09 -0400
Branch: REL_10_STABLE [2a938c793] 2020-09-03 16:52:09 -0400
Branch: REL9_6_STABLE [2500e51e7] 2020-09-03 16:52:09 -0400
Branch: REL9_5_STABLE [3738651f5] 2020-09-03 16:52:09 -0400
-->
     <para>
      Avoid lockup when a parallel worker reports a very long error
      message (Vignesh C)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: REL_13_STABLE [1f53d0b9f] 2020-10-20 14:09:16 +0200
Branch: REL_12_STABLE [bd0677bb8] 2020-10-20 14:31:52 +0200
Branch: REL_11_STABLE [6e03a8a30] 2020-10-20 14:50:43 +0200
Branch: REL_10_STABLE [f78ebbe68] 2020-10-20 15:19:47 +0200
Branch: REL9_6_STABLE [d4e654d15] 2020-10-20 15:35:31 +0200
Branch: REL9_5_STABLE [d27c18d26] 2020-10-20 17:22:41 +0200
-->
     <para>
      Avoid unnecessary failure when transferring very large payloads
      through shared memory queues (Markus Wanner)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [72559438f] 2020-10-15 14:29:53 -0700
Branch: REL_13_STABLE [ae3e75aba] 2020-10-15 14:30:40 -0700
Branch: REL_12_STABLE [c8a2bb0f1] 2020-10-15 14:31:32 -0700
Branch: REL_11_STABLE [f3dee5b9a] 2020-10-15 15:06:16 -0700
Branch: master [fe2a16d8b] 2020-10-15 18:17:00 -0700
Branch: REL_13_STABLE [efc9a8e98] 2020-10-15 18:17:00 -0700
Branch: REL_12_STABLE [c835c7ffe] 2020-10-15 18:17:01 -0700
Branch: REL_11_STABLE [4a4f4487d] 2020-10-15 18:17:01 -0700
-->
     <para>
      Fix incorrect handling of template function attributes in JIT code
      generation (Andres Freund)
     </para>

     <para>
      This has been shown to cause crashes on <literal>s390x</literal>,
      and very possibly there are other cases on other platforms.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e55f718fc] 2020-09-26 16:04:06 -0400
Branch: REL_13_STABLE [f7873900f] 2020-09-26 16:04:06 -0400
Branch: REL_12_STABLE [bda32733c] 2020-09-26 16:04:06 -0400
Branch: REL_11_STABLE [dd89ba578] 2020-09-26 16:04:06 -0400
Branch: REL_10_STABLE [de6725deb] 2020-09-26 16:04:06 -0400
Branch: REL9_6_STABLE [acab757ce] 2020-09-26 16:04:06 -0400
Branch: REL9_5_STABLE [bf34ae930] 2020-09-26 16:04:06 -0400
-->
     <para>
      Fix relation cache memory leaks with RLS policies (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [397ea901e] 2020-10-12 13:31:24 -0400
Branch: REL_13_STABLE [9343bfefa] 2020-10-12 13:31:24 -0400
Branch: REL_12_STABLE [f35c11770] 2020-10-12 13:31:24 -0400
Branch: REL_11_STABLE [cfa4cff30] 2020-10-12 13:31:24 -0400
Branch: REL_10_STABLE [a5c77e6b8] 2020-10-12 13:31:24 -0400
Branch: REL9_6_STABLE [c7573ab1e] 2020-10-12 13:31:24 -0400
Branch: REL9_5_STABLE [43ca5e07d] 2020-10-12 13:31:24 -0400
-->
     <para>
      Fix small memory leak when SIGHUP processing decides that a new GUC
      variable value cannot be applied without a restart (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a6b1f5365] 2020-09-29 11:18:30 -0400
Branch: REL_13_STABLE [f0e4ec74e] 2020-09-29 11:18:30 -0400
Branch: REL_12_STABLE [c1e044bb3] 2020-09-29 11:18:31 -0400
Branch: REL_11_STABLE [13a1901ba] 2020-09-29 11:18:31 -0400
-->
     <para>
      Fix memory leaks
      in <application>PL/pgsql</application>'s <command>CALL</command>
      processing (Pavel Stehule, Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b55b4dad9] 2020-09-01 13:14:44 -0400
Branch: REL_13_STABLE Release: REL_13_0 [4178b7499] 2020-09-01 13:14:44 -0400
Branch: REL_12_STABLE [55aea0c70] 2020-09-01 13:14:44 -0400
Branch: REL_11_STABLE [df8020b32] 2020-09-01 13:14:44 -0400
Branch: REL_10_STABLE [0c0a3a859] 2020-09-01 13:14:44 -0400
Branch: REL9_6_STABLE [ba23174dd] 2020-09-01 13:14:44 -0400
Branch: REL9_5_STABLE [8d486cfbf] 2020-09-01 13:14:44 -0400
Branch: master [4d41823c5] 2020-09-04 21:01:58 -0400
Branch: REL_13_STABLE Release: REL_13_0 [8df601bd4] 2020-09-04 21:01:59 -0400
Branch: REL_12_STABLE [fc37c6f61] 2020-09-04 21:01:59 -0400
Branch: REL_11_STABLE [d7ae549e3] 2020-09-04 21:01:59 -0400
Branch: REL_10_STABLE [546479f34] 2020-09-04 21:01:59 -0400
-->
     <para>
      Make <application>libpq</application> support arbitrary-length lines
      in <filename>.pgpass</filename> files (Tom Lane)
     </para>

     <para>
      This is mostly useful to allow using very long security tokens as
      passwords.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7d00a6b2d] 2020-10-17 16:53:48 -0400
Branch: REL_13_STABLE [d2074daeb] 2020-10-19 11:23:51 -0400
Branch: REL_12_STABLE [407580aab] 2020-10-19 11:23:51 -0400
Branch: REL_11_STABLE [883226441] 2020-10-19 11:23:52 -0400
Branch: REL_10_STABLE [6670e9107] 2020-10-19 11:23:52 -0400
Branch: REL9_6_STABLE [cdc7ace16] 2020-10-19 11:23:52 -0400
Branch: REL9_5_STABLE [6acc31a20] 2020-10-19 11:23:52 -0400
-->
     <para>
      In <application>libpq</application> for Windows,
      call <function>WSAStartup()</function> once per process
      and <function>WSACleanup()</function> not at all (Tom Lane,
      Alexander Lakhin)
     </para>

     <para>
      Previously, <application>libpq</application>
      invoked <function>WSAStartup()</function> at connection start
      and <function>WSACleanup()</function> at connection cleanup.
      However, it appears that calling <function>WSACleanup()</function>
      can interfere with other program operations; notably, we have
      observed rare failures to emit expected output to stdout.  There
      appear to be no ill effects from omitting the call, so do that.
      (This also eliminates a performance issue from repeated DLL loads and
      unloads when a program performs a series of database connections.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [21d36747d] 2020-10-24 13:12:08 -0400
Branch: REL_13_STABLE [fd048e0cb] 2020-10-24 13:12:19 -0400
Branch: REL_12_STABLE [bdc79ddd1] 2020-10-24 13:12:26 -0400
Branch: REL_11_STABLE [12a73f29f] 2020-10-24 13:12:31 -0400
Branch: REL_10_STABLE [f38b66ec0] 2020-10-24 13:12:41 -0400
Branch: REL9_6_STABLE [379c43bda] 2020-10-24 13:12:47 -0400
Branch: REL9_5_STABLE [758b45e83] 2020-10-24 13:12:53 -0400
-->
     <para>
      Fix <application>ecpg</application> library's per-thread
      initialization logic for Windows (Tom Lane, Alexander Lakhin)
     </para>

     <para>
      Multi-threaded <application>ecpg</application> applications could
      suffer rare misbehavior due to incorrect locking.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [66f8687a8] 2020-10-28 14:35:53 -0400
Branch: REL_13_STABLE [ba4f5413e] 2020-10-28 14:35:53 -0400
Branch: REL_12_STABLE [cb0982ba9] 2020-10-28 14:35:53 -0400
Branch: REL_11_STABLE [9eb250339] 2020-10-28 14:35:53 -0400
Branch: REL_10_STABLE [504f963f7] 2020-10-28 14:35:53 -0400
Branch: REL9_6_STABLE [204d77969] 2020-10-28 14:35:53 -0400
Branch: REL9_5_STABLE [aff06436c] 2020-10-28 14:35:53 -0400
-->
     <para>
      On Windows, make <application>psql</application> read the output of
      a backtick command in text mode, not binary mode (Tom Lane)
     </para>

     <para>
      This ensures proper handling of newlines.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [3eb3d3e78] 2020-09-04 13:54:54 -0400
Branch: REL_13_STABLE Release: REL_13_0 [72857482c] 2020-09-04 13:55:11 -0400
Branch: REL_12_STABLE [616110eac] 2020-09-04 13:55:03 -0400
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9e5f1f21a] 2020-10-07 12:51:02 -0400
Branch: REL_13_STABLE [2ea624b4b] 2020-10-07 12:51:03 -0400
Branch: REL_12_STABLE [d8c2a2199] 2020-10-07 12:51:04 -0400
Branch: REL_11_STABLE [f2c6e94f0] 2020-10-07 12:51:05 -0400
Branch: REL_10_STABLE [0c79dcb36] 2020-10-07 12:51:05 -0400
Branch: REL9_6_STABLE [710c0a66d] 2020-10-07 12:51:06 -0400
Branch: REL9_5_STABLE [0bfe356c5] 2020-10-07 12:51:06 -0400
-->
     <para>
      Ensure that <application>pg_dump</application> collects per-column
      information about extension configuration tables (Fabr&iacute;zio de
      Royes Mello, Tom Lane)
     </para>

     <para>
      Failure to do this led to crashes when
      specifying <option>--inserts</option>, or underspecified (though
      usually correct) <command>COPY</command> commands when
      using <command>COPY</command> to reload the tables' data.
     </para>
    </listitem>

    <listitem>
<!--
Author: Bruce Momjian <bruce@momjian.us>
Branch: master [3c0471b5f] 2020-10-15 19:33:46 -0400
Branch: REL_13_STABLE [59cfff65b] 2020-10-15 19:33:45 -0400
Branch: REL_12_STABLE [a106236d8] 2020-10-15 19:33:43 -0400
Branch: REL_11_STABLE [eb421c83b] 2020-10-15 19:33:42 -0400
Branch: REL_10_STABLE [85fedf39f] 2020-10-15 19:33:36 -0400
Branch: REL9_6_STABLE [39c23c199] 2020-10-15 19:33:36 -0400
Branch: REL9_5_STABLE [d9ae2297b] 2020-10-15 19:33:36 -0400
Branch: master [536de14e2] 2020-10-15 20:37:20 -0400
Branch: REL_13_STABLE [79fe23465] 2020-10-15 20:37:20 -0400
Branch: REL_12_STABLE [0ab7ca98a] 2020-10-15 20:37:20 -0400
Branch: REL_11_STABLE [16be4e435] 2020-10-15 20:37:19 -0400
Branch: REL_10_STABLE [6e34cc8ab] 2020-10-15 20:37:19 -0400
Branch: REL9_6_STABLE [9dcffe69a] 2020-10-15 20:37:19 -0400
Branch: REL9_5_STABLE [b05672c72] 2020-10-15 20:37:19 -0400
-->
     <para>
      Make <application>pg_upgrade</application> check for pre-existence
      of tablespace directories in the target cluster (Bruce Momjian)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [ca2a12c93] 2020-10-19 09:36:56 +0900
Branch: REL_13_STABLE [1bd9b2b23] 2020-10-19 09:37:50 +0900
Branch: REL_12_STABLE [57bdf29dd] 2020-10-19 09:37:55 +0900
Branch: REL_11_STABLE [914139081] 2020-10-19 09:38:01 +0900
Branch: REL_10_STABLE [e8d36f9ec] 2020-10-19 09:38:06 +0900
Branch: REL9_6_STABLE [994a02f7f] 2020-10-19 09:38:13 +0900
Branch: REL9_5_STABLE [099238322] 2020-10-19 09:38:18 +0900
-->
     <para>
      Fix potential memory leak in <filename>contrib/pgcrypto</filename>
      (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [02a75f836] 2020-10-16 11:59:13 -0400
Branch: REL_13_STABLE [3d338a46a] 2020-10-16 11:59:25 -0400
Branch: REL_12_STABLE [7004ce758] 2020-10-16 11:59:31 -0400
Branch: REL_11_STABLE [1eb2d7e3e] 2020-10-16 11:59:36 -0400
Branch: REL_10_STABLE [3e1a4c260] 2020-10-16 11:59:41 -0400
Branch: REL9_6_STABLE [e15115b4d] 2020-10-16 11:59:47 -0400
Branch: REL9_5_STABLE [9c3032881] 2020-10-16 11:59:52 -0400
-->
     <para>
      Add check for an unlikely failure case
      in <filename>contrib/pgcrypto</filename> (Daniel Gustafsson)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4a071afbd] 2020-10-29 15:28:14 -0400
Branch: REL_13_STABLE [ee03baad2] 2020-10-29 15:28:28 -0400
Branch: REL_12_STABLE [25b587f03] 2020-10-29 15:28:35 -0400
Branch: REL_11_STABLE [24d769b90] 2020-10-29 15:28:41 -0400
Branch: REL_10_STABLE [c39f4e81d] 2020-10-29 15:28:47 -0400
-->
     <para>
      Fix recently-added <type>timetz</type> test case so it works when
      the USA is not observing daylight savings time (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c4a803ac7] 2020-10-16 21:53:33 -0400
Branch: REL_13_STABLE [3f26dca76] 2020-10-16 21:53:43 -0400
Branch: REL_12_STABLE [b39c94097] 2020-10-16 21:53:50 -0400
Branch: REL_11_STABLE [2b9166dbc] 2020-10-16 21:53:55 -0400
Branch: REL_10_STABLE [aae4097b0] 2020-10-16 21:54:03 -0400
Branch: REL9_6_STABLE [13dbf4ab8] 2020-10-16 21:54:09 -0400
Branch: REL9_5_STABLE [c8cb243cb] 2020-10-16 21:54:14 -0400
Branch: master [7d6d6bce4] 2020-10-22 21:23:47 -0400
Branch: REL_13_STABLE [96ed2ae93] 2020-10-22 21:24:01 -0400
Branch: REL_12_STABLE [78ccf7f42] 2020-10-22 21:24:07 -0400
Branch: REL_11_STABLE [02f86d523] 2020-10-22 21:24:12 -0400
Branch: REL_10_STABLE [a357cc05d] 2020-10-22 21:24:17 -0400
Branch: REL9_6_STABLE [05a36321a] 2020-10-22 21:24:23 -0400
Branch: REL9_5_STABLE [0abebb58f] 2020-10-22 21:24:28 -0400
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2020d for DST law changes in Fiji, Morocco, Palestine, the
      Canadian Yukon, Macquarie Island, and Casey Station (Antarctica);
      plus historical corrections for France, Hungary, Monaco, and
      Palestine.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ce0e97f80] 2020-10-16 21:40:16 -0400
Branch: REL_13_STABLE [e0cf5e9b2] 2020-10-16 21:40:16 -0400
Branch: REL_12_STABLE [3d13a8307] 2020-10-16 21:40:16 -0400
Branch: REL_11_STABLE [4a2528bfa] 2020-10-16 21:40:16 -0400
Branch: REL_10_STABLE [41eeeb348] 2020-10-16 21:40:16 -0400
Branch: REL9_6_STABLE [5515c73a6] 2020-10-16 21:40:16 -0400
Branch: REL9_5_STABLE [38fac9c1f] 2020-10-16 21:40:16 -0400
Branch: master [c5054da0d] 2020-10-22 21:15:22 -0400
Branch: REL_13_STABLE [0e551533b] 2020-10-22 21:15:37 -0400
Branch: REL_12_STABLE [f56c42e50] 2020-10-22 21:16:04 -0400
Branch: REL_11_STABLE [d2ffe0a00] 2020-10-22 21:16:16 -0400
Branch: REL_10_STABLE [34285083b] 2020-10-22 21:16:23 -0400
Branch: REL9_6_STABLE [58f9f52a3] 2020-10-22 21:16:31 -0400
Branch: REL9_5_STABLE [ff26f804a] 2020-10-22 21:16:38 -0400
-->
     <para>
      Sync our copy of the timezone library with IANA tzcode release 2020d
      (Tom Lane)
     </para>

     <para>
      This absorbs upstream's change of <application>zic</application>'s
      default output option from <quote>fat</quote>
      to <quote>slim</quote>.  That's just cosmetic for our purposes, as
      we continue to select the <quote>fat</quote> mode in pre-v13
      branches.  This change also ensures
      that <function>strftime()</function> does not
      change <varname>errno</varname> unless it fails.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11-9">
  <title>Release 11.9</title>

  <formalpara>
  <title>Release date:</title>
  <para>2020-08-13</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.8.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.9</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 11.6,
    see <xref linkend="release-11-6"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [11da97024] 2020-08-10 09:22:54 -0700
Branch: REL_13_STABLE [412c5c401] 2020-08-10 09:22:58 -0700
Branch: REL_12_STABLE [64a71062e] 2020-08-10 09:22:58 -0700
Branch: REL_11_STABLE [5a936d64c] 2020-08-10 09:22:59 -0700
Branch: REL_10_STABLE [dd5d99516] 2020-08-10 09:22:59 -0700
Branch: master [cec57b1a0] 2020-08-10 09:22:54 -0700
Branch: REL_13_STABLE [b601f24c8] 2020-08-10 09:22:58 -0700
Branch: REL_12_STABLE [515ee4a7e] 2020-08-10 09:22:58 -0700
Branch: REL_11_STABLE [613ed8a58] 2020-08-10 09:22:59 -0700
Branch: REL_10_STABLE [b793d6af9] 2020-08-10 09:22:59 -0700
-->
     <para>
      Set a secure <varname>search_path</varname> in logical replication
      walsenders and apply workers (Noah Misch)
     </para>

     <para>
      A malicious user of either the publisher or subscriber database
      could potentially cause execution of arbitrary SQL code by the role
      running replication, which is often a superuser.  Some of the risks
      here are equivalent to those described in CVE-2018-1058, and are
      mitigated in this patch by ensuring that the replication sender and
      receiver execute with empty <varname>search_path</varname> settings.
      (As with CVE-2018-1058, that change might cause problems for
      under-qualified names used in replicated tables' DDL.)  Other risks
      are inherent in replicating objects that belong to untrusted roles;
      the most we can do is document that there is a hazard to consider.
      (CVE-2020-14349)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7eeb1d986] 2020-08-10 10:44:42 -0400
Branch: REL_13_STABLE [98ca64899] 2020-08-10 10:44:42 -0400
Branch: REL_12_STABLE [3ba967084] 2020-08-10 10:44:42 -0400
Branch: REL_11_STABLE [afa358786] 2020-08-10 10:44:43 -0400
Branch: REL_10_STABLE [96cbfe92d] 2020-08-10 10:44:43 -0400
Branch: REL9_6_STABLE [2ea8a60fc] 2020-08-10 10:44:43 -0400
Branch: REL9_5_STABLE [6b11a4687] 2020-08-10 10:44:43 -0400
-->
     <para>
      Make contrib modules' installation scripts more secure (Tom Lane)
     </para>

     <para>
      Attacks similar to those described in CVE-2018-1058 could be carried
      out against an extension installation script, if the attacker can
      create objects in either the extension's target schema or the schema
      of some prerequisite extension.  Since extensions often require
      superuser privilege to install, this can open a path to obtaining
      superuser privilege.  To mitigate this risk, be more careful about
      the <varname>search_path</varname> used to run an installation
      script; disable <varname>check_function_bodies</varname> within the
      script; and fix catalog-adjustment queries used in some contrib
      modules to ensure they are secure.  Also provide documentation to
      help third-party extension authors make their installation scripts
      secure.  This is not a complete solution; extensions that depend on
      other extensions can still be at risk if installed carelessly.
      (CVE-2020-14350)
     </para>
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: master [13838740f] 2020-07-28 11:00:00 +0900
Branch: REL_13_STABLE [cebe10a5f] 2020-07-28 11:00:00 +0900
Branch: REL_12_STABLE [62c4a7729] 2020-07-28 11:00:02 +0900
Branch: REL_11_STABLE [bead29dec] 2020-07-28 11:00:03 +0900
Branch: master [199cec977] 2020-08-07 14:45:00 +0900
Branch: REL_13_STABLE [79a3ab1e9] 2020-08-07 14:45:01 +0900
Branch: REL_12_STABLE [4f2693229] 2020-08-07 14:45:02 +0900
Branch: REL_11_STABLE [1db9c80f8] 2020-08-07 14:45:04 +0900
-->
     <para>
      Fix edge cases in partition pruning (Etsuro Fujita, Dmitry Dolgov)
     </para>

     <para>
      When there are multiple partition key columns, generation of pruning
      tests could misbehave if some columns had no
      constraining <literal>WHERE</literal> clauses or multiple
      constraining clauses.  This could lead to server crashes, incorrect
      query results, or assertion failures.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [689696c71] 2020-07-14 18:56:56 -0400
Branch: REL_13_STABLE [e38705b5c] 2020-07-14 18:56:49 -0400
Branch: REL_12_STABLE [de797e823] 2020-07-14 18:56:49 -0400
Branch: REL_11_STABLE [e9f031172] 2020-07-14 18:56:49 -0400
-->
     <para>
      Fix construction of parameterized BitmapAnd and BitmapOr index scans
      on the inside of partition-wise nestloop joins (Tom Lane)
     </para>

     <para>
      A plan in which such a scan needed to use a value from the outside
      of the join would usually crash at execution.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [470687b4a] 2020-08-08 12:31:55 -0400
Branch: REL_13_STABLE [900429d0c] 2020-08-08 12:31:55 -0400
Branch: REL_12_STABLE [85cb4ec50] 2020-08-08 12:31:55 -0400
Branch: REL_11_STABLE [1fa6eec97] 2020-08-08 12:31:55 -0400
Branch: REL_10_STABLE [d81387da9] 2020-08-08 12:31:55 -0400
Branch: REL9_6_STABLE [55d42c917] 2020-08-08 12:31:55 -0400
Branch: REL9_5_STABLE [ca8e87ea0] 2020-08-08 12:31:55 -0400
-->
     <para>
      In logical replication walsender, fix failure to send feedback
      messages after sending a keepalive message (&Aacute;lvaro Herrera)
     </para>

     <para>
      This is a relatively minor problem when using built-in logical
      replication, because the built-in walreceiver will send a feedback
      reply (which clears the incorrect state) fairly frequently anyway.
      But with some other replication systems, such
      as <application>pglogical</application>, it causes significant
      performance issues.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d5daae47d] 2020-07-20 13:40:16 -0400
Branch: REL_13_STABLE [2f1f189cf] 2020-07-20 13:40:16 -0400
Branch: REL_12_STABLE [71e561bd4] 2020-07-20 13:40:16 -0400
Branch: REL_11_STABLE [e8de627a3] 2020-07-20 13:40:16 -0400
Branch: REL_10_STABLE [39d6aec19] 2020-07-20 13:40:16 -0400
-->
     <para>
      Fix firing of column-specific <literal>UPDATE</literal> triggers in
      logical replication subscribers (Tom Lane)
     </para>

     <para>
      The code neglected to account for the possibility of column numbers
      being different between the publisher and subscriber tables, so that
      if those were indeed different, wrong decisions might be made about
      which triggers to fire.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [b48df818d] 2020-06-18 16:34:59 +0900
Branch: REL_13_STABLE [43e70addf] 2020-06-18 16:35:29 +0900
Branch: REL_12_STABLE [16f43122d] 2020-06-18 16:35:32 +0900
Branch: REL_11_STABLE [1657e14b5] 2020-06-18 16:35:36 +0900
-->
     <para>
      Update oldest xmin and LSN values
      during <function>pg_replication_slot_advance()</function> (Michael
      Paquier)
     </para>

     <para>
      This function previously failed to do that, possibly preventing
      resource cleanup (such as removal of no-longer-needed WAL segments)
      after manual advancement of a replication slot.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [78e73e875] 2020-07-31 11:43:12 -0400
Branch: REL_13_STABLE [11dce63d6] 2020-07-31 11:43:12 -0400
Branch: REL_12_STABLE [70248d8f5] 2020-07-31 11:43:12 -0400
Branch: REL_11_STABLE [da596fb4b] 2020-07-31 11:43:12 -0400
Branch: REL_10_STABLE [5e724125a] 2020-07-31 11:43:12 -0400
Branch: REL9_6_STABLE [8ab00b9fe] 2020-07-31 11:43:13 -0400
-->
     <para>
      Fix slow execution of <function>ts_headline()</function> (Tom Lane)
     </para>

     <para>
      The phrase-search fix added in our previous set of minor releases
      could cause <function>ts_headline()</function> to take unreasonable
      amounts of time for long documents; to make matters worse, the query
      was not cancellable within the troublesome loop.
     </para>
    </listitem>

    <listitem>
<!--
Author: Joe Conway <mail@joeconway.com>
Branch: master Release: REL_13_BR [887cdff4d] 2020-05-28 13:19:00 -0400
Branch: REL_12_STABLE [3ccae5445] 2020-05-28 13:19:10 -0400
Branch: REL_11_STABLE [36758c472] 2020-05-28 13:19:16 -0400
Branch: REL_10_STABLE [2cbe3a954] 2020-05-28 13:17:11 -0400
Branch: REL9_6_STABLE [28e2c6eac] 2020-05-28 13:17:20 -0400
Branch: REL9_5_STABLE [bfb9595a7] 2020-05-28 13:17:28 -0400
-->
     <para>
      Ensure the <function>repeat()</function> function can be interrupted
      by query cancel (Joe Conway)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [183926da3] 2020-07-09 16:02:23 -0400
Branch: REL_13_STABLE [601d419b2] 2020-07-09 16:02:23 -0400
Branch: REL_12_STABLE [2564e2d08] 2020-07-09 16:02:23 -0400
Branch: REL_11_STABLE [90b418f81] 2020-07-09 16:02:23 -0400
Branch: REL_10_STABLE [765ad260a] 2020-07-09 16:02:23 -0400
-->
     <para>
      Fix <function>pg_current_logfile()</function> to not include a
      carriage return (<literal>\r</literal>) in its result on Windows
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Joe Conway <mail@joeconway.com>
Branch: master [96d1f423f] 2020-07-04 06:26:53 -0400
Branch: REL_13_STABLE [0025c3a2c] 2020-07-04 06:28:21 -0400
Branch: REL_12_STABLE [015e899a7] 2020-07-04 06:28:44 -0400
Branch: REL_11_STABLE [c2cdaf0cb] 2020-07-04 06:29:03 -0400
Branch: master [1d05627fc] 2020-07-04 13:46:31 -0400
Branch: REL_13_STABLE [c536da177] 2020-07-04 13:47:07 -0400
Branch: REL_12_STABLE [b615b2365] 2020-07-04 13:47:21 -0400
Branch: REL_11_STABLE [1243aa9b2] 2020-07-04 13:47:31 -0400
-->
     <para>
      Ensure that <function>pg_read_file()</function> and related
      functions read until EOF is reached (Joe Conway)
     </para>

     <para>
      Previously, if not given a specific data length to read, these
      functions would stop at whatever file length was reported
      by <function>stat()</function>.  That's unhelpful for pipes and
      other sorts of virtual files.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [77a3be32f] 2020-06-11 17:38:42 -0400
Branch: REL_13_STABLE [ee788ba99] 2020-06-11 17:38:42 -0400
Branch: REL_12_STABLE [4284e1184] 2020-06-11 17:38:42 -0400
Branch: REL_11_STABLE [49e0a42dd] 2020-06-11 17:38:42 -0400
Branch: REL_10_STABLE [411a4626e] 2020-06-11 17:38:42 -0400
Branch: REL9_6_STABLE [36df06e25] 2020-06-11 17:38:42 -0400
-->
     <para>
      Fix mis-handling of <literal>NaN</literal> inputs during parallel
      aggregation on <type>numeric</type>-type columns (Tom Lane)
     </para>

     <para>
      If some partial aggregation workers found only <literal>NaN</literal>s
      while others found only non-<literal>NaN</literal>s, the results
      were combined incorrectly, possibly leading to the wrong overall
      result (i.e., not <literal>NaN</literal> when it should be).
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_13_BR [a9632830b] 2020-06-04 16:42:23 -0400
Branch: REL_12_STABLE [a958b07bc] 2020-06-04 16:42:08 -0400
Branch: REL_11_STABLE [6490376e5] 2020-06-04 16:42:08 -0400
Branch: REL_10_STABLE [b2c64f571] 2020-06-04 16:42:08 -0400
Branch: REL_10_STABLE [9a9ba4c4d] 2020-06-04 17:57:19 -0400
-->
     <para>
      Reject time-of-day values greater than 24 hours (Tom Lane)
     </para>

     <para>
      The intention of the datetime input code is to
      allow <quote>24:00:00</quote> or
      equivalently <quote>23:59:60</quote>, but no larger value.
      However, the range check was miscoded so that it would
      accept <quote>23:59:60.<replaceable>nnn</replaceable></quote> with
      nonzero fractional-second <replaceable>nnn</replaceable>.  In
      timestamp values this would result in wrapping into the first second
      of the next day.  In <type>time</type> and <type>timetz</type>
      values, the stored value would actually be more than 24 hours,
      causing dump/reload failures and possibly other misbehavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [63d2ac23b] 2020-06-22 11:46:41 -0400
Branch: REL_13_STABLE [57f8b9913] 2020-06-22 11:46:41 -0400
Branch: REL_12_STABLE [d3d875518] 2020-06-22 11:46:41 -0400
Branch: REL_11_STABLE [35a8e227e] 2020-06-22 11:46:41 -0400
Branch: REL_10_STABLE [6d9f7a094] 2020-06-22 11:46:41 -0400
Branch: REL9_6_STABLE [bd53ea2b2] 2020-06-22 11:46:41 -0400
Branch: REL9_5_STABLE [dda25c599] 2020-06-22 11:46:41 -0400
-->
     <para>
      Undo double-quoting of index names in <command>EXPLAIN</command>'s
      non-text output formats (Tom Lane, Euler Taveira)
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [2a2494229] 2020-07-25 10:20:39 +0530
Branch: REL_13_STABLE [b15367ae3] 2020-07-25 10:31:19 +0530
Branch: REL_12_STABLE [bdaa84e38] 2020-07-25 10:38:46 +0530
Branch: REL_11_STABLE [603c18b7e] 2020-07-25 10:48:09 +0530
Branch: REL_10_STABLE [f963b5bc0] 2020-07-25 10:57:20 +0530
-->
     <para>
      Fix <command>EXPLAIN</command>'s accounting for resource usage,
      particularly buffer accesses, in parallel workers in a plan
      using <literal>Gather Merge</literal> nodes
      (Jehan-Guillaume de Rorthais)
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [f1fcf2d3b] 2020-07-14 16:55:35 +1200
Branch: REL_13_STABLE [b82730429] 2020-07-14 16:57:41 +1200
Branch: REL_12_STABLE [1231a0b0e] 2020-07-14 17:03:12 +1200
Branch: REL_11_STABLE [d2761b680] 2020-07-14 16:59:57 +1200
Branch: REL_10_STABLE [4e02f88a4] 2020-07-14 17:00:28 +1200
Branch: REL9_6_STABLE [c732df133] 2020-07-14 17:00:57 +1200
Branch: REL9_5_STABLE [e20003fa0] 2020-07-14 17:01:25 +1200
-->
     <para>
      Fix timing of constraint revalidation in <command>ALTER
      TABLE</command> (David Rowley)
     </para>

     <para>
      If <command>ALTER TABLE</command> needs to fully rewrite the table's
      contents (for example, due to change of a column's data type) and
      also needs to scan the table to re-validate foreign keys
      or <literal>CHECK</literal> constraints, it sometimes did things in
      the wrong order, leading to odd errors such as <quote>could not read
      block 0 in file "base/nnnnn/nnnnn": read only 0 of 8192 bytes</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_12_STABLE [798b4faef] 2020-07-20 15:54:24 -0400
Branch: REL_11_STABLE [855195a7b] 2020-07-20 15:54:24 -0400
Branch: REL_12_STABLE [b7103bbe3] 2020-07-21 11:40:46 -0400
Branch: REL_11_STABLE [99b0c5da3] 2020-07-21 11:40:47 -0400
Branch: REL_10_STABLE [ae3d40b0c] 2020-07-21 11:40:47 -0400
-->
     <para>
      Work around incorrect not-null markings for
      <structname>pg_subscription</structname>.<structfield>subslotname</structfield>
      and <structname>pg_subscription_rel</structname>.<structfield>srsublsn</structfield>
      (Tom Lane)
     </para>

     <para>
      The bootstrap catalog data incorrectly marks these two catalog
      columns as always non-null.  There's no easy way to correct that
      mistake in existing installations (though v13 and later will have
      the correct markings).  The main place that depends on that marking
      being correct is JIT-enabled tuple deconstruction, so teach it to
      explicitly ignore the marking for these two columns.  Also adjust
      some C code that accessed <structfield>srsublsn</structfield> without
      checking to see if it's null; a crash from that is improbable but
      perhaps not impossible.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a742ecf9c] 2020-07-13 20:38:20 -0400
Branch: REL_13_STABLE [0734dbc45] 2020-07-13 20:38:20 -0400
Branch: REL_12_STABLE [d3b642ad9] 2020-07-13 20:38:21 -0400
Branch: REL_11_STABLE [3753df8f8] 2020-07-13 20:38:21 -0400
Branch: REL_10_STABLE [6443cd2e2] 2020-07-13 20:38:21 -0400
Branch: REL9_6_STABLE [dc6bb0994] 2020-07-13 20:38:21 -0400
Branch: REL9_5_STABLE [80d8f6d1d] 2020-07-13 20:38:21 -0400
-->
     <para>
      Cope with <literal>LATERAL</literal> references in restriction
      clauses attached to an un-flattened sub-<literal>SELECT</literal> in
      the <literal>FROM</literal> clause (Tom Lane)
     </para>

     <para>
      This oversight could result in assertion failures or crashes at
      query execution.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ca5e93f76] 2020-07-03 19:01:21 -0400
Branch: REL_13_STABLE [9233624b1] 2020-07-03 19:01:21 -0400
Branch: REL_12_STABLE [153c14cdd] 2020-07-03 19:01:21 -0400
Branch: REL_11_STABLE [ef799bdd0] 2020-07-03 19:01:21 -0400
Branch: REL_10_STABLE [5144a40f3] 2020-07-03 19:01:22 -0400
Branch: REL9_6_STABLE [69a3fe6e6] 2020-07-03 19:01:22 -0400
Branch: REL9_5_STABLE [d83d59e42] 2020-07-03 19:01:22 -0400
-->
     <para>
      Avoid believing that a never-analyzed foreign table has zero tuples
      (Tom Lane)
     </para>

     <para>
      This primarily affected the planner's estimate of the number of
      groups that would be obtained by <literal>GROUP BY</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [986529ce4] 2020-07-09 20:13:25 -0400
Branch: REL_13_STABLE [c3a79e719] 2020-07-09 20:13:25 -0400
Branch: REL_12_STABLE [ca5001a36] 2020-07-09 20:13:25 -0400
Branch: REL_11_STABLE [907283576] 2020-07-09 20:13:25 -0400
Branch: REL_10_STABLE [40316dfed] 2020-07-09 20:13:24 -0400
-->
     <para>
      Remove bogus warning about <quote>leftover placeholder tuple</quote>
      in BRIN index de-summarization (&Aacute;lvaro Herrera)
     </para>

     <para>
      The case can occur legitimately after a cancelled vacuum, so warning
      about it is overly noisy.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f7b5988cc] 2020-07-03 17:01:34 -0400
Branch: REL_13_STABLE [cfe89f5e6] 2020-07-03 17:01:34 -0400
Branch: REL_12_STABLE [8b83e0160] 2020-07-03 17:01:34 -0400
Branch: REL_11_STABLE [79ed1d99d] 2020-07-03 17:01:34 -0400
Author: Magnus Hagander <magnus@hagander.net>
Branch: master [ecd9e9f0b] 2020-07-03 15:09:06 +0200
Branch: REL_13_STABLE [1d94c3965] 2020-07-03 15:10:12 +0200
Branch: REL_12_STABLE [28a862e9d] 2020-07-03 15:10:33 +0200
Branch: REL_11_STABLE [4aa02d072] 2020-07-03 15:10:41 +0200
-->
     <para>
      Fix selection of tablespaces for <quote>shared fileset</quote>
      temporary files (Magnus Hagander, Tom Lane)
     </para>

     <para>
      If <varname>temp_tablespaces</varname> is empty or explicitly names
      the database's primary tablespace, such files got placed into
      the <literal>pg_default</literal> tablespace rather than the
      database's primary tablespace as expected.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [a44dd932f] 2020-06-20 17:34:51 +0300
Branch: REL_13_STABLE [39aafc88c] 2020-06-20 18:14:51 +0300
Branch: REL_12_STABLE [396a44a01] 2020-06-20 17:35:55 +0300
Branch: REL_11_STABLE [3f88e2d78] 2020-06-20 17:35:59 +0300
-->
     <para>
      Fix corner-case error in masking of SP-GiST index pages during WAL
      consistency checking (Alexander Korotkov)
     </para>

     <para>
      This could cause false failure reports
      when <varname>wal_consistency_checking</varname> is enabled.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [7897e3bb9] 2020-06-16 16:59:07 +1200
Branch: REL_13_STABLE [3e0b08c40] 2020-06-16 17:00:06 +1200
Branch: REL_12_STABLE [28ee12669] 2020-06-16 17:00:21 +1200
Branch: REL_11_STABLE [9c14d6024] 2020-06-16 17:00:37 +1200
Branch: REL_10_STABLE [95647a1c7] 2020-06-16 17:00:53 +1200
Branch: REL9_6_STABLE [02b71f06b] 2020-06-16 17:01:07 +1200
Branch: REL9_5_STABLE [89020a92f] 2020-06-16 17:01:22 +1200
Branch: master [42dee8b8e] 2020-07-23 21:10:49 +1200
Branch: REL_13_STABLE [6b366190d] 2020-07-23 21:15:01 +1200
Branch: REL_12_STABLE [8bf4e69a7] 2020-07-23 21:17:47 +1200
Branch: REL_11_STABLE [028f0c3a8] 2020-07-23 21:18:02 +1200
Branch: REL_10_STABLE [fac4145bf] 2020-07-23 21:18:13 +1200
Branch: REL9_6_STABLE [47adb2488] 2020-07-23 21:18:25 +1200
Branch: REL9_5_STABLE [3725c8ce4] 2020-07-23 21:18:34 +1200
-->
     <para>
      Improve error handling in the server's <filename>buffile</filename>
      module (Thomas Munro)
     </para>

     <para>
      Fix some cases where I/O errors were indistinguishable from reaching
      EOF, or were not reported at all.  Also add details such as block
      numbers and byte counts where appropriate.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [5940ffb22] 2020-06-11 10:09:47 -0700
Branch: REL_13_STABLE [6df7105e5] 2020-06-11 10:09:45 -0700
Branch: REL_12_STABLE [e620a38c2] 2020-06-11 10:09:43 -0700
Branch: REL_11_STABLE [dd616f2ec] 2020-06-11 10:09:40 -0700
Branch: REL_10_STABLE [19a6e1bc3] 2020-06-11 10:09:37 -0700
Branch: REL9_6_STABLE [e81dc2b7e] 2020-06-11 10:09:35 -0700
Branch: REL9_5_STABLE [c05f6b354] 2020-06-11 10:09:32 -0700
-->
     <para>
      Fix conflict-checking anomalies in <literal>SERIALIZABLE</literal>
      isolation mode (Peter Geoghegan)
     </para>

     <para>
      If a concurrently-inserted tuple was updated by a different
      concurrent transaction, and neither tuple version was visible to the
      current transaction's snapshot, serialization conflict checking
      could draw the wrong conclusions about whether the tuple was relevant
      to the results of the current transaction.  This could allow a
      serializable transaction to commit when it should have failed with a
      serialization error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master Release: REL_13_BR [242dfcbaf] 2020-05-15 16:50:34 -0400
Branch: REL_12_STABLE [1d84751c6] 2020-05-15 16:50:34 -0400
Branch: REL_11_STABLE [37b5c5fde] 2020-05-15 16:50:34 -0400
Branch: REL_10_STABLE [09f2752b0] 2020-05-15 16:50:34 -0400
Branch: REL9_6_STABLE [4649eb919] 2020-05-15 16:50:34 -0400
Branch: REL9_5_STABLE [0a319699d] 2020-05-15 16:50:34 -0400
-->
     <para>
      Avoid repeated marking of dead btree index entries as dead (Masahiko
      Sawada)
     </para>

     <para>
      While functionally harmless, this led to useless WAL traffic when
      checksums are enabled or <varname>wal_log_hints</varname> is on.
     </para>
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master Release: REL_13_BR [303640199] 2019-12-19 09:06:54 -0500
Branch: REL_12_STABLE [bcbc27251] 2020-08-06 13:58:23 -0400
Branch: REL_11_STABLE [f7013683d] 2020-08-06 14:06:24 -0400
Branch: master Release: REL_13_BR [f05798014] 2020-04-26 13:48:33 +0200
Branch: REL_12_STABLE [7c78040f6] 2020-08-06 14:55:00 -0400
Branch: REL_11_STABLE [495a9b1fb] 2020-08-06 15:01:55 -0400
-->
     <para>
      Avoid trouble during cleanup of a non-exclusive backup when JIT
      compilation has been activated during the backup (Robert Haas)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [57cb80630] 2020-06-08 13:57:24 +1200
Branch: REL_13_STABLE [acefa2cca] 2020-06-08 13:58:10 +1200
Branch: REL_12_STABLE [72766ad63] 2020-06-08 13:58:35 +1200
Branch: REL_11_STABLE [48eb6a3c8] 2020-06-08 13:59:57 +1200
Branch: REL_10_STABLE [fd11b842e] 2020-06-08 14:01:07 +1200
Branch: REL9_6_STABLE [644cac32a] 2020-06-08 14:01:51 +1200
Branch: REL9_5_STABLE [09dc17486] 2020-06-08 14:02:20 +1200
-->
     <para>
      Fix failure of some code paths to acquire the correct lock before
      modifying <filename>pg_control</filename> (Nathan Bossart, Fujii
      Masao)
     </para>

     <para>
      This oversight could allow <filename>pg_control</filename> to be
      written out with an inconsistent checksum, possibly causing trouble
      later, including inability to restart the database if it crashed
      before the next <filename>pg_control</filename> update.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_13_BR [ce1c5b9ae] 2020-06-01 14:41:18 +0900
Branch: REL_12_STABLE [894041eb2] 2020-06-01 14:41:25 +0900
Branch: REL_11_STABLE [8bc74490d] 2020-06-01 14:41:32 +0900
Branch: REL_10_STABLE [a36f21620] 2020-06-01 14:41:37 +0900
Branch: REL9_6_STABLE [e2fa9732f] 2020-06-01 14:41:42 +0900
Branch: REL9_5_STABLE [a8c6eb5b4] 2020-06-01 14:41:46 +0900
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_13_BR [e786be5fc] 2020-06-01 10:32:06 +0900
Branch: REL_12_STABLE [95e389b3c] 2020-06-01 10:32:53 +0900
-->
     <para>
      Fix errors in <function>currtid()</function>
      and <function>currtid2()</function> (Michael Paquier)
     </para>

     <para>
      These functions (which are undocumented and used only by ancient
      versions of the ODBC driver) contained coding errors that could
      result in crashes, or in confusing error messages such as <quote>could
      not open file</quote> when applied to a relation having no storage.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_13_BR [c1669fd58] 2020-06-04 10:17:49 +0900
Branch: REL_12_STABLE [03aa25b6e] 2020-06-04 10:18:02 +0900
Branch: REL_11_STABLE [b41a85f53] 2020-06-04 10:18:06 +0900
Branch: REL_10_STABLE [5ed8b4a98] 2020-06-04 10:18:11 +0900
Branch: REL9_6_STABLE [e7a134b58] 2020-06-04 10:18:17 +0900
Branch: REL9_5_STABLE [4a9809e34] 2020-06-04 10:18:27 +0900
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_13_BR [f88bd3139] 2020-06-03 12:36:23 -0400
Branch: REL_12_STABLE [3d474a079] 2020-06-03 12:36:24 -0400
Branch: REL_11_STABLE [7a8cb4a61] 2020-06-03 12:36:00 -0400
Branch: REL_10_STABLE [0c735c686] 2020-06-03 12:36:00 -0400
-->
     <para>
      Avoid calling <function>elog()</function>
      or <function>palloc()</function> while holding a spinlock (Michael
      Paquier, Tom Lane)
     </para>

     <para>
      Logic associated with replication slots had several violations of
      this coding rule.  While the odds of trouble are quite low, an error
      in the called function would lead to a stuck spinlock.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_13_BR [7ccb2f54d] 2020-05-16 18:15:18 +0900
Branch: REL_12_STABLE [b4ded2f22] 2020-05-16 18:16:31 +0900
Branch: REL_11_STABLE [70ae82b9b] 2020-05-16 18:16:37 +0900
Branch: REL_10_STABLE [3acb30b49] 2020-05-16 18:16:41 +0900
-->
     <para>
      Fix assertion in logical replication subscriber to allow use
      of <literal>REPLICA IDENTITY FULL</literal> (Euler Taveira)
     </para>

     <para>
      This was just an incorrect assertion, so it has no impact on
      standard production builds.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [ae3259c55] 2020-06-19 16:46:07 -0400
Branch: REL_13_STABLE [e74559c97] 2020-06-19 16:46:07 -0400
Branch: REL_12_STABLE [5b52008a6] 2020-06-19 16:46:07 -0400
Branch: REL_11_STABLE [2e155d90d] 2020-06-19 16:46:07 -0400
Branch: REL_10_STABLE [411febd53] 2020-06-19 16:46:07 -0400
Branch: REL9_6_STABLE [83762d0a9] 2020-06-19 16:46:07 -0400
Branch: REL9_5_STABLE [bbbce94dc] 2020-06-19 16:46:06 -0400
-->
     <para>
      Report out-of-disk-space errors properly
      in <application>pg_dump</application>
      and <application>pg_basebackup</application> (Justin Pryzby, Tom
      Lane, &Aacute;lvaro Herrera)
     </para>

     <para>
      Some code paths could produce silly reports like <quote>could not
      write file: Success</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ea9125304] 2020-07-11 13:36:50 -0400
Branch: REL_13_STABLE [bc9aaac1a] 2020-07-11 13:36:50 -0400
Branch: REL_12_STABLE [5fea14f4b] 2020-07-11 13:36:50 -0400
Branch: REL_11_STABLE [4fdc559c8] 2020-07-11 13:36:50 -0400
Branch: REL_10_STABLE [2d43c3057] 2020-07-11 13:36:51 -0400
Branch: REL9_6_STABLE [303322c5a] 2020-07-11 13:36:51 -0400
Branch: REL9_5_STABLE [db820b9a9] 2020-07-11 13:36:51 -0400
-->
     <para>
      Fix parallel restore of tables having both table-level privileges
      and per-column privileges (Tom Lane)
     </para>

     <para>
      The table-level privilege grants have to be applied first, but a
      parallel restore did not reliably order them that way; this could
      lead to <quote>tuple concurrently updated</quote> errors, or to
      disappearance of some per-column privilege grants.  The fix for this
      is to include dependency links between such entries in the archive
      file, meaning that a new dump has to be taken with a
      corrected <application>pg_dump</application> to ensure that the
      problem will not recur.
     </para>
    </listitem>

    <listitem>
<!--
Author: Bruce Momjian <bruce@momjian.us>
Branch: master [3f5863e15] 2020-06-15 20:59:40 -0400
Branch: REL_13_STABLE [a2c72851a] 2020-06-15 20:59:40 -0400
Branch: REL_12_STABLE [8e933596c] 2020-06-15 20:59:40 -0400
Branch: REL_11_STABLE [aeb785c0f] 2020-06-15 20:59:40 -0400
Branch: REL_10_STABLE [9170da96d] 2020-06-15 20:59:40 -0400
Branch: REL9_6_STABLE [5c1bfd627] 2020-06-15 20:59:40 -0400
Branch: REL9_5_STABLE [39c698cff] 2020-06-15 20:59:40 -0400
-->
     <para>
      Ensure that <application>pg_upgrade</application> runs
      with <varname>vacuum_defer_cleanup_age</varname> set to zero in the
      target cluster (Bruce Momjian)
     </para>

     <para>
      If the target cluster's configuration has been modified to
      set <varname>vacuum_defer_cleanup_age</varname> to a nonzero value,
      that prevented freezing of the system catalogs from working properly,
      which caused the upgrade to fail in confusing ways.  Ensure that any
      such setting is overridden for the duration of the upgrade.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master Release: REL_13_BR [cee9cadb5] 2020-05-13 20:42:09 -0700
Branch: REL_12_STABLE [73a5c0d81] 2020-05-13 20:42:24 -0700
Branch: REL_11_STABLE [a26789452] 2020-05-13 20:42:37 -0700
Branch: REL_10_STABLE [970ed4493] 2020-05-13 20:42:42 -0700
Branch: REL9_6_STABLE [1ab5b672e] 2020-05-13 20:42:46 -0700
Branch: REL9_5_STABLE [595b4115c] 2020-05-13 20:42:49 -0700
Author: Noah Misch <noah@leadboat.com>
Branch: master Release: REL_13_BR [8222a9d9a] 2020-05-13 20:42:09 -0700
Branch: REL_12_STABLE [7130be8aa] 2020-05-13 20:42:23 -0700
Branch: REL_11_STABLE [357012e17] 2020-05-13 20:42:34 -0700
Branch: REL_10_STABLE [a28db2081] 2020-05-13 20:42:42 -0700
-->
     <para>
      Fix <application>pg_recvlogical</application> to drain pending
      messages before exiting (Noah Misch)
     </para>

     <para>
      Without this, the replication sender might detect a send failure and
      exit without making the expected final update to the replication
      slot's LSN position.  That led to re-transmitting data after the
      next connection.  It was also possible to miss error messages sent
      after the last data that <application>pg_recvlogical</application>
      wants to consume.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [1d09fb1f0] 2020-07-15 15:17:23 +0900
Branch: REL_13_STABLE [5f89bb4cf] 2020-07-15 15:17:32 +0900
Branch: REL_12_STABLE [92927477f] 2020-07-15 15:17:36 +0900
Branch: REL_11_STABLE [c6d33d144] 2020-07-15 15:17:44 +0900
Branch: REL_10_STABLE [23924feca] 2020-07-15 15:17:49 +0900
Branch: REL9_6_STABLE [14fe80413] 2020-07-15 15:17:55 +0900
Branch: REL9_5_STABLE [18ec25412] 2020-07-15 15:18:01 +0900
-->
     <para>
      Fix <application>pg_rewind</application>'s handling of just-deleted
      files in the source data directory (Justin Pryzby, Michael Paquier)
     </para>

     <para>
      When working with an on-line source database, concurrent file
      deletions are possible, but <application>pg_rewind</application>
      would get confused if deletion happened between seeing a file's
      directory entry and examining it with <function>stat()</function>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [932f9fb50] 2020-07-16 15:52:37 +0900
Branch: REL_13_STABLE [beebbb39d] 2020-07-16 15:52:54 +0900
Branch: REL_12_STABLE [cd113a0b4] 2020-07-16 15:52:58 +0900
Branch: REL_11_STABLE [de559c2b0] 2020-07-16 15:53:01 +0900
Branch: REL_10_STABLE [800ec48f5] 2020-07-16 15:53:04 +0900
Branch: REL9_6_STABLE [a452b239e] 2020-07-16 15:53:09 +0900
Branch: REL9_5_STABLE [ab7ce97ec] 2020-07-16 15:53:12 +0900
-->
     <para>
      Make <application>pg_test_fsync</application> use binary I/O mode on
      Windows (Michael Paquier)
     </para>

     <para>
      Previously it wrote the test file in text mode, which is not an
      accurate reflection of <productname>PostgreSQL</productname>'s
      actual usage.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master Release: REL_13_BR [34dae902c] 2020-05-14 12:44:44 +0300
Branch: REL_12_STABLE [ae1f9b0a9] 2020-05-14 12:46:08 +0300
Branch: REL_11_STABLE [b9a45d8db] 2020-05-14 12:46:15 +0300
-->
     <para>
      Fix <filename>contrib/amcheck</filename> to not complain about
      deleted index pages that are empty (Alexander Korotkov)
     </para>

     <para>
      This state of affairs is normal during WAL replay.
     </para>
    </listitem>

    <listitem>
<!--
Author: Joe Conway <mail@joeconway.com>
Branch: master Release: REL_13_BR [9003b76e1] 2020-05-28 13:44:54 -0400
Branch: REL_12_STABLE [e8eb48595] 2020-05-28 13:44:59 -0400
Branch: REL_11_STABLE [49a00e07c] 2020-05-28 13:45:02 -0400
Branch: REL_10_STABLE [43d3d7318] 2020-05-28 13:45:06 -0400
Branch: REL9_6_STABLE [43d7934a3] 2020-05-28 13:45:11 -0400
Branch: REL9_5_STABLE [f140d9b6e] 2020-05-28 13:45:15 -0400
-->
     <para>
      Fix failure to initialize local state correctly
      in <filename>contrib/dblink</filename> (Joe Conway)
     </para>

     <para>
      With the right combination of circumstances, this could lead to
      <function>dblink_close()</function> issuing an unexpected
      remote <command>COMMIT</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b9b610577] 2020-07-23 17:20:01 -0400
Branch: REL_13_STABLE [7dab4569d] 2020-07-23 17:20:01 -0400
Branch: REL_12_STABLE [3d4a77815] 2020-07-23 17:20:02 -0400
Branch: REL_11_STABLE [475c69c97] 2020-07-23 17:20:03 -0400
Branch: REL_10_STABLE [d8ec3b126] 2020-07-23 17:20:03 -0400
Branch: REL9_6_STABLE [ccf964a80] 2020-07-23 17:20:04 -0400
Branch: REL9_5_STABLE [d0519e9fe] 2020-07-23 17:20:04 -0400
-->
     <para>
      Fix <filename>contrib/pgcrypto</filename>'s misuse
      of <function>deflate()</function> (Tom Lane)
     </para>

     <para>
      The <function>pgp_sym_encrypt</function> functions could produce
      incorrect compressed data due to mishandling
      of <application>zlib</application>'s API requirements.  We have no
      reports of this error manifesting with
      stock <application>zlib</application>, but it can be seen when using
      IBM's <application>zlibNX</application> implementation.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a3ab7a707] 2020-07-27 15:58:32 +0900
Branch: REL_13_STABLE [0caf1fc6e] 2020-07-27 15:58:54 +0900
Branch: REL_12_STABLE [5bd087eb5] 2020-07-27 15:58:59 +0900
Branch: REL_11_STABLE [202fc4ca5] 2020-07-27 15:59:03 +0900
Branch: REL_10_STABLE [9729f9979] 2020-07-27 15:59:07 +0900
Branch: REL9_6_STABLE [8a60f541f] 2020-07-27 15:59:13 +0900
Branch: REL9_5_STABLE [aaa132a65] 2020-07-27 15:59:22 +0900
Branch: REL_11_STABLE [1785ac8ad] 2020-08-02 11:00:12 -0400
Branch: REL_10_STABLE [e1b4135cf] 2020-08-02 11:00:12 -0400
-->
     <para>
      Fix corner case in decompression logic
      in <filename>contrib/pgcrypto</filename>'s
      <function>pgp_sym_decrypt</function> functions (Kyotaro Horiguchi,
      Michael Paquier)
     </para>

     <para>
      A compressed stream can validly end with an empty packet, but the
      decompressor failed to handle this and would complain about corrupt
      data.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_11_STABLE [c6d43ffab] 2020-07-15 22:05:12 -0400
Branch: REL_10_STABLE [0140dec18] 2020-07-15 22:05:12 -0400
Branch: REL9_6_STABLE [9e043d93c] 2020-07-15 22:05:13 -0400
Branch: REL9_5_STABLE [d61dcccaf] 2020-07-15 22:05:13 -0400
-->
     <para>
      Use POSIX-standard <function>strsignal()</function> in place of the
      BSD-ish <literal>sys_siglist[]</literal> (Tom Lane)
     </para>

     <para>
      This avoids build failures with very recent versions
      of <application>glibc</application>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master Release: REL_13_BR [a16915545] 2020-05-14 09:24:33 +0530
Branch: REL_12_STABLE [98171e59a] 2020-05-14 09:34:46 +0530
Branch: REL_11_STABLE [1fbfc3d8a] 2020-05-14 09:39:04 +0530
Branch: REL_10_STABLE [33b772801] 2020-05-14 09:44:21 +0530
Branch: REL9_6_STABLE [a1466e194] 2020-05-14 09:50:10 +0530
Branch: REL9_5_STABLE [650952aeb] 2020-05-14 09:55:04 +0530
-->
     <para>
      Support building our NLS code with Microsoft Visual Studio 2015 or
      later (Juan Jos&eacute; Santamar&iacute;a Flecha, Davinder Singh,
      Amit Kapila)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_13_BR [d2a995990] 2020-05-21 14:41:15 +0900
Branch: REL_12_STABLE [089baec6f] 2020-05-21 14:41:30 +0900
Branch: REL_11_STABLE [bb24af50d] 2020-05-21 14:41:33 +0900
Branch: REL_10_STABLE [8dfc7d888] 2020-05-21 14:41:36 +0900
Branch: REL9_6_STABLE [57dc672c2] 2020-05-21 14:41:40 +0900
Branch: REL9_5_STABLE [8de137017] 2020-05-21 14:41:43 +0900
-->
     <para>
      Avoid possible failure of our MSVC install script when there is a
      file named <filename>configure</filename> several levels above the
      source code tree (Arnold M&uuml;ller)
     </para>

     <para>
      This could confuse some logic that looked
      for <filename>configure</filename> to identify the top level of the
      source tree.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11-8">
  <title>Release 11.8</title>

  <formalpara>
  <title>Release date:</title>
  <para>2020-05-14</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.7.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.8</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 11.6,
    see <xref linkend="release-11-6"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [501e41dd3] 2020-05-08 08:39:17 +0200
Branch: REL_12_STABLE [bf7233ee4] 2020-05-08 09:18:15 +0200
Branch: REL_11_STABLE [03a8a5f2d] 2020-05-08 09:30:57 +0200
-->
     <para>
      Propagate <command>ALTER TABLE ... SET STORAGE</command> to indexes
      (Peter Eisentraut)
     </para>

     <para>
      Non-expression index columns have always copied
      the <structfield>attstorage</structfield> property of their table
      column at creation.  Update them when <command>ALTER TABLE ... SET
      STORAGE</command> is done, to maintain consistency.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a40caf5f8] 2020-04-06 11:03:49 +0900
Branch: REL_12_STABLE [3e62dd3a9] 2020-04-06 11:05:47 +0900
Branch: REL_11_STABLE [41faafbd7] 2020-04-06 11:05:54 +0900
Branch: REL_10_STABLE [cef2b8d52] 2020-04-06 11:05:57 +0900
Branch: REL9_6_STABLE [61a161fe4] 2020-04-06 11:06:04 +0900
Branch: REL9_5_STABLE [3f77a6702] 2020-04-06 11:06:07 +0900
-->
     <para>
      Preserve the <structfield>indisclustered</structfield> setting of
      indexes rewritten by <command>ALTER TABLE</command> (Amit Langote,
      Justin Pryzby)
     </para>

     <para>
      Previously, <command>ALTER TABLE</command> lost track of which index
      had been used for <command>CLUSTER</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [1cc9c2412] 2020-03-13 11:57:06 +0100
Branch: REL_12_STABLE [c9ef507e8] 2020-03-13 11:57:20 +0100
Branch: REL_11_STABLE [15cbbf81a] 2020-03-13 12:24:44 +0100
Branch: REL_10_STABLE [02530da73] 2020-03-13 13:03:28 +0100
Branch: REL9_6_STABLE [2f0dd9d93] 2020-03-13 13:21:05 +0100
Branch: REL9_5_STABLE [c15d35041] 2020-03-13 13:21:30 +0100
-->
     <para>
      Preserve the replica identity properties of indexes rewritten
      by <command>ALTER TABLE</command> (Quan Zongliang, Peter Eisentraut)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [5be594caf] 2020-05-06 12:29:41 -0400
Branch: REL_12_STABLE [2eea49471] 2020-05-06 12:29:41 -0400
Branch: REL_11_STABLE [59273a7ce] 2020-05-06 12:29:41 -0400
Branch: REL_10_STABLE [4d21263ff] 2020-05-06 12:29:41 -0400
Branch: REL9_6_STABLE [2bf56f50e] 2020-05-06 12:29:41 -0400
Branch: REL9_5_STABLE [91d97462c] 2020-05-06 12:29:41 -0400
-->
     <para>
      Lock objects sooner during <command>DROP OWNED BY</command>
      (&Aacute;lvaro Herrera)
     </para>

     <para>
      This avoids failures in race-condition cases where another session is
      deleting some of the same objects.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [d9a4cce29] 2020-04-25 05:09:30 +0100
Branch: REL_12_STABLE [d0360632d] 2020-04-25 05:10:24 +0100
Branch: REL_11_STABLE [0f4970d1a] 2020-04-25 05:10:19 +0100
Branch: REL_10_STABLE [287f6d2d9] 2020-04-25 05:10:13 +0100
Branch: REL9_6_STABLE [86b7a4e6f] 2020-04-25 05:10:10 +0100
Branch: REL9_5_STABLE [b3824ca22] 2020-04-25 05:10:05 +0100
-->
     <para>
      Fix error-case processing for <command>CREATE ROLE ... IN
      ROLE</command> (Andrew Gierth)
     </para>

     <para>
      Some error cases would be reported as <quote>unexpected node
      type</quote> or the like, instead of the intended message.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [afccd76f1] 2020-04-21 13:57:00 -0400
Branch: REL_12_STABLE [e26c8a6b3] 2020-04-21 13:57:00 -0400
Branch: REL_11_STABLE [0b83c4721] 2020-04-21 13:57:00 -0400
-->
     <para>
      Ensure that when a partition is detached, any triggers cloned from
      its formerly-parent table are removed (Justin Pryzby)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [501b01879] 2020-04-01 14:49:49 -0400
Branch: REL_12_STABLE [76ea60696] 2020-04-01 14:49:49 -0400
Branch: REL_11_STABLE [76ddc88f4] 2020-04-01 14:49:49 -0400
-->
     <para>
      Ensure that unique indexes over partitioned tables match the
      equality semantics of the partitioning key (Guancheng Luo)
     </para>

     <para>
      This would only be an issue with index opclasses that have unusual
      notions of equality, but it's wrong in theory, so check.
     </para>
    </listitem>

    <listitem>
<!--
Author: Magnus Hagander <magnus@hagander.net>
Branch: master [7e4e57474] 2020-04-20 12:53:40 +0200
Branch: REL_12_STABLE [212e712a5] 2020-04-20 12:56:26 +0200
Branch: REL_11_STABLE [3d4652f67] 2020-04-20 12:57:12 +0200
Branch: REL_10_STABLE [d0bb66572] 2020-04-20 12:57:24 +0200
-->
     <para>
      Ensure that members of the <literal>pg_read_all_stats</literal> role
      can read all statistics views, as expected (Magnus Hagander)
     </para>

     <para>
      The functions underlying
      the <structname>pg_stat_progress_*</structname> views had not gotten
      this memo.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [baf17ad9d] 2020-04-24 12:02:36 -0400
Branch: REL_12_STABLE [64e49a67e] 2020-04-24 12:02:36 -0400
Branch: REL_11_STABLE [776f6d3d0] 2020-04-24 12:02:36 -0400
-->
     <para>
      Repair performance regression in
      <structname>information_schema</structname>.<structname>triggers</structname>
      view (Tom Lane)
     </para>

     <para>
      This patch redefines that view so that an
      outer <literal>WHERE</literal> clause constraining the table name
      can be pushed down into the view, allowing its calculations to be
      done only for triggers belonging to the table of interest rather
      than all triggers in the database.  In a database with many triggers
      this would make a significant speed difference for queries of that
      form.  Since things worked that way before v11, this is a potential
      performance regression.  Users who find this to be a problem can fix
      it by replacing the view definition (or, perhaps, just deleting and
      reinstalling the whole <structname>information_schema</structname>
      schema).
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e81e5741a] 2020-04-27 12:21:04 -0400
Branch: REL_12_STABLE [18f7e856c] 2020-04-27 12:21:04 -0400
Branch: REL_11_STABLE [98a4d6950] 2020-04-27 12:21:04 -0400
Branch: REL_10_STABLE [072a86327] 2020-04-27 12:21:04 -0400
Branch: REL9_6_STABLE [22dcb6c20] 2020-04-27 12:21:04 -0400
-->
     <para>
      Fix full text search to handle NOT above a phrase search correctly
      (Tom Lane)
     </para>

     <para>
      Queries such as <literal>!(foo&lt;-&gt;bar)</literal> failed to find
      matching rows when implemented as a GiST or GIN index search.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [db89f0e3a] 2020-05-07 15:59:51 -0400
Branch: REL_12_STABLE [e1d70ba43] 2020-05-07 15:59:51 -0400
Branch: REL_11_STABLE [5db48808c] 2020-05-07 15:59:52 -0400
Branch: REL_10_STABLE [26cf16a93] 2020-05-07 15:59:52 -0400
Branch: REL9_6_STABLE [7c9d9aa5c] 2020-05-07 15:59:52 -0400
-->
     <para>
      Fix full text search for cases where a phrase search includes an
      item with both prefix matching and a weight restriction (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c9b0c678d] 2020-04-09 13:19:23 -0400
Branch: REL_12_STABLE [841378947] 2020-04-09 13:19:23 -0400
Branch: REL_11_STABLE [91be1d190] 2020-04-09 13:19:23 -0400
Branch: REL_10_STABLE [5f7247b3b] 2020-04-09 13:19:23 -0400
Branch: REL9_6_STABLE [c81de3a82] 2020-04-09 13:19:23 -0400
Branch: master [2e0e409e3] 2020-04-09 15:38:43 -0400
Branch: REL_12_STABLE [07453e9e3] 2020-04-09 15:38:52 -0400
Branch: REL_11_STABLE [d9a3fe4c5] 2020-04-09 15:38:57 -0400
Branch: REL_10_STABLE [9be664d71] 2020-04-09 15:39:02 -0400
Branch: REL9_6_STABLE [c2599b93d] 2020-04-09 15:39:09 -0400
Branch: master [b10f8bb9f] 2020-04-09 12:36:59 -0400
Branch: REL_12_STABLE [1306edeae] 2020-04-09 12:36:59 -0400
Branch: REL_11_STABLE [ff081d6bb] 2020-04-09 12:37:00 -0400
Branch: REL_10_STABLE [afab39986] 2020-04-09 12:37:00 -0400
Branch: REL9_6_STABLE [638519156] 2020-04-09 12:37:00 -0400
-->
     <para>
      Fix <function>ts_headline()</function> to make better headline
      selections when working with phrase queries (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e41955faf] 2020-04-03 13:15:45 -0400
Branch: REL_12_STABLE [05f4a8818] 2020-04-03 13:15:30 -0400
Branch: REL_11_STABLE [0912fb39c] 2020-04-03 13:15:30 -0400
Branch: REL_10_STABLE [44c763fe9] 2020-04-03 13:15:30 -0400
Branch: REL9_6_STABLE [49b0d13d7] 2020-04-03 13:15:30 -0400
Branch: REL9_5_STABLE [8150f7813] 2020-04-03 13:15:30 -0400
Branch: REL9_5_STABLE [e82b6e00a] 2020-04-06 12:29:54 -0400
-->
     <para>
      Fix bugs in <varname>gin_fuzzy_search_limit</varname> processing
      (Ad&eacute; Heyward, Tom Lane)
     </para>

     <para>
      A small value of <varname>gin_fuzzy_search_limit</varname> could
      result in unexpected slowness due to unintentionally rescanning the
      same index page many times.  Another code path failed to apply the
      intended filtering at all, possibly returning too many values.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [41a194f49] 2020-04-07 20:50:28 -0400
Branch: REL_12_STABLE [35d1eefb2] 2020-04-07 20:50:02 -0400
Branch: REL_11_STABLE [5fae66410] 2020-04-07 20:50:02 -0400
Branch: REL_10_STABLE [4c7a311a2] 2020-04-07 20:50:02 -0400
Branch: REL9_6_STABLE [049e9f48e] 2020-04-07 20:50:02 -0400
Branch: REL9_5_STABLE [ebd194ac5] 2020-04-07 20:50:02 -0400
-->
     <para>
      Allow input of type <type>circle</type> to accept the format
      <quote><literal>(<replaceable>x</replaceable>,<replaceable>y</replaceable>),<replaceable>r</replaceable></literal></quote>
      as the documentation says it does (David Zhang)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [26a944cf2] 2020-04-07 15:57:58 -0400
Branch: REL_12_STABLE [6e6b74a20] 2020-04-07 16:30:55 -0400
Branch: REL_11_STABLE [5d79fc60c] 2020-04-07 16:30:55 -0400
Branch: REL_10_STABLE [889786e0e] 2020-04-07 16:30:55 -0400
Branch: REL9_6_STABLE [e40c4d491] 2020-04-07 16:30:55 -0400
Branch: REL9_5_STABLE [dbb121038] 2020-04-07 16:30:55 -0400
-->
     <para>
      Make the <function>get_bit()</function>
      and <function>set_bit()</function> functions cope
      with <type>bytea</type> strings longer than 256MB (Movead Li)
     </para>

     <para>
      Since the bit number argument is only <type>int4</type>, it's
      impossible to use these functions to access bits beyond the first
      256MB of a long <type>bytea</type>.  We'll widen the argument
      to <type>int8</type> in v13, but in the meantime, allow these
      functions to work on the initial substring of a
      long <type>bytea</type>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [82e801852] 2020-03-31 12:57:55 -0400
Branch: REL_12_STABLE [ee40e8975] 2020-03-31 12:57:55 -0400
Branch: REL_11_STABLE [5b22ff764] 2020-03-31 12:57:55 -0400
Branch: REL_10_STABLE [83f7761d8] 2020-03-31 12:57:55 -0400
-->
     <para>
      Ignore file-not-found errors in <function>pg_ls_waldir()</function>
      and allied functions (Tom Lane)
     </para>

     <para>
      This prevents a race condition failure if a file is removed between
      when we see its directory entry and when we attempt
      to <function>stat()</function> it.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [085b6b667] 2020-03-11 15:27:59 -0400
Branch: REL_12_STABLE [3c8864fc1] 2020-03-11 15:27:59 -0400
Branch: REL_11_STABLE [63b51dfec] 2020-03-11 15:27:59 -0400
Branch: REL_10_STABLE [05283dd5b] 2020-03-11 15:28:00 -0400
Branch: master [a029a0641] 2020-03-11 18:24:11 -0400
Branch: REL_12_STABLE [630590d6f] 2020-03-11 18:24:13 -0400
Branch: REL_11_STABLE [13f353b0e] 2020-03-11 18:24:14 -0400
Branch: REL_10_STABLE [064e029e6] 2020-03-11 18:24:15 -0400
Branch: master [b4570d33a] 2020-03-16 21:05:52 -0400
Branch: REL_12_STABLE [2a89455aa] 2020-03-16 21:05:53 -0400
Branch: REL_11_STABLE [819d55257] 2020-03-16 21:05:54 -0400
Branch: REL_10_STABLE [5e4a0b719] 2020-03-16 21:05:55 -0400
Branch: REL9_6_STABLE [cd6a05187] 2020-03-16 21:05:56 -0400
Branch: REL9_5_STABLE [da254148f] 2020-03-16 21:05:29 -0400
-->
     <para>
      Avoid possibly leaking an open-file descriptor for a directory
      in <function>pg_ls_dir()</function>,
      <function>pg_timezone_names()</function>,
      <function>pg_tablespace_databases()</function>, and allied functions
      (Justin Pryzby)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4dbcb3f84] 2020-03-14 14:42:22 -0400
Branch: REL_12_STABLE [390984f92] 2020-03-14 14:42:22 -0400
Branch: REL_11_STABLE [540ef37cc] 2020-03-14 14:42:22 -0400
Branch: REL_10_STABLE [61d14971d] 2020-03-14 14:42:22 -0400
Branch: REL9_6_STABLE [30e491653] 2020-03-14 14:42:22 -0400
Branch: REL9_5_STABLE [a1ef0f373] 2020-03-14 14:42:22 -0400
-->
     <para>
      Fix polymorphic-function type resolution to correctly infer the
      actual type of an <type>anyarray</type> output when given only
      an <type>anyrange</type> input (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [58c47ccff] 2020-02-29 13:48:09 -0500
Branch: REL_12_STABLE [96d783ae5] 2020-02-29 13:48:10 -0500
Branch: REL_11_STABLE [9eb6b652a] 2020-02-29 13:48:10 -0500
-->
     <para>
      Avoid leakage of a hashed subplan's hash tables across multiple
      executions (Andreas Karlsson, Tom Lane)
     </para>

     <para>
      This mistake could result in severe memory bloat if a query
      re-executed a hashed subplan enough times.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d12bdba77] 2020-04-21 15:58:42 -0400
Branch: REL_12_STABLE [5a4efd100] 2020-04-21 15:58:42 -0400
Branch: REL_11_STABLE [56259c377] 2020-04-21 15:58:42 -0400
Branch: REL_10_STABLE [e6c17c85a] 2020-04-21 15:58:42 -0400
Branch: REL9_6_STABLE [5c1c27eef] 2020-04-21 15:58:43 -0400
Branch: REL9_5_STABLE [36714f8ca] 2020-04-21 15:58:43 -0400
-->
     <para>
      Avoid unlikely crash when <command>REINDEX</command> is terminated
      by a session-shutdown signal (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: REL_11_STABLE [d35631e37] 2020-03-23 14:52:18 -0700
Branch: REL_10_STABLE [44170a580] 2020-03-23 14:52:18 -0700
-->
     <para>
      Fix low-probability crash after constraint violation errors in
      partitioned tables (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5c27bce7f] 2020-04-11 12:29:06 -0400
Branch: REL_12_STABLE [8ffb86644] 2020-04-11 12:29:06 -0400
Branch: REL_11_STABLE [f3d06e524] 2020-04-11 12:29:06 -0400
Branch: REL_10_STABLE [1e6bb6125] 2020-04-11 12:29:06 -0400
Branch: REL9_6_STABLE [242ca479f] 2020-04-11 12:29:06 -0400
Branch: REL9_5_STABLE [30ce86367] 2020-04-11 12:29:06 -0400
-->
     <para>
      Prevent printout of possibly-incorrect hash join table statistics
      in <command>EXPLAIN</command> (Konstantin Knizhnik, Tom Lane, Thomas
      Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [007491979] 2020-02-19 20:37:26 +0900
Branch: REL_12_STABLE [16e6c968b] 2020-02-19 20:38:38 +0900
Branch: REL_11_STABLE [414ed1ca2] 2020-02-19 20:39:02 +0900
Branch: REL_10_STABLE [79f344d52] 2020-02-19 20:39:37 +0900
Branch: REL9_6_STABLE [307c27037] 2020-02-19 20:40:38 +0900
Branch: REL9_5_STABLE [4a3f164b7] 2020-02-19 20:43:59 +0900
-->
     <para>
      Fix reporting of elapsed time for heap truncation steps
      in <command>VACUUM VERBOSE</command> (Tatsuhito Kasahara)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [73a076b03] 2020-05-01 09:51:09 -0700
Branch: REL_12_STABLE [40708eaaf] 2020-05-01 09:51:08 -0700
Branch: REL_11_STABLE [d3944c364] 2020-05-01 09:51:06 -0700
-->
     <para>
      Fix possible undercounting of deleted B-tree index pages
      in <command>VACUUM VERBOSE</command> output (Peter Geoghegan)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [b0229f26d] 2020-05-01 08:39:52 -0700
Branch: REL_12_STABLE [05b73261c] 2020-05-01 08:39:51 -0700
Branch: REL_11_STABLE [e4fa6c929] 2020-05-01 08:39:49 -0700
Branch: master [69cf853fe] 2020-05-01 12:19:44 -0700
Branch: REL_12_STABLE [e1477db92] 2020-05-01 12:19:42 -0700
Branch: REL_11_STABLE [573478564] 2020-05-01 12:19:39 -0700
-->
     <para>
      Fix wrong bookkeeping for oldest deleted page in a B-tree index
      (Peter Geoghegan)
     </para>

     <para>
      This could cause subtly wrong decisions about
      when <command>VACUUM</command> can skip an index cleanup scan;
      although it appears there may be no significant user-visible effects
      from that.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [f2ff20359] 2020-05-08 10:36:40 +0900
Branch: REL_12_STABLE [a354d0153] 2020-05-08 10:38:01 +0900
Branch: REL_11_STABLE [cc534fc3b] 2020-05-08 10:38:45 +0900
Branch: REL_10_STABLE [3a48740e8] 2020-05-08 10:39:08 +0900
-->
     <para>
      Ensure that TimelineHistoryRead and TimelineHistoryWrite wait states
      are reported in all code paths that read or write timeline history
      files (Masahiro Ikeda)
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [17d3fcdc3] 2020-03-10 00:14:43 +0900
Branch: REL_12_STABLE [82c04e483] 2020-03-10 00:15:25 +0900
Branch: REL_11_STABLE [e54183cb0] 2020-03-10 00:16:48 +0900
Branch: REL_10_STABLE [e9c4eaacd] 2020-03-10 00:18:24 +0900
Branch: REL9_6_STABLE [d1b414e7e] 2020-03-10 00:19:57 +0900
Branch: REL9_5_STABLE [c9a47b81e] 2020-03-10 00:23:22 +0900
-->
     <para>
      Avoid possibly showing <quote>waiting</quote> twice in a process's
      PS status (Masahiko Sawada)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [80d76be51] 2020-02-28 20:28:34 -0500
Branch: REL_12_STABLE [d7684c38a] 2020-02-28 20:28:34 -0500
Branch: REL_11_STABLE [7ea20a2bc] 2020-02-28 20:28:34 -0500
-->
     <para>
      Avoid failure if autovacuum tries to access a just-dropped temporary
      schema (Tom Lane)
     </para>

     <para>
      This hazard only arises if a superuser manually drops a temporary
      schema; which isn't normal practice, but should work.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [4e87c4836] 2020-04-24 08:48:28 +0900
Branch: REL_12_STABLE [22db5269b] 2020-04-24 08:48:35 +0900
Branch: REL_11_STABLE [2d24ca00b] 2020-04-24 08:48:40 +0900
Branch: REL_10_STABLE [02657c421] 2020-04-24 08:48:45 +0900
Branch: REL9_6_STABLE [c2d8ae0df] 2020-04-24 08:48:51 +0900
Branch: REL9_5_STABLE [9eff11653] 2020-04-24 08:48:55 +0900
Branch: master [f9c1b8dba] 2020-04-24 11:33:41 +0900
Branch: REL_12_STABLE [26057550d] 2020-04-24 11:33:58 +0900
Branch: REL_11_STABLE [0d04e9d76] 2020-04-24 11:34:03 +0900
Branch: REL_10_STABLE [3d9cae5ad] 2020-04-24 11:34:06 +0900
Branch: REL9_6_STABLE [11f004699] 2020-04-24 11:34:11 +0900
Branch: REL9_5_STABLE [a4726998d] 2020-04-24 11:34:16 +0900
-->
     <para>
      Avoid premature recycling of WAL segments during crash recovery
      (Jehan-Guillaume de Rorthais)
     </para>

     <para>
      WAL segments that become ready to be archived during crash recovery
      were potentially recycled without being archived.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [4bd0ad9e4] 2020-04-08 00:49:29 +0900
Branch: REL_12_STABLE [683e0ef55] 2020-05-09 12:00:27 +0900
Branch: REL_11_STABLE [dcd1569fb] 2020-05-09 12:04:51 +0900
Branch: REL_10_STABLE [660f1fc40] 2020-05-09 12:11:11 +0900
Branch: REL9_6_STABLE [70b597974] 2020-05-09 12:16:37 +0900
Branch: REL9_5_STABLE [e3f5b148e] 2020-05-09 12:19:47 +0900
-->
     <para>
      Avoid scanning irrelevant timelines during archive recovery (Kyotaro
      Horiguchi)
     </para>

     <para>
      This can eliminate many attempts to fetch non-existent WAL files from
      archive storage, which is helpful if archive access is slow.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [e3ff789ac] 2020-02-19 08:15:49 +0530
Branch: REL_12_STABLE [59112f235] 2020-02-19 08:27:15 +0530
Branch: REL_11_STABLE [bff456d7a] 2020-02-19 08:35:16 +0530
Branch: REL_10_STABLE [b448aa441] 2020-02-19 08:44:16 +0530
Branch: REL9_6_STABLE [59c1a03f0] 2020-02-19 08:52:08 +0530
Branch: REL9_5_STABLE [05555f7aa] 2020-02-19 08:59:18 +0530
-->
     <para>
      Remove bogus <quote>subtransaction logged without previous top-level
      txn record</quote> error check in logical decoding (Arseny Sher,
      Amit Kapila)
     </para>

     <para>
      This condition is legitimately reachable in various scenarios, so
      remove the check.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [49bf81536] 2020-03-26 13:29:20 +0100
Branch: REL_12_STABLE [223e9c77d] 2020-03-26 13:31:07 +0100
Branch: REL_11_STABLE [ba4cc05ce] 2020-03-26 13:51:07 +0100
Branch: REL_10_STABLE [f36a10434] 2020-03-26 13:51:22 +0100
Branch: REL9_6_STABLE [2d8597ba6] 2020-03-26 14:01:56 +0100
Branch: REL9_5_STABLE [ce28a43ff] 2020-03-26 14:08:15 +0100
Branch: master [a9d9bdd3a] 2020-04-05 10:02:00 +0200
Branch: REL_12_STABLE [d278d4e1a] 2020-04-05 10:03:04 +0200
Branch: REL_11_STABLE [250041a56] 2020-04-05 10:03:41 +0200
Branch: REL_10_STABLE [038c9bbe9] 2020-04-05 10:04:13 +0200
Branch: REL9_6_STABLE [3dcaea4b0] 2020-04-05 10:04:26 +0200
Branch: REL9_5_STABLE [72b2b9c52] 2020-04-05 10:05:18 +0200
-->
     <para>
      Ensure that a replication
      slot's <literal>io_in_progress_lock</literal> is released in failure
      code paths (Pavan Deolasee)
     </para>

     <para>
      This could result in a walsender later becoming stuck waiting for
      the lock.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f332241a6] 2020-04-18 14:02:44 -0400
Branch: REL_12_STABLE [00ef5d52c] 2020-04-18 14:02:44 -0400
Branch: REL_11_STABLE [b3fa6d016] 2020-04-18 14:02:44 -0400
Branch: REL_10_STABLE [63ecdaf75] 2020-04-18 14:02:44 -0400
Branch: REL9_6_STABLE [c65c1aa82] 2020-04-18 14:02:45 -0400
-->
     <para>
      Fix race conditions in synchronous standby management (Tom Lane)
     </para>

     <para>
      During a change in the <varname>synchronous_standby_names</varname>
      setting, there was a window in which wrong decisions could be made
      about whether it is OK to release transactions that are waiting for
      synchronous commit.  Another hazard for similarly wrong decisions
      existed if a walsender process exited and was immediately replaced
      by another.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: REL_11_STABLE [a493f9334] 2020-03-12 18:06:54 +1300
Branch: REL_10_STABLE [05e0aff58] 2020-03-12 18:09:14 +1300
Branch: REL9_6_STABLE [4e8cad2da] 2020-03-12 18:16:44 +1300
Branch: REL9_5_STABLE [d22ac5378] 2020-03-12 18:15:59 +1300
-->
     <para>
      Ensure <varname>nextXid</varname> can't go backwards on a standby
      server (Eka Palamadai)
     </para>

     <para>
      This race condition could allow incorrect hot standby feedback
      messages to be sent back to the primary server, potentially allowing
      <command>VACUUM</command> to run too soon on the primary.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [b4f140869] 2020-03-18 09:27:14 +0530
Branch: REL_12_STABLE [e37824136] 2020-03-18 09:33:01 +0530
Branch: REL_11_STABLE [18c41cb6b] 2020-03-18 09:37:08 +0530
Branch: REL_10_STABLE [569f9354b] 2020-03-18 09:46:52 +0530
Branch: REL9_6_STABLE [fe27ce1c1] 2020-03-18 10:08:56 +0530
Branch: REL9_5_STABLE [6bdfe428d] 2020-03-18 10:10:27 +0530
-->
     <para>
      Add missing SQLSTATE values to a few error reports (Sawada Masahiko)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [761a5688b] 2020-02-19 14:45:17 -0500
Branch: REL_12_STABLE [32aa14d40] 2020-02-19 14:44:58 -0500
Branch: REL_11_STABLE [612d207bc] 2020-02-19 14:44:58 -0500
Branch: REL_10_STABLE [6af63cf8c] 2020-02-19 14:44:58 -0500
Branch: REL9_6_STABLE [3e5308969] 2020-02-19 14:44:58 -0500
Branch: REL9_5_STABLE [bbefb1154] 2020-02-19 14:44:58 -0500
-->
     <para>
      Fix PL/pgSQL to reliably refuse to execute an event trigger function
      as a plain function (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [27dbe1a18] 2020-04-22 07:27:03 +0900
Branch: REL_12_STABLE [e1c08722a] 2020-04-22 07:27:45 +0900
Branch: REL_11_STABLE [35d08658d] 2020-04-22 07:27:49 +0900
Branch: REL_10_STABLE [1bb0293d8] 2020-04-22 07:27:53 +0900
Branch: REL9_6_STABLE [c9c15790d] 2020-04-22 07:28:00 +0900
Branch: REL9_5_STABLE [e5e295d50] 2020-04-22 07:28:04 +0900
-->
     <para>
      Fix memory leak in <application>libpq</application> when
      using <literal>sslmode=verify-full</literal> (Roman Peshkurov)
     </para>

     <para>
      Certificate verification during connection startup could leak some
      memory.  This would become an issue if a client process opened many
      database connections during its lifetime.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [980a70b97] 2020-03-23 11:58:00 -0400
Branch: REL_12_STABLE [036fdf6be] 2020-03-23 11:58:01 -0400
Branch: REL_11_STABLE [aae7e8530] 2020-03-23 11:58:01 -0400
Branch: REL_10_STABLE [ef7d6d79a] 2020-03-23 11:58:01 -0400
Branch: REL9_6_STABLE [c0eb57dd9] 2020-03-23 11:58:01 -0400
Branch: REL9_5_STABLE [5f9eace5d] 2020-03-23 11:58:01 -0400
-->
     <para>
      Fix <application>ecpg</application> to treat an argument of
      just <quote><literal>-</literal></quote> as meaning <quote>read
      from stdin</quote> on all platforms (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Bruce Momjian <bruce@momjian.us>
Branch: master [08481eedd] 2020-03-31 23:01:34 -0400
Branch: REL_12_STABLE [6a50f1af4] 2020-03-31 23:01:33 -0400
Branch: REL_11_STABLE [7054e12e0] 2020-03-31 23:01:33 -0400
Branch: REL_10_STABLE [a936012d6] 2020-03-31 23:01:33 -0400
-->
     <para>
      Allow tab-completion of the filename argument
      to <application>psql</application>'s <command>\gx</command> command
      (Vik Fearing)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [b08dee24a] 2020-03-11 16:54:54 -0300
Branch: REL_12_STABLE [f977e6dec] 2020-03-11 16:54:54 -0300
Branch: REL_11_STABLE [e70187c9b] 2020-03-11 16:54:54 -0300
Branch: REL_10_STABLE [d04e342ba] 2020-03-11 16:54:54 -0300
Branch: REL9_6_STABLE [2b9d70159] 2020-03-11 16:54:54 -0300
Branch: master [046001fe3] 2020-03-16 16:27:13 -0300
Branch: REL_12_STABLE [cf72898c6] 2020-03-16 16:27:13 -0300
Branch: REL_11_STABLE [55978e28c] 2020-03-16 16:27:13 -0300
Branch: REL_10_STABLE [c6b75b3f1] 2020-03-16 16:27:13 -0300
Branch: REL9_6_STABLE [7984c7e9f] 2020-03-16 16:27:13 -0300
Branch: master [899a04f5e] 2020-03-11 11:04:59 -0300
Branch: REL_12_STABLE [b7739ebec] 2020-03-11 11:04:59 -0300
Branch: REL_11_STABLE [7c094a11c] 2020-03-11 11:04:59 -0300
Branch: REL_10_STABLE [3dfd2d6cd] 2020-03-11 11:04:59 -0300
Branch: REL9_6_STABLE [73b31e784] 2020-03-11 11:04:59 -0300
-->
     <para>
      Add <application>pg_dump</application> support for <command>ALTER
      ... DEPENDS ON EXTENSION</command> (&Aacute;lvaro Herrera)
     </para>

     <para>
      <application>pg_dump</application> previously ignored dependencies added
      this way, causing them to be forgotten during dump/restore or
      <application>pg_upgrade</application>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f31364676] 2020-02-17 18:40:02 -0500
Branch: REL_12_STABLE [6da7d3630] 2020-02-17 18:40:02 -0500
Branch: REL_11_STABLE [bd2cd138f] 2020-02-17 18:40:02 -0500
Branch: REL_10_STABLE [f9d7bb68d] 2020-02-17 18:40:02 -0500
Branch: REL9_6_STABLE [3380b9931] 2020-02-17 18:40:02 -0500
Branch: REL9_5_STABLE [d9ec8d1d7] 2020-02-17 18:40:02 -0500
-->
     <para>
      Fix <application>pg_dump</application> to dump comments on RLS
      policy objects (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8728b2c70] 2020-03-09 14:58:26 -0400
Branch: REL_12_STABLE [4c40b27b5] 2020-03-09 14:58:11 -0400
Branch: REL_11_STABLE [f5d49f226] 2020-03-09 14:58:11 -0400
Branch: REL_10_STABLE [475b061c8] 2020-03-09 14:58:11 -0400
Branch: REL9_6_STABLE [fab545635] 2020-03-09 14:58:11 -0400
Branch: REL9_5_STABLE [0b0247644] 2020-03-09 14:58:11 -0400
Branch: master [a9d70c108] 2020-04-08 11:23:39 -0400
Branch: REL_12_STABLE [983ed99a6] 2020-04-08 11:23:39 -0400
Branch: REL_11_STABLE [d050c6113] 2020-04-08 11:23:39 -0400
Branch: REL_10_STABLE [830471e0d] 2020-04-08 11:23:39 -0400
Branch: REL9_6_STABLE [778066052] 2020-04-08 11:23:40 -0400
Branch: REL9_5_STABLE [564c1e6d7] 2020-04-08 11:23:40 -0400
-->
     <para>
      In <application>pg_dump</application>, postpone restore of event
      triggers till the end (Fabr&iacute;zio de Royes Mello, Hamid Akhtar,
      Tom Lane)
     </para>

     <para>
      This minimizes the risk that an event trigger could interfere with
      the restoration of other objects.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [428a2609e] 2020-02-27 15:31:27 +0900
Branch: REL_12_STABLE [f6e8e8b38] 2020-02-27 15:31:48 +0900
Branch: REL_11_STABLE [8f9aba187] 2020-02-27 15:31:52 +0900
-->
     <para>
      Make <application>pg_verify_checksums</application> skip tablespace
      subdirectories that belong to a
      different <productname>PostgreSQL</productname> major version
      (Michael Banck, Bernd Helmle)
     </para>

     <para>
      Such subdirectories don't really belong to our database cluster, and
      so must not be processed.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [bf883b211] 2020-02-24 18:13:25 +0900
Branch: REL_12_STABLE [a8beece95] 2020-02-24 18:14:16 +0900
Branch: REL_11_STABLE [da2a7180a] 2020-02-24 18:14:22 +0900
-->
     <para>
      Ignore temporary copies of <filename>pg_internal.init</filename>
      in <application>pg_verify_checksums</application> and related
      programs (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [008cf0409] 2020-02-27 11:20:46 +0900
Branch: REL_12_STABLE [943affb3d] 2020-02-27 11:21:00 +0900
Branch: REL_11_STABLE [83bd732eb] 2020-02-27 11:21:07 +0900
Branch: REL_10_STABLE [240c7c75f] 2020-02-27 11:21:14 +0900
Branch: REL9_6_STABLE [3340034f2] 2020-02-27 11:21:23 +0900
Branch: REL9_5_STABLE [49300e4cf] 2020-02-27 11:21:28 +0900
Branch: master [c4b0edb07] 2020-02-27 21:58:37 +0900
Branch: REL_12_STABLE [aeb846edb] 2020-02-27 21:58:45 +0900
Branch: REL_11_STABLE [8e076f4f9] 2020-02-27 21:58:50 +0900
-->
     <para>
      Fix quoting of <option>--encoding</option>, <option>--lc-ctype</option>
      and <option>--lc-collate</option> values
      in <application>createdb</application> utility (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6dd9f3577] 2020-04-03 11:24:56 -0400
Branch: REL_12_STABLE [d56657c35] 2020-04-03 11:24:56 -0400
Branch: REL_11_STABLE [7b1552283] 2020-04-03 11:24:56 -0400
Branch: REL_10_STABLE [85f0d4703] 2020-04-03 11:24:56 -0400
Branch: REL9_6_STABLE [a9f821f48] 2020-04-03 11:24:56 -0400
Branch: REL9_5_STABLE [82bc56e63] 2020-04-03 11:24:56 -0400
-->
     <para>
      <filename>contrib/lo</filename>'s <function>lo_manage()</function>
      function crashed if called directly rather than as a trigger (Tom
      Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [95f7ddfda] 2020-03-28 17:09:51 -0400
Branch: REL_12_STABLE [2bb6bdbe5] 2020-03-28 17:09:51 -0400
Branch: REL_11_STABLE [5feb3d0b3] 2020-03-28 17:09:51 -0400
Branch: REL_10_STABLE [2618ac6c6] 2020-03-28 17:09:51 -0400
Branch: REL9_6_STABLE [39491aa0d] 2020-03-28 17:09:51 -0400
Branch: REL9_5_STABLE [8e1e630d0] 2020-03-28 17:09:52 -0400
-->
     <para>
      In <filename>contrib/ltree</filename>,
      protect against overflow of <type>ltree</type>
      and <type>lquery</type> length fields (Nikita Glukhov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: REL_12_STABLE [393b449f1] 2020-03-11 14:15:02 -0700
Branch: REL_11_STABLE [c788115b5] 2020-03-11 14:15:00 -0700
-->
     <para>
      Work around failure in <filename>contrib/pageinspect</filename>'s
      <function>bt_metap()</function> function when an oldest_xact value
      exceeds 2^31-1 (Peter Geoghegan)
     </para>

     <para>
      Such XIDs will now be reported as negative integers, which isn't
      great but it beats throwing an error.  v13 will widen the output
      argument to <type>int8</type> to provide saner reporting.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fc576b7c4] 2020-04-16 14:45:54 -0400
Branch: REL_12_STABLE [687e566b9] 2020-04-16 14:45:54 -0400
Branch: REL_11_STABLE [cc2737ab0] 2020-04-16 14:45:54 -0400
Branch: REL_10_STABLE [f4a420056] 2020-04-16 14:45:54 -0400
Branch: REL9_6_STABLE [3cdf2421a] 2020-04-16 14:45:54 -0400
Branch: REL9_5_STABLE [46b1b6379] 2020-04-16 14:45:54 -0400
-->
     <para>
      Fix cache reference leak in <filename>contrib/sepgsql</filename>
      (Michael Luo)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8c49454ca] 2020-03-30 11:14:58 -0400
Branch: REL_12_STABLE [de5b9db36] 2020-03-30 11:14:58 -0400
Branch: REL_11_STABLE [4bc3a1667] 2020-03-30 11:14:58 -0400
Branch: REL_10_STABLE [d59e83cf5] 2020-03-30 11:14:58 -0400
Branch: REL9_6_STABLE [f15f5edee] 2020-03-30 11:14:58 -0400
Branch: REL9_5_STABLE [6dac1e858] 2020-03-30 11:14:58 -0400
-->
     <para>
      Avoid failures when dealing with Unix-style locale names on
      Windows (Juan Jos&eacute; Santamar&iacute;a Flecha)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0bc8cebdb] 2020-03-17 12:09:26 -0400
Branch: REL_12_STABLE [d8e7f8149] 2020-03-17 12:09:26 -0400
Branch: REL_11_STABLE [9af2f7dc9] 2020-03-17 12:09:27 -0400
Branch: REL_10_STABLE [d67d7243f] 2020-03-17 12:09:27 -0400
-->
     <para>
      Use <application>pkg-config</application>, if available, to
      locate <application>libxml2</application>
      during <application>configure</application> (Hugh McMaster, Tom
      Lane, Peter Eisentraut)
     </para>

     <para>
      If <application>pkg-config</application> is not present or lacks
      knowledge of <application>libxml2</application>, we still
      query <application>xml2-config</application> as before.
     </para>

     <para>
      This change could break build processes that try to
      make <productname>PostgreSQL</productname> use a non-default version
      of <application>libxml2</application> by putting that
      version's <application>xml2-config</application> into
      the <varname>PATH</varname>.  Instead,
      set <varname>XML2_CONFIG</varname> to point to the
      non-default <application>xml2-config</application>.  That method
      will work with either older or
      newer <productname>PostgreSQL</productname> releases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [beb2516e9] 2020-05-06 21:08:15 +0900
Branch: REL_12_STABLE [8c0939dad] 2020-05-06 21:08:22 +0900
Branch: REL_11_STABLE [984aca448] 2020-05-06 21:08:26 +0900
Branch: REL_10_STABLE [307ed98b0] 2020-05-06 21:08:31 +0900
Branch: REL9_6_STABLE [e07fdc126] 2020-05-06 21:08:38 +0900
Branch: REL9_5_STABLE [ad53d6efe] 2020-05-06 21:08:42 +0900
-->
     <para>
      In MSVC builds, cope with spaces in the path name for Python
      (Victor Wagner)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [a9659fb65] 2020-04-17 14:44:33 -0400
Branch: REL_12_STABLE [6b02bee66] 2020-04-17 14:52:42 -0400
Branch: REL_11_STABLE [758814224] 2020-04-17 14:53:56 -0400
Branch: REL_10_STABLE [ddac64f2d] 2020-04-17 14:55:55 -0400
Branch: REL9_6_STABLE [4c9239d08] 2020-04-17 14:56:56 -0400
Branch: REL9_5_STABLE [3ca17999f] 2020-04-17 14:57:15 -0400
-->
     <para>
      In MSVC builds, fix detection of Visual Studio version to work with
      more language settings (Andrew Dunstan)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [71c2fd0c0] 2020-03-20 13:55:15 -0400
Branch: REL_12_STABLE [d0747714e] 2020-03-20 14:02:05 -0400
Branch: REL_11_STABLE [e8a6391fc] 2020-03-20 14:02:15 -0400
Branch: REL_10_STABLE [3163349fd] 2020-03-20 14:02:43 -0400
Branch: REL9_6_STABLE [80370836f] 2020-03-20 14:03:13 -0400
Branch: REL9_5_STABLE [467b40832] 2020-03-20 14:03:31 -0400
-->
     <para>
      In MSVC builds, use <literal>-Wno-deprecated</literal> with bison
      versions newer than 3.0, as non-Windows builds already do (Andrew
      Dunstan)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4cac3a49e] 2020-04-24 10:54:47 -0400
Branch: REL_12_STABLE [c820692bd] 2020-04-24 10:55:00 -0400
Branch: REL_11_STABLE [eb335bc62] 2020-04-24 10:55:05 -0400
Branch: REL_10_STABLE [898921a18] 2020-04-24 10:55:10 -0400
Branch: REL9_6_STABLE [66be99742] 2020-04-24 10:55:17 -0400
Branch: REL9_5_STABLE [39006ae7a] 2020-04-24 10:55:23 -0400
Branch: master [6c5f91616] 2020-04-24 17:53:23 -0400
Branch: REL_12_STABLE [1e07e3fc0] 2020-04-24 17:53:23 -0400
Branch: REL_11_STABLE [b31f9fd63] 2020-04-24 17:53:23 -0400
Branch: REL_10_STABLE [40d4bc5ac] 2020-04-24 17:53:23 -0400
Branch: REL9_6_STABLE [f65f3a5d8] 2020-04-24 17:53:23 -0400
Branch: REL9_5_STABLE [3cdb45c54] 2020-04-24 17:53:23 -0400
Branch: master [bd8c5cee9] 2020-04-24 17:21:44 -0400
Branch: REL_12_STABLE [a2342c658] 2020-04-24 17:21:44 -0400
Branch: REL_11_STABLE [99c9ed224] 2020-04-24 17:21:44 -0400
Branch: REL_10_STABLE [4985b3b84] 2020-04-24 17:21:44 -0400
Branch: REL9_6_STABLE [351252904] 2020-04-24 17:21:44 -0400
Branch: REL9_5_STABLE [3f3ab184c] 2020-04-24 17:21:44 -0400
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2020a for DST law changes in Morocco and the Canadian Yukon,
      plus historical corrections for Shanghai.
     </para>

     <para>
      The America/Godthab zone has been renamed to America/Nuuk to reflect
      current English usage; however, the old name remains available as a
      compatibility link.
     </para>

     <para>
      Also, update <application>initdb</application>'s list of known
      Windows time zone names to include recent additions, improving the
      odds that it will correctly translate the system time zone setting
      on that platform.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11-7">
  <title>Release 11.7</title>

  <formalpara>
  <title>Release date:</title>
  <para>2020-02-13</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.6.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.7</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 11.6,
    see <xref linkend="release-11-6"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [b048f558d] 2020-02-10 11:47:09 -0300
Branch: REL_12_STABLE [2ad125322] 2020-02-10 11:47:09 -0300
Branch: REL_11_STABLE [bdd19e48a] 2020-02-10 11:47:09 -0300
Branch: REL_10_STABLE [ac1a998ed] 2020-02-10 11:47:09 -0300
Branch: REL9_6_STABLE [e8b8eb937] 2020-02-10 12:06:25 -0300
-->
     <para>
      Add missing permissions checks for <command>ALTER ... DEPENDS ON
      EXTENSION</command> (&Aacute;lvaro Herrera)
     </para>

     <para>
      Marking an object as dependent on an extension did not have any
      privilege check whatsoever.  This oversight allowed any user to mark
      routines, triggers, materialized views, or indexes as droppable by
      anyone able to drop an extension.  Require that the calling user own
      the specified object (and hence have privilege to drop it).
      (CVE-2020-1720)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [1fa846f1c] 2020-01-02 17:04:24 -0300
Branch: REL_12_STABLE [d73214839] 2020-01-02 17:04:24 -0300
Branch: REL_11_STABLE [adc9cb6f2] 2020-01-02 17:04:24 -0300
-->
     <para>
      Ensure that row triggers on partitioned tables are correctly
      cloned to sub-partitions when appropriate
      (&Aacute;lvaro Herrera)
     </para>

     <para>
      User-defined triggers (but not triggers for foreign key or deferred
      unique constraints) might be missed when creating or attaching a
      partition.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [b9c130a1f] 2020-01-06 08:40:00 +0100
Branch: REL_12_STABLE [8c2bfd9f9] 2020-01-06 10:43:55 +0100
Branch: REL_11_STABLE [7474393e0] 2020-01-06 11:38:24 +0100
Branch: REL_10_STABLE [66fd0adc7] 2020-01-06 11:38:33 +0100
-->
     <para>
      Fix logical replication subscriber code to execute
      per-column <literal>UPDATE</literal> triggers when appropriate
      (Peter Eisentraut)
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [d20703805] 2020-01-02 11:41:04 +0530
Branch: REL_12_STABLE [f8a6d8e71] 2020-01-02 11:53:53 +0530
Branch: REL_11_STABLE [3e3a79735] 2020-01-02 12:04:13 +0530
Branch: REL_10_STABLE [27b5f48c7] 2020-01-02 12:11:55 +0530
Branch: REL9_6_STABLE [ba5b4e506] 2020-01-02 11:29:50 +0530
Branch: REL9_5_STABLE [a6f4f407a] 2020-01-02 12:28:02 +0530
Branch: REL9_4_STABLE [1ad47e875] 2020-01-02 12:38:29 +0530
Branch: master [ed7bb5c31] 2020-01-14 07:53:50 +0530
Branch: REL_12_STABLE [fa1eaebfa] 2020-01-14 08:05:05 +0530
Branch: REL_11_STABLE [17869eca7] 2020-01-14 08:12:12 +0530
Branch: REL_10_STABLE [f9e95252a] 2020-01-14 08:20:11 +0530
-->
     <para>
      Avoid failure in logical decoding when a large transaction must be
      spilled into many separate temporary files (Amit Khandekar)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4d9ceb001] 2019-11-22 11:31:19 -0500
Branch: REL_12_STABLE [a2aa224e0] 2019-11-22 11:31:19 -0500
Branch: REL_11_STABLE [b72a44c51] 2019-11-22 11:31:19 -0500
Branch: REL_10_STABLE [5d3fcb53a] 2019-11-22 11:31:19 -0500
-->
     <para>
      Fix possible crash or data corruption when a logical replication
      subscriber processes a row update (Tom Lane, Tomas Vondra)
     </para>

     <para>
      This bug caused visible problems only if the subscriber's table
      contained columns that were not being copied from the publisher and
      had pass-by-reference data types.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [04c8a69c0] 2019-12-18 07:49:18 +0530
Branch: REL_12_STABLE [c74111d8b] 2019-12-18 07:57:01 +0530
Branch: REL_11_STABLE [046830164] 2019-12-18 08:16:31 +0530
Branch: REL_10_STABLE [d6eca4958] 2019-12-18 08:27:41 +0530
-->
     <para>
      Fix crash in logical replication subscriber after DDL changes on a
      subscribed relation (Jehan-Guillaume de Rorthais, Vignesh C)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [15cac3a52] 2020-01-17 18:00:39 -0300
Branch: REL_12_STABLE [bc2140627] 2020-01-17 18:00:39 -0300
Branch: REL_11_STABLE [fe955ebee] 2020-01-17 18:00:39 -0300
Branch: REL_10_STABLE [e3154aae3] 2020-01-17 18:00:39 -0300
Branch: REL9_6_STABLE [cdb14154b] 2020-01-17 18:00:39 -0300
Branch: REL9_5_STABLE [58997ace5] 2020-01-17 18:00:39 -0300
Branch: REL9_4_STABLE [20a1dc1e3] 2020-01-17 18:00:39 -0300
-->
     <para>
      Fix failure in logical replication publisher after a database crash
      and restart (Vignesh C)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [b0afdcad2] 2020-01-30 11:14:02 +0900
Branch: REL_12_STABLE [3228512b7] 2020-01-30 11:15:28 +0900
Branch: REL_11_STABLE [374464c3e] 2020-01-30 11:15:35 +0900
Branch: master [7ca8c9706] 2020-01-31 13:57:56 +0900
Branch: REL_12_STABLE [706ad6a4d] 2020-01-31 13:58:05 +0900
Branch: REL_11_STABLE [8b29c75f6] 2020-01-31 13:58:11 +0900
-->
     <para>
      Ensure that the effect
      of <function>pg_replication_slot_advance()</function> on a physical
      replication slot will persist across restarts (Alexey Kondratov,
      Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [1c7a0b387] 2020-02-03 18:59:12 -0300
Branch: REL_12_STABLE [42e3187a8] 2020-02-03 18:59:12 -0300
Branch: REL_11_STABLE [beefab654] 2020-02-03 18:59:12 -0300
Branch: REL_10_STABLE [380bc8829] 2020-02-03 18:59:12 -0300
-->
     <para>
      Improve efficiency of logical replication with <literal>REPLICA
      IDENTITY FULL</literal> (Konstantin Knizhnik)
     </para>

     <para>
      When searching for an existing tuple during an update or delete
      operation, return the first matching tuple not the last one.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [76cbfcdf3] 2019-11-16 10:11:30 +1300
Branch: REL_12_STABLE [24897e1a1] 2019-11-16 10:18:45 +1300
Branch: REL_11_STABLE [bc049d0d4] 2019-11-16 10:19:16 +1300
-->
     <para>
      Ensure parallel plans are always shut down at the correct time
      (Kyotaro Horiguchi)
     </para>

     <para>
      This oversight is known to result in <quote>temporary file
      leak</quote> warnings from multi-batch parallel hash joins.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [080313f82] 2019-11-26 08:30:24 +0530
Branch: REL_12_STABLE [1cc3a90c7] 2019-11-26 08:55:06 +0530
Branch: REL_11_STABLE [d0ccfa9d6] 2019-11-26 09:07:35 +0530
Branch: REL_10_STABLE [f7ae68aac] 2019-11-26 09:23:45 +0530
Branch: REL9_6_STABLE [1ad0df67c] 2019-11-26 09:41:41 +0530
-->
     <para>
      Prevent premature shutdown of a Gather or GatherMerge plan node that
      is underneath a Limit node (Amit Kapila)
     </para>

     <para>
      This avoids failure if such a plan node needs to be scanned more
      than once, as for instance if it is on the inside of a nestloop.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [3e4818e9d] 2020-01-27 15:07:03 +1300
Branch: REL_12_STABLE [f9d0be241] 2020-01-27 14:11:24 +1300
Branch: REL_11_STABLE [6a9fc75d0] 2020-01-27 14:12:18 +1300
-->
     <para>
      Improve efficiency of parallel hash join on CPUs with many cores
      (Gang Deng, Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [74618e77b] 2020-01-31 10:25:34 +1300
Branch: REL_12_STABLE [1fcf62e0b] 2020-01-31 10:27:53 +1300
Branch: REL_11_STABLE [2c56b3ac4] 2020-01-31 11:12:21 +1300
Branch: master [d9fe702a2] 2020-02-05 12:27:00 +1300
Branch: REL_12_STABLE [2e2351bd6] 2020-02-05 12:28:33 +1300
Branch: REL_11_STABLE [c4a2041a4] 2020-02-05 12:30:06 +1300
-->
     <para>
      Avoid crash in parallel <command>CREATE INDEX</command> when there
      are no free dynamic shared memory slots (Thomas Munro)
     </para>

     <para>
      Fall back to a non-parallel index build, instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [93745f1e0] 2020-02-01 14:29:13 +1300
Branch: REL_12_STABLE [24dd34af1] 2020-02-01 14:49:57 +1300
Branch: REL_11_STABLE [600387f5d] 2020-02-01 22:57:46 +1300
Branch: REL_10_STABLE [aab30cd4e] 2020-02-01 14:54:48 +1300
Branch: REL9_6_STABLE [93be45245] 2020-02-01 14:57:40 +1300
Branch: REL9_5_STABLE [a5f45c3dd] 2020-02-01 14:59:58 +1300
Branch: REL9_4_STABLE [95936c795] 2020-02-01 15:10:20 +1300
-->
     <para>
      Avoid memory leak when there are no free dynamic shared memory slots
      (Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a904abe2e] 2020-01-22 09:49:18 +0900
Branch: REL_12_STABLE [817a1b88a] 2020-01-22 09:49:24 +0900
Branch: REL_11_STABLE [5b4b07fa9] 2020-01-22 09:49:28 +0900
Branch: REL_10_STABLE [9055344b4] 2020-01-22 09:49:33 +0900
Branch: REL9_6_STABLE [ef33edeb5] 2020-01-22 09:49:39 +0900
Branch: REL9_5_STABLE [c39f45598] 2020-01-22 09:49:44 +0900
Branch: REL9_4_STABLE [d76652edc] 2020-01-22 09:49:48 +0900
-->
     <para>
      Ignore the <literal>CONCURRENTLY</literal> option when performing an
      index creation, drop, or rebuild on a temporary table (Michael
      Paquier, Heikki Linnakangas, Andres Freund)
     </para>

     <para>
      This avoids strange failures if the temporary table has
      an <literal>ON COMMIT</literal> action.  There is no benefit in
      using <literal>CONCURRENTLY</literal> for a temporary table anyway,
      since other sessions cannot access the table, making the extra
      processing pointless.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c35b714ca] 2019-12-01 13:09:26 -0500
Branch: REL_12_STABLE [b154d70f7] 2019-12-01 13:09:26 -0500
Branch: REL_11_STABLE [768a401e2] 2019-12-01 13:09:26 -0500
Branch: REL_10_STABLE [25c7183c0] 2019-12-01 13:09:27 -0500
Branch: REL9_6_STABLE [283f095d0] 2019-12-01 13:09:27 -0500
Branch: REL9_5_STABLE [cfffa8a6b] 2019-12-01 13:09:27 -0500
Branch: REL9_4_STABLE [0c84e992c] 2019-12-01 13:09:27 -0500
-->
     <para>
      Fix possible failure when resetting expression indexes on temporary
      tables that are marked <literal>ON COMMIT DELETE ROWS</literal>
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [4c8701098] 2020-01-20 10:36:35 +0200
Branch: REL_12_STABLE [fd436bba0] 2020-01-20 10:36:45 +0200
Branch: REL_11_STABLE [da7abcf0f] 2020-01-20 10:36:47 +0200
Branch: REL_10_STABLE [ff0c567cb] 2020-01-20 10:36:50 +0200
Branch: REL9_6_STABLE [e96f30d89] 2020-01-20 10:36:52 +0200
Branch: REL9_5_STABLE [98f0d2837] 2020-01-20 10:36:55 +0200
-->
     <para>
      Fix possible crash in BRIN index operations
      with <type>box</type>, <type>range</type> and <type>inet</type> data
      types (Heikki Linnakangas)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [b10714080] 2019-11-20 00:12:33 +0300
Branch: REL_12_STABLE [a64e7e05a] 2019-11-20 00:17:58 +0300
Branch: REL_11_STABLE [7d467dee0] 2019-11-20 00:18:02 +0300
Branch: master [e14641197] 2019-11-20 00:04:09 +0300
Branch: REL_12_STABLE [051c50c01] 2019-11-20 00:04:53 +0300
Branch: REL_11_STABLE [9f2927989] 2019-11-20 00:05:12 +0300
Branch: REL_10_STABLE [21ad61ab3] 2019-11-20 00:05:35 +0300
Branch: master [d5ad7a09a] 2019-11-20 00:04:22 +0300
Branch: REL_12_STABLE [ee437ca74] 2019-11-20 00:05:01 +0300
Branch: REL_11_STABLE [c0bf35421] 2019-11-20 00:05:21 +0300
Branch: REL_10_STABLE [ab64b474d] 2019-11-20 00:05:42 +0300
Branch: REL9_6_STABLE [99f5888d3] 2019-11-19 23:47:29 +0300
Branch: REL9_5_STABLE [4fc485684] 2019-11-20 00:01:55 +0300
Branch: REL9_4_STABLE [1414821e1] 2019-11-20 00:03:04 +0300
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4093ff573] 2020-02-09 12:02:57 -0500
Branch: REL_12_STABLE [baf487123] 2020-02-09 12:02:57 -0500
Branch: REL_11_STABLE [f91706b00] 2020-02-09 12:02:57 -0500
-->
     <para>
      Fix handling of deleted pages in GIN indexes (Alexander Korotkov)
     </para>

     <para>
      Avoid possible deadlocks, incorrect updates of a deleted page's
      state, and failure to traverse through a recently-deleted page.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [41c6f9db2] 2020-01-17 16:17:31 -0500
Branch: REL_12_STABLE [2e2646060] 2020-01-17 16:17:32 -0500
Branch: REL_11_STABLE [d8e877b86] 2020-01-17 16:17:33 -0500
Branch: REL_10_STABLE [167fd022f] 2020-01-17 16:17:35 -0500
Branch: REL9_6_STABLE [45f03cfa5] 2020-01-17 16:17:36 -0500
Branch: REL9_5_STABLE [396472278] 2020-01-17 16:17:37 -0500
Branch: REL9_4_STABLE [eb9d1f050] 2020-01-17 16:17:39 -0500
-->
     <para>
      Fix possible crash with a SubPlan (sub-<literal>SELECT</literal>)
      within a multi-row <literal>VALUES</literal> list (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [bf6cc19e3] 2020-02-05 20:21:20 +0000
Branch: REL_12_STABLE [0e37489ed] 2020-02-05 20:08:11 +0000
Branch: REL_11_STABLE [d8f1c03a4] 2020-02-05 20:15:13 +0000
-->
     <para>
      Fix failure to insert default values for <quote>missing</quote>
      attributes during tuple conversion (Vik Fearing, Andrew Gierth)
     </para>

     <para>
      This could result in values incorrectly reading as NULL, when
      they come from columns that had been added by <literal>ALTER
      TABLE ADD COLUMN</literal> with a constant default.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [38fc05607] 2020-01-10 18:31:22 -0800
Branch: REL_12_STABLE [93078e63f] 2020-01-10 18:31:25 -0800
Branch: REL_11_STABLE [2e86e154d] 2020-01-10 18:31:26 -0800
Branch: REL_10_STABLE [cb9774245] 2020-01-10 18:31:26 -0800
-->
     <para>
      Fix crash after FileClose() failure (Noah Misch)
     </para>

     <para>
      This issue could only be observed
      with <varname>data_sync_retry</varname> enabled, since otherwise
      FileClose() failure would be reported as a PANIC.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [affdde2e1] 2020-01-20 23:26:51 -0800
Branch: REL_12_STABLE [21fdfd0e8] 2020-01-20 23:29:35 -0800
Branch: REL_11_STABLE [c8e0e560e] 2020-01-20 23:29:38 -0800
Branch: REL_10_STABLE [8bb006a41] 2020-01-20 23:30:47 -0800
Branch: REL9_6_STABLE [d4c339924] 2020-01-20 23:31:48 -0800
Branch: REL9_5_STABLE [f651976d9] 2020-01-20 23:31:52 -0800
Branch: REL9_4_STABLE [ba1dfbe22] 2020-01-20 23:32:21 -0800
-->
     <para>
      Fix unlikely crash with pass-by-reference aggregate transition
      states (Andres Freund, Teodor Sigaev)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4c70098ff] 2020-01-23 13:42:09 -0500
Branch: REL_12_STABLE [be13f227f] 2020-01-23 13:42:10 -0500
Branch: REL_11_STABLE [fb12aefaa] 2020-01-23 13:42:10 -0500
Branch: REL_10_STABLE [212b870d6] 2020-01-23 13:42:10 -0500
Branch: REL9_6_STABLE [9e24575f6] 2020-01-23 13:42:10 -0500
Branch: REL9_5_STABLE [a576f2a8f] 2020-01-23 13:42:10 -0500
Branch: REL9_4_STABLE [600b953d7] 2020-01-23 13:42:10 -0500
Branch: master [9a3a75cb8] 2020-01-23 16:15:32 -0500
Branch: REL_12_STABLE [f309c812e] 2020-01-23 16:15:32 -0500
Branch: REL_11_STABLE [7a9fef299] 2020-01-23 16:15:32 -0500
Branch: REL_10_STABLE [d6a9548b2] 2020-01-23 16:15:32 -0500
Branch: REL9_6_STABLE [451f50813] 2020-01-23 16:15:32 -0500
Branch: REL9_5_STABLE [0e63d9641] 2020-01-23 16:15:32 -0500
Branch: REL9_4_STABLE [8fc33e6cc] 2020-01-23 16:15:32 -0500
-->
     <para>
      Improve error reporting in <function>to_date()</function>
      and <function>to_timestamp()</function>
      (Tom Lane, &Aacute;lvaro Herrera)
     </para>

     <para>
      Reports about incorrect month or day names in input strings could
      truncate the input in the middle of a multi-byte character, leading
      to an improperly encoded error message that could cause follow-on
      failures.  Truncate at the next whitespace instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1a3efa1eb] 2019-12-12 12:30:43 -0500
Branch: REL_12_STABLE [07c4b6ac7] 2019-12-12 12:30:44 -0500
Branch: REL_11_STABLE [332584da9] 2019-12-12 12:30:44 -0500
Branch: REL_10_STABLE [c965c42a5] 2019-12-12 12:30:44 -0500
Branch: REL9_6_STABLE [6e2ac8d66] 2019-12-12 12:30:44 -0500
Branch: REL9_5_STABLE [323c47925] 2019-12-12 12:30:44 -0500
Branch: REL9_4_STABLE [6aa126311] 2019-12-12 12:30:44 -0500
-->
     <para>
      Fix off-by-one result for <literal>EXTRACT(ISOYEAR
      FROM <replaceable>timestamp</replaceable>)</literal> for BC dates
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4a0aab14d] 2019-11-21 16:21:43 -0500
Branch: REL_12_STABLE [5186f7625] 2019-11-21 16:21:43 -0500
Branch: REL_11_STABLE [669138ebd] 2019-11-21 16:21:44 -0500
Branch: REL_10_STABLE [b9f3d7a53] 2019-11-21 16:21:44 -0500
Branch: REL9_6_STABLE [52434ba73] 2019-11-21 16:21:44 -0500
Branch: REL9_5_STABLE [bcd541897] 2019-11-21 16:21:44 -0500
Branch: REL9_4_STABLE [f09829017] 2019-11-21 16:21:44 -0500
-->
     <para>
      Avoid stack overflow in <literal>information_schema</literal> views
      when a self-referential view exists in the system catalogs
      (Tom Lane)
     </para>

     <para>
      A self-referential view can't work; it will always result in
      infinite recursion.  We handled that situation correctly when
      trying to execute the view, but not when inquiring whether it is
      automatically updatable.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [b175bd59f] 2020-01-07 17:38:48 -0300
Branch: REL_12_STABLE [fce9ba819] 2020-01-07 17:38:48 -0300
Branch: REL_11_STABLE [896db774e] 2020-01-07 17:38:48 -0300
Branch: REL_10_STABLE [8de3b68fa] 2020-01-07 17:55:21 -0300
Branch: master [f5d28710c] 2020-01-08 14:33:49 -0300
Branch: REL_12_STABLE [20c4df8c8] 2020-01-08 14:33:49 -0300
Branch: REL_11_STABLE [af43581e8] 2020-01-08 14:33:49 -0300
Branch: REL_10_STABLE [da42b9f3f] 2020-01-08 14:33:49 -0300
-->
     <para>
      Ensure that walsender processes always show NULL for transaction
      start time in <structname>pg_stat_activity</structname>
      (&Aacute;lvaro Herrera)
     </para>

     <para>
      Previously, the <structfield>xact_start</structfield> column would
      sometimes show the process start time.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [e69d64454] 2019-12-24 13:05:43 +1300
Branch: REL_12_STABLE [8052aaf52] 2019-12-24 13:07:54 +1300
Branch: REL_11_STABLE [9e551a14c] 2019-12-24 13:09:56 +1300
Branch: REL_10_STABLE [8e89bc6df] 2019-12-24 13:11:13 +1300
Branch: REL9_6_STABLE [15861deb6] 2019-12-24 13:12:50 +1300
Branch: REL9_5_STABLE [893eaf0be] 2019-12-24 13:13:13 +1300
Branch: REL9_4_STABLE [5c0a132cf] 2019-12-24 13:13:30 +1300
-->
     <para>
      Improve performance of hash joins with very large inner relations
      (Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7d91b604d] 2020-02-04 13:07:13 -0500
Branch: REL_12_STABLE [9a85860e1] 2020-02-04 13:07:13 -0500
Branch: REL_11_STABLE [842a23efa] 2020-02-04 13:07:13 -0500
-->
     <para>
      Fix placement of <quote>Subplans Removed</quote> field
      in <command>EXPLAIN</command> output (Daniel Gustafsson, Tom Lane)
     </para>

     <para>
      In non-text output formats, this field was emitted inside
      the <quote>Plans</quote> sub-group, resulting in syntactically
      invalid output.  Attach it to the parent Append or MergeAppend plan
      node as intended.  This causes the field to change position in text
      output format too: if there are any InitPlans attached to the same
      plan node, <quote>Subplans Removed</quote> will now appear before
      those.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [553d2ec27] 2019-11-26 14:41:48 -0500
Branch: REL_12_STABLE [21a4edd12] 2019-11-26 14:41:48 -0500
Branch: REL_11_STABLE [1d9056f56] 2019-11-26 14:41:48 -0500
-->
     <para>
      Allow the planner to apply potentially-leaky tests to child-table
      statistics, if the user can read the corresponding column of the
      table that's actually named in the query (Dilip Kumar, Amit Langote)
     </para>

     <para>
      This change fixes a performance problem for partitioned tables that
      was created by the fix for CVE-2017-7484.  That security fix
      disallowed applying leaky operators to statistics for columns that
      the current user doesn't have permission to read directly.  However,
      it's somewhat common to grant permissions only on the parent
      partitioned table and not bother to do so on individual partitions.
      In such cases, the user can read the column via the parent, so
      there's no point in this security restriction; it only results in
      poorer planner estimates than necessary.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [652686a33] 2020-01-12 14:36:59 -0500
Branch: REL_12_STABLE [70c17a812] 2020-01-12 14:37:00 -0500
Branch: REL_11_STABLE [5832be6ca] 2020-01-12 14:37:00 -0500
Branch: REL_10_STABLE [8c8b456b5] 2020-01-12 14:37:00 -0500
Branch: REL9_6_STABLE [2dd10477c] 2020-01-12 14:37:00 -0500
Branch: REL9_5_STABLE [784c58da1] 2020-01-12 14:37:00 -0500
Branch: REL9_4_STABLE [6bd567b65] 2020-01-12 14:37:00 -0500
-->
     <para>
      Fix edge-case crashes and misestimations in selectivity calculations
      for the <literal>&lt;@</literal> and <literal>@&gt;</literal> range
      operators (Michael Paquier, Andrey Borodin, Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [d482f7f86] 2019-11-16 01:17:15 +0100
Branch: REL_12_STABLE [28555a53c] 2019-11-16 01:25:14 +0100
Branch: REL_11_STABLE [25a9ff6ca] 2019-11-16 01:58:38 +0100
Branch: REL_10_STABLE [0b0f281cc] 2019-11-16 01:42:20 +0100
-->
     <para>
      Ignore system columns when applying most-common-value
      extended statistics (Tomas Vondra)
     </para>

     <para>
      This prevents <quote>negative bitmapset member not allowed</quote>
      planner errors for affected queries.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [168d20640] 2019-11-21 10:23:28 +0900
Branch: REL_12_STABLE [c644407f7] 2019-11-21 10:23:38 +0900
Branch: REL_11_STABLE [62074a343] 2019-11-21 10:23:43 +0900
Branch: REL_10_STABLE [f4095026c] 2019-11-21 10:23:49 +0900
-->
     <para>
      Fix BRIN index logic to support hypothetical BRIN indexes
      (Julien Rouhaud, Heikki Linnakangas)
     </para>

     <para>
      Previously, if an <quote>index adviser</quote> extension tried to
      get the planner to produce a plan involving a hypothetical BRIN
      index, that would fail, because the BRIN cost estimation code would
      always try to physically access the index's metapage.  Now it checks
      to see if the index is only hypothetical, and uses default
      assumptions about the index parameters if so.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [d751ba523] 2020-01-14 09:52:21 +0000
Branch: REL_12_STABLE [fd5476b79] 2020-01-14 09:51:28 +0000
Branch: REL_11_STABLE [9bdb1f0e3] 2020-01-14 09:50:51 +0000
Branch: REL_10_STABLE [353cd826f] 2020-01-14 09:50:13 +0000
Branch: REL9_6_STABLE [fd87262de] 2020-01-14 09:49:23 +0000
Branch: REL9_5_STABLE [bb09a9414] 2020-01-14 09:48:44 +0000
Branch: REL9_4_STABLE [9be6fcb3e] 2020-01-14 09:47:44 +0000
-->
     <para>
      Improve error reporting for attempts to use automatic updating of
      views with conditional <literal>INSTEAD</literal> rules (Dean Rasheed)
     </para>

     <para>
      This has never been supported, but previously the error was thrown
      only at execution time, so that it could be masked by planner errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fc7695891] 2019-12-23 12:08:23 -0500
Branch: REL_12_STABLE [976cb11f6] 2019-12-23 12:08:23 -0500
Branch: REL_11_STABLE [31dfa40a8] 2019-12-23 12:08:24 -0500
Branch: REL_10_STABLE [4af2531d0] 2019-12-23 12:08:24 -0500
Branch: REL9_6_STABLE [354d913f9] 2019-12-23 12:08:24 -0500
Branch: REL9_5_STABLE [6609c3ad9] 2019-12-23 12:08:24 -0500
Branch: REL9_4_STABLE [0d245d13c] 2019-12-23 12:08:24 -0500
Branch: master [74b35eb46] 2020-01-31 17:03:55 -0500
Branch: REL_12_STABLE [65aa15513] 2020-01-31 17:03:55 -0500
Branch: REL_11_STABLE [25dc267a1] 2020-01-31 17:03:55 -0500
Branch: REL_10_STABLE [de3d2df75] 2020-01-31 17:03:55 -0500
Branch: REL9_6_STABLE [742c646c1] 2020-01-31 17:03:55 -0500
Branch: REL9_5_STABLE [59047b6d0] 2020-01-31 17:03:55 -0500
Branch: REL9_4_STABLE [f521ef0ae] 2020-01-31 17:03:55 -0500
-->
     <para>
      Prevent a composite type from being included in itself indirectly
      via a range type (Tom Lane, Julien Rouhaud)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [39ebb943d] 2019-12-23 12:53:12 -0500
Branch: REL_12_STABLE [7fbb39a96] 2019-12-23 12:53:13 -0500
Branch: REL_11_STABLE [281dd22ac] 2019-12-23 12:53:13 -0500
Branch: REL_10_STABLE [ea1205a02] 2019-12-23 12:53:13 -0500
-->
     <para>
      Disallow partition key expressions that return pseudo-types, such
      as <type>record</type> (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [2acab054b] 2019-12-17 17:44:27 -0500
Branch: REL_12_STABLE [97ba30fab] 2019-12-17 17:44:28 -0500
Branch: REL_11_STABLE [fc449abc3] 2019-12-17 17:44:28 -0500
Branch: REL_10_STABLE [5c5a268c6] 2019-12-17 17:44:28 -0500
Branch: REL9_6_STABLE [275a8ac4f] 2019-12-17 17:44:28 -0500
Branch: REL9_5_STABLE [da5dd4218] 2019-12-17 17:44:28 -0500
Branch: REL9_4_STABLE [298d056d9] 2019-12-17 17:44:28 -0500
-->
     <para>
      Fix error reporting for index expressions of prohibited types
      (Amit Langote)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [bf2efc55d] 2019-11-16 20:00:19 -0500
Branch: REL_12_STABLE [fcaf29d87] 2019-11-16 20:00:19 -0500
Branch: REL_11_STABLE [d898edf4f] 2019-11-16 20:00:19 -0500
Branch: REL_10_STABLE [a1b2cf095] 2019-11-16 20:00:19 -0500
Branch: REL9_6_STABLE [e4865bbdc] 2019-11-16 20:00:19 -0500
Branch: REL9_5_STABLE [ecb533af6] 2019-11-16 20:00:20 -0500
Branch: REL9_4_STABLE [65da6dd1d] 2019-11-16 20:00:20 -0500
-->
     <para>
      Fix dumping of views that contain only a <literal>VALUES</literal>
      list to handle cases where a view output column has been renamed
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [2c7b5dad6] 2019-11-13 12:11:49 -0500
Branch: REL_12_STABLE [eec569fac] 2019-11-13 12:11:49 -0500
Branch: REL_11_STABLE [94a9cb43f] 2019-11-13 12:11:49 -0500
Branch: REL_10_STABLE [e25c4b3b2] 2019-11-13 12:11:50 -0500
-->
     <para>
      Ensure that data types and collations used
      in <literal>XMLTABLE</literal> constructs are accounted for when
      computing dependencies of a view or rule (Tom Lane)
     </para>

     <para>
      Previously it was possible to break a view
      using <literal>XMLTABLE</literal> by dropping a type, if the type
      was not otherwise referenced in the view.  This fix does not
      correct the dependencies already recorded for existing views, only
      for newly-created ones.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7618eaf5f] 2019-11-13 13:41:04 -0500
Branch: REL_12_STABLE [d9802590a] 2019-11-13 13:41:04 -0500
Branch: REL_11_STABLE [d66e68207] 2019-11-13 13:41:04 -0500
Branch: REL_10_STABLE [4be69e2ea] 2019-11-13 13:41:04 -0500
-->
     <para>
      Prevent unwanted downcasing and truncation of RADIUS authentication
      parameters (Marcos David)
     </para>

     <para>
      The <filename>pg_hba.conf</filename> parser mistakenly treated these
      fields as SQL identifiers, which in general they aren't.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [790026972] 2019-11-24 14:42:59 -0500
Branch: REL_12_STABLE [c47f498c9] 2019-11-24 14:42:59 -0500
Branch: REL_11_STABLE [377d1b95b] 2019-11-24 14:42:59 -0500
Branch: REL_10_STABLE [dbe15524b] 2019-11-24 14:42:59 -0500
Branch: REL9_6_STABLE [111298aa6] 2019-11-24 14:42:59 -0500
-->
     <para>
      Transmit incoming <command>NOTIFY</command> messages to the client
      before sending <literal>ReadyForQuery</literal>, rather than after
      (Tom Lane)
     </para>

     <para>
      This change ensures that, with libpq and other client libraries that
      act similarly to it, any notifications received during a transaction
      will be available by the time the client thinks the transaction is
      complete.  This probably makes no difference in practical
      applications (which would need to cope with asynchronous
      notifications in any case); but it makes it easier to build test
      cases with reproducible behavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e60b480d3] 2019-12-20 15:34:07 -0500
Branch: REL_12_STABLE [e8f60e6fe] 2019-12-20 15:34:07 -0500
Branch: REL_11_STABLE [1a77ea02d] 2019-12-20 15:34:08 -0500
Branch: REL_10_STABLE [d09cfa3e2] 2019-12-20 15:34:08 -0500
Branch: REL9_6_STABLE [c11bd6c10] 2019-12-20 15:34:08 -0500
Branch: REL9_5_STABLE [5e22a1111] 2019-12-20 15:34:08 -0500
Branch: REL9_4_STABLE [875c7d70d] 2019-12-20 15:34:08 -0500
-->
     <para>
      Allow <application>libpq</application> to parse all GSS-related
      connection parameters even when the GSSAPI code hasn't been compiled
      in (Tom Lane)
     </para>

     <para>
      This makes the behavior similar to our SSL support, where it was
      long ago deemed to be a good idea to always accept all the related
      parameters, even if some are ignored or restricted due to lack of
      the feature in a particular build.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [3ff660bbe] 2019-11-30 14:51:27 +0100
Branch: REL_12_STABLE [0dafed6fe] 2019-11-30 15:04:02 +0100
Branch: REL_11_STABLE [9668bf5d5] 2019-11-30 15:05:31 +0100
Branch: REL_10_STABLE [f71b22f53] 2019-11-30 15:07:47 +0100
Branch: REL9_6_STABLE [c59414da7] 2019-11-30 15:10:14 +0100
Branch: REL9_5_STABLE [a17602de1] 2019-11-30 15:14:12 +0100
Branch: REL9_4_STABLE [d9b974e99] 2019-11-30 15:16:58 +0100
-->
     <para>
      Fix incorrect handling of <literal>%b</literal>
      and <literal>%B</literal> format codes
      in <application>ecpg</application>'s
      <function>PGTYPEStimestamp_fmt_asc()</function> function
      (Tomas Vondra)
     </para>

     <para>
      Due to an off-by-one error, these codes would print the wrong month
      name, or possibly crash.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [2425f8f71] 2020-01-31 14:41:49 -0500
Branch: REL_12_STABLE [0c84199f7] 2020-01-31 14:41:49 -0500
Branch: REL_11_STABLE [63634883f] 2020-01-31 14:41:49 -0500
Branch: REL_10_STABLE [8b1d447a7] 2020-01-31 14:41:49 -0500
Branch: REL9_6_STABLE [cb4c04a4e] 2020-01-31 14:41:49 -0500
Branch: REL9_5_STABLE [1b78759a6] 2020-01-31 14:41:49 -0500
Branch: REL9_4_STABLE [5d60df830] 2020-01-31 14:41:49 -0500
-->
     <para>
      Fix
      parallel <application>pg_dump</application>/<application>pg_restore</application>
      to more gracefully handle failure to create worker processes
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [cd23a2019] 2020-01-20 12:57:17 -0500
Branch: REL_12_STABLE [71b121f42] 2020-01-20 12:57:17 -0500
Branch: REL_11_STABLE [4ea5cf403] 2020-01-20 12:57:17 -0500
Branch: REL_10_STABLE [6f6daa1be] 2020-01-20 12:57:17 -0500
Branch: REL9_6_STABLE [208e262f9] 2020-01-20 12:57:17 -0500
Branch: REL9_5_STABLE [b1392a950] 2020-01-20 12:57:17 -0500
Branch: REL9_4_STABLE [42e538fe6] 2020-01-20 12:57:18 -0500
-->
     <para>
      Prevent possible crash or lockup when attempting to terminate a
      parallel <application>pg_dump</application>/<application>pg_restore</application>
      run via a signal (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [29aeda6e4] 2019-11-13 11:35:37 -0500
Branch: REL_12_STABLE [1cd57b05e] 2019-11-13 11:35:37 -0500
Branch: REL_11_STABLE [8e4ef3287] 2019-11-13 11:35:37 -0500
Branch: REL_10_STABLE [c443e3c43] 2019-11-13 11:35:37 -0500
Branch: REL9_6_STABLE [f378d4dac] 2019-11-13 11:35:37 -0500
Branch: REL9_5_STABLE [fb26754af] 2019-11-13 11:35:37 -0500
Branch: REL9_4_STABLE [56c06999d] 2019-11-13 11:35:37 -0500
-->
     <para>
      In <application>pg_upgrade</application>, look inside arrays and
      ranges while searching for non-upgradable data types in tables
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [8fa8e0115] 2020-02-10 12:14:58 -0300
Branch: REL_12_STABLE [87d014da9] 2020-02-10 12:14:58 -0300
Branch: REL_11_STABLE [ca902add6] 2020-02-10 12:14:58 -0300
Branch: REL_10_STABLE [163161723] 2020-02-10 12:14:58 -0300
Branch: REL9_6_STABLE [5575fc208] 2020-02-10 12:14:58 -0300
Branch: REL9_5_STABLE [1b2ae4bcd] 2020-02-10 12:16:40 -0300
Branch: REL9_4_STABLE [6f1e443a6] 2020-02-10 12:14:58 -0300
-->
     <para>
      Apply more thorough syntax checking
      to <application>createuser</application>'s
      <option>--connection-limit</option> option (&Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4ba4bfaf2] 2019-12-26 15:19:39 -0500
Branch: REL_12_STABLE [883c27a1c] 2019-12-26 15:19:39 -0500
Branch: REL_11_STABLE [ee206cb83] 2019-12-26 15:19:39 -0500
-->
     <para>
      Cope with changes of the specific type referenced by a PL/pgSQL
      composite-type variable in more cases (Ashutosh Sharma, Tom Lane)
     </para>

     <para>
      Dropping and re-creating the composite type referenced by a PL/pgSQL
      variable could lead to <quote>could not open relation with
      OID <replaceable>NNNN</replaceable></quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [215824f91] 2020-01-26 14:31:08 -0500
Branch: REL_12_STABLE [7294f99a0] 2020-01-26 14:31:08 -0500
Branch: REL_11_STABLE [5220ced0d] 2020-01-26 14:31:08 -0500
Branch: REL_10_STABLE [603e03b4c] 2020-01-26 14:31:08 -0500
Branch: REL9_6_STABLE [43a648f57] 2020-01-26 14:31:08 -0500
-->
     <para>
      Avoid crash in <filename>postgres_fdw</filename> when trying to
      send a command like <literal>UPDATE remote_tab SET (x,y) = (SELECT
      ...)</literal> to the remote server (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [b52739436] 2019-12-03 18:40:07 +0100
Branch: REL_12_STABLE [a8a8c6b29] 2019-12-03 18:40:48 +0100
Branch: REL_11_STABLE [267eb954c] 2019-12-03 18:41:29 +0100
Branch: REL_10_STABLE [46ce37b67] 2019-12-03 18:41:50 +0100
Branch: REL9_6_STABLE [fabdad822] 2019-12-03 18:42:25 +0100
Branch: REL9_5_STABLE [a2fdeb786] 2019-12-03 18:42:54 +0100
Branch: REL9_4_STABLE [44381b1af] 2019-12-03 18:43:15 +0100
-->
     <para>
      In <filename>contrib/dict_int</filename>,
      reject <varname>maxlen</varname> settings less than one
      (Tomas Vondra)
     </para>

     <para>
      This prevents a possible crash with silly settings for that parameter.
     </para>
    </listitem>

    <listitem>
<!--
Author: Joe Conway <mail@joeconway.com>
Branch: master [d5b9c2baf] 2019-12-23 13:33:25 -0500
Branch: REL_12_STABLE [b5e7569dd] 2019-12-23 13:33:34 -0500
Branch: REL_11_STABLE [f49e5efbc] 2019-12-23 13:33:42 -0500
Branch: REL_10_STABLE [81be0c57e] 2019-12-23 13:33:50 -0500
Branch: REL9_6_STABLE [3757c1640] 2019-12-23 13:33:57 -0500
Branch: REL9_5_STABLE [70fc6c4ef] 2019-12-23 13:34:05 -0500
Branch: REL9_4_STABLE [4a3cdb531] 2019-12-23 13:34:12 -0500
-->
     <para>
      Disallow NULL category values
      in <filename>contrib/tablefunc</filename>'s
      <function>crosstab()</function> function (Joe Conway)
     </para>

     <para>
      This case never worked usefully, and it would crash on some
      platforms.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [7d0bcb047] 2019-12-06 15:13:55 +0900
Branch: REL_12_STABLE [902276ff1] 2019-12-06 15:14:26 +0900
Branch: REL_11_STABLE [7ad544fd8] 2019-12-06 15:14:31 +0900
-->
     <para>
      Fix <application>configure</application>'s probe for
      OpenSSL's <function>SSL_clear_options()</function> function so that
      it works with OpenSSL versions before 1.1.0 (Michael Paquier, Daniel
      Gustafsson)
     </para>

     <para>
      This problem could lead to failure to set the SSL compression option
      as desired, when <productname>PostgreSQL</productname> is built against
      an old version of OpenSSL.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [62c9b5223] 2020-01-21 13:46:39 +0900
Branch: REL_12_STABLE [ef8e6b2c2] 2020-01-21 13:46:55 +0900
Branch: REL_11_STABLE [7c7026bb7] 2020-01-21 13:47:01 +0900
Branch: REL_10_STABLE [1ef7332b7] 2020-01-21 13:47:05 +0900
Branch: REL9_6_STABLE [9740cdbe5] 2020-01-21 13:47:10 +0900
Branch: REL9_5_STABLE [4a49149b9] 2020-01-21 13:47:13 +0900
Branch: REL9_4_STABLE [dbe405b78] 2020-01-21 13:47:17 +0900
-->
     <para>
      Mark some timeout and statistics-tracking GUC variables
      as <literal>PGDLLIMPORT</literal>, to allow extensions to access
      them on Windows (Pascal Legrand)
     </para>

     <para>
      This applies to
      <literal>idle_in_transaction_session_timeout</literal>,
      <literal>lock_timeout</literal>,
      <literal>statement_timeout</literal>,
      <literal>track_activities</literal>,
      <literal>track_counts</literal>, and
      <literal>track_functions</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [543852fd8] 2020-01-17 15:29:11 +0100
Branch: REL_12_STABLE [162c951df] 2020-01-17 15:30:51 +0100
Branch: REL_11_STABLE [8c37e4469] 2020-01-17 15:31:33 +0100
Branch: REL_10_STABLE [a801452c9] 2020-01-17 15:32:03 +0100
-->
     <para>
      Avoid memory leak in sanity checks for <quote>slab</quote> memory
      contexts (Tomas Vondra)
     </para>

     <para>
      This isn't an issue for production builds, since they wouldn't
      ordinarily have memory context checking enabled; but the leak could
      be quite severe in a debug build.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [3ccc66dac] 2020-02-06 14:43:21 +0900
Branch: REL_12_STABLE [3d214a8e5] 2020-02-06 14:44:22 +0900
Branch: REL_11_STABLE [ac25e1044] 2020-02-06 14:44:40 +0900
Branch: REL_10_STABLE [c17abac60] 2020-02-06 14:44:59 +0900
-->
     <para>
      Fix multiple statistics entries reported by the LWLock statistics
      mechanism (Fujii Masao)
     </para>

     <para>
      The LWLock statistics code (which is not built by default; it
      requires compiling with <option>-DLWLOCK_STATS</option>)
      could report multiple entries for the same LWLock and backend
      process, as a result of faulty hashtable key creation.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [28e6a2fd6] 2019-12-09 15:03:51 -0500
Branch: REL_12_STABLE [001362cfd] 2019-12-09 15:03:51 -0500
Branch: REL_11_STABLE [2ed302ab9] 2019-12-09 15:03:51 -0500
Branch: REL_10_STABLE [096ea540e] 2019-12-09 15:03:52 -0500
Branch: REL9_6_STABLE [df44e411c] 2019-12-09 15:03:52 -0500
Branch: REL9_5_STABLE [1a0c65120] 2019-12-09 15:03:52 -0500
Branch: REL9_4_STABLE [7309e75fa] 2019-12-09 15:03:52 -0500
-->
     <para>
      Fix race condition that led to delayed delivery of interprocess
      signals on Windows (Amit Kapila)
     </para>

     <para>
      This caused visible timing oddities in <command>NOTIFY</command>,
      and perhaps other misbehavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6d7547c21] 2019-12-16 15:10:55 -0500
Branch: REL_12_STABLE [95f43fee9] 2019-12-16 15:10:55 -0500
Branch: REL_11_STABLE [2cf51809b] 2019-12-16 15:10:55 -0500
Branch: REL_10_STABLE [81b052c31] 2019-12-16 15:10:55 -0500
Branch: REL9_6_STABLE [65cb25e4f] 2019-12-16 15:10:55 -0500
Branch: REL9_5_STABLE [cd0380351] 2019-12-16 15:10:55 -0500
Branch: REL9_4_STABLE [cfb2a4cce] 2019-12-16 15:10:56 -0500
Branch: master [5406513e9] 2019-12-21 17:39:36 -0500
Branch: REL_12_STABLE [90281a3a2] 2019-12-21 17:39:36 -0500
Branch: REL_11_STABLE [b3c4e2418] 2019-12-21 17:39:36 -0500
Branch: REL_10_STABLE [a69f5697a] 2019-12-21 17:39:36 -0500
Branch: REL9_6_STABLE [739201b0e] 2019-12-21 17:39:36 -0500
Branch: REL9_5_STABLE [35b28d983] 2019-12-21 17:39:37 -0500
Branch: REL9_4_STABLE [f1a4020ef] 2019-12-21 17:39:37 -0500
-->
     <para>
      On Windows, retry a few times after
      an <literal>ERROR_ACCESS_DENIED</literal> file access failure
      (Alexander Lakhin, Tom Lane)
     </para>

     <para>
      This helps cope with cases where a file open attempt fails because
      the targeted file is flagged for deletion but not yet actually gone.
      <application>pg_ctl</application>, for example, frequently failed
      with such an error when probing to see if the postmaster had shut
      down yet.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11-6">
  <title>Release 11.6</title>

  <formalpara>
  <title>Release date:</title>
  <para>2019-11-14</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.5.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.6</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, if you use the <filename>contrib/intarray</filename>
    extension with a GiST index, and you rely on indexed searches
    for the <literal>&lt;@</literal> operator, see the entry below
    about that.
   </para>

   <para>
    Also, if you are upgrading from a version earlier than 11.1,
    see <xref linkend="release-11-1"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [736b84eed] 2019-09-25 10:07:23 +0900
Branch: REL_12_STABLE Release: REL_12_0 [707f38e38] 2019-09-25 10:08:26 +0900
Branch: REL_11_STABLE [d01d4f237] 2019-09-25 10:08:30 +0900
Branch: REL_10_STABLE [d48168003] 2019-09-25 10:08:36 +0900
Branch: REL9_6_STABLE [98b5c3785] 2019-09-25 10:08:43 +0900
-->
     <para>
      Fix failure of <command>ALTER TABLE SET</command> with a custom
      relation option (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4d4c66add] 2019-08-18 17:11:57 -0400
Branch: REL_12_STABLE Release: REL_12_0 [328c3f6f9] 2019-08-18 17:11:57 -0400
Branch: REL_11_STABLE [909efc449] 2019-08-18 17:11:58 -0400
Branch: REL_10_STABLE [451432214] 2019-08-18 17:11:58 -0400
Branch: REL9_6_STABLE [3442235f2] 2019-08-18 17:11:58 -0400
Branch: REL9_5_STABLE [c511d367a] 2019-08-18 17:11:58 -0400
-->
     <para>
      Disallow changing a multiply-inherited column's type if not all
      parent tables were changed (Tom Lane)
     </para>

     <para>
      Previously, this was allowed, whereupon queries on the
      now-out-of-sync parent would fail.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [cabe0f298] 2019-08-10 11:30:11 -0400
Branch: REL_12_STABLE Release: REL_12_0 [6ce0366be] 2019-08-10 11:30:11 -0400
Branch: REL_11_STABLE [ceb850d4a] 2019-08-10 11:30:12 -0400
-->
     <para>
      Avoid failure if the same target table is specified twice in
      an <command>ANALYZE</command> command inside a transaction block
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [6bda2af03] 2019-10-17 09:59:21 +1300
Branch: REL_12_STABLE [486a8f152] 2019-10-17 11:08:49 +1300
Branch: REL_11_STABLE [6f1e336de] 2019-10-17 11:01:35 +1300
Branch: REL_10_STABLE [583d86f92] 2019-10-17 10:55:26 +1300
Branch: REL9_6_STABLE [0640f032a] 2019-10-17 11:57:33 +1300
Branch: REL9_5_STABLE [c1443eebe] 2019-10-17 10:28:28 +1300
Branch: REL9_4_STABLE [080cf32d2] 2019-10-17 10:14:51 +1300
-->
     <para>
      Prevent <command>VACUUM</command> from trying to freeze
      an old multixact ID involving a still-running transaction
      (Nathan Bossart, Jeremy Schneider)
     </para>

     <para>
      This case would lead to <command>VACUUM</command> failing until the
      old transaction terminates.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [b4bcc6bfd] 2019-11-07 13:59:24 -0300
Branch: REL_12_STABLE [b75ccddcd] 2019-11-07 13:59:24 -0300
Branch: REL_11_STABLE [e4baecf1e] 2019-11-07 14:26:10 -0300
-->
     <para>
      <command>SET CONSTRAINTS ... DEFERRED</command> failed on
      partitioned tables, incorrectly complaining about lack of triggers
      (&Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [dc816e581] 2019-11-02 14:16:04 +0900
Branch: REL_12_STABLE [7963c4c4b] 2019-11-02 14:16:11 +0900
Branch: REL_11_STABLE [f10815c5b] 2019-11-02 14:17:12 +0900
-->
     <para>
      Fix failure when creating indexes for a partition, if the parent
      partitioned table contains any dropped columns (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [03c811a48] 2019-08-12 13:15:47 -0400
Branch: REL_12_STABLE Release: REL_12_0 [c0c12ce39] 2019-08-12 13:15:47 -0400
Branch: REL_11_STABLE [c914e74d2] 2019-08-12 13:15:48 -0400
Branch: REL_10_STABLE [886cf85b5] 2019-08-12 13:15:48 -0400
-->
     <para>
      Fix planner's test for case-foldable characters
      in <literal>ILIKE</literal> with an ICU collation (Tom Lane)
     </para>

     <para>
      This mistake caused the planner to treat too much of the pattern as
      being a fixed prefix, so that indexscans derived from
      an <literal>ILIKE</literal> clause might miss entries that they
      should find.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [b7a1c5539] 2019-10-03 10:54:52 +0100
Branch: REL_12_STABLE [0b11dc019] 2019-10-03 11:12:39 +0100
Branch: REL_11_STABLE [0a445f279] 2019-10-03 11:14:30 +0100
Branch: REL_10_STABLE [ede0ab6cc] 2019-10-03 11:15:38 +0100
Branch: REL9_6_STABLE [6db0d7f35] 2019-10-03 11:17:38 +0100
Branch: REL9_5_STABLE [d2427f11b] 2019-10-03 11:18:15 +0100
Branch: REL9_4_STABLE [3473f81dd] 2019-10-03 11:18:20 +0100
-->
     <para>
      Ensure that offset expressions in <literal>WINDOW</literal> clauses
      are processed when a query's expressions are manipulated (Andrew Gierth)
     </para>

     <para>
      This oversight could result in assorted failures when the offsets
      are nontrivial expressions.  One example is that a function
      parameter reference in such an expression would fail if the function
      was inlined.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7f1f72c44] 2019-09-12 18:29:45 -0400
Branch: REL_12_STABLE Release: REL_12_0 [5e9b18c78] 2019-09-12 18:29:17 -0400
Branch: REL_11_STABLE [64d926f2b] 2019-09-12 18:29:48 -0400
Branch: REL_10_STABLE [b54cff2bf] 2019-09-12 18:29:49 -0400
Branch: REL9_6_STABLE [b00132b9a] 2019-09-12 18:29:18 -0400
Branch: REL9_5_STABLE [aee5736f1] 2019-09-12 18:29:18 -0400
Branch: REL9_4_STABLE [ca08ea52b] 2019-09-12 18:29:18 -0400
-->
     <para>
      Fix handling of whole-row variables in <literal>WITH CHECK
      OPTION</literal> expressions and row-level-security policy expressions
      (Andres Freund)
     </para>

     <para>
      Previously, such usage might result in bogus errors about row type
      mismatches.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3887e9455] 2019-10-07 12:39:09 -0400
Branch: REL_12_STABLE [7e8d0eb63] 2019-10-07 12:39:09 -0400
Branch: REL_11_STABLE [021065aac] 2019-10-07 12:39:09 -0400
Branch: REL_10_STABLE [1b5c2ddcd] 2019-10-07 12:39:09 -0400
Branch: REL9_6_STABLE [c69e982a6] 2019-10-07 12:39:09 -0400
Branch: REL9_5_STABLE [8c2910ce5] 2019-10-07 12:39:10 -0400
-->
     <para>
      Avoid postmaster failure if a parallel query requests a background
      worker when no postmaster child process array slots remain free
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1ced082b9] 2019-08-15 20:04:19 -0400
Branch: REL_12_STABLE Release: REL_12_0 [03813a50e] 2019-08-15 20:04:19 -0400
Branch: REL_11_STABLE [aed967d69] 2019-08-15 20:04:19 -0400
Branch: REL_10_STABLE [60886965a] 2019-08-15 20:04:19 -0400
Branch: REL9_6_STABLE [1fe8d209e] 2019-08-15 20:04:19 -0400
Branch: REL9_5_STABLE [cb0c79ae6] 2019-08-15 20:04:19 -0400
Branch: REL9_4_STABLE [afa71d915] 2019-08-15 20:04:19 -0400
-->
     <para>
      Prevent possible double-free if a <literal>BEFORE UPDATE</literal>
      trigger returns the old tuple as-is, and it is not the last such
      trigger (Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0662eb621] 2019-08-09 13:20:28 -0400
Branch: REL_12_STABLE Release: REL_12_0 [59d378929] 2019-08-09 13:20:28 -0400
Branch: REL_11_STABLE [2f729d832] 2019-08-09 13:20:28 -0400
-->
     <para>
      Fix crash if <literal><replaceable>x</replaceable> = ANY
      (<replaceable>array</replaceable>)</literal>, or related operations,
      contains a constant-null array (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a30531c5c] 2019-11-05 13:40:37 -0500
Branch: REL_12_STABLE [791864193] 2019-11-05 13:40:37 -0500
Branch: REL_11_STABLE [2bfe015b5] 2019-11-05 13:40:37 -0500
-->
     <para>
      Fix <quote>unexpected relkind</quote> error when a query tries to
      access a TOAST table (John Hsu, Michael Paquier, Tom Lane)
     </para>

     <para>
      The error should say that permission is denied, but this case got
      broken during code refactoring.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [3c8c55dd5] 2019-10-17 13:47:01 +1300
Branch: REL_12_STABLE [3af7c64fe] 2019-10-17 14:00:15 +1300
Branch: REL_11_STABLE [6737111a7] 2019-10-17 13:58:58 +1300
Branch: REL_10_STABLE [89a3cdb32] 2019-10-17 13:57:23 +1300
Branch: REL9_6_STABLE [fd5ffa425] 2019-10-17 13:52:59 +1300
Branch: REL9_5_STABLE [cdbb39213] 2019-10-17 13:50:59 +1300
-->
     <para>
      Provide a relevant error context line when an error occurs while
      setting GUC parameters during parallel worker startup (Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [1169fcf12] 2019-08-07 12:40:49 +0300
Branch: REL_12_STABLE Release: REL_12_0 [f8d30182b] 2019-08-07 12:41:00 +0300
Branch: REL_11_STABLE [c5b796125] 2019-08-07 12:41:16 +0300
Branch: REL_10_STABLE [65468cc70] 2019-08-07 12:41:22 +0300
Branch: REL9_6_STABLE [75774cc22] 2019-08-07 12:41:26 +0300
Branch: REL9_5_STABLE [fd298cd63] 2019-08-07 12:41:31 +0300
Branch: REL9_4_STABLE [54c98fa71] 2019-08-07 12:41:37 +0300
-->
     <para>
      In serializable mode, ensure that row-level predicate locks are
      acquired on the correct version of the row (Thomas Munro, Heikki
      Linnakangas)
     </para>

     <para>
      If the visible version of the row is HOT-updated, the lock might be
      taken on its now-dead predecessor, resulting in subtle failures to
      guarantee serialization.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [a586cc4b6] 2019-10-04 13:34:28 -0700
Branch: REL_12_STABLE [c025165da] 2019-10-04 13:34:39 -0700
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [b8e19b932] 2019-10-09 13:30:43 +0900
Branch: REL_12_STABLE [07c314968] 2019-10-09 13:31:13 +0900
Branch: REL_11_STABLE [e34358c43] 2019-10-09 13:31:17 +0900
Branch: REL_10_STABLE [fbfc835b4] 2019-10-09 13:31:22 +0900
Branch: REL9_6_STABLE [4e7a8874a] 2019-10-09 13:31:27 +0900
Branch: REL9_5_STABLE [c50f95272] 2019-10-09 13:31:33 +0900
Branch: REL9_4_STABLE [59800f7ce] 2019-10-09 13:31:38 +0900
-->
     <para>
      Ensure that <function>fsync()</function> is applied only to files
      that are opened read/write (Andres Freund, Michael Paquier)
     </para>

     <para>
      Some code paths tried to do this after opening a file read-only,
      but on some platforms that causes <quote>bad file descriptor</quote>
      or similar errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8e10405c7] 2019-10-03 17:34:25 -0400
Branch: REL_12_STABLE [8381242df] 2019-10-03 17:34:25 -0400
Branch: REL_11_STABLE [e5ff97571] 2019-10-03 17:34:25 -0400
Branch: REL_10_STABLE [226551e7c] 2019-10-03 17:34:26 -0400
Branch: REL9_6_STABLE [677989cc0] 2019-10-03 17:34:26 -0400
Branch: REL9_5_STABLE [54d641da0] 2019-10-03 17:34:26 -0400
Branch: REL9_4_STABLE [6899be289] 2019-10-03 17:34:26 -0400
-->
     <para>
      Allow encoding conversion to succeed on longer strings than before
      (&Aacute;lvaro Herrera, Tom Lane)
     </para>

     <para>
      Previously, there was a hard limit of 0.25GB on the input string,
      but now it will work as long as the converted output is not over 1GB.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [720b59b55] 2019-08-28 16:18:29 +1200
Branch: REL_12_STABLE Release: REL_12_0 [8cc6016a8] 2019-08-28 16:18:39 +1200
Branch: REL_11_STABLE [b9c4ccfef] 2019-08-28 17:59:27 +1200
Branch: REL_10_STABLE [eeb68c1cd] 2019-08-28 17:59:50 +1200
-->
     <para>
      Avoid an unnecessary catalog lookup during heap page pruning
      (Thomas Munro)
     </para>

     <para>
      It's no longer necessary to check for unlogged indexes here, and the
      check caused significant performance problems in some workloads.
      There was also at least a theoretical possibility of deadlock.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [a9056cc63] 2019-11-06 04:13:30 +0000
Branch: REL_12_STABLE [f57c63107] 2019-11-06 04:33:35 +0000
Branch: REL_11_STABLE [be99485b9] 2019-11-06 04:33:42 +0000
Branch: REL_10_STABLE [6da5310e8] 2019-11-06 04:33:49 +0000
Branch: REL9_6_STABLE [747aac88f] 2019-11-06 04:33:55 +0000
-->
     <para>
      Avoid creating unnecessarily-bulky tuple stores for window functions
      (Andrew Gierth)
     </para>

     <para>
      In some cases the tuple storage would include all columns of the
      source table(s), not just the ones that are needed by the query.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [ac88807f9] 2019-09-29 16:24:32 -0700
Branch: REL_12_STABLE Release: REL_12_0 [2ce9bca36] 2019-09-29 16:27:18 -0700
Branch: REL_11_STABLE [51ad5b9bd] 2019-09-29 16:27:08 -0700
-->
     <para>
      Fix failure to JIT-compile equality comparisons for grouping hash
      tables, leading to performance loss (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c477f3e44] 2019-10-03 13:56:26 -0400
Branch: REL_12_STABLE [9a407209a] 2019-10-03 13:56:26 -0400
Branch: REL_11_STABLE [82d0a46ea] 2019-10-03 13:56:26 -0400
Branch: REL_10_STABLE [9ad1b572d] 2019-10-03 13:56:26 -0400
Branch: REL9_6_STABLE [e5e4f12a5] 2019-10-03 13:56:26 -0400
Branch: REL9_5_STABLE [1534531fe] 2019-10-03 13:56:26 -0400
Branch: REL9_4_STABLE [4829576ba] 2019-10-03 13:56:27 -0400
-->
     <para>
      Allow <function>repalloc()</function> to give back space when a
      large chunk is reduced in size (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [df86e52ca] 2019-10-02 15:53:07 +0900
Branch: REL_12_STABLE [2a724cdbf] 2019-10-02 15:53:51 +0900
Branch: REL_11_STABLE [b978de0eb] 2019-10-02 15:53:56 +0900
Branch: REL_10_STABLE [7ca35472c] 2019-10-02 15:54:01 +0900
Branch: REL9_6_STABLE [ac1efdd08] 2019-10-02 15:54:11 +0900
Branch: REL9_5_STABLE [ae205dfe6] 2019-10-02 15:54:16 +0900
-->
     <para>
      Ensure that temporary WAL and history files are removed at the end
      of archive recovery (Sawada Masahiko)
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [ec1259e88] 2019-10-18 22:32:18 +0900
Branch: REL_12_STABLE [9dfbf9a04] 2019-10-18 22:34:05 +0900
Branch: REL_11_STABLE [f7b70700b] 2019-10-18 22:35:07 +0900
Branch: REL_10_STABLE [c455ee88c] 2019-10-18 22:35:19 +0900
Branch: REL9_6_STABLE [579996bc2] 2019-10-18 22:35:30 +0900
Branch: REL9_5_STABLE [1b2ba8874] 2019-10-18 22:35:41 +0900
Branch: REL9_4_STABLE [14c59185b] 2019-10-18 22:35:52 +0900
-->
     <para>
      Avoid failure in archive recovery
      if <varname>recovery_min_apply_delay</varname> is enabled
      (Fujii Masao)
     </para>

     <para>
      <varname>recovery_min_apply_delay</varname> is not typically used in
      this configuration, but it should work.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [1c60e40ad] 2019-11-09 08:35:44 +0100
Branch: REL_12_STABLE [d891d2c89] 2019-11-09 08:35:51 +0100
Branch: REL_11_STABLE [7961da188] 2019-11-09 08:36:11 +0100
Branch: REL_10_STABLE [2e00d5976] 2019-11-09 09:15:35 +0100
Branch: master [ef8fcbff5] 2019-11-09 13:19:27 +0100
Branch: REL_12_STABLE [f96756304] 2019-11-09 16:00:34 +0100
Branch: REL_11_STABLE [aa9884578] 2019-11-09 16:01:23 +0100
Branch: REL_10_STABLE [806f9dc02] 2019-11-09 16:03:00 +0100
-->
     <para>
      Fix logical replication failure when publisher and subscriber have
      different ideas about a table's replica identity columns
      (Jehan-Guillaume de Rorthais, Peter Eisentraut)
     </para>

     <para>
      Declaring a column as part of the replica identity on the
      subscriber, when it does not exist at all on the publisher, led
      to <quote>negative bitmapset member not allowed</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [38ddeab13] 2019-10-17 15:06:06 +0200
Branch: REL_12_STABLE [1391c13ce] 2019-10-17 15:06:06 +0200
Branch: REL_11_STABLE [45e4067c0] 2019-10-17 15:06:05 +0200
Branch: REL_10_STABLE [0d9fcbada] 2019-10-17 15:06:05 +0200
Branch: REL9_6_STABLE [5f038991e] 2019-10-17 15:06:05 +0200
Branch: REL9_5_STABLE [b2ab06e02] 2019-10-17 15:06:05 +0200
Branch: REL9_4_STABLE [abd5071d2] 2019-10-17 15:06:05 +0200
-->
     <para>
      Avoid unwanted delay during shutdown of a logical replication
      walsender (Craig Ringer, &Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [3f60f690f] 2019-10-18 14:26:29 +0900
Branch: REL_12_STABLE [04510dbe3] 2019-10-18 14:26:53 +0900
Branch: REL_11_STABLE [feed5ee47] 2019-10-18 14:27:00 +0900
Branch: REL_10_STABLE [47698b4b6] 2019-10-18 14:27:04 +0900
-->
     <para>
      Fix timeout handling in logical replication walreceiver processes
      (Julien Rouhaud)
     </para>

     <para>
      Erroneous logic prevented <varname>wal_receiver_timeout</varname>
      from working in logical replication deployments.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [5f6b1eb0c] 2019-11-06 16:12:21 +0900
Branch: REL_12_STABLE [9ae4bdadf] 2019-11-06 16:12:28 +0900
Branch: REL_11_STABLE [cb6d7f985] 2019-11-06 16:12:34 +0900
Branch: REL_10_STABLE [f7b0d0704] 2019-11-06 16:12:40 +0900
Branch: REL9_6_STABLE [16b43e091] 2019-11-06 16:12:47 +0900
Branch: REL9_5_STABLE [404d25f3c] 2019-11-06 16:12:51 +0900
Branch: REL9_4_STABLE [15d90a02a] 2019-11-06 16:12:56 +0900
-->
     <para>
      Correctly time-stamp replication messages for logical
      decoding (Jeff Janes)
     </para>

     <para>
      This oversight resulted, for example,
      in <structname>pg_stat_subscription</structname>.<structfield>last_msg_send_time</structfield>
      usually reading as NULL.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [bac2fae05] 2019-09-13 16:36:28 -0300
Branch: REL_12_STABLE Release: REL_12_0 [96b5033e1] 2019-09-13 16:36:28 -0300
Branch: REL_11_STABLE [41f3d2626] 2019-09-13 16:36:28 -0300
Branch: REL_10_STABLE [4f7dbf0ef] 2019-09-13 16:36:28 -0300
Branch: REL9_6_STABLE [ae4305f6d] 2019-09-13 16:36:28 -0300
Branch: REL9_5_STABLE [7110f5c37] 2019-09-13 16:36:28 -0300
Branch: REL9_4_STABLE [e8c7f40a1] 2019-09-13 16:36:28 -0300
-->
     <para>
      In logical decoding, ensure that sub-transactions are correctly
      accounted for when reconstructing a snapshot (Masahiko Sawada)
     </para>

     <para>
      This error leads to assertion failures; it's unclear whether any
      bad effects exist in production builds.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [20345197f] 2019-11-01 22:38:32 +0900
Branch: REL_12_STABLE [7b8c2de64] 2019-11-01 22:38:45 +0900
Branch: REL_11_STABLE [61f238392] 2019-11-01 22:38:51 +0900
Branch: REL_10_STABLE [b99bfc3c9] 2019-11-01 22:38:55 +0900
Branch: REL9_6_STABLE [52684bc7d] 2019-11-01 22:39:01 +0900
Branch: REL9_5_STABLE [0927d0c25] 2019-11-01 22:39:05 +0900
Branch: REL9_4_STABLE [f88f7206e] 2019-11-01 22:39:09 +0900
-->
     <para>
      Fix race condition during backend exit, when the backend process has
      previously waited for synchronous replication to occur (Dongming Liu)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f1bf619ac] 2019-08-14 15:09:42 -0400
Branch: REL_12_STABLE Release: REL_12_0 [75b2f011f] 2019-08-14 15:09:20 -0400
Branch: REL_11_STABLE [32d38f54a] 2019-08-14 15:09:20 -0400
Branch: REL_10_STABLE [f8c9a0852] 2019-08-14 15:09:20 -0400
Branch: REL9_6_STABLE [4784ad7a3] 2019-08-14 15:09:20 -0400
Branch: REL9_5_STABLE [29f9b1819] 2019-08-14 15:09:20 -0400
Branch: REL9_4_STABLE [a4b0d955b] 2019-08-14 15:09:20 -0400
-->
     <para>
      Fix <command>ALTER SYSTEM</command> to cope with duplicate entries
      in <filename>postgresql.auto.conf</filename> (Ian Barwick)
     </para>

     <para>
      <command>ALTER SYSTEM</command> itself will not generate such a state,
      but external tools that modify <filename>postgresql.auto.conf</filename>
      could do so.  Duplicate entries for the target variable will now be
      removed, and then the new setting (if any) will be appended at the end.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6e4213056] 2019-08-27 14:44:26 -0400
Branch: REL_12_STABLE Release: REL_12_0 [1510339dc] 2019-08-27 14:44:26 -0400
Branch: REL_11_STABLE [cf86803e8] 2019-08-27 14:44:26 -0400
Branch: REL_10_STABLE [771e12701] 2019-08-27 14:44:26 -0400
Branch: REL9_6_STABLE [465f4ddda] 2019-08-27 14:44:26 -0400
Branch: REL9_5_STABLE [ef47d284d] 2019-08-27 14:44:26 -0400
-->
     <para>
      Reject include directives with empty file names in configuration
      files, and report include-file recursion more clearly
      (Ian Barwick, Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3affe76ef] 2019-11-05 14:27:37 -0500
Branch: REL_12_STABLE [f9bd3b6d9] 2019-11-05 14:27:37 -0500
Branch: REL_11_STABLE [97ddc47b9] 2019-11-05 14:27:37 -0500
Branch: REL_10_STABLE [0238a5028] 2019-11-05 14:27:37 -0500
Branch: REL9_6_STABLE [383602f9a] 2019-11-05 14:27:37 -0500
Branch: REL9_5_STABLE [970372037] 2019-11-05 14:27:37 -0500
Branch: REL9_4_STABLE [762b25653] 2019-11-05 14:27:38 -0500
-->
     <para>
      Avoid logging complaints about abandoned connections when using PAM
      authentication (Tom Lane)
     </para>

     <para>
      libpq-based clients will typically make two connection attempts when
      a password is required, since they don't prompt their user for a
      password until their first connection attempt fails.  Therefore the
      server is coded not to generate useless log spam when a client
      closes the connection upon being asked for a password.  However,
      the PAM authentication code hadn't gotten that memo, and would
      generate several messages about a phantom authentication failure.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [64579be64] 2019-08-07 18:16:31 +0900
Branch: REL_12_STABLE Release: REL_12_0 [d8652ec55] 2019-08-07 18:17:34 +0900
Branch: REL_11_STABLE [d16d241a5] 2019-08-07 18:17:39 +0900
Branch: REL_10_STABLE [1ba4d0fe4] 2019-08-07 18:17:46 +0900
Branch: REL9_6_STABLE [7c64a2cd9] 2019-08-07 18:17:52 +0900
Branch: REL9_5_STABLE [1de3e0589] 2019-08-07 18:17:57 +0900
Branch: REL9_4_STABLE [1f7943698] 2019-08-07 18:18:04 +0900
-->
     <para>
      Fix some cases where an incomplete date specification is not
      detected in <type>time with time zone</type> input (Alexander Lakhin)
     </para>

     <para>
      If a time zone with a time-varying UTC offset is specified, then a
      date must be as well, so that the offset can be resolved.  Depending
      on the syntax used, this check was not enforced in some cases,
      allowing bogus output to be produced.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5ac0d9360] 2019-09-22 17:45:59 -0400
Branch: REL_12_STABLE Release: REL_12_0 [860216efa] 2019-09-22 17:46:00 -0400
Branch: REL_11_STABLE [7e7abed05] 2019-09-22 17:46:00 -0400
Branch: REL_10_STABLE [096d34c3b] 2019-09-22 17:46:00 -0400
Branch: REL9_6_STABLE [6ddd164aa] 2019-09-22 17:46:00 -0400
Branch: REL9_5_STABLE [35eb13270] 2019-09-22 17:46:00 -0400
Branch: REL9_4_STABLE [8a17afe84] 2019-09-22 17:46:00 -0400
Branch: master [61aa9f544] 2019-10-04 10:34:40 -0400
Branch: REL_12_STABLE [6c3b6406d] 2019-10-04 10:34:21 -0400
Branch: REL_11_STABLE [b8ddf0bdf] 2019-10-04 10:34:21 -0400
Branch: REL_10_STABLE [9faa9794f] 2019-10-04 10:34:21 -0400
Branch: REL9_6_STABLE [30e5b3bbe] 2019-10-04 10:34:21 -0400
Branch: REL9_5_STABLE [8b77f783b] 2019-10-04 10:34:21 -0400
Branch: REL9_4_STABLE [b6a6c129f] 2019-10-04 10:34:21 -0400
-->
     <para>
      Fix misbehavior of <function>bitshiftright()</function> (Tom Lane)
     </para>

     <para>
      The bitstring right shift operator failed to zero out padding space
      that exists in the last byte of the result when the bitstring length
      is not a multiple of 8.  While invisible to most operations, any
      nonzero bits there would result in unexpected comparison behavior,
      since bitstring comparisons don't bother to ignore the extra bits,
      expecting them to always be zero.
     </para>

     <para>
      If you have inconsistent data as a result of saving the output
      of <function>bitshiftright()</function> in a table, it's possible to
      fix it with something like
<programlisting>
UPDATE mytab SET bitcol = ~(~bitcol) WHERE bitcol != ~(~bitcol);
</programlisting>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e136a0d8c] 2019-08-19 18:01:09 -0400
Branch: REL_12_STABLE Release: REL_12_0 [cdc8d371e] 2019-08-19 18:00:57 -0400
Branch: REL_11_STABLE [2b24cf91a] 2019-08-19 18:00:57 -0400
-->
     <para>
      Restore the ability to take type information from
      an <literal>AS</literal> clause
      in <function>json[b]_populate_record()</function>
      and <function>json[b]_populate_recordset()</function>
      (Tom Lane)
     </para>

     <para>
      If the record argument is NULL and has no declared composite type,
      try to use the <literal>AS</literal> clause instead.  This isn't
      recommended usage, but it used to work, and now does again.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [592a16321] 2019-10-25 15:22:45 -0400
Branch: REL_12_STABLE [2bbdf8e2e] 2019-10-25 15:22:40 -0400
Branch: REL_11_STABLE [9f7a664fe] 2019-10-25 15:22:40 -0400
Branch: REL_10_STABLE [9bf247686] 2019-10-25 15:22:40 -0400
-->
     <para>
      Avoid crash when selecting a namespace node
      in <literal>XMLTABLE</literal> (Chapman Flack)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a7145f6bc] 2019-11-07 11:22:58 -0500
Branch: REL_12_STABLE [f6e72dc9c] 2019-11-07 11:22:59 -0500
Branch: REL_11_STABLE [b49b7f944] 2019-11-07 11:23:00 -0500
Branch: REL_10_STABLE [5f794f757] 2019-11-07 11:23:02 -0500
Branch: REL9_6_STABLE [15783d057] 2019-11-07 11:23:03 -0500
Branch: REL9_5_STABLE [84780d468] 2019-11-07 11:23:04 -0500
Branch: REL9_4_STABLE [8d380864a] 2019-11-07 11:23:06 -0500
Branch: REL9_6_STABLE [a55018760] 2019-11-09 15:50:16 -0500
Branch: REL9_5_STABLE [30f6998ff] 2019-11-09 15:50:16 -0500
Branch: REL9_4_STABLE [18622caa3] 2019-11-09 15:50:16 -0500
-->
     <para>
      Fix detection of edge-case integer overflow in interval
      multiplication (Yuya Watari)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [3a54eb1a3] 2019-09-03 12:30:53 +0900
Branch: REL_12_STABLE Release: REL_12_0 [5380719f9] 2019-09-03 12:31:03 +0900
Branch: REL_11_STABLE [f967a1fda] 2019-09-03 12:31:08 +0900
Branch: REL_10_STABLE [604d20679] 2019-09-03 12:31:14 +0900
-->
     <para>
      Fix memory leaks
      in <function>lower()</function>, <function>upper()</function>,
      and <function>initcap()</function> functions when using ICU
      collations (Konstantin Knizhnik)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8af1624e3] 2019-11-02 16:45:32 -0400
Branch: REL_12_STABLE [43753c2cf] 2019-11-02 16:45:32 -0400
Branch: REL_11_STABLE [65cdf8bc1] 2019-11-02 16:45:32 -0400
Branch: REL_10_STABLE [680aabd2f] 2019-11-02 16:45:32 -0400
Branch: REL9_6_STABLE [51b9ac558] 2019-11-02 16:45:32 -0400
Branch: master [db27b60f0] 2019-11-03 16:10:23 -0500
Branch: REL_12_STABLE [6dd92138d] 2019-11-03 16:10:38 -0500
Branch: REL_11_STABLE [88d03d73c] 2019-11-03 16:10:45 -0500
Branch: REL_10_STABLE [4077e9ae1] 2019-11-03 16:10:56 -0500
Branch: REL9_6_STABLE [d43bd9dce] 2019-11-03 16:11:05 -0500
-->
     <para>
      Avoid crashes if <literal>ispell</literal> text search dictionaries
      contain wrong affix data (Arthur Zakirov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [bde7493d1] 2019-08-28 12:55:33 +0300
Branch: REL_12_STABLE Release: REL_12_0 [6b7819a0b] 2019-08-28 12:56:03 +0300
Branch: REL_11_STABLE [1c99acc6e] 2019-08-28 12:57:10 +0300
Branch: REL_10_STABLE [756178232] 2019-08-28 13:02:58 +0300
Branch: REL9_6_STABLE [e2e616579] 2019-08-28 12:58:05 +0300
Branch: REL9_5_STABLE [cf00ca522] 2019-08-28 12:58:10 +0300
Branch: REL9_4_STABLE [6292cde1c] 2019-08-28 12:58:55 +0300
Branch: master [744c848dc] 2019-08-28 12:59:47 -0400
-->
     <para>
      Fix incorrect compression logic for GIN posting lists
      (Heikki Linnakangas)
     </para>

     <para>
      A GIN posting list item can require 7 bytes if the distance between
      adjacent indexed TIDs exceeds 16TB.  One step in the logic was out
      of sync with that, and might try to write the value into a 6-byte
      buffer.  In principle this could cause a stack overrun, but on most
      architectures it's likely that the next byte would be unused
      alignment padding, making the bug harmless.  In any case the bug
      would be very difficult to hit.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [e5d8f3596] 2019-09-08 22:08:12 +0300
Branch: REL_12_STABLE Release: REL_12_0 [bc67f4189] 2019-09-08 21:17:31 +0300
Branch: REL_11_STABLE [749b04d1d] 2019-09-08 21:41:56 +0300
Branch: REL_10_STABLE [8f724002e] 2019-09-08 21:47:34 +0300
Branch: REL9_6_STABLE [b2037afec] 2019-09-08 21:48:44 +0300
Branch: REL9_5_STABLE [986319d46] 2019-09-08 21:49:15 +0300
Branch: REL9_4_STABLE [111fb7e42] 2019-09-08 21:58:17 +0300
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [02f90879e] 2019-09-08 22:08:12 +0300
Branch: REL_12_STABLE Release: REL_12_0 [e6af7b367] 2019-09-08 21:17:37 +0300
Branch: REL_11_STABLE [d807200b4] 2019-09-08 21:46:58 +0300
Branch: REL_10_STABLE [92f6b49c4] 2019-09-08 21:47:34 +0300
Branch: REL9_6_STABLE [a5431b7d5] 2019-09-08 21:48:45 +0300
Branch: REL9_5_STABLE [3c155bafa] 2019-09-08 21:49:16 +0300
Branch: REL9_4_STABLE [1df412304] 2019-09-08 22:30:12 +0300
-->
     <para>
      Fix handling of infinity, NaN, and NULL values in KNN-GiST
      (Alexander Korotkov)
     </para>

     <para>
      The query's output order could be wrong (different from a plain
      sort's result) if some distances computed for non-null column values
      are infinity or NaN.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [6cae9d2c1] 2019-09-19 21:48:39 +0300
Branch: REL_12_STABLE Release: REL_12_0 [31cbd7605] 2019-09-19 21:49:07 +0300
Branch: REL_11_STABLE [d6a90aac5] 2019-09-19 21:49:32 +0300
Branch: REL_10_STABLE [2da8e56db] 2019-09-19 21:50:00 +0300
Branch: REL9_6_STABLE [53d9cf2db] 2019-09-19 21:50:44 +0300
Branch: REL9_5_STABLE [ad458d0cd] 2019-09-19 22:09:51 +0300
Branch: REL9_4_STABLE [332eda5bd] 2019-09-19 22:10:46 +0300
Branch: REL_11_STABLE [984b9ba1d] 2019-09-19 23:36:01 +0300
Branch: REL_10_STABLE [2f0434e8e] 2019-09-19 23:39:26 +0300
Branch: REL9_6_STABLE [140b7b1f9] 2019-09-19 23:39:31 +0300
Branch: REL9_5_STABLE [388939748] 2019-09-19 23:39:35 +0300
-->
     <para>
      Fix handling of searches for NULL in KNN-SP-GiST (Nikita Glukhov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [db477b691] 2019-10-21 14:18:01 -0400
Branch: REL_12_STABLE [4f2ad5226] 2019-10-21 14:18:16 -0400
Branch: REL_11_STABLE [a05a04d0e] 2019-10-21 14:18:31 -0400
Branch: REL_10_STABLE [aebe3ef0e] 2019-10-21 14:18:38 -0400
Branch: REL9_6_STABLE [185253ab8] 2019-10-21 14:18:47 -0400
Branch: REL9_5_STABLE [e3267407e] 2019-10-21 14:18:55 -0400
Branch: REL9_4_STABLE [fedcab352] 2019-10-21 14:19:03 -0400
-->
     <para>
      On Windows, recognize additional spellings of the <quote>Norwegian
      (Bokm&aring;l)</quote> locale name (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c8cb98ec4] 2019-11-07 14:21:52 -0500
Branch: REL_12_STABLE [101654987] 2019-11-07 14:21:52 -0500
Branch: REL_11_STABLE [89f56fc22] 2019-11-07 14:21:52 -0500
Branch: REL_10_STABLE [831ca9513] 2019-11-07 14:21:52 -0500
Branch: REL9_6_STABLE [baa483984] 2019-11-07 14:21:52 -0500
Branch: REL9_5_STABLE [b705d6391] 2019-11-07 14:21:52 -0500
Branch: REL9_4_STABLE [b20233aac] 2019-11-07 14:21:52 -0500
-->
     <para>
      Avoid compile failure if an ECPG client
      includes <filename>ecpglib.h</filename> while
      having <literal>ENABLE_NLS</literal> defined (Tom Lane)
     </para>

     <para>
      This risk was created by a misplaced
      declaration: <function>ecpg_gettext()</function> should not be
      visible to client code.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [aef362385] 2019-09-02 14:03:05 -0400
Branch: REL_12_STABLE Release: REL_12_0 [90433c38e] 2019-09-02 14:02:45 -0400
Branch: REL_11_STABLE [5524ef558] 2019-09-02 14:02:46 -0400
Branch: REL_10_STABLE [3080f8f61] 2019-09-02 14:02:46 -0400
Branch: REL9_6_STABLE [b0b2ef25e] 2019-09-02 14:02:46 -0400
Branch: REL9_5_STABLE [62724bd95] 2019-09-02 14:02:46 -0400
Branch: REL9_4_STABLE [89535db97] 2019-09-02 14:02:46 -0400
-->
     <para>
      In <application>psql</application>, resynchronize internal state
      about the server after an unexpected connection loss and successful
      reconnection (Peter Billen, Tom Lane)
     </para>

     <para>
      Ordinarily this is unnecessary since the state would be the same
      anyway.  But it can matter in corner cases, such as where the
      connection might lead to one of several servers.  This change
      causes <application>psql</application> to re-issue any interactive
      messages that it would have issued at startup, for example about
      whether SSL is in use.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6338fa3e7] 2019-08-25 15:04:04 -0400
Branch: REL_12_STABLE Release: REL_12_0 [363382521] 2019-08-25 15:04:04 -0400
Branch: REL_11_STABLE [5fc7b1e93] 2019-08-25 15:04:04 -0400
Branch: REL_10_STABLE [fb55e9539] 2019-08-25 15:04:04 -0400
Branch: REL9_6_STABLE [28d2ce3c7] 2019-08-25 15:04:04 -0400
Branch: REL9_5_STABLE [65b1cad5a] 2019-08-25 15:04:04 -0400
Branch: REL9_4_STABLE [c693c5c49] 2019-08-25 15:04:04 -0400
-->
     <para>
      Avoid platform-specific null pointer dereference
      in <application>psql</application> (Quentin Rameau)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5102f3944] 2019-11-04 16:25:05 -0500
Branch: REL_12_STABLE [ca27a84c9] 2019-11-04 16:25:05 -0500
Branch: REL_11_STABLE [078f5bc8e] 2019-11-04 16:25:05 -0500
Branch: REL_10_STABLE [ee8b95f26] 2019-11-04 16:25:05 -0500
Branch: REL9_6_STABLE [648f17879] 2019-11-04 16:25:05 -0500
Branch: REL9_5_STABLE [74d32ee70] 2019-11-04 16:25:05 -0500
Branch: REL9_4_STABLE [da5cd7a68] 2019-11-04 16:25:05 -0500
-->
     <para>
      In <application>pg_dump</application>, ensure stable output order
      for similarly-named triggers and row-level-security policy objects
      (Benjie Gillam)
     </para>

     <para>
      Previously, if two triggers on different tables had the same names,
      they would be sorted in OID-based order, which is less desirable
      than sorting them by table name.  Likewise for RLS policies.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [31d43710f] 2019-08-13 16:58:32 -0400
Branch: REL_12_STABLE Release: REL_12_0 [6844adba5] 2019-08-13 16:57:58 -0400
Branch: REL_11_STABLE [4dea8ad56] 2019-08-13 16:57:58 -0400
Branch: REL_10_STABLE [f2bdfebb9] 2019-08-13 16:57:58 -0400
Branch: REL9_6_STABLE [2b608ba31] 2019-08-13 16:57:59 -0400
Branch: REL9_5_STABLE [c56858487] 2019-08-13 16:57:59 -0400
Branch: REL9_4_STABLE [63ae888a9] 2019-08-13 16:57:59 -0400
-->
     <para>
      Fix <application>pg_dump</application> to work again with pre-8.3
      source servers (Tom Lane)
     </para>

     <para>
      A previous fix caused <application>pg_dump</application> to always
      try to query <structname>pg_opfamily</structname>, but that catalog
      doesn't exist before version 8.3.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: REL_11_STABLE [3574c0ac0] 2019-11-05 01:23:39 -0300
Branch: REL_10_STABLE [5ee8f0fe1] 2019-11-05 10:08:55 -0300
Branch: REL9_6_STABLE [12a51e2eb] 2019-11-05 09:57:36 -0300
Branch: REL9_5_STABLE [d38635725] 2019-11-05 09:57:36 -0300
Branch: REL9_4_STABLE [9fb25fda6] 2019-11-05 09:57:35 -0300
-->
     <para>
      In <application>pg_restore</application>, treat
      <option>-f -</option> as meaning <quote>output to stdout</quote>
      (&Aacute;lvaro Herrera)
     </para>

     <para>
      This synchronizes <application>pg_restore</application>'s behavior
      with some other applications, and in particular makes pre-v12 branches
      act similarly to version 12's <application>pg_restore</application>,
      simplifying creation of dump/restore scripts that work across
      multiple <productname>PostgreSQL</productname> versions.  Before this
      change, <application>pg_restore</application> interpreted such a
      switch as meaning <quote>output to a file
      named <filename>-</filename></quote>, but few people would want that.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [8d48e6a72] 2019-10-16 13:23:14 +0200
Branch: REL_12_STABLE [ebb4caa91] 2019-10-16 13:25:25 +0200
Branch: REL_11_STABLE [a970b6cde] 2019-10-16 13:26:22 +0200
Branch: REL_10_STABLE [2218fdca4] 2019-10-16 13:26:53 +0200
Branch: REL9_6_STABLE [0a643de08] 2019-10-16 13:27:24 +0200
Branch: REL9_5_STABLE [f57b01dd7] 2019-10-16 13:27:51 +0200
Branch: REL9_4_STABLE [235a52ca0] 2019-10-16 13:31:00 +0200
Branch: REL9_6_STABLE [e09ab32a2] 2019-10-16 16:20:07 +0200
Branch: REL9_5_STABLE [984aa0ede] 2019-10-16 16:23:09 +0200
Branch: REL9_4_STABLE [bc3a94dc0] 2019-10-16 16:28:48 +0200
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [a524f50d0] 2019-10-16 13:23:18 +0200
Branch: REL_12_STABLE [a8e49ae0c] 2019-10-16 13:25:37 +0200
Branch: REL_11_STABLE [d071a2539] 2019-10-16 13:26:26 +0200
Branch: REL_10_STABLE [e86ece221] 2019-10-16 13:26:56 +0200
-->
     <para>
      Improve <application>pg_upgrade</application>'s checks for the use
      of a data type that has changed representation, such
      as <type>line</type> (Tomas Vondra)
     </para>

     <para>
      The previous coding could be fooled by cases where the data type of
      interest underlies a stored column of a domain or composite type.
     </para>
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master [286af0ce1] 2019-09-06 08:22:32 -0400
Branch: REL_12_STABLE Release: REL_12_0 [ce5542d40] 2019-09-06 08:49:56 -0400
Branch: REL_11_STABLE [61c65cce4] 2019-09-06 08:53:13 -0400
Branch: REL_10_STABLE [62fb12d7e] 2019-09-06 08:56:45 -0400
Branch: REL9_6_STABLE [23df88226] 2019-09-06 09:01:45 -0400
Branch: REL9_5_STABLE [f697c6396] 2019-09-06 09:05:12 -0400
Branch: REL9_4_STABLE [fbe897134] 2019-09-06 09:09:09 -0400
-->
     <para>
      Detect file read errors
      during <application>pg_basebackup</application> (Jeevan Chalke)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [522baf148] 2019-09-04 13:21:11 +0900
Branch: REL_12_STABLE Release: REL_12_0 [64eb426af] 2019-09-04 13:23:41 +0900
Branch: REL_11_STABLE [996c92b27] 2019-09-04 13:24:06 +0900
Branch: REL_10_STABLE [dbbae33bc] 2019-09-04 13:24:12 +0900
-->
     <para>
      In <application>pg_basebackup</application>, don't fsync output files
      until the end of backup (Michael Paquier)
     </para>

     <para>
      The previous coding could result in timeout failures if fsync was slow.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [be182e4f9] 2019-08-28 11:47:35 +0900
Branch: REL_12_STABLE Release: REL_12_0 [e96f52443] 2019-08-28 11:48:15 +0900
Branch: REL_11_STABLE [f51006ea9] 2019-08-28 11:48:19 +0900
Branch: REL_10_STABLE [19bfa15a8] 2019-08-28 11:48:23 +0900
Branch: REL9_6_STABLE [d64789e97] 2019-08-28 11:48:29 +0900
Branch: REL9_5_STABLE [e9dcbc9c3] 2019-08-28 11:48:33 +0900
-->
     <para>
      In <application>pg_rewind</application> with an online source
      cluster, disable timeouts, much
      as <application>pg_dump</application> does (Alexander Kukushkin)
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [a0c96856e] 2019-11-07 16:31:36 +0900
Branch: REL_12_STABLE [e5cfb8cbb] 2019-11-07 16:32:37 +0900
Branch: REL_11_STABLE [fb53c4c07] 2019-11-07 16:32:58 +0900
Branch: REL_10_STABLE [127ad57f5] 2019-11-07 16:33:06 +0900
Branch: REL9_6_STABLE [aa7cd6a8e] 2019-11-07 16:33:23 +0900
Branch: REL9_5_STABLE [b1bebc2ce] 2019-11-07 16:33:47 +0900
Branch: REL9_4_STABLE [1accf9974] 2019-11-07 16:33:58 +0900
-->
     <para>
      Fix failure in <application>pg_waldump</application> with
      the <option>-s</option> option, when a continuation WAL record ends
      exactly at a page boundary (Andrey Lepikhov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [3b6b54f17] 2019-09-12 15:45:08 -0700
Branch: REL_12_STABLE Release: REL_12_0 [3097a0d6e] 2019-09-12 15:45:07 -0700
Branch: REL_11_STABLE [e87b00b5f] 2019-09-12 15:45:05 -0700
Branch: REL_10_STABLE [09b236af9] 2019-09-12 15:45:03 -0700
Branch: REL9_6_STABLE [835646503] 2019-09-12 15:45:01 -0700
Branch: REL9_5_STABLE [9064cc139] 2019-09-12 15:44:59 -0700
-->
     <para>
      In <application>pg_waldump</application>,
      include the <literal>newitemoff</literal> field in btree page split
      records (Peter Geoghegan)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [e4d92126f] 2019-10-29 22:53:05 -0700
Branch: REL_12_STABLE [d4b5206b2] 2019-10-29 22:53:30 -0700
Branch: REL_11_STABLE [3b24cf732] 2019-10-29 22:53:33 -0700
Branch: REL_10_STABLE [82200115e] 2019-10-29 22:53:37 -0700
Branch: REL9_6_STABLE [bc4f56c18] 2019-10-29 22:54:36 -0700
Branch: REL9_5_STABLE [39ff656a4] 2019-10-29 22:55:19 -0700
-->
     <para>
      In <application>pg_waldump</application> with
      the <option>--bkp-details</option> option, avoid emitting extra
      newlines for WAL records involving full-page writes (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [e0f76f204] 2019-10-29 19:18:07 -0700
Branch: REL_12_STABLE [4ab353c47] 2019-10-29 19:28:34 -0700
Branch: REL_11_STABLE [af67aee69] 2019-10-29 19:28:34 -0700
Branch: REL_10_STABLE [e3ff8c360] 2019-10-29 19:28:34 -0700
Branch: REL9_6_STABLE [95f2efd50] 2019-10-29 19:28:34 -0700
Branch: REL9_5_STABLE [c3882f8b8] 2019-10-29 19:28:34 -0700
-->
     <para>
      Fix small memory leak in <application>pg_waldump</application>
      (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [71d84efba] 2019-08-26 11:14:18 +0900
Branch: REL_12_STABLE Release: REL_12_0 [63fc3b124] 2019-08-26 11:14:24 +0900
Branch: REL_11_STABLE [5d76c8037] 2019-08-26 11:14:28 +0900
Branch: REL_10_STABLE [4fca14600] 2019-08-26 11:14:33 +0900
Branch: REL9_6_STABLE [eb91b8ee6] 2019-08-26 11:14:39 +0900
Branch: REL9_5_STABLE [a21ec1a95] 2019-08-26 11:14:44 +0900
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [9acda7311] 2019-08-27 09:11:31 +0900
Branch: REL_12_STABLE Release: REL_12_0 [b783a38d4] 2019-08-27 09:11:38 +0900
Branch: REL_11_STABLE [128e9b2cc] 2019-08-27 09:11:43 +0900
Branch: REL_10_STABLE [c90096009] 2019-08-27 09:11:48 +0900
Branch: REL9_6_STABLE [c4d75313e] 2019-08-27 09:12:10 +0900
Branch: REL9_5_STABLE [4ed3bda49] 2019-08-27 09:12:14 +0900
-->
     <para>
      Fix <application>vacuumdb</application> with a
      high <option>--jobs</option> option to handle running out of file
      descriptors better (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fe9b7b2fe] 2019-08-15 15:21:47 -0400
Branch: REL_12_STABLE Release: REL_12_0 [a4504696e] 2019-08-15 15:21:47 -0400
Branch: REL_11_STABLE [6070ccdd1] 2019-08-15 15:21:48 -0400
-->
     <para>
      Fix PL/pgSQL to handle replacements of composite types better
      (Tom Lane)
     </para>

     <para>
      Cover the case where a composite type is dropped entirely, and
      then a new type of the same name is created, between executions
      of a PL/pgSQL function.  Variables of the composite type will now
      update to match the new definition.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [6754fe65a] 2019-08-12 15:21:32 -0700
Branch: REL_12_STABLE Release: REL_12_0 [a05fa2c0e] 2019-08-12 15:21:30 -0700
Branch: REL_11_STABLE [4f393793f] 2019-08-12 15:21:28 -0700
Branch: REL_10_STABLE [f8d2cdc12] 2019-08-12 15:21:27 -0700
-->
     <para>
      Fix <filename>contrib/amcheck</filename> to skip unlogged indexes
      during hot standby (Andrey Borodin, Peter Geoghegan)
     </para>

     <para>
      An unlogged index won't necessarily contain valid data in this
      context, so don't try to check it.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [efc77cf5f] 2019-08-06 18:04:51 -0400
Branch: REL_12_STABLE Release: REL_12_0 [2f76f4182] 2019-08-06 18:04:51 -0400
Branch: REL_11_STABLE [113b3d903] 2019-08-06 18:04:51 -0400
Branch: REL_10_STABLE [5b3e6c13f] 2019-08-06 18:04:51 -0400
Branch: REL9_6_STABLE [e519eded6] 2019-08-06 18:04:51 -0400
Branch: REL9_5_STABLE [ced272d2d] 2019-08-06 18:04:52 -0400
Branch: REL9_4_STABLE [614119d00] 2019-08-06 18:04:52 -0400
-->
     <para>
      Fix <filename>contrib/intarray</filename>'s GiST opclasses to not
      fail for empty arrays with <literal>&lt;@</literal> (Tom Lane)
     </para>

     <para>
      A clause like <literal><replaceable>array_column</replaceable>
      &lt;@ <replaceable>constant_array</replaceable></literal> is
      considered indexable, but the index search may not find empty array
      values; of course, such entries should trivially match the search.
     </para>

     <para>
      The only practical back-patchable fix for this requires
      making <literal>&lt;@</literal> index searches scan the whole index,
      which is what this patch does.  This is unfortunate: it means that
      the query performance is likely worse than a plain sequential scan
      would be.
     </para>

     <para>
      Applications whose performance is adversely impacted by this change
      have a couple of options.  They could switch to a GIN index, which
      doesn't have this bug, or they could replace
      <literal><replaceable>array_column</replaceable>
      &lt;@ <replaceable>constant_array</replaceable></literal>
      with <literal><replaceable>array_column</replaceable>
      &lt;@ <replaceable>constant_array</replaceable>
      AND <replaceable>array_column</replaceable>
      &amp;&amp; <replaceable>constant_array</replaceable></literal>.
      That will provide about the same performance as before, and it will
      find all non-empty subsets of the given constant array, which is all
      that could reliably be expected of the query before.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d995fd667] 2019-10-21 13:52:25 -0400
Branch: REL_12_STABLE [ca658c91a] 2019-10-21 13:52:25 -0400
Branch: REL_11_STABLE [4e19bd41d] 2019-10-21 13:52:25 -0400
Branch: REL_10_STABLE [328b81348] 2019-10-21 13:52:25 -0400
Branch: REL9_6_STABLE [34621cb12] 2019-10-21 13:52:25 -0400
Branch: REL9_5_STABLE [8835e0bd4] 2019-10-21 13:52:26 -0400
Branch: REL9_4_STABLE [6d2b18d07] 2019-10-21 13:52:26 -0400
Branch: master [44273ce4f] 2019-10-21 12:32:35 -0400
Branch: REL_12_STABLE [aa5bb828a] 2019-10-21 12:32:35 -0400
Branch: REL_11_STABLE [99c51d5ed] 2019-10-21 12:32:36 -0400
Branch: REL_10_STABLE [e167b1ae3] 2019-10-21 12:32:36 -0400
Branch: REL9_6_STABLE [62ca50ad7] 2019-10-21 12:32:36 -0400
Branch: REL9_5_STABLE [11330c311] 2019-10-21 12:32:36 -0400
Branch: REL9_4_STABLE [727c2ccfe] 2019-10-21 12:32:36 -0400
-->
     <para>
      Fix <application>configure</application>'s test for presence of
      libperl so that it works on recent Red Hat releases (Tom Lane)
     </para>

     <para>
      Previously, it could fail if the user sets <literal>CFLAGS</literal>
      to <literal>-O0</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [89b4d7744] 2019-10-18 20:20:28 -0700
Branch: REL_12_STABLE [ef13f914e] 2019-10-18 20:20:31 -0700
Branch: REL_11_STABLE [af4477b00] 2019-10-18 20:20:32 -0700
Branch: REL_10_STABLE [083929372] 2019-10-18 20:20:32 -0700
Branch: REL9_6_STABLE [09d74aef3] 2019-10-18 20:20:32 -0700
Branch: REL9_5_STABLE [62e881946] 2019-10-18 20:20:32 -0700
Branch: REL9_4_STABLE [930787c7f] 2019-10-18 20:20:33 -0700
-->
     <para>
      Ensure correct code generation for spinlocks on PowerPC (Noah Misch)
     </para>

     <para>
      The previous spinlock coding allowed the compiler to select register
      zero for use with an assembly instruction that does not accept that
      register, causing a build failure.  We have seen only one long-ago
      report that matches this bug, but it could cause problems for people
      trying to build modified <productname>PostgreSQL</productname> code
      or use atypical compiler options.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [dd50f1a43] 2019-09-13 19:34:06 -0700
Branch: REL_12_STABLE Release: REL_12_0 [1c6b62a7d] 2019-09-13 19:34:18 -0700
Branch: REL_11_STABLE [40ad42025] 2019-09-13 19:34:18 -0700
Branch: REL_10_STABLE [8972ac696] 2019-09-13 19:34:19 -0700
Branch: REL9_6_STABLE [a1df9a015] 2019-09-13 19:34:19 -0700
Branch: REL9_5_STABLE [75941f257] 2019-09-13 19:34:19 -0700
-->
     <para>
      On PowerPC, avoid depending on the xlc
      compiler's <function>__fetch_and_add()</function> function
      (Noah Misch)
     </para>

     <para>
      xlc 13 and newer interpret this function in a way incompatible with
      our usage, resulting in an unusable build
      of <productname>PostgreSQL</productname>.  Fix by using custom
      assembly code instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [5f3d271d0] 2019-10-12 00:21:47 -0700
Branch: REL_12_STABLE [3fb14cfcb] 2019-10-12 00:21:50 -0700
Branch: REL_11_STABLE [e5b4926ef] 2019-10-12 00:21:50 -0700
Branch: REL_10_STABLE [77cc4a595] 2019-10-12 00:21:50 -0700
Branch: REL9_6_STABLE [c73f4f680] 2019-10-12 00:21:50 -0700
Branch: REL9_5_STABLE [e40eb31c0] 2019-10-12 00:21:51 -0700
Branch: REL9_4_STABLE [b705582b4] 2019-10-12 00:21:51 -0700
-->
     <para>
      On AIX, don't use the compiler option <option>-qsrcmsg</option>
      (Noah Misch)
     </para>

     <para>
      This avoids an internal compiler error with xlc v16.1.0, with little
      consequence other than changing the format of compiler error messages.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [ad7595b89] 2019-10-04 15:34:40 -0400
Branch: REL_12_STABLE [ec38d2311] 2019-10-04 15:39:27 -0400
Branch: REL_11_STABLE [3b9c22700] 2019-10-04 15:39:19 -0400
Branch: REL_10_STABLE [62d2caed6] 2019-10-04 15:39:12 -0400
Branch: REL9_6_STABLE [1e9a0487d] 2019-10-04 15:39:02 -0400
Branch: REL9_5_STABLE [6ca51b155] 2019-10-04 15:38:48 -0400
Branch: REL9_4_STABLE [8f8809091] 2019-10-04 15:38:36 -0400
-->
     <para>
      Fix MSVC build process to cope with spaces in the file path of
      OpenSSL (Andrew Dunstan)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [df4fbcd89] 2019-09-20 19:53:33 -0400
Branch: REL_12_STABLE Release: REL_12_0 [2966e30e5] 2019-09-20 19:53:52 -0400
Branch: REL_11_STABLE [24f64fba0] 2019-09-20 19:54:00 -0400
Branch: REL_10_STABLE [769802ef9] 2019-09-20 19:54:07 -0400
Branch: REL9_6_STABLE [0bd64398e] 2019-09-20 19:54:20 -0400
Branch: REL9_5_STABLE [128abdef7] 2019-09-20 19:54:29 -0400
Branch: REL9_4_STABLE [29e47f83c] 2019-09-20 19:54:36 -0400
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2019c for DST law changes in Fiji and Norfolk Island, plus
      historical corrections for Alberta, Austria, Belgium, British
      Columbia, Cambodia, Hong Kong, Indiana (Perry County), Kaliningrad,
      Kentucky, Michigan, Norfolk Island, South Korea, and Turkey.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11-5">
  <title>Release 11.5</title>

  <formalpara>
  <title>Release date:</title>
  <para>2019-08-08</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.4.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.5</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 11.1,
    see <xref linkend="release-11-1"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [ffa2d37e5] 2019-08-05 07:48:41 -0700
Branch: REL_12_STABLE [9993fa9dd] 2019-08-05 07:48:45 -0700
Branch: REL_11_STABLE [21f94c51f] 2019-08-05 07:48:45 -0700
Branch: REL_10_STABLE [2062007cb] 2019-08-05 07:48:45 -0700
Branch: REL9_6_STABLE [7da46192d] 2019-08-05 07:48:45 -0700
Branch: REL9_5_STABLE [752fa3dbf] 2019-08-05 07:48:45 -0700
Branch: REL9_4_STABLE [86737438b] 2019-08-05 07:48:46 -0700
-->
     <para>
      Require schema qualification to cast to a temporary type when using
      functional cast syntax (Noah Misch)
     </para>

     <para>
      We have long required invocations of temporary functions to
      explicitly specify the temporary schema, that
      is <literal>pg_temp.<replaceable>func_name</replaceable>(<replaceable>args</replaceable>)</literal>.
      Require this as well for casting to temporary types using functional
      notation, for
      example <literal>pg_temp.<replaceable>type_name</replaceable>(<replaceable>arg</replaceable>)</literal>.
      Otherwise it's possible to capture a function call using a temporary
      object, allowing privilege escalation in much the same ways that we
      blocked in CVE-2007-2138.
      (CVE-2019-10208)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4766dce0d] 2019-08-05 11:20:31 -0400
Branch: REL_12_STABLE [de4b75c15] 2019-08-05 11:20:33 -0400
Branch: REL_11_STABLE [a034418cf] 2019-08-05 11:20:34 -0400
-->
     <para>
      Fix execution of hashed subplans that require cross-type comparison
      (Tom Lane, Andreas Seltenreich)
     </para>

     <para>
      Hashed subplans used the outer query's original comparison operator
      to compare entries of the hash table.  This is the wrong thing if
      that operator is cross-type, since all the hash table entries will
      be of the subquery's output type.  For the set of hashable
      cross-type operators in core <productname>PostgreSQL</productname>,
      this mistake seems nearly harmless on 64-bit machines, but it can
      result in crashes or perhaps unauthorized disclosure of server
      memory on 32-bit machines.  Extensions might provide hashable
      cross-type operators that create larger risks.
      (CVE-2019-10209)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_12_BR [f946a4091] 2019-06-24 16:43:21 -0400
Branch: REL_11_STABLE [afaf48afb] 2019-06-24 16:43:05 -0400
Branch: REL_10_STABLE [cb8962ce8] 2019-06-24 16:43:05 -0400
Branch: REL9_6_STABLE [da1041fc3] 2019-06-24 16:43:05 -0400
Branch: REL9_5_STABLE [316f68932] 2019-06-24 16:43:05 -0400
Branch: REL9_4_STABLE [ddfb1b2ee] 2019-06-24 16:43:05 -0400
-->
     <para>
      Fix failure of <command>ALTER TABLE ... ALTER COLUMN TYPE</command>
      when altering multiple columns' types in one command (Tom Lane)
     </para>

     <para>
      This fixes a regression introduced in the most recent minor releases:
      indexes using the altered columns were not processed correctly,
      leading to strange failures during <command>ALTER TABLE</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [5562272a4] 2019-07-23 17:22:15 -0400
Branch: REL_12_STABLE [3ffe655c0] 2019-07-23 17:22:15 -0400
Branch: REL_11_STABLE [ec7f9a740] 2019-07-23 17:22:15 -0400
-->
     <para>
      Prevent dropping a partitioned table's trigger if there are pending
      trigger events in child partitions (&Aacute;lvaro Herrera)
     </para>

     <para>
      This notably applies to foreign key constraints, since those are
      implemented by triggers.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [2c84ea6cf] 2019-07-09 17:16:36 -0400
Branch: REL_12_STABLE [ae0a2945b] 2019-07-09 17:16:36 -0400
Branch: REL_11_STABLE [1637d959d] 2019-07-09 17:16:36 -0400
Branch: REL_11_STABLE [2ede93de9] 2019-07-10 09:13:50 -0400
-->
     <para>
      Include user-specified trigger arguments when copying a trigger
      definition from a partitioned table to one of its partitions
      (Patrick McHardy)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a0555ddab] 2019-07-22 14:55:40 -0400
Branch: REL_12_STABLE [79e573fa4] 2019-07-22 14:55:23 -0400
Branch: REL_11_STABLE [6cdefc82b] 2019-07-22 14:55:23 -0400
Branch: REL_10_STABLE [0e1deaa4c] 2019-07-22 14:55:23 -0400
-->
     <para>
      Install dependencies to prevent dropping partition key columns
      (Tom Lane)
     </para>

     <para>
      <command>ALTER TABLE ... DROP COLUMN</command> will refuse to drop
      a column that is a partition key column.  However, indirect drops
      (such as a cascade from dropping a key column's data type) had no
      such check, allowing the deletion of a key column.  This resulted in
      a badly broken partitioned table that could neither be accessed nor
      dropped.
     </para>

     <para>
      This fix adds <structname>pg_depend</structname> entries that
      enforce that the whole partitioned table, not just the key column,
      will be dropped if a cascaded drop forces removal of the key column.
      However, such entries will only be created when a partitioned table
      is created; so this fix does not remove the risk for pre-existing
      partitioned tables.  The issue can only arise for partition key
      columns of non-built-in data types, so it seems not to be a hazard
      for most users.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master Release: REL_12_BR [23cccb17f] 2019-06-28 14:51:08 -0400
Branch: REL_11_STABLE [43085a4f6] 2019-06-28 14:51:08 -0400
-->
     <para>
      Ensure that column numbers are correctly mapped between a partitioned
      table and its default partition (Amit Langote)
     </para>

     <para>
      Some operations misbehaved if the mapping wasn't exactly one-to-one,
      for example if there were dropped columns in one table and not the
      other.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master Release: REL_12_BR [55ed3defc] 2019-06-26 18:38:51 -0400
Branch: REL_11_STABLE [9653ca219] 2019-06-26 18:38:51 -0400
Branch: master Release: REL_12_BR [050098b14] 2019-06-27 11:57:10 -0400
Branch: REL_11_STABLE [e4f2d4fe9] 2019-06-27 11:57:10 -0400
-->
     <para>
      Ignore partitions that are foreign tables when creating indexes on
      partitioned tables (&Aacute;lvaro Herrera)
     </para>

     <para>
      Previously an error was thrown on encountering a foreign-table
      partition, but that's unhelpful and doesn't protect against any
      actual problem.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [489247b0e] 2019-08-04 11:18:45 -0400
Branch: REL_12_STABLE [865440714] 2019-08-04 11:18:45 -0400
Branch: REL_11_STABLE [e3967a16d] 2019-08-04 11:18:45 -0400
-->
     <para>
      Prune a partitioned table's default partition (that is, avoid
      uselessly scanning it) in more cases (Yuzuko Hosoya)
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [cfde23493] 2019-07-12 19:12:38 +1200
Branch: REL_12_STABLE [30a268ed2] 2019-07-12 19:11:45 +1200
Branch: REL_11_STABLE [757f1baa8] 2019-07-12 19:10:12 +1200
-->
     <para>
      Fix possible failure to prune partitions when there are
      multiple partition key columns of <type>boolean</type> type
      (David Rowley)
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [a5be4062f] 2019-07-03 23:44:54 +1200
Branch: REL_12_STABLE [0cce43a71] 2019-07-03 23:45:25 +1200
Branch: REL_11_STABLE [133f5ae21] 2019-07-03 23:45:42 +1200
Branch: REL_10_STABLE [232019b79] 2019-07-03 23:46:06 +1200
Branch: REL9_6_STABLE [388d05a5e] 2019-07-03 23:46:26 +1200
-->
     <para>
      Don't optimize away <literal>GROUP BY</literal> columns when the
      table involved is an inheritance parent (David Rowley)
     </para>

     <para>
      Normally, if a table's primary key column(s) are included
      in <literal>GROUP BY</literal>, it's safe to drop any other grouping
      columns, since the primary key columns are enough to make the groups
      unique.  This rule does not work if the query is also reading
      inheritance child tables, though; the parent's uniqueness does not
      extend to the children.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master Release: REL_12_BR [aca127c10] 2019-06-19 01:25:57 +1200
Branch: REL_11_STABLE [14d8b539d] 2019-06-19 02:13:52 +1200
-->
     <para>
      Avoid incorrect use of parallel hash join for semi-join queries
      (Thomas Munro)
     </para>

     <para>
      This error resulted in duplicate result rows from
      some <literal>EXISTS</literal> queries.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master Release: REL_12_BR [da53be23d] 2019-06-30 23:49:13 +0100
Branch: REL_11_STABLE [05dc5f476] 2019-06-30 23:49:23 +0100
Branch: REL_10_STABLE [a1637caee] 2019-06-30 23:49:25 +0100
Branch: REL9_6_STABLE [793eb94e3] 2019-06-30 23:49:29 +0100
Branch: REL9_5_STABLE [4a36c7715] 2019-06-30 23:49:31 +0100
-->
     <para>
      Avoid using unnecessary sort steps for some queries
      with <literal>GROUPING SETS</literal> (Andrew Gierth, Richard Guo)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d3751adcf] 2019-07-12 16:24:59 -0400
Branch: REL_12_STABLE [cee976c4e] 2019-07-12 16:24:59 -0400
Branch: REL_11_STABLE [5c1b7edc2] 2019-07-12 16:24:59 -0400
-->
     <para>
      Fix possible failure of planner's index endpoint probes (Tom Lane)
     </para>

     <para>
      When using a recently-created index to determine the minimum or
      maximum value of a column, the planner could select a recently-dead
      tuple that does not actually contain the endpoint value.  In the
      worst case the tuple might contain a null, resulting in a visible
      error <quote>found unexpected null value in index</quote>; more
      likely we would just end up using the wrong value, degrading the
      quality of planning estimates.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [f5825853e] 2019-07-10 10:15:32 +1200
Branch: REL_12_STABLE [abbb2e143] 2019-07-10 10:15:43 +1200
Branch: REL_11_STABLE [9509173d2] 2019-07-10 10:15:54 +1200
Branch: REL_10_STABLE [72b526779] 2019-07-10 10:16:02 +1200
-->
     <para>
      Fix failure to access trigger transition tables
      during <literal>EvalPlanQual</literal> rechecks (Alex Aktsipetrov)
     </para>

     <para>
      Triggers that rely on transition tables sometimes failed in the
      presence of concurrent updates.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3093eb2b8] 2019-07-16 18:17:47 -0400
Branch: REL_12_STABLE [e0d13dc6f] 2019-07-16 18:17:47 -0400
Branch: REL_11_STABLE [46e2a18d0] 2019-07-16 18:17:47 -0400
Branch: REL_10_STABLE [583025c3c] 2019-07-16 18:17:47 -0400
Branch: REL9_6_STABLE [a6e7eb42d] 2019-07-16 18:17:47 -0400
Branch: REL9_5_STABLE [f9208f246] 2019-07-16 18:17:47 -0400
Branch: REL9_4_STABLE [67bd6adcb] 2019-07-16 18:17:47 -0400
-->
     <para>
      Fix mishandling of multi-column foreign keys when rebuilding a
      foreign key constraint (Tom Lane)
     </para>

     <para>
      <command>ALTER TABLE</command> could make an incorrect decision about
      whether revalidation of a foreign key is necessary, if not all
      columns of the key are of the same type.  It seems likely that the
      error would always have been in the conservative direction, that is
      revalidating unnecessarily.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [14ef15a22] 2019-07-30 19:47:33 +0200
Branch: REL_12_STABLE [e1947f6c3] 2019-07-30 19:48:13 +0200
Branch: REL_11_STABLE [4dbf70b2f] 2019-07-30 19:48:26 +0200
Branch: REL_10_STABLE [859b3003d] 2019-07-30 19:48:39 +0200
-->
     <para>
      Don't build extended statistics for inheritance trees (Tomas Vondra)
     </para>

     <para>
      This avoids a <quote>tuple already updated by self</quote> error
      during <command>ANALYZE</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master Release: REL_12_BR [8b21b416e] 2019-06-18 18:23:16 -0400
Branch: REL_11_STABLE [5246d3e79] 2019-06-18 18:23:16 -0400
Branch: REL_10_STABLE [0772d8a00] 2019-06-18 18:23:16 -0400
Branch: REL9_6_STABLE [0ba35c7c9] 2019-06-18 18:23:16 -0400
-->
     <para>
      Avoid spurious deadlock errors when upgrading a tuple lock
      (Oleksii Kliukin)
     </para>

     <para>
      When two or more transactions are waiting for a transaction T1 to
      release a tuple-level lock, and T1 upgrades its lock to a higher
      level, a spurious deadlock among the waiting transactions could be
      reported when T1 finishes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3420851a2] 2019-07-29 18:49:04 -0400
Branch: REL_12_STABLE [d933816c0] 2019-07-29 18:49:04 -0400
Branch: REL_11_STABLE [0dcb1c6c4] 2019-07-29 18:49:04 -0400
Branch: REL_10_STABLE [af41ab50f] 2019-07-29 18:49:04 -0400
Branch: REL9_6_STABLE [c3b613e1b] 2019-07-29 18:49:04 -0400
-->
     <para>
      Fix failure to resolve deadlocks involving multiple parallel worker
      processes (Rui Hai Jiang)
     </para>

     <para>
      It is not clear whether this bug is reachable with non-artificial
      queries, but if it did happen, the queries involved in an
      otherwise-resolvable deadlock would block until canceled.
     </para>
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [e6feef571] 2019-07-18 13:41:10 -0700
Branch: REL_12_STABLE [613eabcd5] 2019-07-18 17:26:47 -0700
Branch: REL_11_STABLE [f5f20deda] 2019-07-18 14:01:17 -0700
Branch: REL_10_STABLE [955089d4d] 2019-07-18 16:49:10 -0700
Branch: REL9_6_STABLE [56afeb765] 2019-07-18 16:53:17 -0700
Branch: REL9_5_STABLE [8af1fccba] 2019-07-18 16:55:59 -0700
Branch: REL9_4_STABLE [2be355498] 2019-07-18 17:01:44 -0700
Branch: master [b538c90b1] 2019-07-18 17:04:50 -0700
Branch: REL_12_STABLE [5245552dd] 2019-07-18 17:26:56 -0700
Branch: REL_11_STABLE [477ebfc96] 2019-07-18 16:45:03 -0700
Branch: REL_10_STABLE [b0a7e0f07] 2019-07-18 16:49:25 -0700
Branch: REL9_6_STABLE [390bf90f7] 2019-07-18 16:53:25 -0700
Branch: REL9_5_STABLE [f1c72294b] 2019-07-18 16:56:18 -0700
Branch: REL9_4_STABLE [812623b69] 2019-07-18 17:01:58 -0700
-->
     <para>
      Prevent incorrect canonicalization of date ranges
      with <literal>infinity</literal> endpoints (Laurenz Albe)
     </para>

     <para>
      It's incorrect to try to convert an open range to a closed one or
      vice versa by incrementing or decrementing the endpoint value, if
      the endpoint is infinite; so leave the range alone in such cases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b9d2c5c7a] 2019-07-26 11:59:00 -0400
Branch: REL_12_STABLE [01e0538e8] 2019-07-26 11:59:00 -0400
Branch: REL_11_STABLE [ca918f99a] 2019-07-26 11:59:00 -0400
Branch: REL_10_STABLE [fa854112f] 2019-07-26 11:59:00 -0400
Branch: REL9_6_STABLE [30bed9f63] 2019-07-26 11:59:00 -0400
Branch: REL9_5_STABLE [13e493cf6] 2019-07-26 11:59:00 -0400
Branch: REL9_4_STABLE [81b29c871] 2019-07-26 11:59:00 -0400
-->
     <para>
      Fix loss of fractional digits when converting very
      large <type>money</type> values to <type>numeric</type> (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_12_BR [3c28fd228] 2019-06-19 11:02:19 +0900
Branch: REL_11_STABLE [6dfc94644] 2019-06-19 11:02:28 +0900
-->
     <para>
      Fix printing of <literal>BTREE_META_CLEANUP</literal> WAL records
      (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [d004147eb] 2019-07-18 13:22:56 -0700
Branch: REL_12_STABLE [7772dece9] 2019-07-18 13:22:54 -0700
Branch: REL_11_STABLE [6523f2ed3] 2019-07-18 13:22:53 -0700
-->
     <para>
      Prevent assertion failures due to mishandling of version-2 btree
      metapages (Peter Geoghegan)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_12_BR [1323bfce5] 2019-06-22 20:31:50 -0400
Branch: REL_11_STABLE [40dde8290] 2019-06-22 20:31:50 -0400
Branch: REL_10_STABLE [05399b148] 2019-06-22 20:31:50 -0400
Branch: REL9_6_STABLE [9895e3a36] 2019-06-22 20:31:50 -0400
Branch: REL9_5_STABLE [36d2c3ad3] 2019-06-22 20:31:50 -0400
Branch: REL9_4_STABLE [2854e2ab6] 2019-06-22 20:31:50 -0400
-->
     <para>
      Fix spinlock assembly code for MIPS CPUs so that it works on
      MIPS r6 (YunQiang Su)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5683b3495] 2019-07-03 18:08:53 -0400
Branch: REL_12_STABLE [1dd8cf1b4] 2019-07-03 18:08:53 -0400
Branch: REL_11_STABLE [24c5c711f] 2019-07-03 18:08:53 -0400
-->
     <para>
      Ensure that a record or row value returned from a PL/pgSQL function
      is marked with the function's declared composite type (Tom Lane)
     </para>

     <para>
      This avoids problems if the result is stored directly into a table.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b654714f9] 2019-07-25 12:11:17 -0400
Branch: REL_12_STABLE [c58cf97f2] 2019-07-25 12:11:18 -0400
Branch: REL_11_STABLE [11a0a4db3] 2019-07-25 12:11:19 -0400
Branch: REL_10_STABLE [cb65b454f] 2019-07-25 12:11:21 -0400
Branch: REL9_6_STABLE [ba27151d1] 2019-07-25 12:11:22 -0400
Branch: REL9_5_STABLE [6266654db] 2019-07-25 12:11:23 -0400
Branch: REL9_4_STABLE [8c52b77dd] 2019-07-25 12:11:24 -0400
-->
     <para>
      Make <application>libpq</application> ignore carriage return
      (<literal>\r</literal>) in connection service files
      (Tom Lane, Michael Paquier)
     </para>

     <para>
      In some corner cases, service files containing Windows-style
      newlines could be mis-parsed, resulting in connection failures.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0ec3e13c6] 2019-07-02 13:35:14 -0400
Branch: REL_12_STABLE [4f3648de2] 2019-07-02 13:35:14 -0400
Branch: REL_11_STABLE [074add6ed] 2019-07-02 13:35:14 -0400
Branch: REL_10_STABLE [90434e6f2] 2019-07-02 13:35:14 -0400
Branch: REL9_6_STABLE [47fe7a753] 2019-07-02 13:35:14 -0400
-->
     <para>
      In <application>psql</application>, avoid offering incorrect tab
      completion options
      after <literal>SET <replaceable>variable</replaceable> =</literal>
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4e784f351] 2019-07-24 18:14:43 -0400
Branch: REL_12_STABLE [d16e514be] 2019-07-24 18:14:45 -0400
Branch: REL_11_STABLE [cff13efb4] 2019-07-24 18:14:46 -0400
Branch: REL_10_STABLE [3808cf21f] 2019-07-24 18:14:27 -0400
-->
     <para>
      Fix a small memory leak in <application>psql</application>'s
      <literal>\d</literal> command (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [07b39083c] 2019-07-31 15:42:49 -0400
Branch: REL_12_STABLE [408f75938] 2019-07-31 15:42:50 -0400
Branch: REL_11_STABLE [c64e29705] 2019-07-31 15:42:50 -0400
Branch: REL_10_STABLE [7615afa48] 2019-07-31 15:42:50 -0400
Branch: REL9_6_STABLE [b31a98022] 2019-07-31 15:42:50 -0400
Branch: REL9_5_STABLE [9dd74ba5a] 2019-07-31 15:42:50 -0400
Branch: REL9_4_STABLE [4e10b6f82] 2019-07-31 15:42:50 -0400
-->
     <para>
      Fix <application>pg_dump</application> to ensure that custom operator
      classes are dumped in the right order (Tom Lane)
     </para>

     <para>
      If a user-defined opclass is the subtype opclass of a user-defined
      range type, related objects were dumped in the wrong order,
      producing an unrestorable dump.  (The underlying failure to handle
      opclass dependencies might manifest in other cases too, but this is
      the only known case.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_11_STABLE [e991b6cce] 2019-07-26 15:17:03 -0400
Branch: REL_10_STABLE [46c193213] 2019-07-26 15:17:03 -0400
-->
     <para>
      Fix possible lockup in <application>pgbench</application> when
      using <option>-R</option> option (Fabien Coelho)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [894af78f1] 2019-07-20 11:11:55 -0700
Branch: REL_12_STABLE [980224b4a] 2019-07-20 11:11:54 -0700
Branch: REL_11_STABLE [577c8802d] 2019-07-20 11:11:52 -0700
-->
     <para>
      Improve reliability of <filename>contrib/amcheck</filename>'s index
      verification (Peter Geoghegan)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e0f504885] 2019-08-04 14:05:34 -0400
Branch: REL_12_STABLE [df521ab79] 2019-08-04 14:05:35 -0400
Branch: REL_11_STABLE [e8b639357] 2019-08-04 14:05:35 -0400
-->
     <para>
      Fix handling of Perl <literal>undef</literal> values
      in <filename>contrib/jsonb_plperl</filename> (Ivan Panchenko)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [b2a3d706b] 2019-08-01 09:37:28 +0900
Branch: REL_12_STABLE [20f5cb195] 2019-08-01 09:37:48 +0900
Branch: REL_11_STABLE [a7eb28d0c] 2019-08-01 09:38:02 +0900
Branch: REL_10_STABLE [cb0074417] 2019-08-01 09:38:14 +0900
Branch: REL9_6_STABLE [957b822b5] 2019-08-01 09:38:20 +0900
Branch: REL9_5_STABLE [4536e494f] 2019-08-01 09:38:25 +0900
Branch: REL9_4_STABLE [eea28a3cb] 2019-08-01 09:38:29 +0900
-->
     <para>
      Fix <filename>contrib/passwordcheck</filename> to coexist with other
      users of <varname>check_password_hook</varname> (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f5a4ab23e] 2019-07-25 11:02:43 -0400
Branch: REL_12_STABLE [665329abe] 2019-07-25 11:02:57 -0400
Branch: REL_11_STABLE [5a1c61bdf] 2019-07-25 11:03:08 -0400
Branch: REL_10_STABLE [5c3d47287] 2019-07-25 11:03:13 -0400
Branch: REL9_6_STABLE [0a9ba5baa] 2019-07-25 11:03:21 -0400
Branch: REL9_5_STABLE [b22e24983] 2019-07-25 11:03:30 -0400
Branch: REL9_4_STABLE [0e259d4bc] 2019-07-25 11:03:37 -0400
-->
     <para>
      Fix <filename>contrib/sepgsql</filename> tests to work under recent
      SELinux releases (Mike Palmiotto)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [27cd521e6] 2019-07-26 10:01:18 +1200
Branch: REL_12_STABLE [3964d3bce] 2019-07-26 10:09:31 +1200
Branch: REL_11_STABLE [77d5dea38] 2019-07-26 10:09:54 +1200
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [803466b6f] 2019-08-04 13:07:12 -0400
Branch: REL_12_STABLE [4844c6303] 2019-08-04 13:07:12 -0400
Branch: REL_11_STABLE [45d6789e7] 2019-08-04 13:07:12 -0400
-->
     <para>
      Improve stability of <filename>src/test/kerberos</filename>
      and <filename>src/test/ldap</filename> regression tests
      (Thomas Munro, Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [7d81bdc8c] 2019-07-24 10:53:39 +0900
Branch: REL_12_STABLE [0ceb28da0] 2019-07-24 10:54:20 +0900
Branch: REL_11_STABLE [ca553394b] 2019-07-24 10:54:26 +0900
Branch: REL_10_STABLE [46fb7ff65] 2019-07-24 10:54:32 +0900
Branch: REL9_6_STABLE [c6f961bbb] 2019-07-24 10:54:39 +0900
-->
     <para>
      Improve stability of <filename>src/test/recovery</filename>
      regression tests (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_12_BR [eb9812f27] 2019-05-21 13:11:57 -0400
Branch: REL_11_STABLE [8d21512dc] 2019-07-22 17:14:22 -0400
Branch: REL_10_STABLE [7ac7bf50c] 2019-07-22 17:14:22 -0400
Branch: REL9_6_STABLE [75348a733] 2019-07-22 17:14:22 -0400
Branch: REL9_5_STABLE [69c3d5191] 2019-07-22 17:14:22 -0400
Branch: REL9_4_STABLE [19f9a5aed] 2019-07-22 17:14:22 -0400
-->
     <para>
      Reduce <systemitem>stderr</systemitem> output
      from <application>pg_upgrade</application>'s test script (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [1a721248f] 2019-07-24 11:41:39 -0400
Branch: REL_12_STABLE [bfa4263e7] 2019-07-24 11:47:58 -0400
Branch: REL_11_STABLE [1357181d4] 2019-07-24 11:48:25 -0400
-->
     <para>
      Fix <application>pgbench</application> regression tests to work on
      Windows (Fabien Coelho)
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master Release: REL_12_BR [660a2b190] 2019-06-21 20:34:23 -0700
Branch: REL_11_STABLE [a40dca815] 2019-06-21 20:47:34 -0700
Branch: REL_10_STABLE [6121ba9d1] 2019-06-21 20:58:42 -0700
Branch: REL9_6_STABLE [186113b04] 2019-06-21 20:59:38 -0700
-->
     <para>
      Fix TAP tests to work with msys Perl, in cases where the build
      directory is on a non-root msys mount point (Noah Misch)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [2b1394fc2] 2019-07-02 14:02:33 +0900
Branch: REL_12_STABLE [f2d069ce9] 2019-07-03 08:57:22 +0900
Branch: REL_11_STABLE [721963f24] 2019-07-03 08:57:39 +0900
Branch: REL_10_STABLE [0ce8e49b2] 2019-07-03 08:58:04 +0900
Branch: REL9_6_STABLE [78aaffd28] 2019-07-03 08:58:17 +0900
Branch: REL9_5_STABLE [3337fd192] 2019-07-03 08:58:28 +0900
Branch: REL9_4_STABLE [d49c127d9] 2019-07-03 08:58:34 +0900
-->
     <para>
      Support building Postgres with Microsoft Visual Studio 2019
      (Haribabu Kommi)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [20e99cddd] 2019-07-25 11:38:43 -0400
Branch: REL_12_STABLE [6e5417d77] 2019-07-25 11:39:26 -0400
Branch: REL_11_STABLE [fe9e63284] 2019-07-25 11:39:34 -0400
Branch: REL_10_STABLE [165f4eecf] 2019-07-25 11:39:45 -0400
Branch: REL9_6_STABLE [09fa17160] 2019-07-25 11:40:09 -0400
Branch: REL9_5_STABLE [4f435f78d] 2019-07-25 11:40:23 -0400
Branch: REL9_4_STABLE [53fd0f04b] 2019-07-25 11:40:34 -0400
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [cb9bb1578] 2019-07-25 14:42:02 -0400
Branch: REL_12_STABLE [b24537046] 2019-07-25 14:42:08 -0400
Branch: REL_11_STABLE [e465d9d40] 2019-07-25 14:42:12 -0400
Branch: REL_10_STABLE [ed304d1e2] 2019-07-25 14:42:16 -0400
Branch: REL9_6_STABLE [3f1c6d048] 2019-07-25 14:42:21 -0400
Branch: REL9_5_STABLE [4583605e6] 2019-07-25 14:42:25 -0400
Branch: REL9_4_STABLE [7ea91ae19] 2019-07-25 14:42:30 -0400
-->
     <para>
      In Visual Studio builds, honor <literal>WindowsSDKVersion</literal>
      environment variable, if that's set (Peifeng Qiu)
     </para>

     <para>
      This fixes build failures in some configurations.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_12_BR [d993e0fb8] 2019-06-26 10:44:46 +0900
Branch: REL_11_STABLE [0e08a3a1f] 2019-06-26 23:04:32 +0900
Branch: REL_10_STABLE [a55980559] 2019-06-26 23:05:06 +0900
Branch: REL9_6_STABLE [532960669] 2019-06-26 23:05:34 +0900
Branch: REL9_5_STABLE [d908a0087] 2019-06-26 23:05:54 +0900
Branch: REL9_4_STABLE [05b2758c3] 2019-06-26 23:06:14 +0900
-->
     <para>
      Support OpenSSL 1.1.0 and newer in Visual Studio builds
      (Juan Jos&eacute; Santamar&iacute;a Flecha, Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master Release: REL_12_BR [0089c3059] 2019-06-25 09:36:21 +1200
Branch: REL_11_STABLE [2839bf353] 2019-06-25 09:40:20 +1200
Branch: REL_10_STABLE [956611e4c] 2019-06-25 09:40:54 +1200
Branch: REL9_6_STABLE [3a3b361cc] 2019-06-25 09:41:15 +1200
Branch: REL9_5_STABLE [9ad5ea82d] 2019-06-25 09:44:10 +1200
-->
     <para>
      Allow <application>make</application> options to be passed down
      to <application>gmake</application> when non-GNU make is invoked at
      the top level (Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3754113f3] 2019-07-26 12:45:32 -0400
Branch: REL_12_STABLE [e31dfe99c] 2019-07-26 12:45:52 -0400
Branch: REL_11_STABLE [4459266bf] 2019-07-26 12:45:57 -0400
Branch: REL_10_STABLE [ae9b91be7] 2019-07-26 12:46:03 -0400
Branch: REL9_6_STABLE [51b47471f] 2019-07-26 12:46:10 -0400
Branch: REL9_5_STABLE [9ef811742] 2019-07-26 12:46:15 -0400
Branch: REL9_4_STABLE [6c4ffab76] 2019-07-26 12:46:20 -0400
-->
     <para>
      Avoid choosing <literal>localtime</literal>
      or <literal>posixrules</literal> as <varname>TimeZone</varname>
      during <application>initdb</application> (Tom Lane)
     </para>

     <para>
      In some cases <application>initdb</application> would choose one of
      these artificial zone names over the <quote>real</quote> zone name.
      Prefer any other match to the C library's timezone behavior over
      these two.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8ab66081c] 2019-07-26 13:07:08 -0400
Branch: REL_12_STABLE [d095b2fe6] 2019-07-26 13:07:08 -0400
Branch: REL_11_STABLE [d304313b0] 2019-07-26 13:07:08 -0400
Branch: REL_10_STABLE [55862b2e9] 2019-07-26 13:07:08 -0400
Branch: REL9_6_STABLE [f6c7c64e9] 2019-07-26 13:07:08 -0400
Branch: REL9_5_STABLE [f227aecb9] 2019-07-26 13:07:08 -0400
Branch: REL9_4_STABLE [e49132e63] 2019-07-26 13:07:08 -0400
-->
     <para>
      Adjust <structname>pg_timezone_names</structname> view to show
      the <literal>Factory</literal> time zone if and only if it has a
      short abbreviation (Tom Lane)
     </para>

     <para>
      Historically, IANA set up this artificial zone with
      an <quote>abbreviation</quote> like <literal>Local time zone must be
      set--see zic manual page</literal>.  Modern versions of the tzdb
      database show <literal>-00</literal> instead, but some platforms
      alter the data to show one or another of the historical phrases.
      Show this zone only if it uses the modern abbreviation.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f285322f9] 2019-07-17 18:26:23 -0400
Branch: REL_12_STABLE [59cea8f36] 2019-07-17 18:26:23 -0400
Branch: REL_11_STABLE [1d1ff50d2] 2019-07-17 18:26:23 -0400
Branch: REL_10_STABLE [ccc323b57] 2019-07-17 18:26:24 -0400
Branch: REL9_6_STABLE [22e73dea3] 2019-07-17 18:26:24 -0400
Branch: REL9_5_STABLE [417845646] 2019-07-17 18:26:24 -0400
Branch: REL9_4_STABLE [6db29a8fc] 2019-07-17 18:26:24 -0400
Branch: master [421466863] 2019-07-19 14:48:57 -0400
Branch: REL_12_STABLE [533522846] 2019-07-19 14:49:05 -0400
Branch: REL_11_STABLE [ee9417a04] 2019-07-19 14:49:10 -0400
Branch: REL_10_STABLE [8a4fa297a] 2019-07-19 14:49:15 -0400
Branch: REL9_6_STABLE [e480d8350] 2019-07-19 14:49:21 -0400
Branch: REL9_5_STABLE [caa22d72a] 2019-07-19 14:49:26 -0400
Branch: REL9_4_STABLE [847561c1d] 2019-07-19 14:49:31 -0400
-->
     <para>
      Sync our copy of the timezone library with IANA tzcode release 2019b
      (Tom Lane)
     </para>

     <para>
      This adds support for <application>zic</application>'s new <option>-b
      slim</option> option to reduce the size of the installed zone files.
      We are not currently using that, but may enable it in future.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [93907478e] 2019-07-17 19:15:21 -0400
Branch: REL_12_STABLE [d4f283162] 2019-07-17 19:15:35 -0400
Branch: REL_11_STABLE [bcafb675a] 2019-07-17 19:15:42 -0400
Branch: REL_10_STABLE [53256e892] 2019-07-17 19:15:48 -0400
Branch: REL9_6_STABLE [e3441b2a2] 2019-07-17 19:15:55 -0400
Branch: REL9_5_STABLE [a0c905f23] 2019-07-17 19:16:01 -0400
Branch: REL9_4_STABLE [8474656d9] 2019-07-17 19:16:13 -0400
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2019b for DST law changes in Brazil, plus
      historical corrections for Hong Kong, Italy, and Palestine.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11-4">
  <title>Release 11.4</title>

  <formalpara>
  <title>Release date:</title>
  <para>2019-06-20</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.3.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.4</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 11.1,
    see <xref linkend="release-11-1"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [09ec55b93] 2019-06-17 21:48:17 +0900
Branch: REL_11_STABLE [4c779ce32] 2019-06-17 21:48:25 +0900
Branch: REL_10_STABLE [90adc16ea] 2019-06-17 21:48:34 +0900
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [b67421178] 2019-06-17 22:13:57 +0900
Branch: REL_11_STABLE [27c464e42] 2019-06-17 22:14:04 +0900
Branch: REL_10_STABLE [d72a7e4da] 2019-06-17 22:14:09 +0900
-->
     <para>
      Fix buffer-overflow hazards in SCRAM verifier parsing
      (Jonathan Katz, Heikki Linnakangas, Michael Paquier)
     </para>

     <para>
      Any authenticated user could cause a stack-based buffer overflow by
      changing their own password to a purpose-crafted value.  In addition
      to the ability to crash the <productname>PostgreSQL</productname>
      server, this could suffice for executing arbitrary code as
      the <productname>PostgreSQL</productname> operating system account.
     </para>

     <para>
      A similar overflow hazard existed
      in <application>libpq</application>, which could allow a rogue
      server to crash a client or perhaps execute arbitrary code as the
      client's operating system account.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks Alexander
      Lakhin for reporting this problem.  (CVE-2019-10164)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6630ccad7] 2019-05-17 19:44:34 -0400
Branch: REL_11_STABLE [592d5d75b] 2019-05-17 19:44:19 -0400
Branch: master [3922f1064] 2019-05-16 16:25:43 -0400
Branch: REL_11_STABLE [51948c4e1] 2019-05-16 16:25:43 -0400
Branch: master [4b1fcb43d] 2019-05-16 11:58:21 -0400
Branch: REL_11_STABLE [10c5cc4b4] 2019-05-16 11:58:22 -0400
-->
     <para>
      Fix assorted errors in run-time partition pruning logic
      (Tom Lane, Amit Langote, David Rowley)
     </para>

     <para>
      These mistakes could lead to wrong answers in queries on partitioned
      tables, if the comparison value used for pruning is dynamically
      determined, or if multiple range-partitioned columns are involved in
      pruning decisions, or if stable (not immutable) comparison operators
      are involved.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [eaf0292c3] 2019-06-03 16:59:26 -0400
Branch: REL_11_STABLE [601084eb1] 2019-06-03 16:59:16 -0400
-->
     <para>
      Fix possible crash while trying to copy trigger definitions to a new
      partition (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e76de8861] 2019-06-12 12:29:39 -0400
Branch: REL_11_STABLE [0b6edb9fb] 2019-06-12 12:29:41 -0400
Branch: REL_10_STABLE [2981e5a61] 2019-06-12 12:29:42 -0400
Branch: REL9_6_STABLE [77d45b790] 2019-06-12 12:29:43 -0400
Branch: REL9_5_STABLE [f7e99de95] 2019-06-12 12:29:45 -0400
Branch: REL9_4_STABLE [9695ecf36] 2019-06-12 12:29:25 -0400
-->
     <para>
      Fix failure of <command>ALTER TABLE ... ALTER COLUMN TYPE</command>
      when the table has a partial exclusion constraint (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [ceac4505d] 2019-06-12 11:30:11 +0900
Branch: REL_11_STABLE [fa5f3a4bc] 2019-06-12 11:30:41 +0900
Branch: REL_10_STABLE [56a932533] 2019-06-12 11:31:00 +0900
Branch: REL9_6_STABLE [ff1a25601] 2019-06-12 11:31:14 +0900
Branch: REL9_5_STABLE [13f4b462d] 2019-06-12 11:31:20 +0900
-->
     <para>
      Fix failure of <command>COMMENT</command> command for comments on
      domain constraints (Daniel Gustafsson, Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [44e95b572] 2019-05-23 15:26:01 +0100
Branch: REL_11_STABLE [f7da492dc] 2019-05-23 15:38:33 +0100
Branch: REL_10_STABLE [99efd8d72] 2019-05-23 15:39:17 +0100
-->
     <para>
      Prevent possible memory clobber when there are duplicate columns in a
      hash aggregate's hash key list (Andrew Gierth)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [265728325] 2019-05-19 18:01:06 -0700
Branch: REL_11_STABLE [9fea0b0e2] 2019-05-19 18:16:41 -0700
-->
     <para>
      Fix incorrect argument null-ness checking during partial aggregation
      of aggregates with zero or multiple arguments (David Rowley, Kyotaro
      Horiguchi, Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [24c19e9f6] 2019-05-09 16:53:05 -0400
Branch: REL_11_STABLE [e7eed0baa] 2019-05-09 16:52:49 -0400
Branch: REL_10_STABLE [946cdf9ff] 2019-05-09 16:52:49 -0400
Branch: REL9_6_STABLE [3203714c3] 2019-05-09 16:52:49 -0400
-->
     <para>
      Fix faulty generation of merge-append plans (Tom Lane)
     </para>

     <para>
      This mistake could lead to <quote>could not find pathkey item to
      sort</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3d99a8139] 2019-06-12 19:43:08 -0400
Branch: REL_11_STABLE [f95d8f810] 2019-06-12 19:43:09 -0400
Branch: REL_10_STABLE [30d3df0a7] 2019-06-12 19:43:10 -0400
Branch: REL9_6_STABLE [ad3e61b28] 2019-06-12 19:42:39 -0400
Branch: REL9_5_STABLE [bf612fd3a] 2019-06-12 19:42:39 -0400
Branch: REL9_4_STABLE [8ace51a6b] 2019-06-12 19:42:39 -0400
-->
     <para>
      Fix incorrect printing of queries with duplicate join names
      (Philip Dub&eacute;)
     </para>

     <para>
      This oversight caused a dump/restore failure for views containing
      such queries.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6f34fcbbd] 2019-06-11 13:33:22 -0400
Branch: REL_11_STABLE [1c9034579] 2019-06-11 13:33:08 -0400
Branch: REL_10_STABLE [b6f5689aa] 2019-06-11 13:33:08 -0400
-->
     <para>
      Fix conversion of JSON string literals to JSON-type output columns
      in <function>json_to_record()</function>
      and <function>json_populate_record()</function> (Tom Lane)
     </para>

     <para>
      Such cases should produce the literal as a standalone JSON value, but
      the code misbehaved if the literal contained any characters requiring
      escaping.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8a29ed053] 2019-05-12 18:53:38 -0400
Branch: REL_11_STABLE [72ce7acaf] 2019-05-12 18:53:40 -0400
Branch: REL_10_STABLE [940f64792] 2019-05-12 18:53:41 -0400
Branch: REL9_6_STABLE [2a3dbc151] 2019-05-12 18:53:42 -0400
Branch: REL9_5_STABLE [d6de52636] 2019-05-12 18:53:43 -0400
Branch: REL9_4_STABLE [b1ca28e57] 2019-05-12 18:53:45 -0400
-->
     <para>
      Fix misoptimization of <literal>{1,1}</literal> quantifiers in
      regular expressions (Tom Lane)
     </para>

     <para>
      Such quantifiers were treated as no-ops and optimized away;
      but the documentation specifies that they impose greediness, or
      non-greediness in the case of the non-greedy
      variant <literal>{1,1}?</literal>, on the subexpression they're
      attached to, and this did not happen.  The misbehavior occurred
      only if the subexpression contained capturing parentheses or a
      back-reference.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [9b42e7137] 2019-05-13 10:27:59 -0700
Branch: REL_11_STABLE [bf78f50ba] 2019-05-13 10:27:57 -0700
-->
     <para>
      Avoid writing an invalid empty btree index page in the unlikely case
      that a failure occurs while processing INCLUDEd columns during a page
      split (Peter Geoghegan)
     </para>

     <para>
      The invalid page would not affect normal index operations, but it
      might cause failures in subsequent VACUUMs. If that has happened to
      one of your indexes, recover by reindexing the index.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [85ccb6899] 2019-05-11 21:27:29 -0400
Branch: REL_11_STABLE [eb97242c2] 2019-05-11 21:27:13 -0400
Branch: REL_10_STABLE [c3d113136] 2019-05-11 21:27:13 -0400
Branch: REL9_6_STABLE [27d3394b0] 2019-05-11 21:27:13 -0400
Branch: REL9_5_STABLE [899f943ca] 2019-05-11 21:27:13 -0400
-->
     <para>
      Avoid possible failures while initializing a new
      process's <structname>pg_stat_activity</structname> data (Tom Lane)
     </para>

     <para>
      Certain operations that could fail, such as converting strings
      extracted from an SSL certificate into the database encoding, were
      being performed inside a critical section.  Failure there would
      result in database-wide lockup due to violating the access protocol
      for shared <structname>pg_stat_activity</structname> data.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [610747d86] 2019-05-10 14:56:41 -0400
Branch: REL_11_STABLE [803f90ab7] 2019-05-10 14:56:41 -0400
Branch: REL_10_STABLE [3dcf45af5] 2019-05-10 14:56:41 -0400
Branch: REL9_6_STABLE [a73c8caea] 2019-05-10 14:56:41 -0400
Branch: REL9_5_STABLE [91a05390c] 2019-05-10 14:56:41 -0400
Branch: REL9_4_STABLE [b1cde67a4] 2019-05-10 14:56:41 -0400
-->
     <para>
      Fix race condition in check to see whether a pre-existing shared
      memory segment is still in use by a conflicting postmaster (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a1a789eb5] 2019-04-29 12:26:07 -0400
Branch: REL_11_STABLE [9346d396f] 2019-06-12 17:29:48 -0400
Branch: REL_10_STABLE [ac8f2e1ef] 2019-06-12 17:29:48 -0400
-->
     <para>
      Fix unsafe coding in walreceiver's signal handler (Tom Lane)
     </para>

     <para>
      This avoids rare problems in which the walreceiver process would
      crash or deadlock when commanded to shut down.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [fff2a7d7b] 2019-06-10 23:34:50 -0700
Branch: REL_11_STABLE [c01556017] 2019-06-10 23:35:38 -0700
Branch: REL_10_STABLE [52ad5fc0a] 2019-06-10 23:36:48 -0700
Branch: REL9_6_STABLE [b8607e15e] 2019-06-10 23:36:55 -0700
Branch: REL9_5_STABLE [483b2d7ae] 2019-06-10 23:36:59 -0700
Branch: REL9_4_STABLE [69f32206d] 2019-06-10 23:37:02 -0700
-->
     <para>
      Avoid attempting to do database accesses for parameter checking in
      processes that are not connected to a specific database (Vignesh C,
      Andres Freund)
     </para>

     <para>
      This error could result in failures like <quote>cannot read pg_class
      without having selected a database</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ddf927fb1] 2019-05-13 10:53:19 -0400
Branch: REL_11_STABLE [6b0e9411f] 2019-05-13 10:53:19 -0400
Branch: REL_10_STABLE [e3bf3c0f8] 2019-05-13 10:53:19 -0400
Branch: REL9_6_STABLE [8eaba0b93] 2019-05-13 10:53:19 -0400
Branch: REL9_5_STABLE [0ec3d2ab2] 2019-05-13 10:53:19 -0400
-->
     <para>
      Avoid possible hang in <application>libpq</application> if using SSL
      and OpenSSL's pending-data buffer contains an exact multiple of 256
      bytes (David Binderman)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [23bd3cec6] 2018-09-13 12:36:21 -0400
Branch: REL_11_STABLE [995b4fe0b] 2019-06-14 11:25:13 -0400
Branch: REL_10_STABLE [8de574aa8] 2019-06-14 11:25:13 -0400
Branch: REL9_6_STABLE [75b0f21e1] 2019-06-14 11:25:13 -0400
Branch: REL9_5_STABLE [77dc741a1] 2019-06-14 11:25:13 -0400
Branch: REL9_4_STABLE [37011bcb3] 2019-06-14 11:25:13 -0400
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [e3846a00c] 2019-06-15 18:15:23 +0100
Branch: REL_11_STABLE [7f28fc8e9] 2019-06-15 18:16:43 +0100
Branch: REL_10_STABLE [2913a892e] 2019-06-15 18:18:03 +0100
Branch: REL9_6_STABLE [5f5b6667e] 2019-06-15 18:19:30 +0100
Branch: REL9_5_STABLE [6335f8a99] 2019-06-15 18:21:41 +0100
Branch: REL9_4_STABLE [6c66865f3] 2019-06-15 18:23:16 +0100
-->
     <para>
      Improve <application>initdb</application>'s handling of multiple
      equivalent names for the system time zone (Tom Lane, Andrew Gierth)
     </para>

     <para>
      Make <application>initdb</application> examine
      the <filename>/etc/localtime</filename> symbolic link, if that
      exists, to break ties between equivalent names for the system time
      zone.  This makes <application>initdb</application> more likely to
      select the time zone name that the user would expect when multiple
      identical time zones exist.  It will not change the behavior
      if <filename>/etc/localtime</filename> is not a symlink to a zone
      data file, nor if the time zone is determined from
      the <envar>TZ</envar> environment variable.
     </para>

     <para>
      Separately, prefer <literal>UTC</literal> over other spellings of
      that time zone, when neither <envar>TZ</envar>
      nor <filename>/etc/localtime</filename> provide a hint.  This fixes
      an annoyance introduced by <application>tzdata</application> 2019a's
      change to make the <literal>UCT</literal> and <literal>UTC</literal>
      zone names equivalent: <application>initdb</application> was then
      preferring <literal>UCT</literal>, which almost nobody wants.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [b8c6014a6] 2019-05-22 14:48:00 +0900
Branch: REL_11_STABLE [8357a413f] 2019-05-22 14:48:14 +0900
Branch: REL_10_STABLE [0c2a5a862] 2019-05-22 14:48:30 +0900
Branch: REL9_6_STABLE [a21fb12e7] 2019-05-22 14:48:39 +0900
Branch: master [156c0c2df] 2019-05-23 10:48:17 +0900
Branch: REL_11_STABLE [a7b2fca15] 2019-05-23 10:48:24 +0900
Branch: REL_10_STABLE [2ccebcd23] 2019-05-23 10:48:29 +0900
Branch: REL9_6_STABLE [c82e8ba00] 2019-05-23 10:48:35 +0900
-->
     <para>
      Fix ordering of <command>GRANT</command> commands emitted
      by <application>pg_dump</application>
      and <application>pg_dumpall</application> for databases and
      tablespaces (Nathan Bossart, Michael Paquier)
     </para>

     <para>
      If cascading grants had been issued, restore might fail due to
      the <command>GRANT</command> commands being given in an order that
      didn't respect their interdependencies.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [33a53130a] 2019-06-10 18:56:23 -0400
Branch: REL_11_STABLE [6a781c4f5] 2019-06-10 18:56:23 -0400
Branch: REL_10_STABLE [1eb8a5ea4] 2019-06-10 18:56:23 -0400
-->
     <para>
      Make <application>pg_dump</application> recreate table partitions
      using <command>CREATE TABLE</command> then <command>ATTACH
      PARTITION</command>, rather than including <literal>PARTITION
      OF</literal> in the creation command (&Aacute;lvaro Herrera, David
      Rowley)
     </para>

     <para>
      This avoids problems with the partition's column order possibly being
      changed to match the parent's.  Also, a partition is now restorable
      from the dump (as a standalone table) even if its parent table isn't
      restored; the <command>ATTACH</command> will fail, but that can just
      be ignored.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [e51bad8fb] 2019-05-11 13:00:54 +0900
Branch: REL_11_STABLE [e16ab408f] 2019-05-11 13:01:07 +0900
Branch: REL_10_STABLE [c6354e943] 2019-05-11 13:01:12 +0900
Branch: REL9_6_STABLE [0c132d458] 2019-05-11 13:01:19 +0900
Branch: REL9_5_STABLE [e17fba8d8] 2019-05-11 13:01:24 +0900
Branch: REL9_4_STABLE [82ed20e15] 2019-05-11 13:01:29 +0900
-->
     <para>
      Fix misleading error reports
      from <application>reindexdb</application> (Julien Rouhaud)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [3ae3c18b3] 2019-05-09 10:29:10 +0900
Branch: REL_11_STABLE [25f12acd5] 2019-05-09 10:29:29 +0900
Branch: REL_10_STABLE [db8802a99] 2019-05-09 10:29:40 +0900
Branch: REL9_6_STABLE [a9a886c6f] 2019-05-09 10:29:52 +0900
Branch: REL9_5_STABLE [a475b1e77] 2019-05-09 10:30:08 +0900
-->
     <para>
      Ensure that <application>vacuumdb</application> returns correct
      status if an error occurs while using parallel jobs
      (Julien Rouhaud)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [2cd4e8357] 2019-06-03 18:06:04 -0400
Branch: REL_11_STABLE [57e85fa2c] 2019-06-03 18:06:04 -0400
Branch: REL_10_STABLE [ba38967d7] 2019-06-03 18:06:04 -0400
Branch: REL9_6_STABLE [efa121ae6] 2019-06-03 18:06:04 -0400
-->
     <para>
      Fix <filename>contrib/auto_explain</filename> to not cause problems
      in parallel queries (Tom Lane)
     </para>

     <para>
      Previously, a parallel worker might try to log its query even if the
      parent query were not being logged
      by <filename>auto_explain</filename>.  This would work sometimes, but
      it's confusing, and in some cases it resulted in failures
      like <quote>could not find key N in shm TOC</quote>.
     </para>

     <para>
      Also, fix an off-by-one error that resulted in not necessarily
      logging every query even when the sampling rate is set to 1.0.
     </para>
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: master [8b6da83d1] 2019-06-13 17:59:09 +0900
Branch: REL_11_STABLE [214460182] 2019-06-13 17:59:11 +0900
Branch: REL_10_STABLE [0f2b23426] 2019-06-13 17:59:12 +0900
Branch: REL9_6_STABLE [1ade21e7f] 2019-06-13 17:59:13 +0900
Branch: REL9_5_STABLE [eddb79705] 2019-06-13 17:59:15 +0900
Branch: REL9_4_STABLE [1a3d9f62c] 2019-06-13 17:59:17 +0900
-->
     <para>
      In <filename>contrib/postgres_fdw</filename>, account for possible
      data modifications by local <literal>BEFORE ROW UPDATE</literal>
      triggers (Shohei Mochizuki)
     </para>

     <para>
      If a trigger modified a column that was otherwise not changed by the
      <command>UPDATE</command>, the new value was not transmitted to the
      remote server.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [d02768ddd] 2019-05-12 10:33:05 -0700
Branch: REL_11_STABLE [4ec14e5aa] 2019-05-12 10:33:08 -0700
Branch: REL_10_STABLE [409f5303c] 2019-05-12 10:33:08 -0700
Branch: REL9_6_STABLE [ff7555c4f] 2019-05-12 10:33:36 -0700
Branch: REL9_5_STABLE [9dc65bcf9] 2019-05-12 10:34:22 -0700
Branch: REL9_4_STABLE [08e3fd96f] 2019-05-12 10:34:26 -0700
-->
     <para>
      On Windows, avoid failure when the database encoding is set to
      SQL_ASCII and we attempt to log a non-ASCII string (Noah Misch)
     </para>

     <para>
      The code had been assuming that such strings must be in UTF-8, and
      would throw an error if they didn't appear to be validly encoded.
      Now, just transmit the untranslated bytes to the log.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3f61b3205] 2019-05-31 12:34:54 -0400
Branch: REL_11_STABLE [312017fcc] 2019-05-31 12:34:54 -0400
Branch: REL_10_STABLE [683c17b30] 2019-05-31 12:34:54 -0400
Branch: REL9_6_STABLE [c332c94ad] 2019-05-31 12:34:55 -0400
Branch: REL9_5_STABLE [da53e4f93] 2019-05-31 12:34:55 -0400
Branch: REL9_4_STABLE [db5d99916] 2019-05-31 12:34:55 -0400
-->
     <para>
      Make <application>PL/pgSQL</application>'s header files C++-safe
      (George Tarasov)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11-3">
  <title>Release 11.3</title>

  <formalpara>
  <title>Release date:</title>
  <para>2019-05-09</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.2.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.3</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 11.1,
    see <xref linkend="release-11-1"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [1aebfbea8] 2019-05-06 11:38:43 +0100
Branch: REL_11_STABLE [0027ee3c5] 2019-05-06 11:41:22 +0100
Branch: REL_10_STABLE [940802830] 2019-05-06 11:43:09 +0100
Branch: REL9_6_STABLE [085d64d9d] 2019-05-06 11:45:01 +0100
Branch: REL9_5_STABLE [93c36145a] 2019-05-06 11:46:33 +0100
-->
     <para>
      Prevent row-level security policies from being bypassed via
      selectivity estimators (Dean Rasheed)
     </para>

     <para>
      Some of the planner's selectivity estimators apply user-defined
      operators to values found in <structname>pg_statistic</structname>
      (e.g., most-common values).  A leaky operator therefore can disclose
      some of the entries in a data column, even if the calling user lacks
      permission to read that column.  In CVE-2017-7484 we added
      restrictions to forestall that, but we failed to consider the
      effects of row-level security.  A user who has SQL permission to
      read a column, but who is forbidden to see certain rows due to RLS
      policy, might still learn something about those rows' contents via a
      leaky operator.  This patch further tightens the rules, allowing
      leaky operators to be applied to statistics data only when there is
      no relevant RLS policy.  (CVE-2019-10130)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [91248608a] 2019-05-06 21:44:24 +0900
Branch: REL_11_STABLE [52635c276] 2019-05-06 21:44:39 +0900
-->
     <para>
      Avoid access to already-freed memory during partition routing error
      reports (Michael Paquier)
     </para>

     <para>
      This mistake could lead to a crash, and in principle it might be
      possible to use it to disclose server memory contents.
      (CVE-2019-10129)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c01eb619a] 2019-04-26 17:18:07 -0400
Branch: REL_11_STABLE [02c359eed] 2019-04-26 17:18:07 -0400
-->
     <para>
      Avoid catalog corruption when an <command>ALTER TABLE</command> on a
      partitioned table finds that a partitioned index is reusable (Amit
      Langote, Tom Lane)
     </para>

     <para>
      This occurs, for example, when <command>ALTER COLUMN TYPE</command>
      finds that no physical table rewrite is required.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [cd3e27464] 2019-04-29 08:49:03 +0200
Branch: REL_11_STABLE [474982fc3] 2019-04-29 08:49:14 +0200
Branch: REL_10_STABLE [10b2675d6] 2019-04-29 08:49:22 +0200
-->
     <para>
      Avoid catalog corruption when a temporary table with <literal>ON
      COMMIT DROP</literal> and an identity column is created in a
      single-statement transaction (Peter Eisentraut)
     </para>

     <para>
      This hazard was overlooked because the case is not actually useful,
      since the temporary table would be dropped immediately after
      creation.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [126d63122] 2019-03-26 20:19:28 -0300
Branch: REL_11_STABLE [7009f1a2d] 2019-03-26 20:19:39 -0300
-->
     <para>
      Fix failure in <command>ALTER INDEX ... ATTACH PARTITION</command>
      if the partitioned table contains more dropped columns than its
      partition does (&Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [05b38c7e6] 2019-04-25 11:22:29 -0400
Branch: REL_11_STABLE [b1f570b57] 2019-04-25 11:37:08 -0400
-->
     <para>
      Fix failure to attach a partition's existing index to a newly-created
      partitioned index in some cases (Amit Langote, &Aacute;lvaro Herrera)
     </para>

     <para>
      This would lead to errors such as <quote>index ... not found in
      partition</quote> in subsequent DDL that uses the partitioned index.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a8cb8f124] 2019-04-08 12:20:22 -0400
Branch: REL_11_STABLE [b291488da] 2019-04-08 12:20:22 -0400
Branch: REL_10_STABLE [1b5bbe4bc] 2019-04-08 12:20:23 -0400
-->
     <para>
      Avoid crash when an EPQ recheck is performed for a partitioned query
      result relation (Amit Langote)
     </para>

     <para>
      This occurs when using <literal>READ COMMITTED</literal> isolation
      level and another session has concurrently updated some of the
      target row(s).
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [964bae4d8] 2019-04-08 13:44:55 +0900
Branch: REL_11_STABLE [6b0208ebc] 2019-04-08 13:45:14 +0900
-->
     <para>
      Fix tuple routing in multi-level partitioned tables that have dropped
      attributes (Amit Langote, Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [46e3442c9] 2019-04-06 15:09:09 -0400
Branch: REL_11_STABLE [c2a5fb33d] 2019-04-06 15:09:10 -0400
-->
     <para>
      Fix failure when the slow path of foreign key constraint initial
      validation is applied to partitioned tables (Hadi Moshayedi, Tom
      Lane, Andres Freund)
     </para>

     <para>
      This didn't manifest except in the uncommon cases where the fast
      path can't be used (such as permissions problems).
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ab5fcf2b0] 2019-02-22 12:23:19 -0500
Branch: REL_11_STABLE [07fba9ad9] 2019-02-22 12:23:20 -0500
Branch: REL_10_STABLE [58947fbd5] 2019-02-22 12:23:21 -0500
Branch: REL9_6_STABLE [714344ae6] 2019-02-22 12:23:00 -0500
Branch: REL9_5_STABLE [0fe3f6dd4] 2019-02-22 12:23:00 -0500
Branch: REL9_4_STABLE [99a1554a2] 2019-02-22 12:23:00 -0500
Branch: master [159970bca] 2019-04-07 12:54:22 -0400
Branch: REL_11_STABLE [10e3991fa] 2019-04-07 12:54:26 -0400
Branch: REL_10_STABLE [67999b354] 2019-04-07 12:54:26 -0400
-->
     <para>
      Fix behavior for an <command>UPDATE</command>
      or <command>DELETE</command> on an inheritance tree or partitioned
      table in which every table can be excluded (Amit Langote, Tom Lane)
     </para>

     <para>
      In such cases, the query did not report the correct set of output
      columns when a <literal>RETURNING</literal> clause was present, and
      if there were any statement-level triggers that should be fired, it
      didn't fire them.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e03ff7396] 2019-04-30 15:03:50 -0400
Branch: REL_11_STABLE [11ea45ffe] 2019-04-30 15:03:35 -0400
-->
     <para>
      When accessing a partition directly,
      and <varname>constraint_exclusion</varname> is set
      to <literal>on</literal>, use the partition's partition constraint
      as well as any <literal>CHECK</literal> constraints for exclusion
      checking (Amit Langote, Tom Lane)
     </para>

     <para>
      This change restores the behavior to what it was in v10.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4d5840cea] 2019-04-19 11:20:37 -0400
Branch: REL_11_STABLE [0998f32ca] 2019-04-19 11:20:37 -0400
-->
     <para>
      Avoid server crash when an error occurs while trying to persist
      a cursor query across a transaction commit (Tom Lane)
     </para>

     <para>
      If a procedure attempts to commit while it has an open explicit or
      implicit cursor (for example, a PL/pgSQL <command>FOR</command>-loop
      query), the cursor must be executed to completion and its results
      saved before the transaction commit can be performed.  An error
      occurring during such execution led to a crash.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [bb385c4fb] 2019-04-18 08:55:55 +0200
Branch: REL_11_STABLE [f993bacde] 2019-04-18 08:56:32 +0200
Branch: REL_10_STABLE [05d151e13] 2019-04-18 09:58:21 +0200
-->
     <para>
      Avoid throwing incorrect errors for updates of temporary tables and
      unlogged tables when a <literal>FOR ALL TABLES</literal> publication
      exists (Peter Eisentraut)
     </para>

     <para>
      Such tables should be ignored for publication purposes, but some
      parts of the code failed to do so.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [41531e42d] 2019-02-20 08:30:21 +0000
Branch: REL_11_STABLE [fbec6fa38] 2019-02-20 08:28:42 +0000
Branch: REL_10_STABLE [2b1971c03] 2019-02-20 08:27:24 +0000
Branch: REL9_6_STABLE [d31e421d7] 2019-02-20 08:25:24 +0000
Branch: REL9_5_STABLE [90f91bfbd] 2019-02-20 08:22:52 +0000
Branch: REL9_4_STABLE [5a73edf05] 2019-02-20 08:19:55 +0000
Branch: master [ed4653db8] 2019-03-03 10:51:13 +0000
Branch: REL_11_STABLE [6ccb97337] 2019-03-03 10:52:54 +0000
Branch: REL_10_STABLE [0a0844630] 2019-03-03 10:54:55 +0000
Branch: REL9_6_STABLE [133923aeb] 2019-03-03 10:56:05 +0000
Branch: REL9_5_STABLE [556fdd49c] 2019-03-03 10:57:37 +0000
Branch: REL9_4_STABLE [431471e1f] 2019-03-03 10:58:45 +0000
-->
     <para>
      Fix handling of explicit <literal>DEFAULT</literal> items in
      an <command>INSERT ... VALUES</command> command with
      multiple <literal>VALUES</literal> rows, if the target relation is
      an updatable view (Amit Langote, Dean Rasheed)
     </para>

     <para>
      When the updatable view has no default for the column but its
      underlying table has one, a single-row <command>INSERT
      ... VALUES</command> will use the underlying table's default.
      In the multi-row case, however, NULL was always used.  Correct it to
      act like the single-row case.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a32ca7883] 2019-02-17 12:37:31 -0500
Branch: REL_11_STABLE [4eca1905d] 2019-02-17 12:37:31 -0500
Branch: REL_10_STABLE [b355be443] 2019-02-17 12:37:32 -0500
Branch: REL9_6_STABLE [1f29a1d22] 2019-02-17 12:37:32 -0500
Branch: REL9_5_STABLE [0b476cf62] 2019-02-17 12:37:32 -0500
Branch: REL9_4_STABLE [9fdc49d08] 2019-02-17 12:37:32 -0500
-->
     <para>
      Fix <command>CREATE VIEW</command> to allow zero-column views
      (Ashutosh Sharma)
     </para>

     <para>
      We should allow this for consistency with allowing zero-column
      tables.  Since a table can be converted to a view, zero-column views
      could be created even with the restriction in place, leading to
      dump/reload failures.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [331a613e9] 2019-02-15 17:12:24 +0900
Branch: REL_11_STABLE [75aba11ec] 2019-02-15 17:12:31 +0900
Branch: REL_10_STABLE [3a2923a9b] 2019-02-15 17:12:36 +0900
Branch: REL9_6_STABLE [d08fae377] 2019-02-15 17:12:46 +0900
Branch: REL9_5_STABLE [06cdab9df] 2019-02-15 17:12:51 +0900
-->
     <para>
      Add missing support for <command>CREATE TABLE IF NOT EXISTS ... AS
      EXECUTE ...</command> (Andreas Karlsson)
     </para>

     <para>
      The combination of <literal>IF NOT EXISTS</literal>
      and <literal>EXECUTE</literal> should work, but the grammar omitted
      it.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [e2d28c0f4] 2019-04-02 08:13:59 +0100
Branch: REL_11_STABLE [157dcf534] 2019-04-02 08:17:04 +0100
Branch: REL_10_STABLE [db4bc9994] 2019-04-02 08:19:09 +0100
Branch: REL9_6_STABLE [1b9a2f458] 2019-04-02 08:20:55 +0100
Branch: REL9_5_STABLE [2e606d0ad] 2019-04-02 08:22:48 +0100
-->
     <para>
      Ensure that sub-<command>SELECT</command>s appearing in
      row-level-security policy expressions are executed with the correct
      user's permissions (Dean Rasheed)
     </para>

     <para>
      Previously, if the table having the RLS policy was accessed via a
      view, such checks might be executed as the user calling the view,
      not as the view owner as they should be.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8d1dadb25] 2019-03-23 16:51:37 -0400
Branch: REL_11_STABLE [849f87a1c] 2019-03-23 16:24:30 -0400
Branch: REL_10_STABLE [754ffcd42] 2019-03-23 16:24:30 -0400
Branch: REL9_6_STABLE [d7cfd5ee4] 2019-03-23 16:24:30 -0400
Branch: REL9_5_STABLE [da45927ce] 2019-03-23 16:24:30 -0400
Branch: REL9_4_STABLE [78f84fe0f] 2019-03-23 16:24:30 -0400
Branch: REL_10_STABLE [d88d71e31] 2019-03-23 17:35:04 -0400
Branch: REL9_6_STABLE [c4c2958c6] 2019-03-23 17:35:04 -0400
Branch: REL9_5_STABLE [809cccc35] 2019-03-23 17:35:05 -0400
Branch: REL9_4_STABLE [d5e9e2330] 2019-03-23 17:35:05 -0400
Branch: master [f778e537a] 2019-03-23 17:40:19 -0400
Branch: REL_11_STABLE [e319f03d1] 2019-03-23 17:40:19 -0400
Branch: REL_10_STABLE [581b890c2] 2019-03-23 17:40:19 -0400
Branch: REL9_6_STABLE [87a44b6cf] 2019-03-23 17:40:19 -0400
Branch: REL9_5_STABLE [06c320c8a] 2019-03-23 17:40:19 -0400
Branch: REL9_4_STABLE [432356a9d] 2019-03-23 17:40:19 -0400
Branch: master [4870dce37] 2019-03-23 16:51:37 -0400
Branch: REL_11_STABLE [7c89f350f] 2019-03-23 16:51:25 -0400
Branch: REL_10_STABLE [de922529f] 2019-03-23 16:51:25 -0400
Branch: REL9_6_STABLE [687acb598] 2019-03-23 16:51:25 -0400
Branch: REL9_5_STABLE [08d8cfe3c] 2019-03-23 16:51:26 -0400
Branch: REL9_4_STABLE [8ba485422] 2019-03-23 16:51:26 -0400
-->
     <para>
      Accept XML documents as valid values of type <type>xml</type>
      when <varname>xmloption</varname> is set
      to <literal>content</literal>, as required by SQL:2006 and later
      (Chapman Flack)
     </para>

     <para>
      Previously <productname>PostgreSQL</productname> followed the
      SQL:2003 definition, which doesn't allow this.  But that creates a
      serious problem for dump/restore: there is no setting
      of <varname>xmloption</varname> that will accept all valid XML data.
      Hence, switch to the 2006 definition.
     </para>

     <para>
      <application>pg_dump</application> is also modified to emit
      <literal>SET xmloption = content</literal> while restoring data,
      ensuring that dump/restore works even if the prevailing
      setting is <literal>document</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [c09850992] 2019-04-12 22:36:38 -0700
Branch: REL_11_STABLE [7ef2b313e] 2019-04-12 22:36:42 -0700
Branch: REL_10_STABLE [6d81e3c65] 2019-04-12 22:36:42 -0700
Branch: REL9_6_STABLE [808e1e75f] 2019-04-12 22:39:52 -0700
Branch: REL9_5_STABLE [c565de643] 2019-04-12 22:41:42 -0700
Branch: REL9_4_STABLE [3ef5e16c6] 2019-04-12 22:41:45 -0700
Branch: master [4ab02e815] 2019-04-14 20:02:19 -0700
Branch: REL_11_STABLE [0bdf6d635] 2019-04-14 20:02:22 -0700
Branch: REL_10_STABLE [4543ef36f] 2019-04-14 20:03:48 -0700
Branch: REL9_6_STABLE [9f65081cf] 2019-04-14 20:04:03 -0700
-->
     <para>
      Improve server's startup-time checks for whether a pre-existing
      shared memory segment is still in use (Noah Misch)
     </para>

     <para>
      The postmaster is now more likely to detect that there are still
      active processes from a previous postmaster incarnation, even if
      the <filename>postmaster.pid</filename> file has been removed.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [1e8719818] 2019-04-15 20:20:43 +0300
Branch: REL_11_STABLE [0d68ad3fc] 2019-04-15 21:52:32 +0300
-->
     <para>
      Avoid possible division-by-zero in btree index vacuum logic
      (Piotr Stefaniak, Alexander Korotkov)
     </para>

     <para>
      This could lead to incorrect decisions about whether index cleanup is
      needed.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [bdf35744b] 2019-04-10 08:24:15 +0530
Branch: REL_11_STABLE [036f7d378] 2019-04-10 08:36:42 +0530
Branch: REL_10_STABLE [7657072e0] 2019-04-10 08:47:39 +0530
Branch: REL9_6_STABLE [09630a1e9] 2019-04-10 09:00:09 +0530
-->
     <para>
      Avoid counting parallel workers' transactions as separate
      transactions (Haribabu Kommi)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: REL_11_STABLE [89f39736f] 2019-03-24 15:26:45 +0300
Branch: REL_10_STABLE [e23d44016] 2019-03-24 15:41:32 +0300
Branch: REL9_6_STABLE [f8a69a68a] 2019-03-24 15:44:31 +0300
Branch: REL9_5_STABLE [cda5f6575] 2019-03-24 15:44:56 +0300
Branch: REL9_4_STABLE [d1166af19] 2019-03-24 16:31:23 +0300
-->
     <para>
      Fix incompatibility of GIN-index WAL records (Alexander Korotkov)
     </para>

     <para>
      A fix applied in February's minor releases was not sufficiently
      careful about backwards compatibility, leading to problems if a
      standby server of that vintage reads GIN page-deletion WAL records
      generated by a primary server of a previous minor release.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [c34677fda] 2019-04-15 12:34:32 +0900
Branch: REL_11_STABLE [512902643] 2019-04-15 12:34:51 +0900
Branch: REL_10_STABLE [ab359624b] 2019-04-15 12:35:02 +0900
-->
     <para>
      Fix possible crash while executing a <command>SHOW</command> command
      in a replication connection (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f2004f19e] 2019-03-18 17:54:41 -0400
Branch: REL_11_STABLE [adf27de8e] 2019-03-18 17:54:43 -0400
-->
     <para>
      Avoid server memory leak when fetching rows from a portal one at a
      time (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5f1433ac5] 2019-04-13 13:22:26 -0400
Branch: REL_11_STABLE [089e4d405] 2019-04-13 13:22:26 -0400
Branch: REL_10_STABLE [d4c50b4b1] 2019-04-13 13:22:26 -0400
-->
     <para>
      Avoid memory leak when a partition's relation cache entry is rebuilt
      (Amit Langote, Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [483520eca] 2019-02-24 22:37:20 +1300
Branch: REL_11_STABLE [30dcb6270] 2019-02-24 22:43:54 +1300
Branch: REL_10_STABLE [387483e89] 2019-02-24 22:44:18 +1300
Branch: REL9_6_STABLE [64b8c51bc] 2019-02-24 22:44:57 +1300
Branch: master [f16735d80] 2019-02-24 23:50:20 +1300
Branch: REL_11_STABLE [4d67357db] 2019-02-24 23:51:54 +1300
Branch: REL_10_STABLE [bcf627834] 2019-02-24 23:52:20 +1300
Branch: REL9_6_STABLE [ad714c607] 2019-02-24 23:59:26 +1300
Branch: REL9_5_STABLE [0ec89a0f6] 2019-02-25 00:02:15 +1300
Branch: REL9_4_STABLE [ede6b1962] 2019-02-25 00:02:56 +1300
-->
     <para>
      Tolerate <literal>EINVAL</literal> and <literal>ENOSYS</literal>
      error results, where appropriate, for <function>fsync</function>
      and <function>sync_file_range</function> calls
      (Thomas Munro, James Sewell)
     </para>

     <para>
      The previous change to panic on file synchronization failures turns
      out to have been excessively paranoid for certain cases where a
      failure is predictable and essentially means <quote>operation not
      supported</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [98098faaf] 2019-02-22 13:00:16 -0300
Branch: REL_11_STABLE [630de1131] 2019-02-22 13:00:15 -0300
Branch: REL_10_STABLE [398cc6fb9] 2019-02-22 13:00:15 -0300
-->
     <para>
      Report correct relation name in
      autovacuum's <structname>pg_stat_activity</structname> display
      during BRIN summarize operations (&Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7ad6498fd] 2019-03-30 12:48:32 -0400
Branch: REL_11_STABLE [d70c147fa] 2019-03-30 12:48:19 -0400
-->
     <para>
      Avoid crash when trying to plan a partition-wise join when GEQO
      is active (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [45f8eaa8e] 2019-04-08 16:09:26 -0400
Branch: REL_11_STABLE [68e745ed0] 2019-04-08 16:09:27 -0400
Branch: REL_10_STABLE [051c71c67] 2019-04-08 16:09:29 -0400
Branch: REL9_6_STABLE [23791c415] 2019-04-08 16:09:07 -0400
Branch: REL9_5_STABLE [2f78974e2] 2019-04-08 16:09:07 -0400
Branch: REL9_4_STABLE [c6df3a28f] 2019-04-08 16:09:07 -0400
-->
     <para>
      Fix <quote>failed to build any <replaceable>N</replaceable>-way
      joins</quote> planner failures with lateral references leading out
      of <literal>FULL</literal> outer joins (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1d3385840] 2019-03-07 14:22:13 -0500
Branch: REL_11_STABLE [925f46ffb] 2019-03-07 14:21:52 -0500
Branch: REL_10_STABLE [19ff710aa] 2019-03-07 14:21:52 -0500
-->
     <para>
      Fix misplanning of queries in which a set-returning function is
      applied to a relation that is provably empty (Tom Lane, Julien
      Rouhaud)
     </para>

     <para>
      In v10, this oversight only led to slightly inefficient plans, but
      in v11 it could cause <quote>set-valued function called in context
      that cannot accept a set</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [a0905056f] 2019-05-06 11:54:32 +0100
Branch: REL_11_STABLE [98dad4cd4] 2019-05-06 11:56:37 +0100
Branch: REL_10_STABLE [ca74e3e0f] 2019-05-06 11:58:32 +0100
Branch: REL9_6_STABLE [71185228c] 2019-05-06 12:00:00 +0100
Branch: REL9_5_STABLE [01256815a] 2019-05-06 12:01:44 +0100
Branch: REL9_4_STABLE [3c0999909] 2019-05-06 12:05:05 +0100
-->
     <para>
      Check the appropriate user's permissions when enforcing rules about
      letting a leaky operator see <structname>pg_statistic</structname>
      data (Dean Rasheed)
     </para>

     <para>
      When an underlying table is being accessed via a view, consider the
      privileges of the view owner while deciding whether leaky operators
      may be applied to the table's statistics data, rather than the
      privileges of the user making the query.  This makes the planner's
      rules about what data is visible match up with the executor's,
      avoiding unnecessarily-poor plans.
     </para>
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: master [b5afdde6a] 2019-03-12 16:21:57 +0900
Branch: REL_11_STABLE [fd1eaf920] 2019-03-12 16:32:27 +0900
-->
     <para>
      Fix planner's parallel-safety assessment for grouped queries
      (Etsuro Fujita)
     </para>

     <para>
      Previously, target-list evaluation work that could have been
      parallelized might not be.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [75c46149f] 2019-02-12 18:38:32 -0500
Branch: REL_11_STABLE [364857f73] 2019-02-12 18:38:33 -0500
-->
     <para>
      Fix mishandling of <quote>included</quote> index columns in
      planner's unique-index logic (Tom Lane)
     </para>

     <para>
      This could result in failing to recognize that a unique index with
      included columns proves uniqueness of a query result, leading to a
      poor plan.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1571bc0f0] 2019-02-20 13:36:55 -0500
Branch: REL_11_STABLE [93ec0c90c] 2019-02-20 13:36:55 -0500
-->
     <para>
      Fix incorrect strictness check for array coercion expressions
      (Tom Lane)
     </para>

     <para>
      This might allow, for example, incorrect inlining of a strict SQL
      function, leading to non-enforcement of the strictness condition.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fa86238f1] 2019-02-20 20:53:17 -0500
Branch: REL_11_STABLE [e22bfe94e] 2019-02-20 20:53:08 -0500
Branch: REL_10_STABLE [affee8b14] 2019-02-20 20:53:08 -0500
Branch: REL9_6_STABLE [09c9dd39e] 2019-02-20 20:53:08 -0500
-->
     <para>
      Speed up planning when there are many equality conditions and many
      potentially-relevant foreign key constraints (David Rowley)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [6ca015f9f] 2019-03-27 02:39:39 +0100
Branch: REL_11_STABLE [fb0b5b0b8] 2019-03-27 03:18:54 +0100
Branch: REL_10_STABLE [5601f9fb9] 2019-03-27 03:19:33 +0100
Branch: REL9_6_STABLE [0a5dcb87a] 2019-03-27 03:20:10 +0100
Branch: REL9_5_STABLE [261aa218c] 2019-03-27 03:20:57 +0100
Branch: REL9_4_STABLE [31737eb43] 2019-03-27 03:24:35 +0100
-->
     <para>
      Avoid O(N^2) performance issue when rolling back a transaction that
      created many tables (Tomas Vondra)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [7215efdc0] 2019-02-13 13:24:11 +1300
Branch: REL_11_STABLE [b8386b036] 2019-02-13 13:25:27 +1300
Branch: REL_10_STABLE [2cfdf24e7] 2019-02-13 13:32:05 +1300
Branch: master [29ddb548f] 2019-02-25 11:11:40 +1300
Branch: REL_11_STABLE [50ae61903] 2019-02-25 11:12:57 +1300
Branch: REL_10_STABLE [406e937d1] 2019-02-25 11:13:50 +1300
-->
     <para>
      Fix corner-case server crashes in dynamic shared memory
      allocation (Thomas Munro, Robert Haas)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [0b55aaace] 2019-02-18 09:58:29 +1300
Branch: REL_11_STABLE [1d93d1804] 2019-02-18 09:59:27 +1300
Branch: REL_10_STABLE [7718a9920] 2019-02-18 10:02:37 +1300
Branch: master [6c0fb9418] 2019-02-15 14:05:09 +1300
Branch: REL_11_STABLE [faf132449] 2019-02-15 13:34:51 +1300
Branch: REL_10_STABLE [cb3d674e1] 2019-02-15 13:41:02 +1300
Branch: REL9_6_STABLE [cb0680573] 2019-02-15 13:44:50 +1300
Branch: REL9_5_STABLE [b7c8766d3] 2019-02-15 13:48:08 +1300
Branch: REL9_4_STABLE [bd195071f] 2019-02-15 13:54:27 +1300
-->
     <para>
      Fix race conditions in management of dynamic shared memory
      (Thomas Munro)
     </para>
     <para>
      These could lead to <quote>dsa_area could not attach to
      segment</quote> or <quote>cannot unpin a segment that is not
      pinned</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0fae84623] 2019-04-24 14:15:44 -0400
Branch: REL_11_STABLE [f8642fb17] 2019-04-24 14:15:44 -0400
Branch: REL_10_STABLE [a0bbd012d] 2019-04-24 14:15:44 -0400
Branch: REL9_6_STABLE [ec537c1e8] 2019-04-24 14:15:45 -0400
Branch: REL9_5_STABLE [c7e38be4d] 2019-04-24 14:15:45 -0400
Branch: REL9_4_STABLE [f0c82454d] 2019-04-24 14:15:45 -0400
-->
     <para>
      Fix race condition in which a hot-standby postmaster could fail to
      shut down after receiving a smart-shutdown request (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [5721b9b3c] 2019-02-20 11:26:08 -0300
Branch: REL_11_STABLE [728ac262d] 2019-02-20 11:22:48 -0300
Branch: REL_10_STABLE [ddad002de] 2019-02-20 11:22:13 -0300
Branch: REL9_6_STABLE [e4542ca96] 2019-02-20 09:12:02 -0300
Branch: REL9_5_STABLE [545928bbb] 2019-02-20 09:16:00 -0300
-->
     <para>
      Fix possible crash
      when <function>pg_identify_object_as_address()</function> is given
      invalid input (&Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [d2fd7f74e] 2019-03-27 21:30:04 +1300
Branch: REL_11_STABLE [26d4fda37] 2019-03-27 21:30:49 +1300
Branch: REL_10_STABLE [339927797] 2019-03-27 21:31:29 +1300
-->
     <para>
      Fix possible <quote>could not access status of transaction</quote>
      failures in <function>txid_status()</function> (Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [87c346a35] 2019-02-28 09:40:28 +0900
Branch: REL_11_STABLE [d9bba27c8] 2019-02-28 09:40:39 +0900
-->
     <para>
      Fix authentication failure when attempting to use SCRAM
      authentication with mixed OpenSSL library versions (Michael Paquier,
      Peter Eisentraut)
     </para>

     <para>
      If <application>libpq</application> is using OpenSSL 1.0.1 or older
      while the server is using OpenSSL 1.0.2 or newer, the negotiation of
      which SASL mechanism to use went wrong, leading to a
      confusing <quote>channel binding not supported by this build</quote>
      error message.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [ccae190b9] 2019-04-23 15:43:21 +0900
Branch: REL_11_STABLE [7f56d4366] 2019-04-23 15:43:32 +0900
Branch: REL_10_STABLE [15fe91e70] 2019-04-23 15:43:38 +0900
Branch: REL9_6_STABLE [af298f00a] 2019-04-24 09:05:25 +0900
Branch: REL9_5_STABLE [20dbc84bd] 2019-04-24 09:05:30 +0900
Branch: REL9_4_STABLE [a82c06f40] 2019-04-24 09:05:37 +0900
-->
     <para>
      Tighten validation of encoded SCRAM-SHA-256 and MD5 passwords
      (Jonathan Katz)
     </para>

     <para>
      A password string that had the right initial characters could be
      mistaken for one that is correctly hashed into SCRAM-SHA-256 or MD5
      format.  The password would be accepted but would be unusable later.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7ad1cd31b] 2019-04-23 18:51:30 -0400
Branch: REL_11_STABLE [e899df6a2] 2019-04-23 18:51:31 -0400
Branch: REL_10_STABLE [7c02c3f75] 2019-04-23 18:51:31 -0400
Branch: REL9_6_STABLE [1e5de9662] 2019-04-23 18:51:31 -0400
Branch: REL9_5_STABLE [74589026f] 2019-04-23 18:51:31 -0400
Branch: REL9_4_STABLE [c0bafc5e5] 2019-04-23 18:51:31 -0400
-->
     <para>
      Fix handling of <varname>lc_time</varname> settings that imply an
      encoding different from the database's encoding (Juan Jos&eacute;
      Santamar&iacute;a Flecha, Tom Lane)
     </para>

     <para>
      Localized month or day names that include non-ASCII characters
      previously caused unexpected errors or wrong output in such locales.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [276d2e6c2] 2019-03-24 21:00:35 +0900
Branch: REL_11_STABLE [7d7435c5c] 2019-03-24 21:01:10 +0900
-->
     <para>
      Create the <filename>current_logfiles</filename> file with the same
      permissions as other files in the server's data directory
      (Haribabu Kommi)
     </para>

     <para>
      Previously it used the permissions specified
      by <varname>log_file_mode</varname>, but that can cause problems for
      backup utilities.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4cae471d1] 2019-04-10 19:02:21 -0400
Branch: REL_11_STABLE [930930c47] 2019-04-10 19:02:32 -0400
Branch: REL_10_STABLE [99bbff5c1] 2019-04-10 19:02:58 -0400
Branch: REL9_6_STABLE [62d495395] 2019-04-10 19:03:14 -0400
Branch: REL9_5_STABLE [b9b7fe8ca] 2019-04-10 19:03:29 -0400
-->
     <para>
      Fix incorrect <varname>operator_precedence_warning</varname> checks
      involving unary minus operators (Rikard Falkeborn)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ac75959cd] 2019-03-10 12:59:16 -0400
Branch: REL_11_STABLE [bc2232f2f] 2019-03-10 12:58:52 -0400
Branch: REL_10_STABLE [f9ec64df8] 2019-03-10 12:58:52 -0400
Branch: REL9_6_STABLE [5aafedc2f] 2019-03-10 12:58:52 -0400
Branch: REL9_5_STABLE [d8f8183c0] 2019-03-10 12:58:52 -0400
Branch: REL9_4_STABLE [e04bb2616] 2019-03-10 12:58:52 -0400
-->
     <para>
      Disallow <literal>NaN</literal> as a value for floating-point server
      parameters (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [3dbb317d3] 2019-04-29 19:42:08 -0700
Branch: REL_11_STABLE [14323493d] 2019-04-29 19:42:09 -0700
Branch: REL_10_STABLE [f495b65a5] 2019-04-29 19:42:09 -0700
Branch: REL9_6_STABLE [17126e089] 2019-04-29 19:42:58 -0700
Branch: REL9_5_STABLE [670a492c5] 2019-04-29 19:43:32 -0700
Branch: REL9_4_STABLE [e7418f89f] 2019-04-29 19:48:58 -0700
Branch: master [4b40d40b3] 2019-04-30 17:45:32 -0700
Branch: REL_11_STABLE [d264bb51c] 2019-04-30 17:45:32 -0700
Branch: REL_10_STABLE [d8d5e1ae5] 2019-04-30 17:45:32 -0700
Branch: REL9_6_STABLE [d18f5ff90] 2019-04-30 17:45:32 -0700
Branch: REL9_5_STABLE [5409e359f] 2019-04-30 17:45:32 -0700
Branch: REL9_4_STABLE [40230f0e2] 2019-04-30 17:45:32 -0700
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f912d7dec] 2019-05-02 19:11:28 -0400
Branch: REL_11_STABLE [727c155cf] 2019-05-02 19:11:28 -0400
Branch: REL_10_STABLE [18138066f] 2019-05-02 19:11:28 -0400
Branch: REL9_6_STABLE [2bb1adfac] 2019-05-02 19:11:28 -0400
Branch: REL9_5_STABLE [d18ef6905] 2019-05-02 19:11:28 -0400
Branch: REL9_4_STABLE [5f8e84ff4] 2019-05-02 19:11:29 -0400
-->
     <para>
      Rearrange <command>REINDEX</command> processing to avoid assertion
      failures when reindexing individual indexes
      of <structname>pg_class</structname> (Andres Freund, Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0a9d7e1f6] 2019-03-14 12:16:36 -0400
Branch: REL_11_STABLE [5b866005c] 2019-03-14 12:16:09 -0400
Branch: REL_10_STABLE [d4b754c87] 2019-03-14 12:16:09 -0400
Branch: REL9_6_STABLE [0255329a7] 2019-03-14 12:16:09 -0400
Branch: REL9_5_STABLE [71288846e] 2019-03-14 12:16:10 -0400
Branch: REL9_4_STABLE [98f8ffa18] 2019-03-14 12:16:10 -0400
-->
     <para>
      Fix planner assertion failure for parameterized dummy paths (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [56fadbedb] 2019-02-20 12:31:07 +0900
Branch: REL_11_STABLE [7ed9285c6] 2019-02-20 12:31:27 +0900
Branch: REL_10_STABLE [a80f5c279] 2019-02-20 12:31:32 +0900
Branch: REL9_6_STABLE [f13188951] 2019-02-20 12:31:45 +0900
Branch: REL9_5_STABLE [03cd99a8e] 2019-02-20 12:32:15 +0900
Branch: REL9_4_STABLE [2ad57e9e9] 2019-02-20 12:32:23 +0900
-->
     <para>
      Insert correct test function in the result
      of <function>SnapBuildInitialSnapshot()</function> (Antonin Houska)
     </para>

     <para>
      No core code cares about this, but some extensions do.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [617dc6d29] 2019-04-08 21:39:00 -0700
Branch: REL_11_STABLE [e45a8ff87] 2019-04-08 21:39:03 -0700
Branch: REL_10_STABLE [f5989b379] 2019-04-08 21:39:04 -0700
Branch: REL9_6_STABLE [57ebbbb8f] 2019-04-08 21:39:04 -0700
Branch: REL9_5_STABLE [7a5677818] 2019-04-08 21:39:04 -0700
Branch: REL9_4_STABLE [203886d3a] 2019-04-08 21:39:05 -0700
Branch: master [ba3fb5d4f] 2019-04-09 08:25:39 -0700
Branch: REL_11_STABLE [47b6362b5] 2019-04-09 08:25:42 -0700
Branch: REL_10_STABLE [4c9e54572] 2019-04-09 08:25:42 -0700
Branch: REL9_6_STABLE [3318c4555] 2019-04-09 08:25:42 -0700
Branch: REL9_5_STABLE [292e2000e] 2019-04-09 08:25:43 -0700
Branch: REL9_4_STABLE [3105844e2] 2019-04-09 08:25:43 -0700
-->
     <para>
      Fix intermittent <quote>could not reattach to shared memory</quote>
      session startup failures on Windows (Noah Misch)
     </para>

     <para>
      A previously unrecognized source of these failures is creation of
      thread stacks for a process's default thread pool.  Arrange for such
      stacks to be allocated in a different memory region.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [754b90f65] 2019-03-04 09:49:06 +0900
Branch: REL_11_STABLE [8722c4dac] 2019-03-04 09:50:02 +0900
Branch: REL_10_STABLE [9aa59e64b] 2019-03-04 09:50:06 +0900
Branch: REL9_6_STABLE [d95133163] 2019-03-04 09:50:14 +0900
Branch: REL9_5_STABLE [977f83377] 2019-03-04 09:50:19 +0900
Branch: REL9_4_STABLE [81f5b3283] 2019-03-04 09:50:24 +0900
-->
     <para>
      Fix error detection in directory scanning on Windows (Konstantin
      Knizhnik)
     </para>

     <para>
      Errors, such as lack of permissions to read the directory, were not
      detected or reported correctly; instead the code silently acted as
      though the directory were empty.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9e138a401] 2019-02-24 12:51:50 -0500
Branch: REL_11_STABLE [de94ed89d] 2019-02-24 12:51:50 -0500
Branch: REL_10_STABLE [8ec638e69] 2019-02-24 12:51:50 -0500
Branch: REL9_6_STABLE [904fce2a7] 2019-02-24 12:51:50 -0500
Branch: REL9_5_STABLE [3a682a21b] 2019-02-24 12:51:51 -0500
Branch: REL9_4_STABLE [53c2bb78d] 2019-02-24 12:51:51 -0500
-->
     <para>
      Fix grammar problems in <application>ecpg</application> (Tom Lane)
     </para>

     <para>
      A missing semicolon led to mistranslation
      of <literal>SET <replaceable>variable</replaceable> =
      DEFAULT</literal> (but
      not <literal>SET <replaceable>variable</replaceable> TO
      DEFAULT</literal>) in <application>ecpg</application> programs,
      producing syntactically invalid output that the server would reject.
      Additionally, in a <command>DROP TYPE</command> or <command>DROP
      DOMAIN</command> command that listed multiple type names, only the
      first type name was actually processed.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Meskes <meskes@postgresql.org>
Branch: master [e81f0e311] 2019-02-18 11:57:34 +0100
Branch: REL_11_STABLE [3530c508c] 2019-02-18 12:01:34 +0100
Branch: REL_10_STABLE [f647a5fb0] 2019-02-18 12:05:14 +0100
Branch: REL9_6_STABLE [10b3299b6] 2019-02-18 12:08:18 +0100
Branch: REL9_5_STABLE [180606b68] 2019-02-18 12:16:45 +0100
-->
     <para>
      Sync <application>ecpg</application>'s syntax for <command>CREATE
      TABLE AS</command> with the server's (Daisuke Higuchi)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Meskes <meskes@postgresql.org>
Branch: master [08cecfaf6] 2019-03-11 16:11:16 +0100
Branch: REL_11_STABLE [e7adda86b] 2019-03-11 16:14:03 +0100
Branch: REL_10_STABLE [5469a1e78] 2019-03-11 16:15:09 +0100
Branch: REL9_6_STABLE [8cdce0a45] 2019-03-11 16:26:59 +0100
Branch: REL9_5_STABLE [72f725ab2] 2019-03-11 16:17:17 +0100
Branch: REL9_4_STABLE [e7e78f159] 2019-03-11 16:18:17 +0100
Branch: master [ed16ba324] 2019-04-11 20:56:17 +0200
Branch: REL_11_STABLE [0ba09cc02] 2019-04-11 21:04:37 +0200
Branch: REL_10_STABLE [e7e71b9e1] 2019-04-11 21:05:39 +0200
Branch: REL9_6_STABLE [773006848] 2019-04-11 21:05:59 +0200
Branch: REL9_5_STABLE [67f6e645e] 2019-04-11 21:06:10 +0200
Branch: REL9_4_STABLE [12c42a543] 2019-04-11 21:06:21 +0200
-->
     <para>
      Fix possible buffer overruns in <application>ecpg</application>'s
      processing of include filenames (Liu Huailing, Fei Wu)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a7eadaaaa] 2019-03-18 10:34:45 +0900
Branch: REL_11_STABLE [dcf2a0db8] 2019-03-18 10:35:01 +0900
-->
     <para>
      Fix <application>pg_rewind</application> failures due to failure to
      remove some transient files in the target data directory (Michael
      Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [c9ae7f704] 2019-03-13 09:51:02 +0900
Branch: REL_11_STABLE [501f58359] 2019-03-13 09:51:25 +0900
-->
     <para>
      Make <application>pg_verify_checksums</application> verify that the
      data directory it's pointed at is of the
      right <productname>PostgreSQL</productname> version (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8cad5adb9] 2019-04-27 13:15:54 -0400
Branch: REL_11_STABLE [1bf52d688] 2019-04-27 13:15:54 -0400
Branch: REL_10_STABLE [c25e638b1] 2019-04-27 13:15:55 -0400
-->
     <para>
      Avoid crash in <filename>contrib/postgres_fdw</filename> when a
      query using remote grouping or aggregation has
      a <literal>SELECT</literal>-list item that is an uncorrelated
      sub-select, outer reference, or parameter symbol (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: master [5c4704918] 2019-04-24 18:31:50 +0900
Branch: REL_11_STABLE [7a3d05534] 2019-04-24 18:31:51 +0900
-->
     <para>
      Change <filename>contrib/postgres_fdw</filename> to report an error
      when a remote partition chosen to insert a routed row into is
      also an <command>UPDATE</command> subplan target that will be
      updated later in the same command (Amit Langote, Etsuro Fujita)
     </para>

     <para>
      Previously, such situations led to server crashes or incorrect
      results of the <command>UPDATE</command>.  Allowing such cases to
      work correctly is a matter for future work.
     </para>
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master [1459e84cb] 2019-03-18 15:22:42 -0400
Branch: REL_11_STABLE [fc8b39a46] 2019-03-18 15:30:32 -0400
-->
     <para>
      In <filename>contrib/pg_prewarm</filename>, avoid indefinitely
      respawning background worker processes if prewarming fails for some
      reason (Mithun Cy)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [bd9396a0b] 2019-03-24 15:13:20 -0400
Branch: REL_11_STABLE [b7ffa0ee8] 2019-03-24 15:13:21 -0400
Branch: REL_10_STABLE [e484f0701] 2019-03-24 15:13:21 -0400
Branch: REL9_6_STABLE [926488822] 2019-03-24 15:13:21 -0400
Branch: REL9_5_STABLE [171baf183] 2019-03-24 15:13:21 -0400
Branch: REL9_4_STABLE [99e414cac] 2019-03-24 15:13:21 -0400
-->
     <para>
      Avoid crash in <filename>contrib/vacuumlo</filename> if
      an <function>lo_unlink()</function> call failed (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [acb897b80] 2019-04-26 19:46:26 -0400
Branch: REL_11_STABLE [7898d01da] 2019-04-26 19:46:37 -0400
Branch: REL_10_STABLE [fd7474151] 2019-04-26 19:46:45 -0400
Branch: REL9_6_STABLE [28aa0ee4f] 2019-04-26 19:46:55 -0400
Branch: REL9_5_STABLE [22ba95536] 2019-04-26 19:47:00 -0400
Branch: REL9_4_STABLE [7f36286c2] 2019-04-26 19:47:05 -0400
Branch: master [48f8fa9ce] 2019-04-26 21:20:55 -0400
Branch: REL_11_STABLE [a97cfd9b8] 2019-04-26 21:20:21 -0400
Branch: REL_10_STABLE [7c22e1388] 2019-04-26 21:20:27 -0400
Branch: REL9_6_STABLE [578cb33df] 2019-04-26 21:20:33 -0400
Branch: REL9_5_STABLE [b3904abb4] 2019-04-26 21:20:39 -0400
Branch: REL9_4_STABLE [1c61ec7bb] 2019-04-26 21:20:44 -0400
-->
     <para>
      Sync our copy of the timezone library with IANA tzcode release 2019a
      (Tom Lane)
     </para>

     <para>
      This corrects a small bug in <application>zic</application> that
      caused it to output an incorrect year-2440 transition in
      the <literal>Africa/Casablanca</literal> zone, and adds support
      for <application>zic</application>'s new <option>-r</option> option.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d312de3fc] 2019-04-26 17:56:26 -0400
Branch: REL_11_STABLE [f6307baca] 2019-04-26 17:56:38 -0400
Branch: REL_10_STABLE [14c28c3b5] 2019-04-26 17:56:45 -0400
Branch: REL9_6_STABLE [b25a81c71] 2019-04-26 17:56:52 -0400
Branch: REL9_5_STABLE [c1c76431c] 2019-04-26 17:56:57 -0400
Branch: REL9_4_STABLE [baeb12010] 2019-04-26 17:57:03 -0400
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2019a for DST law changes in Palestine and Metlakatla,
      plus historical corrections for Israel.
     </para>

     <para>
      <literal>Etc/UCT</literal> is now a backward-compatibility link
      to <literal>Etc/UTC</literal>, instead of being a separate zone that
      generates the abbreviation <literal>UCT</literal>, which nowadays is
      typically a typo.  <productname>PostgreSQL</productname> will still
      accept <literal>UCT</literal> as an input zone abbreviation, but it
      won't output it.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11-2">
  <title>Release 11.2</title>

  <formalpara>
  <title>Release date:</title>
  <para>2019-02-14</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.1.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.2</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 11.1,
    see <xref linkend="release-11-1"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [9ccdd7f66] 2018-11-19 17:41:26 +1300
Branch: REL_11_STABLE [6534d544c] 2018-11-19 13:37:59 +1300
Branch: REL_10_STABLE [afbe03f65] 2018-11-19 13:40:57 +1300
Branch: REL9_6_STABLE [b9cce9ddf] 2018-11-19 13:54:00 +1300
Branch: REL9_5_STABLE [312435232] 2018-11-19 14:13:22 +1300
Branch: REL9_4_STABLE [f1ff5f51d] 2018-11-19 14:26:28 +1300
-->
     <para>
      By default, panic instead of retrying
      after <function>fsync()</function> failure, to avoid possible data
      corruption (Craig Ringer, Thomas Munro)
     </para>

     <para>
      Some popular operating systems discard kernel data buffers when
      unable to write them out, reporting this
      as <function>fsync()</function> failure.  If we reissue
      the <function>fsync()</function> request it will succeed, but in
      fact the data has been lost, so continuing risks database
      corruption.  By raising a panic condition instead, we can replay
      from WAL, which may contain the only remaining copy of the data in
      such a situation.  While this is surely ugly and inefficient, there
      are few alternatives, and fortunately the case happens very rarely.
     </para>

     <para>
      A new server parameter <xref linkend="guc-data-sync-retry"/>
      has been added to control this; if you are certain that your
      kernel does not discard dirty data buffers in such scenarios,
      you can set <varname>data_sync_retry</varname>
      to <literal>on</literal> to restore the old behavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [527b5ed1a] 2019-02-04 19:18:49 -0500
Branch: REL_11_STABLE [0d13dd371] 2019-02-04 19:18:50 -0500
Branch: REL_10_STABLE [2b2427115] 2019-02-04 19:18:50 -0500
Branch: REL9_6_STABLE [60b1d6c2a] 2019-02-04 19:18:50 -0500
Branch: REL9_5_STABLE [ed64db588] 2019-02-04 19:18:50 -0500
Branch: REL9_4_STABLE [bb428cb11] 2019-02-04 19:18:50 -0500
-->
     <para>
      Include each major release branch's release notes in the
      documentation for only that branch, rather than that branch and all
      later ones (Tom Lane)
     </para>

     <para>
      The duplication induced by the previous policy was getting out of
      hand.  Our plan is to provide a full archive of release notes on
      the project's web site, but not duplicate it within each release.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [0ad41cf53] 2019-01-14 19:28:10 -0300
Branch: REL_11_STABLE [74aa7e046] 2019-01-14 19:25:19 -0300
-->
     <para>
      Fix handling of unique indexes with <literal>INCLUDE</literal>
      columns on partitioned tables (&Aacute;lvaro Herrera)
     </para>

     <para>
      The uniqueness condition was not checked properly in such cases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [705d433fd] 2018-11-08 16:22:09 -0300
Branch: REL_11_STABLE [e0c05bf4a] 2018-11-08 16:22:09 -0300
Branch: REL_10_STABLE [21c9e4973] 2018-11-08 16:22:09 -0300
-->
     <para>
      Ensure that <literal>NOT NULL</literal> constraints of a partitioned
      table are honored within its partitions
      (&Aacute;lvaro Herrera, Amit Langote)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [ae366aa57] 2019-01-24 00:01:32 -0300
Branch: REL_11_STABLE [00376eaa2] 2019-01-23 23:57:46 -0300
Branch: master [19184fcc0] 2019-01-24 11:25:29 -0300
Branch: REL_11_STABLE [71eba8399] 2019-01-24 11:18:35 -0300
Branch: master [efd9366dc] 2019-01-24 14:09:56 -0300
Branch: REL_11_STABLE [1ad521099] 2019-01-24 14:09:56 -0300
-->
     <para>
      Update catalog state correctly for partition table constraints when
      detaching their partition (Amit Langote, &Aacute;lvaro Herrera)
     </para>

     <para>
      Previously, the <structname>pg_constraint</structname>.<structfield>conislocal</structfield>
      field for such a constraint might improperly be left
      as <literal>false</literal>, rendering it undroppable.
      A dump/restore or pg_upgrade would cure the problem, but
      if necessary, the catalog field can be adjusted manually.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [0464fdf07] 2019-01-21 20:08:52 -0300
Branch: REL_11_STABLE [123cc697a] 2019-01-21 19:59:07 -0300
Branch: master [cb90de1aa] 2019-02-10 10:00:11 -0300
Branch: REL_11_STABLE [cc126b45e] 2019-02-10 10:00:11 -0300
-->
     <para>
      Create or delete foreign key enforcement triggers correctly when
      attaching or detaching a partition in a partitioned table that
      has a foreign-key constraint (Amit Langote, &Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [0325d7a59] 2019-01-18 15:00:45 -0300
Branch: REL_11_STABLE [4dff8935f] 2019-01-18 14:57:49 -0300
-->
     <para>
      Avoid useless creation of duplicate foreign key constraints
      in partitioned tables (&Aacute;lvaro Herrera)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [71a05b223] 2018-12-05 13:31:51 -0300
Branch: REL_11_STABLE [37798a8e8] 2018-12-05 13:31:55 -0300
-->
     <para>
      When an index is created on a partitioned table
      using <literal>ONLY</literal>, and there are no partitions yet, mark
      it valid immediately (&Aacute;lvaro Herrera)
     </para>

     <para>
      Otherwise there is no way to make it become valid.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [7b14bcc06] 2018-12-20 16:42:13 -0300
Branch: REL_11_STABLE [053ad56d2] 2018-12-20 16:42:13 -0300
Branch: REL_10_STABLE [1c142612c] 2018-12-20 16:42:13 -0300
Branch: master [0c2377152] 2018-12-20 10:58:22 -0300
Branch: REL_11_STABLE [9bb2ce5ec] 2018-12-20 11:11:13 -0300
-->
     <para>
      Use a safe table lock level when detaching a partition
      (&Aacute;lvaro Herrera)
     </para>

     <para>
      The previous locking level was too weak and might allow
      concurrent DDL on the table, with bad results.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [319a81018] 2018-11-09 10:03:22 +0900
Branch: REL_11_STABLE [84b4a0cf6] 2018-11-09 10:03:31 +0900
Branch: REL_10_STABLE [52ea6a820] 2018-11-09 10:03:39 +0900
-->
     <para>
      Fix problems with applying <literal>ON COMMIT DROP</literal>
      and <literal>ON COMMIT DELETE ROWS</literal> to partitioned tables
      and tables with inheritance children (Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [5c9a5513a] 2018-11-19 11:16:28 -0300
Branch: REL_11_STABLE [a4db7fe0f] 2018-11-19 11:16:28 -0300
Branch: REL_10_STABLE [85efd1a04] 2018-11-19 11:16:28 -0300
-->
     <para>
      Disallow <command>COPY FREEZE</command> on partitioned tables
      (David Rowley)
     </para>

     <para>
      This should eventually be made to work, but it may require a patch
      that's too complicated to risk back-patching.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [171e0418b] 2019-02-06 01:09:32 -0800
Branch: REL_11_STABLE [297d627e0] 2019-02-06 01:09:42 -0800
Branch: REL_11_STABLE [920311ab1] 2019-02-09 02:44:10 -0800
-->
     <para>
      Fix possible index corruption when the indexed column has
      a <quote>fast default</quote> (that is, it was added
      by <literal>ALTER TABLE ADD COLUMN</literal> with a constant non-NULL
      default value specified, after the table already contained some rows)
      (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [3b174b1a3] 2019-01-10 15:53:45 -0500
Branch: REL_11_STABLE [076ffbcb5] 2019-01-10 16:24:57 -0500
Branch: master [e33884d41] 2019-01-11 17:12:54 -0500
Branch: REL_11_STABLE [89d52b9a3] 2019-01-11 17:16:43 -0500
-->
     <para>
      Correctly adjust <quote>fast default</quote> values
      during <command>ALTER TABLE ... ALTER COLUMN TYPE</command>
      (Andrew Dunstan)
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [0b8bdb3c3] 2019-02-02 15:47:00 +0530
Branch: REL_11_STABLE [904413637] 2019-02-02 08:38:26 +0530
Branch: REL_10_STABLE [1ca33fc7b] 2019-02-02 08:46:32 +0530
Branch: REL9_6_STABLE [073afae81] 2019-02-02 08:54:33 +0530
Branch: REL9_5_STABLE [6a2c9c633] 2019-02-02 09:16:35 +0530
Branch: REL9_4_STABLE [fba0a8292] 2019-02-02 15:43:58 +0530
-->
     <para>
      Avoid possible deadlock when acquiring multiple buffer locks
      (Nishant Fnu)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [fd83c83d0] 2018-12-13 06:55:34 +0300
Branch: REL_11_STABLE [9aa94d853] 2018-12-13 06:15:23 +0300
Branch: REL_10_STABLE [2e3bd064e] 2018-12-13 06:22:39 +0300
-->
     <para>
      Avoid deadlock between GIN vacuuming and concurrent index insertions
      (Alexander Korotkov, Andrey Borodin, Peter Geoghegan)
     </para>

     <para>
      This change partially reverts a performance improvement, introduced
      in version 10.0, that attempted to reduce the number of index pages
      locked during deletion of a GIN posting tree page.  That's now been
      found to lead to deadlocks, so we've removed it pending closer
      analysis.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [c6ade7a8c] 2018-12-13 06:55:34 +0300
Branch: REL_11_STABLE [225b5c9c4] 2018-12-13 06:15:23 +0300
Branch: REL_10_STABLE [865870374] 2018-12-13 06:22:41 +0300
Branch: REL9_6_STABLE [80d4d8d71] 2018-12-13 06:18:13 +0300
Branch: REL9_5_STABLE [f6c44e1b5] 2018-12-13 06:31:16 +0300
Branch: REL9_4_STABLE [19cf52e6c] 2018-12-13 06:36:54 +0300
Branch: REL9_4_STABLE [bf0e5a73b] 2018-12-13 22:32:05 +0300
-->
     <para>
      Avoid deadlock between hot-standby queries and replay of GIN index
      page deletion (Alexander Korotkov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [dfa774ff9] 2019-01-30 08:49:54 +0100
Branch: REL_11_STABLE [cf25498f7] 2019-01-30 10:06:23 +0100
Branch: REL_10_STABLE [2bac1d8c9] 2019-01-30 10:58:28 +0100
Branch: REL9_6_STABLE [650296f8f] 2019-01-30 11:02:47 +0100
Branch: REL9_5_STABLE [edd8278c5] 2019-01-30 11:16:27 +0100
Branch: REL9_4_STABLE [452253eae] 2019-01-30 11:17:05 +0100
-->
     <para>
      Fix possible crashes in logical replication when index expressions
      or predicates are in use (Peter Eisentraut)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [f69c959df] 2018-11-28 01:43:08 +0100
Branch: REL_11_STABLE [f8397c955] 2018-11-28 01:43:53 +0100
Branch: REL_10_STABLE [4e7395d83] 2018-11-28 01:44:11 +0100
Branch: REL9_6_STABLE [b86d148ae] 2018-11-28 01:44:31 +0100
Branch: REL9_5_STABLE [77d2815e4] 2018-11-28 01:44:43 +0100
Branch: REL9_4_STABLE [c1a5caea8] 2018-11-28 01:53:29 +0100
-->
     <para>
      Avoid useless and expensive logical decoding of TOAST data during a
      table rewrite (Tomas Vondra)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [4c703369a] 2018-11-29 09:12:19 +0900
Branch: REL_11_STABLE [bad41764a] 2018-11-29 09:12:40 +0900
Branch: REL_10_STABLE [04e381a19] 2018-11-29 09:12:45 +0900
Branch: REL9_6_STABLE [8340eba6d] 2018-11-29 09:12:53 +0900
Branch: REL9_5_STABLE [b9bdbf8c1] 2018-11-29 09:12:57 +0900
Branch: REL9_4_STABLE [b81d08d60] 2018-11-29 09:13:04 +0900
-->
     <para>
      Fix logic for stopping a subset of WAL senders when synchronous
      replication is enabled (Paul Guo, Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [eb8c9f0bc] 2019-02-01 10:35:16 +0900
Branch: REL_11_STABLE [47412e075] 2019-02-01 10:35:40 +0900
Branch: REL_10_STABLE [478e0069f] 2019-02-01 10:35:46 +0900
Branch: REL9_6_STABLE [014763e97] 2019-02-01 10:35:52 +0900
Branch: REL9_5_STABLE [90f1ba7ec] 2019-02-01 10:35:58 +0900
Branch: REL9_4_STABLE [05d24cf7c] 2019-02-01 10:36:02 +0900
-->
     <para>
      Avoid possibly writing an incorrect replica identity field in a
      tuple deletion WAL record (Stas Kelvich)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [bf491a907] 2018-12-23 16:42:22 +0900
Branch: REL_11_STABLE [ff9c22266] 2018-12-23 16:43:47 +0900
Branch: REL_10_STABLE [15f69279e] 2018-12-23 16:43:56 +0900
-->
     <para>
      Prevent incorrect use of WAL-skipping optimization
      during <command>COPY</command> to a view or foreign table
      (Amit Langote, Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [b981df4cc] 2018-12-24 20:24:16 +0900
Branch: REL_11_STABLE [a016f59d5] 2018-12-24 20:25:49 +0900
Branch: REL_10_STABLE [085757577] 2018-12-24 20:25:57 +0900
Branch: REL9_6_STABLE [937870124] 2018-12-24 20:26:11 +0900
Branch: REL9_5_STABLE [37126251a] 2018-12-24 20:26:20 +0900
-->
     <para>
      Make the archiver prioritize WAL history files over WAL data files
      while choosing which file to archive next (David Steele)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0f7ec8d9c] 2018-12-12 13:49:41 -0500
Branch: REL_11_STABLE [302d4eee9] 2018-12-12 13:49:41 -0500
Branch: REL_10_STABLE [f9f63ed1f] 2018-12-12 13:49:41 -0500
Branch: REL9_6_STABLE [10bad8c0f] 2018-12-12 13:49:42 -0500
Branch: REL9_5_STABLE [6548d62a9] 2018-12-12 13:49:42 -0500
-->
     <para>
      Fix possible crash in <command>UPDATE</command> with a
      multiple <literal>SET</literal> clause using a
      sub-<literal>SELECT</literal> as source (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [eba2ce171] 2018-11-22 15:14:01 -0500
Branch: REL_11_STABLE [595220a3a] 2018-11-22 15:14:01 -0500
-->
     <para>
      Fix crash when zero rows are fed
      to <function>json[b]_populate_recordset()</function>
      or <function>json[b]_to_recordset()</function> (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0edef16d7] 2019-02-08 13:30:42 -0500
Branch: REL_11_STABLE [8e2956734] 2019-02-08 13:30:57 -0500
Branch: REL_10_STABLE [0d7d71b64] 2019-02-08 13:31:04 -0500
Branch: REL9_6_STABLE [ef922faea] 2019-02-08 13:31:09 -0500
Branch: REL9_5_STABLE [7821a4d60] 2019-02-08 13:31:15 -0500
Branch: REL9_4_STABLE [37f3a7751] 2019-02-08 13:31:23 -0500
-->
     <para>
      Avoid crash if <application>libxml2</application> returns a null
      error message (Sergio Conde G&oacute;mez)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [b23852766] 2018-11-27 10:07:03 -0800
Branch: REL_11_STABLE [aee085bc0] 2018-11-27 10:07:43 -0800
-->
     <para>
      Fix incorrect JIT tuple deforming code for tables with
      many columns (more than approximately 800) (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [5567d12ce] 2019-02-09 01:05:49 -0800
Branch: REL_11_STABLE [9cf37a527] 2019-02-09 01:05:50 -0800
Branch: master [3b632a58e] 2019-02-09 01:05:49 -0800
Branch: REL_11_STABLE [350b0a403] 2019-02-09 01:05:50 -0800
Branch: master [317ffdfea] 2019-02-09 01:05:49 -0800
Branch: REL_11_STABLE [6455c6588] 2019-02-09 01:05:50 -0800
Branch: master [356687bd8] 2019-02-09 01:05:49 -0800
Branch: REL_11_STABLE [35afccaba] 2019-02-09 01:05:50 -0800
-->
     <para>
      Fix performance and memory leakage issues in hash-based grouping
      (Andres Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [d16d45387] 2019-01-17 06:46:10 +0000
Branch: REL_11_STABLE [e74d8c508] 2019-01-17 06:24:53 +0000
Branch: REL_10_STABLE [409230a72] 2019-01-17 06:25:55 +0000
Branch: REL9_6_STABLE [624046abe] 2019-01-17 06:26:15 +0000
Branch: REL9_5_STABLE [91448e7dc] 2019-01-17 06:29:43 +0000
Branch: REL9_4_STABLE [174fab993] 2019-01-17 06:35:31 +0000
-->
     <para>
      Fix spurious grouping-related parser errors caused by inconsistent
      handling of collation assignment (Andrew Gierth)
     </para>

     <para>
      In some cases, expressions that should be considered to match
      were not seen as matching, if they included operations on collatable
      data types.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [cd5afd817] 2019-02-07 08:25:47 +0100
Branch: REL_11_STABLE [004f494b5] 2019-02-07 08:25:54 +0100
-->
     <para>
      Fix parsing of collation-sensitive expressions in the arguments of
      a <command>CALL</command> statement (Peter Eisentraut)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f26c06a40] 2018-11-09 22:04:14 -0500
Branch: REL_11_STABLE [8e02ee788] 2018-11-09 22:04:14 -0500
-->
     <para>
      Ensure proper cleanup after detecting an error in the argument list
      of a <command>CALL</command> statement (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [68a13f28b] 2019-01-02 16:34:04 -0500
Branch: REL_11_STABLE [099063340] 2019-01-02 16:33:48 -0500
Branch: REL_10_STABLE [64edc788b] 2019-01-02 16:33:48 -0500
Branch: REL9_6_STABLE [c27c3993e] 2019-01-02 16:33:48 -0500
Branch: REL9_5_STABLE [f8b9b8097] 2019-01-02 16:33:48 -0500
Branch: REL9_4_STABLE [d6b37cdb6] 2019-01-02 16:33:48 -0500
-->
     <para>
      Check whether the comparison function
      underlying <function>LEAST()</function>
      or <function>GREATEST()</function> is leakproof, rather than just
      assuming it is (Tom Lane)
     </para>

     <para>
      Actual information leaks from btree comparison functions are
      typically hard to provoke, but in principle they could happen.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1db5667ba] 2019-01-11 15:54:06 -0500
Branch: REL_11_STABLE [05eb923ea] 2019-01-11 15:54:08 -0500
Branch: REL_10_STABLE [2977a312d] 2019-01-11 15:54:09 -0500
Branch: REL9_6_STABLE [4f8097499] 2019-01-11 15:53:34 -0500
-->
     <para>
      Fix incorrect planning of queries involving nested loops both above
      and below a Gather plan node (Tom Lane)
     </para>

     <para>
      If both levels of nestloop needed to pass the same variable into
      their right-hand sides, an incorrect plan would be generated.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [34ea1ab7f] 2019-02-07 13:11:12 -0500
Branch: REL_11_STABLE [9d6d2b213] 2019-02-07 13:11:13 -0500
Branch: REL_10_STABLE [e3101a031] 2019-02-07 13:11:14 -0500
Branch: REL9_6_STABLE [d468da0d6] 2019-02-07 13:11:16 -0500
Branch: REL9_5_STABLE [1eeee6909] 2019-02-07 13:11:17 -0500
Branch: REL9_4_STABLE [876fd37fc] 2019-02-07 13:10:46 -0500
-->
     <para>
      Fix incorrect planning of queries in which a lateral reference must
      be evaluated at a foreign table scan (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6bdc3005b] 2019-02-10 22:51:32 -0500
Branch: REL_11_STABLE [eb68d71f9] 2019-02-10 22:51:33 -0500
-->
     <para>
      Fix planner failure when the first column of a row comparison
      matches an index column, but later column(s) do not, and the index
      has included (non-key) columns (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d364e8815] 2018-12-18 11:19:38 -0500
Branch: REL_11_STABLE [ad425aaf0] 2018-12-18 11:19:38 -0500
Branch: REL_10_STABLE [d16567093] 2018-12-18 11:19:39 -0500
Branch: REL9_6_STABLE [7c2bc40b8] 2018-12-18 11:19:39 -0500
Branch: REL9_5_STABLE [72a626e68] 2018-12-18 11:19:39 -0500
Branch: REL9_4_STABLE [ef673a32d] 2018-12-18 11:19:39 -0500
-->
     <para>
      Fix corner-case underestimation of the cost of a merge join (Tom Lane)
     </para>

     <para>
      The planner could prefer a merge join when the outer key range is
      much smaller than the inner key range, even if there are so many
      duplicate keys on the inner side that this is a poor choice.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e3f005d97] 2018-11-12 11:19:04 -0500
Branch: REL_11_STABLE [15b9d47c8] 2018-11-12 11:19:04 -0500
Branch: REL_10_STABLE [c6b3835c7] 2018-11-12 11:19:04 -0500
Branch: REL9_6_STABLE [fe66fc6f9] 2018-11-12 11:19:04 -0500
Branch: REL9_5_STABLE [92dbbe90c] 2018-11-12 11:19:04 -0500
Branch: REL9_4_STABLE [2abc87953] 2018-11-12 11:19:04 -0500
-->
     <para>
      Avoid O(N^2) planning time growth when a query contains many
      thousand indexable clauses (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: master [8d8dcead1] 2019-01-21 17:12:40 +0900
Branch: REL_11_STABLE [b10e3bba8] 2019-01-21 17:46:15 +0900
-->
     <para>
      Improve planning speed for large inheritance or partitioning table
      groups (Amit Langote, Etsuro Fujita)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7170268ef] 2019-01-03 17:00:08 -0500
Branch: REL_11_STABLE [fc8adddd9] 2019-01-03 17:00:08 -0500
Branch: REL_10_STABLE [708931c2d] 2019-01-03 17:00:08 -0500
Branch: REL9_6_STABLE [60de80cd2] 2019-01-03 17:00:08 -0500
Branch: REL9_5_STABLE [d2557c42a] 2019-01-03 17:00:08 -0500
Branch: REL9_4_STABLE [3010de813] 2019-01-03 17:00:08 -0500
-->
     <para>
      Improve <command>ANALYZE</command>'s handling of
      concurrently-updated rows (Jeff Janes, Tom Lane)
     </para>

     <para>
      Previously, rows deleted by an in-progress transaction were omitted
      from <command>ANALYZE</command>'s sample, but this has been found to
      lead to more inconsistency than including them would do.  In effect,
      the sample now corresponds to an MVCC snapshot as
      of <command>ANALYZE</command>'s start time.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [1e504f01d] 2018-12-27 10:16:19 +0900
Branch: REL_11_STABLE [b30b9dce1] 2018-12-27 10:17:09 +0900
Branch: REL_10_STABLE [d4486700b] 2018-12-27 10:17:13 +0900
Branch: REL9_6_STABLE [285abc8df] 2018-12-27 10:17:21 +0900
Branch: REL9_5_STABLE [0a323ae67] 2018-12-27 10:17:26 +0900
Branch: REL9_4_STABLE [1d7007671] 2018-12-27 10:17:42 +0900
-->
     <para>
      Make <command>TRUNCATE</command> ignore inheritance child tables
      that are temporary tables of other sessions (Amit Langote, Michael
      Paquier)
     </para>

     <para>
      This brings <command>TRUNCATE</command> into line with the behavior
      of other commands.  Previously, such cases usually ended in failure.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5deadfef2] 2018-12-07 12:11:59 -0500
Branch: REL_11_STABLE [aedd3d4db] 2018-12-07 12:12:00 -0500
Branch: REL_10_STABLE [54f24ab76] 2018-12-07 12:12:00 -0500
Branch: REL9_6_STABLE [078303f79] 2018-12-07 12:12:00 -0500
Branch: REL9_5_STABLE [4d5cfb911] 2018-12-07 12:12:00 -0500
-->
     <para>
      Fix <command>TRUNCATE</command> to update the statistics counters
      for the right table (Tom Lane)
     </para>

     <para>
      If the truncated table had a TOAST table, that table's counters were
      reset instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Greg Stark <stark@mit.edu>
Branch: master [1075dfdaf] 2018-12-19 19:38:31 -0500
Branch: REL_11_STABLE [128ce8e1a] 2018-12-19 19:40:25 -0500
Branch: REL_10_STABLE [9e6cd794c] 2018-12-19 19:41:06 -0500
Branch: REL9_6_STABLE [5668afeb6] 2018-12-19 19:41:18 -0500
-->
     <para>
      Process <command>ALTER TABLE ONLY ADD COLUMN IF NOT EXISTS</command>
      correctly (Greg Stark)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ebfe20dc7] 2019-01-25 21:14:49 -0500
Branch: REL_11_STABLE [c0aed6959] 2019-01-25 21:14:31 -0500
Branch: REL_10_STABLE [e8ec19cd1] 2019-01-25 21:14:31 -0500
Branch: REL9_6_STABLE [0d5b27351] 2019-01-25 21:14:31 -0500
Branch: REL9_5_STABLE [741ee4890] 2019-01-25 21:14:31 -0500
Branch: REL9_4_STABLE [549d2a238] 2019-01-25 21:14:31 -0500
-->
     <para>
      Allow <command>UNLISTEN</command> in hot-standby mode
      (Shay Rojansky)
     </para>

     <para>
      This is necessarily a no-op, because <command>LISTEN</command>
      isn't allowed in hot-standby mode; but allowing the dummy operation
      simplifies session-state-reset logic in clients.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fa2952d8e] 2018-11-09 20:42:14 -0500
Branch: REL_11_STABLE [1b55acb2c] 2018-11-09 20:42:03 -0500
Branch: REL_10_STABLE [2d83863ea] 2018-11-09 20:42:03 -0500
Branch: REL9_6_STABLE [d431dff1a] 2018-11-09 20:42:03 -0500
Branch: REL9_5_STABLE [47088c599] 2018-11-09 20:42:03 -0500
Branch: REL9_4_STABLE [277602dfe] 2018-11-09 20:42:03 -0500
-->
     <para>
      Fix missing role dependencies in some schema and data type
      permissions lists (Tom Lane)
     </para>

     <para>
      In some cases it was possible to drop a role to which permissions
      had been granted.  This caused no immediate problem, but a
      subsequent dump/reload or upgrade would fail, with symptoms
      involving attempts to grant privileges to all-numeric role names.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [c5660e0aa] 2019-01-18 09:21:44 +0900
Branch: REL_11_STABLE [3e4fdb3bc] 2019-01-18 09:21:52 +0900
Branch: REL_10_STABLE [b15160bc7] 2019-01-18 09:21:58 +0900
-->
     <para>
      Prevent use of a session's temporary schema within a two-phase
      transaction (Michael Paquier)
     </para>

     <para>
      Accessing a temporary table within such a transaction has been
      forbidden for a long time, but it was still possible to cause
      problems with other operations on temporary objects.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [175544093] 2019-01-21 19:34:11 -0300
Branch: REL_11_STABLE [a7474308c] 2019-01-21 19:34:11 -0300
Branch: REL_10_STABLE [3037b28b8] 2019-01-21 19:34:11 -0300
Branch: REL9_6_STABLE [4aead13a7] 2019-01-21 19:34:11 -0300
-->
     <para>
      Ensure relation caches are updated properly after adding or removing
      foreign key constraints (&Aacute;lvaro Herrera)
     </para>

     <para>
      This oversight could result in existing sessions failing to enforce
      a newly-created constraint, or continuing to enforce a dropped one.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [b13fd344c] 2018-12-17 10:34:44 +0900
Branch: REL_11_STABLE [25b8094d3] 2018-12-17 10:36:03 +0900
Branch: REL_10_STABLE [da13d90a5] 2018-12-17 10:36:21 +0900
Branch: REL9_6_STABLE [d79cd555d] 2018-12-17 10:36:29 +0900
Branch: REL9_5_STABLE [5812be7b6] 2018-12-17 10:36:34 +0900
Branch: REL9_4_STABLE [d5d86e2cd] 2018-12-17 10:37:24 +0900
Branch: master [67915fb8e] 2018-12-17 12:43:00 +0900
Branch: REL_11_STABLE [e83e0988d] 2018-12-17 12:43:39 +0900
Branch: REL_10_STABLE [91fc2a088] 2018-12-17 12:43:48 +0900
Branch: REL9_6_STABLE [419bd6371] 2018-12-17 12:43:57 +0900
Branch: REL9_5_STABLE [c7567e09d] 2018-12-17 12:44:02 +0900
Branch: REL9_4_STABLE [696c68c2b] 2018-12-17 12:44:09 +0900
-->
     <para>
      Ensure relation caches are updated properly after renaming
      constraints (Amit Langote)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [c952eae52] 2018-12-21 02:37:37 +0300
Branch: REL_11_STABLE [8193d6407] 2018-12-21 02:37:31 +0300
Branch: REL_10_STABLE [e36e25275] 2018-12-21 02:33:48 +0300
Branch: REL9_6_STABLE [1b0280745] 2018-12-21 02:33:37 +0300
-->
     <para>
      Fix replay of GiST index micro-vacuum operations so that concurrent
      hot-standby queries do not see inconsistent state (Alexander
      Korotkov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [52ac6cd2d] 2018-12-13 06:55:34 +0300
Branch: REL_11_STABLE [dd951dc34] 2018-12-13 06:39:53 +0300
Branch: REL_10_STABLE [a0696d295] 2018-12-13 06:41:04 +0300
Branch: REL9_6_STABLE [cd24b4eae] 2018-12-13 06:47:38 +0300
Branch: REL9_5_STABLE [ad6ebcfcb] 2018-12-13 06:52:33 +0300
Branch: REL9_4_STABLE [1cf175c74] 2018-12-13 06:52:26 +0300
-->
     <para>
      Prevent empty GIN index pages from being reclaimed too quickly,
      causing failures of concurrent searches
      (Andrey Borodin, Alexander Korotkov)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [cbdb8b4c0] 2018-11-23 20:57:11 -0500
Branch: master [452b637d4] 2018-11-23 23:49:25 -0500
Branch: REL_11_STABLE [e473e1f2b] 2018-11-24 12:45:49 -0500
Branch: REL_10_STABLE [c382a2b66] 2018-11-24 12:45:49 -0500
Branch: REL9_6_STABLE [93eec1238] 2018-11-24 12:45:50 -0500
Branch: REL9_5_STABLE [1e78603a5] 2018-11-24 12:45:50 -0500
Branch: REL9_4_STABLE [d5231253e] 2018-11-24 12:45:50 -0500
Branch: REL_11_STABLE [3645d3193] 2018-11-24 13:53:12 -0500
Branch: REL_10_STABLE [745871483] 2018-11-24 13:53:12 -0500
Branch: REL9_6_STABLE [1f99d0867] 2018-11-24 13:53:12 -0500
Branch: REL9_5_STABLE [298510cae] 2018-11-24 13:53:12 -0500
Branch: REL9_4_STABLE [bf9fb00dd] 2018-11-24 13:53:12 -0500
-->
     <para>
      Fix edge-case failures in float-to-integer coercions (Andrew
      Gierth, Tom Lane)
     </para>

     <para>
      Values very slightly above the maximum valid integer value might not
      be rejected, and then would overflow, producing the minimum valid
      integer instead.  Also, values that should round to the minimum or
      maximum integer value might be incorrectly rejected.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [257ef3cd4] 2018-11-13 17:46:28 +1300
Branch: REL_11_STABLE [6b6c64a96] 2018-11-13 17:47:00 +1300
-->
     <para>
      Fix parsing of space-separated lists of host names in
      the <varname>ldapserver</varname> parameter of LDAP authentication
      entries in <filename>pg_hba.conf</filename> (Thomas Munro)
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [0f9cdd7dc] 2018-11-28 14:12:30 +1300
Branch: REL_11_STABLE [0640d9517] 2018-11-28 14:14:40 +1300
Branch: REL_10_STABLE [96ed0b870] 2018-11-28 14:15:00 +1300
Branch: REL9_6_STABLE [63d835066] 2018-11-28 14:20:07 +1300
-->
     <para>
      When making a PAM authentication request, don't set
      the <varname>PAM_RHOST</varname> variable if the connection is via
      a Unix socket (Thomas Munro)
     </para>

     <para>
      Previously that variable would be set to <literal>[local]</literal>,
      which is at best unhelpful, since it's supposed to be a host name.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3d360e20c] 2018-11-08 17:33:43 -0500
Branch: REL_11_STABLE [7b08b4a8a] 2018-11-08 17:33:44 -0500
Branch: REL_10_STABLE [c09daa910] 2018-11-08 17:33:46 -0500
Branch: REL9_6_STABLE [041ad9a66] 2018-11-08 17:33:26 -0500
Branch: REL9_5_STABLE [88275ac19] 2018-11-08 17:33:26 -0500
Branch: REL9_4_STABLE [2407d4807] 2018-11-08 17:33:26 -0500
-->
     <para>
      Disallow setting <varname>client_min_messages</varname> higher
      than <literal>ERROR</literal> (Jonah Harris, Tom Lane)
     </para>

     <para>
      Previously, it was possible to set this variable
      to <literal>FATAL</literal> or <literal>PANIC</literal>, which had
      the effect of suppressing transmission of ordinary error messages to
      the client.  However, that's contrary to guarantees that are given
      in the <productname>PostgreSQL</productname> wire protocol
      specification, and it caused some clients to become very confused.
      In released branches, fix this by silently treating such settings as
      meaning <literal>ERROR</literal> instead.  Version 12 and later will
      reject those alternatives altogether.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8eb4a9312] 2019-01-21 12:07:02 -0500
Branch: master [ee27584c4] 2019-01-21 16:17:10 -0500
Branch: REL_11_STABLE [f305e8457] 2019-01-21 23:18:58 -0500
Branch: REL_10_STABLE [6106f9dd7] 2019-01-21 23:18:58 -0500
Branch: REL9_6_STABLE [eb3e90cad] 2019-01-21 23:18:58 -0500
Branch: REL9_5_STABLE [844d91fd6] 2019-01-21 23:18:58 -0500
Branch: REL9_4_STABLE [c9ff6cbfc] 2019-01-21 23:18:58 -0500
Branch: master [2cf91ccb7] 2019-01-23 22:46:45 -0500
Branch: REL_11_STABLE [b620cf2d4] 2019-01-23 22:46:57 -0500
Branch: REL_10_STABLE [dd815a94c] 2019-01-23 22:47:03 -0500
Branch: REL9_6_STABLE [1d334ab6e] 2019-01-23 22:47:13 -0500
Branch: REL9_5_STABLE [7ac0e71aa] 2019-01-23 22:47:18 -0500
Branch: REL9_4_STABLE [773f59440] 2019-01-23 22:47:23 -0500
-->
     <para>
      Fix <application>ecpglib</application> to
      use <function>uselocale()</function>
      or <function>_configthreadlocale()</function> in preference
      to <function>setlocale()</function> (Michael Meskes, Tom Lane)
     </para>

     <para>
      Since <function>setlocale()</function> is not thread-local, and
      might not even be thread-safe, the previous coding caused problems
      in multi-threaded <application>ecpg</application> applications.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ecfd55795] 2018-11-13 15:46:08 -0500
Branch: REL_11_STABLE [68393f3fd] 2018-11-13 15:46:08 -0500
Branch: REL_10_STABLE [32060f678] 2018-11-13 15:46:08 -0500
Branch: REL9_6_STABLE [e1f259012] 2018-11-13 15:46:08 -0500
Branch: REL9_5_STABLE [be38945c6] 2018-11-13 15:46:08 -0500
Branch: REL9_4_STABLE [9e5e3861c] 2018-11-13 15:46:08 -0500
Branch: master [06c723447] 2018-11-14 11:27:47 -0500
Branch: REL_11_STABLE [4618fdd67] 2018-11-14 11:27:30 -0500
Branch: REL_10_STABLE [2e8ed4659] 2018-11-14 11:27:30 -0500
Branch: REL9_6_STABLE [f9e25ba14] 2018-11-14 11:27:31 -0500
Branch: REL9_5_STABLE [68f30638a] 2018-11-14 11:27:31 -0500
Branch: REL9_4_STABLE [41609776f] 2018-11-14 11:27:31 -0500
-->
     <para>
      Fix incorrect results for numeric data passed through
      an <application>ecpg</application> <acronym>SQLDA</acronym>
      (SQL Descriptor Area) (Daisuke Higuchi)
     </para>

     <para>
      Values with leading zeroes were not copied correctly.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6d3ede5f1] 2019-01-26 14:15:42 -0500
Branch: REL_11_STABLE [2c50c9f23] 2019-01-26 14:15:42 -0500
Branch: REL_10_STABLE [8e97a97b3] 2019-01-26 14:15:42 -0500
Branch: REL9_6_STABLE [ae4c7d5ab] 2019-01-26 14:15:42 -0500
Branch: REL9_5_STABLE [cda1e27fb] 2019-01-26 14:15:42 -0500
-->
     <para>
      Fix <application>psql</application>'s <command>\g</command>
      <replaceable>target</replaceable> meta-command to work
      with <command>COPY TO STDOUT</command>
      (Daniel V&eacute;rit&eacute;)
     </para>

     <para>
      Previously, the <replaceable>target</replaceable> option was
      ignored, so that the copy data always went to the current query
      output target.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [70d7e507e] 2018-11-26 17:32:51 -0500
Branch: REL_11_STABLE [b352cf7a8] 2018-11-26 17:32:51 -0500
Branch: REL_10_STABLE [815409093] 2018-11-26 17:32:51 -0500
Branch: REL9_6_STABLE [ac305ff8c] 2018-11-26 17:32:51 -0500
Branch: REL9_5_STABLE [18a0a8548] 2018-11-26 17:32:51 -0500
Branch: REL9_4_STABLE [74bfb5388] 2018-11-26 17:32:51 -0500
-->
     <para>
      Make <application>psql</application>'s LaTeX output formats render
      special characters properly (Tom Lane)
     </para>

     <para>
      Backslash and some other ASCII punctuation characters were not
      rendered correctly, leading to document syntax errors or wrong
      characters in the output.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e6c3ba7fb] 2019-01-24 11:31:54 -0500
Branch: REL_11_STABLE [27d6bc68f] 2019-01-24 11:31:54 -0500
-->
     <para>
      Make <application>pgbench</application>'s random number generation
      fully deterministic and platform-independent
      when <option>--random-seed=<replaceable>N</replaceable></option> is
      specified (Fabien Coelho, Tom Lane)
     </para>

     <para>
      On any specific platform, the sequence obtained with a particular
      value of <replaceable>N</replaceable> will probably be different
      from what it was before this patch.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a1c91dd11] 2018-11-30 10:14:58 +0900
Branch: REL_11_STABLE [85036308d] 2018-11-30 10:15:06 +0900
Branch: master [5c9951397] 2018-11-30 10:34:45 +0900
Branch: REL_11_STABLE [19516afdf] 2018-11-30 10:34:56 +0900
-->
     <para>
      Fix <application>pg_basebackup</application>
      and <application>pg_verify_checksums</application> to ignore
      temporary files appropriately (Michael Banck, Michael Paquier)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6e4d45b5f] 2019-02-04 17:20:02 -0500
Branch: REL_11_STABLE [b8de846a5] 2019-02-04 17:20:02 -0500
Branch: REL_10_STABLE [dc42602f1] 2019-02-04 17:20:02 -0500
Branch: REL9_6_STABLE [16e0464a1] 2019-02-04 17:20:02 -0500
Branch: REL9_5_STABLE [9368ba174] 2019-02-04 17:20:02 -0500
Branch: REL9_4_STABLE [2f93b74bf] 2019-02-04 17:20:02 -0500
-->
     <para>
      Fix <application>pg_dump</application>'s handling of materialized
      views with indirect dependencies on primary keys (Tom Lane)
     </para>

     <para>
      This led to mis-labeling of such views' dump archive entries,
      causing harmless warnings about <quote>archive items not in correct
      section order</quote>; less harmlessly, selective-restore options
      depending on those labels, such as <option>--section</option>, might
      misbehave.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [e4fca461a] 2018-12-18 09:28:16 +0900
Branch: REL_11_STABLE [d0960eb8a] 2018-12-18 09:28:56 +0900
-->
     <para>
      Make <application>pg_dump</application> include <command>ALTER INDEX
      SET STATISTICS</command> commands (Michael Paquier)
     </para>

     <para>
      When the ability to attach statistics targets to index expressions
      was added, we forgot to teach <application>pg_dump</application>
      about it, so that such settings were lost in dump/reload.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter_e@gmx.net>
Branch: master [6178f3cb7] 2018-11-13 09:41:20 +0100
Branch: REL_11_STABLE [b72b4fafb] 2018-11-13 09:41:34 +0100
-->
     <para>
      Fix <application>pg_dump</application>'s dumping of tables that have
      OIDs (Peter Eisentraut)
     </para>

     <para>
      The <literal>WITH OIDS</literal> clause was omitted if it needed to
      be applied to the first table to be dumped.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4dbe19690] 2019-02-09 19:45:38 -0500
Branch: REL_11_STABLE [ef9bf3593] 2019-02-09 19:45:38 -0500
Branch: REL_10_STABLE [73668c590] 2019-02-09 19:45:38 -0500
Branch: REL9_6_STABLE [2b6009e2a] 2019-02-09 19:45:38 -0500
Branch: REL9_5_STABLE [2c8332177] 2019-02-09 19:45:38 -0500
Branch: REL9_4_STABLE [ed46d0d32] 2019-02-09 19:45:38 -0500
-->
     <para>
      Avoid null-pointer-dereference crash on some platforms
      when <application>pg_dump</application>
      or <application>pg_restore</application> tries to report an error
      (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [eba775345] 2019-02-06 15:54:19 -0800
Branch: REL_11_STABLE [2f5416666] 2019-02-06 15:54:17 -0800
-->
     <para>
      Prevent false index-corruption reports
      from <filename>contrib/amcheck</filename> caused by
      inline-compressed data (Peter Geoghegan)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ffa4cbd62] 2018-11-19 17:02:39 -0500
Branch: REL_11_STABLE [8dc49a893] 2018-11-19 17:02:25 -0500
Branch: REL_10_STABLE [8285fae07] 2018-11-19 17:02:25 -0500
Branch: master [cb09903fe] 2018-11-19 17:28:04 -0500
Branch: REL_11_STABLE [e2631255e] 2018-11-19 17:28:04 -0500
Branch: REL_10_STABLE [0064d0e9f] 2018-11-19 17:28:05 -0500
Branch: master [ade2d61ed] 2018-12-16 14:32:14 -0500
Branch: REL_11_STABLE [b1894a607] 2018-12-16 14:32:14 -0500
Branch: REL_10_STABLE [34010ac2f] 2018-12-16 14:32:14 -0500
-->
     <para>
      Properly disregard <literal>SIGPIPE</literal> errors if <command>COPY
      FROM PROGRAM</command> stops reading the program's output early
      (Tom Lane)
     </para>

     <para>
      This case isn't actually reachable directly
      with <command>COPY</command>, but it can happen when
      using <filename>contrib/file_fdw</filename>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [d5890f49d] 2018-11-24 09:59:49 +0000
Branch: REL_11_STABLE [02e669c0f] 2018-11-24 21:17:08 +0000
Branch: REL_10_STABLE [bcbb68278] 2018-11-24 21:17:09 +0000
Branch: REL9_6_STABLE [239abfff1] 2018-11-24 21:17:09 +0000
Branch: REL9_5_STABLE [8087788f6] 2018-11-24 21:17:09 +0000
Branch: REL9_4_STABLE [e5a6ae97e] 2018-11-24 21:17:09 +0000
-->
     <para>
      Fix <filename>contrib/hstore</filename> to calculate correct hash
      values for empty <type>hstore</type> values that were created in
      version 8.4 or before (Andrew Gierth)
     </para>

     <para>
      The previous coding did not give the same result as for an
      empty <type>hstore</type> value created by a newer version, thus
      potentially causing wrong results in hash joins or hash
      aggregation.  It is advisable to reindex any hash indexes
      built on <type>hstore</type> columns, if the table might contain
      data that was originally stored as far back as 8.4 and was never
      dumped/reloaded since then.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Gierth <rhodiumtoad@postgresql.org>
Branch: master [757c5182f] 2018-11-24 08:48:36 +0000
Branch: REL_11_STABLE [2e497ed23] 2018-11-24 08:39:29 +0000
Branch: REL_10_STABLE [e193fb991] 2018-11-24 08:39:42 +0000
Branch: REL9_6_STABLE [5f11a500f] 2018-11-24 08:39:55 +0000
Branch: REL9_5_STABLE [f0bfc7a2b] 2018-11-24 08:39:58 +0000
Branch: REL9_4_STABLE [2f30b311d] 2018-11-24 08:40:02 +0000
-->
     <para>
      Avoid crashes and excessive runtime with large inputs
      to <filename>contrib/intarray</filename>'s <literal>gist__int_ops</literal>
      index support (Andrew Gierth)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [7291733ac] 2019-01-13 10:23:48 +0100
Branch: REL_11_STABLE [3d498c65a] 2019-01-13 10:24:21 +0100
Branch: REL_10_STABLE [cd1873160] 2019-01-13 10:25:23 +0100
-->
     <para>
      In <application>configure</application>, look
      for <command>python3</command> and then <command>python2</command>
      if <command>python</command> isn't found (Peter Eisentraut)
     </para>

     <para>
      This allows PL/Python to be configured without explicitly
      specifying <literal>PYTHON</literal> on platforms that no longer
      provide an unversioned <command>python</command> executable.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [5c1186751] 2019-01-28 13:51:12 -0800
Branch: REL_11_STABLE [453be7d4d] 2019-01-28 13:53:43 -0800
-->
     <para>
      Include JIT-related headers in the installed set of header files
      (Donald Dong)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [ac3a9afdb] 2019-02-03 17:48:09 +0900
Branch: REL_11_STABLE [946430da6] 2019-02-03 17:48:35 +0900
Branch: REL_10_STABLE [da14c9b19] 2019-02-03 17:48:46 +0900
Branch: REL9_6_STABLE [5e63df827] 2019-02-03 17:48:53 +0900
Branch: REL9_5_STABLE [12ff406f3] 2019-02-03 17:48:59 +0900
Branch: REL9_4_STABLE [42b204db2] 2019-02-03 17:49:04 +0900
-->
     <para>
      Support new Makefile
      variables <literal>PG_CFLAGS</literal>, <literal>PG_CXXFLAGS</literal>,
      and <literal>PG_LDFLAGS</literal> in <application>pgxs</application>
      builds (Christoph Berg)
     </para>

     <para>
      This simplifies customization of extension build processes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [f83419b73] 2019-02-05 19:27:47 -0500
Branch: REL_11_STABLE [77173d0cc] 2019-02-05 19:33:42 -0500
Branch: REL_10_STABLE [1a6244216] 2019-02-05 19:34:00 -0500
Branch: REL9_6_STABLE [42345284c] 2019-02-05 19:34:17 -0500
Branch: REL9_5_STABLE [59927f99a] 2019-02-05 19:35:07 -0500
Branch: REL9_4_STABLE [2689e8e33] 2019-02-05 19:35:18 -0500
Branch: master [592123efb] 2019-02-06 07:36:02 -0500
Branch: REL_11_STABLE [11f11e1e0] 2019-02-06 07:49:07 -0500
Branch: REL_10_STABLE [1f28906bf] 2019-02-06 07:49:27 -0500
Branch: REL9_6_STABLE [324c92646] 2019-02-06 07:53:19 -0500
Branch: REL9_5_STABLE [8d2741452] 2019-02-06 07:55:10 -0500
Branch: REL9_4_STABLE [13e95662c] 2019-02-06 07:55:22 -0500
Branch: REL9_6_STABLE [772d4b769] 2019-02-05 18:31:10 -0500
Branch: REL9_5_STABLE [a25b04933] 2019-02-05 18:34:47 -0500
Branch: REL9_4_STABLE [7a3763318] 2019-02-05 18:34:58 -0500
Branch: master [f884a9681] 2019-02-05 09:59:46 -0500
Branch: REL_11_STABLE [4e7a51302] 2019-02-05 10:04:38 -0500
Branch: REL_10_STABLE [1fbb9bda0] 2019-02-05 10:04:58 -0500
Branch: REL9_6_STABLE [be037c11b] 2019-02-05 10:05:17 -0500
Branch: REL9_5_STABLE [a82ca6ffb] 2019-02-05 10:05:57 -0500
Branch: REL9_4_STABLE [51884fa16] 2019-02-05 10:06:12 -0500
-->
     <para>
      Fix Perl-coded build scripts to not
      assume <quote><literal>.</literal></quote> is in the search path,
      since recent Perl versions don't include that (Andrew Dunstan)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [69bcd718d] 2019-01-18 15:06:26 -0500
Branch: REL_11_STABLE [e4ffa0dcb] 2019-01-18 15:06:26 -0500
Branch: REL_10_STABLE [139e42742] 2019-01-18 15:06:26 -0500
Branch: REL9_6_STABLE [167ba6b15] 2019-01-18 15:06:26 -0500
Branch: REL9_5_STABLE [dc2dee438] 2019-01-18 15:06:26 -0500
Branch: REL9_4_STABLE [b161ffe31] 2019-01-18 15:06:26 -0500
-->
     <para>
      Fix server command-line option parsing problems on OpenBSD (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [640158386] 2019-02-09 11:41:09 -0500
Branch: REL_11_STABLE [027b5a300] 2019-02-09 11:41:09 -0500
Branch: REL_10_STABLE [dc0eb137f] 2019-02-09 11:41:09 -0500
Branch: REL9_6_STABLE [6257f525a] 2019-02-09 11:41:09 -0500
-->
     <para>
      Relocate call of <literal>set_rel_pathlist_hook</literal> so that
      extensions can use it to supply partial paths for parallel queries
      (KaiGai Kohei)
     </para>

     <para>
      This is not expected to affect existing use-cases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d63dc0aa0] 2019-02-05 10:58:53 -0500
Branch: REL_11_STABLE [46b454096] 2019-02-05 10:59:06 -0500
Branch: REL_10_STABLE [09c5f045c] 2019-02-05 10:59:15 -0500
Branch: REL9_6_STABLE [f6db9f8ab] 2019-02-05 10:59:23 -0500
Branch: REL9_5_STABLE [4232a650b] 2019-02-05 10:59:31 -0500
Branch: REL9_4_STABLE [a683df403] 2019-02-05 10:59:38 -0500
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2018i for DST law changes in Kazakhstan, Metlakatla, and Sao
      Tome and Principe.  Kazakhstan's Qyzylorda zone is split in two,
      creating a new zone Asia/Qostanay, as some areas did not change UTC
      offset.  Historical corrections for Hong Kong and numerous Pacific
      islands.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11-1">
  <title>Release 11.1</title>

  <formalpara>
  <title>Release date:</title>
  <para>2018-11-08</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 11.0.
   For information about new features in major release 11, see
   <xref linkend="release-11"/>.
  </para>

  <sect2>
   <title>Migration to Version 11.1</title>

   <para>
    A dump/restore is not required for those running 11.X.
   </para>

   <para>
    However, if you use the <filename>pg_stat_statements</filename> extension,
    see the changelog entry below about that.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [350410be4] 2018-10-19 00:50:16 -0400
Branch: REL_11_STABLE [06292bb94] 2018-10-19 00:50:16 -0400
Branch: REL_10_STABLE [09397f0ed] 2018-10-19 00:50:17 -0400
-->
     <para>
      Ensure proper quoting of transition table names
      when <application>pg_dump</application> emits <command>CREATE TRIGGER
      ... REFERENCING</command> commands (Tom Lane)
     </para>

     <para>
      This oversight could be exploited by an unprivileged user to gain
      superuser privileges during the next dump/reload
      or <application>pg_upgrade</application> run.  (CVE-2018-16850)
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [dfa608141] 2018-11-03 13:25:19 -0300
Branch: REL_11_STABLE [33e6c34c3] 2018-11-03 13:25:29 -0300
-->
     <para>
      Apply the tablespace specified for a partitioned index when creating a
      child index (&Aacute;lvaro Herrera)
     </para>

     <para>
      Previously, child indexes were always created in the default
      tablespace.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [1ce4a807e] 2018-11-03 11:05:35 +1300
Branch: REL_11_STABLE [fd6449aa3] 2018-11-03 11:08:03 +1300
-->
     <para>
      Fix NULL handling in parallel hashed multi-batch left joins (Andrew
      Gierth, Thomas Munro)
     </para>

     <para>
      Outer-relation rows with null values of the hash key were omitted from
      the join result.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [14a158f9b] 2018-10-30 15:26:11 -0400
Branch: REL_11_STABLE [2bd6dcdef] 2018-10-30 15:26:11 -0400
-->
     <para>
      Fix incorrect processing of an array-type coercion expression
      appearing within a <literal>CASE</literal> clause that has a constant
      test expression (Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [040a1df61] 2018-10-24 10:56:27 -0400
Branch: REL_11_STABLE [372102b81] 2018-10-24 10:57:35 -0400
-->
     <para>
      Fix incorrect expansion of tuples lacking recently-added columns
      (Andrew Dunstan, Amit Langote)
     </para>

     <para>
      This is known to lead to crashes in triggers on tables with
      recently-added columns, and could have other symptoms as well.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [15c729347] 2018-11-04 13:25:39 -0500
Branch: REL_11_STABLE [4b0c3712c] 2018-11-04 13:25:39 -0500
Branch: master [9b6fb9fbb] 2018-11-04 14:50:55 -0500
Branch: REL_11_STABLE [d358da814] 2018-11-04 14:50:55 -0500
-->
     <para>
      Fix bugs with named or defaulted arguments in <command>CALL</command>
      argument lists (Tom Lane, Pavel Stehule)
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [4c640f4f3] 2018-11-03 14:48:42 -0700
Branch: REL_11_STABLE [fd59b29c8] 2018-11-03 14:48:42 -0700
Branch: master [793beab37] 2018-11-03 15:55:23 -0700
Branch: REL_11_STABLE [6eb31cedb] 2018-11-03 16:00:00 -0700
-->
     <para>
      Fix strictness check for strict aggregates with <literal>ORDER
      BY</literal> columns (Andrew Gierth, Andres Freund)
     </para>

     <para>
      The strictness logic incorrectly ignored rows for which
      the <literal>ORDER BY</literal> value(s) were null.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5d28c9bd7] 2018-11-06 18:33:28 -0500
Branch: REL_11_STABLE [05f84605d] 2018-11-06 18:33:33 -0500
-->
     <para>
      Disable <varname>recheck_on_update</varname> optimization (Tom Lane)
     </para>

     <para>
      This new-in-v11 feature turns out not to have been ready for prime
      time.  Disable it until something can be done about it.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [dc3e436b1] 2018-11-05 11:04:02 +0900
Branch: REL_11_STABLE [7c222d5e5] 2018-11-05 11:04:14 +0900
Branch: REL_10_STABLE [8aad248f7] 2018-11-05 11:04:20 +0900
-->
     <para>
      Prevent creation of a partition in a trigger attached to its parent
      table (Amit Langote)
     </para>

     <para>
      Ideally we'd allow that, but for the moment it has to be blocked to
      avoid crashes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [4bc772e2a] 2018-11-05 09:14:33 +0900
Branch: REL_11_STABLE [948af5232] 2018-11-05 09:15:08 +0900
Branch: REL_10_STABLE [70c38e708] 2018-11-05 09:15:25 +0900
-->
     <para>
      Fix problems with applying <literal>ON COMMIT DELETE ROWS</literal> to
      a partitioned temporary table (Amit Langote)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [981dc2baa] 2018-11-03 13:56:10 -0400
Branch: REL_11_STABLE [bf4a9562e] 2018-11-03 13:56:10 -0400
Branch: REL_10_STABLE [f7ba6e951] 2018-11-03 13:56:10 -0400
Branch: REL9_6_STABLE [73dbaed93] 2018-11-03 13:56:10 -0400
Branch: REL9_5_STABLE [6e6092989] 2018-11-03 13:56:10 -0400
Branch: REL9_4_STABLE [0ae902e39] 2018-11-03 13:56:10 -0400
Branch: REL9_3_STABLE [33c697e9d] 2018-11-03 13:56:10 -0400
-->
     <para>
      Fix character-class checks to not fail on Windows for Unicode
      characters above U+FFFF (Tom Lane, Kenji Uno)
     </para>

     <para>
      This bug affected full-text-search operations, as well
      as <filename>contrib/ltree</filename>
      and <filename>contrib/pg_trgm</filename>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [2ddb9149d] 2018-10-19 21:39:21 -0400
Branch: REL_11_STABLE [7aaeb7b45] 2018-10-19 21:39:21 -0400
Branch: REL_10_STABLE [3bdef6d21] 2018-10-19 21:39:21 -0400
Branch: REL9_6_STABLE [cbab94077] 2018-10-19 21:39:22 -0400
Branch: REL9_5_STABLE [f4941666a] 2018-10-19 21:39:22 -0400
-->
     <para>
      Ensure that the server will process
      already-received <literal>NOTIFY</literal>
      and <literal>SIGTERM</literal> interrupts before waiting for client
      input (Jeff Janes, Tom Lane)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [696b0c5fd] 2018-10-31 17:05:03 -0400
Branch: REL_11_STABLE [2493e2c2d] 2018-10-31 17:04:42 -0400
Branch: REL_10_STABLE [92e371f9b] 2018-10-31 17:04:43 -0400
Branch: REL9_6_STABLE [558571afc] 2018-10-31 17:04:43 -0400
Branch: REL9_5_STABLE [156a737a6] 2018-10-31 17:04:43 -0400
Branch: REL9_4_STABLE [95015b1f8] 2018-10-31 17:04:43 -0400
Branch: REL9_3_STABLE [82dd1c271] 2018-10-31 17:04:43 -0400
-->
     <para>
      Fix memory leak in repeated SP-GiST index scans (Tom Lane)
     </para>

     <para>
      This is only known to amount to anything significant in cases where
      an exclusion constraint using SP-GiST receives many new index entries
      in a single command.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [691d79a07] 2018-10-31 15:46:39 -0700
Branch: REL_11_STABLE [c33a01c79] 2018-10-31 15:46:40 -0700
Branch: REL_10_STABLE [021e1c329] 2018-10-31 15:46:40 -0700
Branch: REL9_6_STABLE [d35fd17cb] 2018-10-31 15:46:40 -0700
Branch: REL9_5_STABLE [679cb44e4] 2018-10-31 15:46:40 -0700
Branch: REL9_4_STABLE [cf358a2c0] 2018-10-31 15:46:40 -0700
-->
     <para>
      Prevent starting the server with <varname>wal_level</varname> set
      to too low a value to support an existing replication slot (Andres
      Freund)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4247db625] 2018-10-19 22:22:57 -0400
Branch: REL_11_STABLE [d30d27a52] 2018-10-19 22:22:57 -0400
Branch: REL_10_STABLE [ecc59e31a] 2018-10-19 22:22:57 -0400
Branch: REL9_6_STABLE [34aad21cb] 2018-10-19 22:22:57 -0400
Branch: REL9_5_STABLE [ac3be116a] 2018-10-19 22:22:57 -0400
-->
     <para>
      Fix <application>psql</application>, as well as documentation
      examples, to call <function>PQconsumeInput()</function> before
      each <function>PQnotifies()</function> call (Tom Lane)
     </para>

     <para>
      This fixes cases in which <application>psql</application> would not
      report receipt of a <literal>NOTIFY</literal> message until after the
      next command.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [d55241af7] 2018-10-19 22:44:12 +0900
Branch: REL_11_STABLE [cc7f27eae] 2018-10-19 22:45:07 +0900
-->
     <para>
      Fix <application>pg_verify_checksums</application>'s determination of
      which files to check the checksums of (Michael Paquier)
     </para>

     <para>
      In some cases it complained about files that are not expected to have
      checksums.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [edb979766] 2018-09-25 09:55:44 +0900
Branch: REL_11_STABLE Release: REL_11_0 [a3bb831ef] 2018-09-25 09:56:41 +0900
Branch: REL_10_STABLE [90a1f9786] 2018-09-25 09:56:57 +0900
-->
     <para>
      In <filename>contrib/pg_stat_statements</filename>, disallow
      the <literal>pg_read_all_stats</literal> role from
      executing <function>pg_stat_statements_reset()</function>
      (Haribabu Kommi)
     </para>

     <para>
      <literal>pg_read_all_stats</literal> is only meant to grant permission
      to read statistics, not to change them, so this grant was incorrect.
     </para>

     <para>
      To cause this change to take effect, run <literal>ALTER EXTENSION
      pg_stat_statements UPDATE</literal> in each database
      where <filename>pg_stat_statements</filename> has been installed.
      (A database freshly created in 11.0 should not need this, but a
      database upgraded from a previous release probably still contains
      the old version of <filename>pg_stat_statements</filename>.  The
      <literal>UPDATE</literal> command is harmless if the module was
      already updated.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [003c68a3b] 2018-11-06 13:25:24 -0500
Branch: REL_11_STABLE [1f28ec6be] 2018-11-06 13:25:24 -0500
Branch: REL_10_STABLE [b2e754c14] 2018-11-06 13:25:24 -0500
-->
     <para>
      Rename red-black tree support functions to use <literal>rbt</literal>
      prefix not <literal>rb</literal> prefix (Tom Lane)
     </para>

     <para>
      This avoids name collisions with Ruby functions, which broke
      PL/Ruby.  It's hoped that there are no other affected extensions.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1440c461f] 2018-11-02 18:54:00 -0400
Branch: REL_11_STABLE [df1d749a7] 2018-11-02 18:54:00 -0400
Branch: REL_10_STABLE [229a5c8ad] 2018-11-02 18:54:00 -0400
Branch: REL9_6_STABLE [401202b79] 2018-11-02 18:54:00 -0400
Branch: REL9_5_STABLE [94ea1cf73] 2018-11-02 18:54:00 -0400
Branch: REL9_4_STABLE [1b5e8b408] 2018-11-02 18:54:00 -0400
Branch: REL9_3_STABLE [1aad3a724] 2018-11-02 18:54:00 -0400
Branch: master [e74dd00f5] 2018-10-18 14:55:23 -0400
Branch: REL_11_STABLE [d1e869d1e] 2018-10-18 14:55:23 -0400
Branch: REL_10_STABLE [34f9944c2] 2018-10-18 14:55:23 -0400
Branch: REL9_6_STABLE [1b92ca9e2] 2018-10-18 14:55:23 -0400
Branch: REL9_5_STABLE [021b355cd] 2018-10-18 14:55:23 -0400
Branch: REL9_4_STABLE [0749acca5] 2018-10-18 14:55:23 -0400
Branch: REL9_3_STABLE [015fd381f] 2018-10-18 14:55:23 -0400
Branch: master [68fc227dd] 2018-10-16 16:27:15 -0400
Branch: REL_11_STABLE [1a69f738d] 2018-10-16 16:27:15 -0400
Branch: REL_10_STABLE [ee6c08b01] 2018-10-16 16:27:15 -0400
Branch: REL9_6_STABLE [5777a9ff8] 2018-10-16 16:27:15 -0400
Branch: REL9_5_STABLE [d0ab588cc] 2018-10-16 16:27:15 -0400
Branch: REL9_4_STABLE [486e6f8d9] 2018-10-16 16:27:15 -0400
Branch: REL9_3_STABLE [19ac2cb2a] 2018-10-16 16:27:15 -0400
Branch: master [5e2217131] 2018-09-25 13:23:29 -0400
Branch: REL_11_STABLE Release: REL_11_0 [9590f7d6c] 2018-09-25 13:23:29 -0400
Branch: REL_10_STABLE [736c3a48c] 2018-09-25 13:23:29 -0400
Branch: REL9_6_STABLE [0a4456a70] 2018-09-25 13:23:29 -0400
Branch: REL9_5_STABLE [6dc28d291] 2018-09-25 13:23:29 -0400
Branch: REL9_4_STABLE [a5361b593] 2018-09-25 13:23:29 -0400
Branch: REL9_3_STABLE [6019247a5] 2018-09-25 13:23:29 -0400
-->
     <para>
      Fix build problems on macOS 10.14 (Mojave) (Tom Lane)
     </para>

     <para>
      Adjust <application>configure</application> to add
      an <option>-isysroot</option> switch to <varname>CPPFLAGS</varname>;
      without this, PL/Perl and PL/Tcl fail to configure or build on macOS
      10.14.  The specific sysroot used can be overridden at configure time
      or build time by setting the <varname>PG_SYSROOT</varname> variable in
      the arguments of <application>configure</application>
      or <application>make</application>.
     </para>

     <para>
      It is now recommended that Perl-related extensions
      write <literal>$(perl_includespec)</literal> rather
      than <literal>-I$(perl_archlibexp)/CORE</literal> in their compiler
      flags.  The latter continues to work on most platforms, but not recent
      macOS.
     </para>

     <para>
      Also, it should no longer be necessary to
      specify <option>--with-tclconfig</option> manually to get PL/Tcl to
      build on recent macOS releases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [1df92eeaf] 2018-10-28 12:22:32 -0400
Branch: REL_11_STABLE [8cb5e67d1] 2018-10-28 12:23:19 -0400
Branch: REL_10_STABLE [a71f55652] 2018-10-28 12:25:10 -0400
Branch: REL9_6_STABLE [9fd6d4eae] 2018-10-28 12:25:56 -0400
Branch: REL9_5_STABLE [ba103dc87] 2018-10-28 12:26:05 -0400
Branch: REL9_4_STABLE [698255147] 2018-10-28 12:26:14 -0400
Branch: REL9_3_STABLE [075641fd0] 2018-10-28 12:27:58 -0400
-->
     <para>
      Fix MSVC build and regression-test scripts to work on recent Perl
      versions (Andrew Dunstan)
     </para>

     <para>
      Perl no longer includes the current directory in its search path
      by default; work around that.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [ce5d3424d] 2018-10-20 09:02:36 -0400
Branch: REL_11_STABLE [a0a8671a6] 2018-10-20 09:10:02 -0400
Branch: REL_10_STABLE [f4b67efdc] 2018-10-20 09:10:18 -0400
Branch: REL9_6_STABLE [42a93da25] 2018-10-20 09:10:54 -0400
Branch: REL9_5_STABLE [cc02db82c] 2018-10-20 09:11:18 -0400
-->
     <para>
      On Windows, allow the regression tests to be run by an Administrator
      account (Andrew Dunstan)
     </para>

     <para>
      To do this safely, <application>pg_regress</application> now gives up
      any such privileges at startup.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5c2e0ca5f] 2018-10-31 08:35:50 -0400
Branch: REL_11_STABLE [58c45fdaa] 2018-10-31 08:36:06 -0400
Branch: REL_10_STABLE [671f43d88] 2018-10-31 08:36:15 -0400
Branch: REL9_6_STABLE [bb761c6a0] 2018-10-31 08:36:22 -0400
Branch: REL9_5_STABLE [811d8cb87] 2018-10-31 08:36:29 -0400
Branch: REL9_4_STABLE [d651e9e7c] 2018-10-31 08:36:35 -0400
Branch: REL9_3_STABLE [3bf4edace] 2018-10-31 08:36:41 -0400
Branch: master [13877d30f] 2018-10-19 17:01:34 -0400
Branch: REL_11_STABLE [d2259c26b] 2018-10-19 17:01:49 -0400
Branch: REL_10_STABLE [5777c93af] 2018-10-19 17:01:56 -0400
Branch: REL9_6_STABLE [185f135c9] 2018-10-19 17:02:05 -0400
Branch: REL9_5_STABLE [56170609b] 2018-10-19 17:02:12 -0400
Branch: REL9_4_STABLE [9abbfc35c] 2018-10-19 17:02:20 -0400
Branch: REL9_3_STABLE [84261eb10] 2018-10-19 17:02:26 -0400
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2018g for DST law changes in Chile, Fiji, Morocco, and Russia
      (Volgograd), plus historical corrections for China, Hawaii, Japan,
      Macau, and North Korea.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-11">
  <title>Release 11</title>

  <formalpara>
   <title>Release date:</title>
   <para>2018-10-18</para>
  </formalpara>

  <sect2>
   <title>Overview</title>

   <para>
    Major enhancements in <productname>PostgreSQL</productname> 11 include:
   </para>

   <!-- Items in this list summarize one or more items below -->

   <itemizedlist>

    <listitem>
     <para>
      Improvements to partitioning functionality, including:
      <itemizedlist>
       <listitem>
        <para>
         Add support for partitioning by a hash key
        </para>
       </listitem>
       <listitem>
        <para>
         Add support for <literal>PRIMARY KEY</literal>, <literal>FOREIGN
         KEY</literal>, indexes, and triggers on partitioned tables
        </para>
       </listitem>
       <listitem>
        <para>
         Allow creation of a <quote>default</quote> partition for storing
         data that does not match any of the remaining partitions
        </para>
       </listitem>
       <listitem>
        <para>
         <command>UPDATE</command> statements that change a partition key
         column now cause affected rows to be moved to the appropriate
         partitions
        </para>
       </listitem>
       <listitem>
        <para>
         Improve <command>SELECT</command> performance through enhanced
         partition elimination strategies during query planning and execution
        </para>
       </listitem>
      </itemizedlist>
     </para>
    </listitem>

    <listitem>
     <para>
      Improvements to parallelism, including:
      <itemizedlist>
       <listitem>
        <para>
         <command>CREATE INDEX</command> can now use parallel processing
         while building a B-tree index
        </para>
       </listitem>
       <listitem>
        <para>
         Parallelization is now possible in <command>CREATE TABLE
         ... AS</command>,
         <command>CREATE MATERIALIZED VIEW</command>, and certain
         queries using <literal>UNION</literal>
        </para>
       </listitem>
       <listitem>
        <para>
         Parallelized hash joins and parallelized sequential scans now
         perform better
        </para>
       </listitem>
      </itemizedlist>
     </para>
    </listitem>

    <listitem>
     <para>
      SQL stored procedures that support embedded transactions
     </para>
    </listitem>

    <listitem>
     <para>
      Optional Just-in-Time (JIT) compilation for some SQL code, speeding
      evaluation of expressions
     </para>
    </listitem>

    <listitem>
     <para>
      Window functions now support all framing options shown in the SQL:2011
      standard, including <literal>RANGE <replaceable>distance</replaceable>
      PRECEDING/FOLLOWING</literal>, <literal>GROUPS</literal> mode, and
      frame exclusion options
     </para>
    </listitem>

    <listitem>
     <para>
      Covering indexes can now be created, using the
      <literal>INCLUDE</literal> clause of <command>CREATE INDEX</command>
     </para>
    </listitem>

    <listitem>
     <para>
      Many other useful performance improvements, including the ability to
      avoid a table rewrite for <command>ALTER TABLE ... ADD COLUMN</command>
      with a non-null column default
     </para>
    </listitem>

   </itemizedlist>

   <para>
    The above items are explained in more detail in the sections below.
   </para>

  </sect2>

  <sect2>

  <title>Migration to Version 11</title>

   <para>
    A dump/restore using <xref linkend="app-pg-dumpall"/> or use of <xref
    linkend="pgupgrade"/> or logical replication is required for those
    wishing to migrate data from any previous release.  See <xref
    linkend="upgrading"/> for general information on migrating to new major
    releases.
   </para>

   <para>
    Version 11 contains a number of changes that may affect compatibility
    with previous releases.  Observe the following incompatibilities:
   </para>

   <itemizedlist>

    <listitem>
<!--
2018-01-22 [b3f840120] Move handling of database properties from pg_dumpall int
2018-01-23 [160a4f62e] In pg_dump, force reconnection after issuing ALTER DATAB
2018-01-25 [0d4e6ed30] Clean up some aspects of pg_dump/pg_restore item-selecti
-->

       <para>
        Make <link
        linkend="app-pgdump"><application>pg_dump</application></link>
        dump the properties of a database, not just its contents
        (Haribabu Kommi)
       </para>

       <para>
        Previously, attributes of the database itself, such as database-level
        <command>GRANT</command>/<command>REVOKE</command> permissions and
        <command>ALTER DATABASE SET</command> variable settings, were only
        dumped by <link linkend="app-pg-dumpall"><application>pg_dumpall</application></link>.
        Now <command>pg_dump --create</command> and
        <command>pg_restore --create</command> will restore these database
        properties in addition to the objects within the
        database.  <command>pg_dumpall -g</command> now only dumps role-
        and tablespace-related attributes.
        <application>pg_dumpall</application>'s complete output (without
        <option>-g</option>) is unchanged.
       </para>

       <para>
        <application>pg_dump</application> and
        <application>pg_restore</application>, without
        <option>--create</option>, no longer dump/restore database-level
        comments and security labels; those are now treated as properties of
        the database.
       </para>

       <para>
        <application>pg_dumpall</application>'s output script will now always
        create databases with their original locale and encoding, and hence
        will fail if the locale or encoding name is unknown to the
        destination system.  Previously, <command>CREATE DATABASE</command>
        would be emitted without these specifications if the database locale
        and encoding matched the old cluster's defaults.
       </para>

       <para>
        <command>pg_dumpall --clean</command> now restores the original
        locale and encoding settings of the <literal>postgres</literal>
        and <literal>template1</literal> databases, as well as those of
        user-created databases.
       </para>
      </listitem>

      <listitem>
<!--
2018-06-18 [b97a3465d] Consider syntactic form when disambiguating function vs
2018-06-18 [45e98ee73] Remove obsolete prohibition on function name matching a
-->

       <para>
        Consider syntactic form when disambiguating function versus column
        references (Tom Lane)
       </para>

       <para>
        When <replaceable>x</replaceable> is a table name or composite
        column, <productname>PostgreSQL</productname> has traditionally
        considered the syntactic
        forms <literal><replaceable>f</replaceable>(<replaceable>x</replaceable>)</literal>
        and <literal><replaceable>x</replaceable>.<replaceable>f</replaceable></literal>
        to be equivalent, allowing tricks such as writing a function and
        then using it as though it were a computed-on-demand column.
        However, if both interpretations are feasible, the column
        interpretation was always chosen, leading to surprising results if
        the user intended the function interpretation.  Now, if there is
        ambiguity, the interpretation that matches the syntactic form is
        chosen.
       </para>
      </listitem>

      <listitem>
<!--
2018-09-04 [fb466d7b5] Fully enforce uniqueness of constraint names.
-->
       <para>
        Fully enforce uniqueness of table and domain constraint names
        (Tom Lane)
       </para>

       <para>
        <productname>PostgreSQL</productname> expects the names of a table's
        constraints to be distinct, and likewise for the names of a domain's
        constraints.  However, there was not rigid enforcement of this, and
        previously there were corner cases where duplicate names could be
        created.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-29 [61b200e2f] Avoid wrong results for power() with NaN input on some p
2018-04-29 [6bdf1303b] Avoid wrong results for power() with NaN input on more p
2018-05-17 [d1fc750b5] Make numeric power() handle NaNs according to the modern
-->

       <para>
        Make <function>power(numeric, numeric)</function>
        and <function>power(float8, float8)</function>
        handle <literal>NaN</literal> inputs according to the POSIX standard
        (Tom Lane, Dang Minh Huong)
       </para>

       <para>
        POSIX says that <literal>NaN ^ 0 = 1</literal> and <literal>1 ^ NaN
        = 1</literal>, but all other cases with <literal>NaN</literal>
        input(s) should return <literal>NaN</literal>.
        <function>power(numeric, numeric)</function> just
        returned <literal>NaN</literal> in all such cases; now it honors the
        two exceptions.  <function>power(float8, float8)</function> followed
        the standard if the C library does; but on some old Unix platforms
        the library doesn't, and there were also problems on some versions
        of Windows.
       </para>
      </listitem>

      <listitem>
<!--
2017-11-17 [e87d4965b] Prevent to_number() from losing data when template doesn
-->

       <para>
        Prevent <link
        linkend="functions-formatting-numeric-table"><function>to_number()</function></link>
        from consuming characters when the template separator does not
        match (Oliver Ford)
       </para>

       <para>
        Specifically, <command>SELECT to_number('1234', '9,999')</command>
        used to return <literal>134</literal>.  It will now
        return <literal>1234</literal>.  <literal>L</literal> and
        <literal>TH</literal> now only consume characters that are not
        digits, positive/negative signs, decimal points, or commas.
       </para>
      </listitem>

      <listitem>
<!--
2017-11-18 [976a1a48f] Improve to_date/to_number/to_timestamp behavior with mul
-->

       <para>
        Fix <link
        linkend="functions-formatting"><function>to_date()</function></link>,
        <function>to_number()</function>, and
        <function>to_timestamp()</function> to skip a character for each
        template character (Tom Lane)
       </para>

       <para>
        Previously, they skipped one <emphasis>byte</emphasis> for each byte
        of template character, resulting in strange behavior if either string
        contained multibyte characters.
       </para>
      </listitem>

      <listitem>
<!--
2017-11-18 [63ca86318] Fix quoted-substring handling in format parsing for to_c
-->

       <para>
        Adjust the handling of backslashes inside double-quotes in
        template strings for <function>to_char()</function>,
        <function>to_number()</function>, and
        <function>to_timestamp()</function>.
       </para>

       <para>
        Such a backslash now escapes the character after it, particularly
        a double-quote or another backslash.
       </para>
      </listitem>

      <listitem>
<!--
2018-06-21 [e474c2b7e] Set correct context for XPath evaluation
-->

       <para>
        Correctly handle relative path expressions
        in <function>xmltable()</function>, <function>xpath()</function>,
        and other XML-handling functions (Markus Winand)
       </para>

       <para>
        Per the SQL standard, relative paths start from the document node of
        the XML input document, not the root node as these functions
        previously did.
       </para>
      </listitem>

      <listitem>
<!--
2017-09-18 [f8e5f156b] Rearm statement_timeout after each executed query.

-->

       <para>
        In the <link linkend="protocol-query-concepts">extended query
        protocol</link>,
        make <link linkend="guc-statement-timeout"><varname>statement_timeout</varname></link>
        apply to each Execute message separately, not to all commands before
        Sync (Tatsuo Ishii, Andres Freund)
       </para>
      </listitem>

      <listitem>
<!--
2018-03-14 [f66e8bf87] Remove pg_class.relhaspkey
-->

       <para>
        Remove the <structfield>relhaspkey</structfield> column from system
        catalog <structname>pg_class</structname> (Peter Eisentraut)
       </para>

       <para>
        Applications needing to check for a primary key should consult
        <structname>pg_index</structname>.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-02 [fd1a421fe] Add prokind column, replacing proisagg and proiswindow
-->

       <para>
        Replace system catalog <structname>pg_proc</structname>'s
        <structfield>proisagg</structfield> and
        <structfield>proiswindow</structfield> columns with
        <structfield>prokind</structfield> (Peter Eisentraut)
       </para>

       <para>
        This new column more clearly distinguishes functions, procedures,
        aggregates, and window functions.
       </para>
      </listitem>

      <listitem>
<!--
2017-08-16 [9b5140fb5] Correct representation of foreign tables in information
-->

       <para>
        Correct information schema column <link
        linkend="infoschema-tables"><structname>tables</structname>.<structfield>table_type</structfield></link>
        to return <literal>FOREIGN</literal> instead of <literal>FOREIGN
        TABLE</literal> (Peter Eisentraut)
       </para>

       <para>
        This new output matches the SQL standard.
       </para>
      </listitem>

      <listitem>
<!--
2017-09-20 [be87b70b6] Sync process names between ps and pg_stat_activity
-->

       <para>
        Change the ps process display
        labels for background workers to match the <link
        linkend="pg-stat-activity-view"><structname>pg_stat_activity</structname>.<structfield>backend_type</structfield></link>
        labels (Peter Eisentraut)
       </para>
      </listitem>

      <listitem>
<!--
2017-11-09 [ae20b23a9] Refactor permissions checks for large objects.
2017-11-14 [6d776522d] Document changes in large-object privilege checking.
-->

       <para>
        Cause large object permission checks
        to happen during large object open, <link
        linkend="lo-open"><function>lo_open()</function></link>, not
        when a read or write is attempted (Tom Lane, Michael Paquier)
       </para>

       <para>
        If write access is requested and not available, an error will now be
        thrown even if the large object is never written to.
       </para>
      </listitem>

      <listitem>
<!--
2018-08-09 [87330e21c] Restrict access to reindex of shared catalogs for non-pr
-->
       <para>
        Prevent non-superusers from reindexing shared catalogs
        (Michael Paquier, Robert Haas)
       </para>

       <para>
        Previously, database owners were also allowed to do this, but
        now it is considered outside the bounds of their privileges.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-06 [11523e860] Support new default roles with adminpack
-->

       <para>
        Remove deprecated <link
        linkend="adminpack"><filename>adminpack</filename></link> functions
        <function>pg_file_read()</function>,
        <function>pg_file_length()</function>, and
        <function>pg_logfile_rotate()</function> (Stephen Frost)
       </para>

       <para>
        Equivalent functionality is now present in the core backend.
        Existing <filename>adminpack</filename> installs will continue to have
        access to these functions until they are updated via <command>ALTER
        EXTENSION ... UPDATE</command>.
       </para>
      </listitem>

      <listitem>
<!--
2018-01-26 [fb8697b31] Avoid unnecessary use of pg_strcasecmp for already-downc
-->

       <para>
        Honor the capitalization of double-quoted command options
        (Daniel Gustafsson)
       </para>

       <para>
        Previously, option names in certain SQL commands were forcibly
        lower-cased even if entered with double quotes; thus for example
        <literal>"FillFactor"</literal> would be accepted as an index storage
        option, though properly its name is lower-case.  Such cases will now
        generate an error.
       </para>
      </listitem>

      <listitem>
<!--
2017-09-29 [8b304b8b7] Remove replacement selection sort.
-->

       <para>
        Remove server parameter <varname>replacement_sort_tuples</varname>
        (Peter Geoghegan)
       </para>

       <para>
        Replacement sorts were determined to be no longer useful.
       </para>

      </listitem>

      <listitem>
<!--
2018-01-26 [4971d2a32] Remove the obsolete WITH clause of CREATE FUNCTION.
-->

       <para>
        Remove <literal>WITH</literal> clause in <link
        linkend="sql-createfunction"><command>CREATE
        FUNCTION</command></link> (Michael Paquier)
       </para>

       <para>
        <productname>PostgreSQL</productname> has long supported a more
        standard-compliant syntax for this capability.
       </para>
      </listitem>

      <listitem>
<!--
2018-02-13 [4b93f5799] Make plpgsql use its DTYPE_REC code paths for composite-
-->

       <para>
        In PL/pgSQL trigger functions, the <varname>OLD</varname>
        and <varname>NEW</varname> variables now read as NULL when not
        assigned (Tom Lane)
       </para>

       <para>
        Previously, references to these variables could be parsed but not
        executed.
       </para>
      </listitem>

   </itemizedlist>

  </sect2>

  <sect2>
   <title>Changes</title>

   <para>
    Below you will find a detailed account of the changes between
    <productname>PostgreSQL</productname> 11 and the previous major
    release.
   </para>

   <sect3>
    <title>Server</title>

    <sect4>
     <title>Partitioning</title>

     <itemizedlist>

      <listitem>
<!--
2017-11-09 [1aba8e651] Add hash partitioning.
-->

       <para>
        Allow the creation of partitions based on hashing a key column
        (Amul Sul)
       </para>
      </listitem>

      <listitem>
<!--
2018-01-19 [8b08f7d48] Local partitioned indexes
2018-02-19 [eb7ed3f30] Allow UNIQUE indexes on partitioned tables
2018-03-26 [555ee77a9] Handle INSERT .. ON CONFLICT with partitioned tables
-->

       <para>
        Support indexes on partitioned tables (&Aacute;lvaro Herrera,
        Amit Langote)
       </para>

       <para>
        An <quote>index</quote> on a partitioned table is not a physical
        index across the whole partitioned table, but rather a template for
        automatically creating similar indexes on each partition of the
        table.
       </para>

       <para>
        If the partition key is part of the index's column set, a
        partitioned index may be declared <literal>UNIQUE</literal>.
        It will represent a valid uniqueness constraint across the whole
        partitioned table, even though each physical index only enforces
        uniqueness within its own partition.
       </para>

       <para>
        The new command <link linkend="sql-alterindex"><command>ALTER
        INDEX ATTACH PARTITION</command></link> causes an existing index on
        a partition to be associated with a matching index template for its
        partitioned table.  This provides flexibility in setting up a new
        partitioned index for an existing partitioned table.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-04 [3de241dba] Foreign keys on partitioned tables
-->

       <para>
        Allow foreign keys on partitioned tables (&Aacute;lvaro Herrera)
       </para>
      </listitem>

      <listitem>
<!--
2018-03-23 [86f575948] Allow FOR EACH ROW triggers on partitioned tables
-->

       <para>
        Allow <literal>FOR EACH ROW</literal> triggers on partitioned
        tables (&Aacute;lvaro Herrera)
       </para>

       <para>
        Creation of a trigger on a partitioned table automatically creates
        triggers on all existing and future partitions.
        This also allows deferred unique constraints on partitioned tables.
       </para>
      </listitem>

      <listitem>
<!--
2017-09-08 [6f6b99d13] Allow a partitioned table to have a default partition.
2018-04-11 [72cf7f310] Fix ALTER TABLE .. ATTACH PARTITION ... DEFAULT
-->

       <para>
        Allow partitioned tables to have a default partition (Jeevan Ladhe,
        Beena Emerson, Ashutosh Bapat, Rahila Syed, Robert Haas)
       </para>

       <para>
        The default partition will store rows that don't match any of the
        other defined partitions, and is searched accordingly.
       </para>
      </listitem>

      <listitem>
<!--
2018-01-19 [2f1784410] Allow UPDATE to move rows between partitions.
-->

       <para>
        <command>UPDATE</command> statements that change a partition key
        column now cause affected rows to be moved to the appropriate
        partitions (Amit Khandekar)
       </para>
      </listitem>

      <listitem>
<!--
2018-04-06 [3d956d956] Allow insert and update tuple routing and COPY for forei
-->

       <para>
        Allow <command>INSERT</command>, <command>UPDATE</command>, and
        <command>COPY</command> on partitioned tables to properly route
        rows to foreign partitions (Etsuro Fujita, Amit Langote)
       </para>

       <para>
        This is supported by <filename>postgres_fdw</filename>
        foreign tables.
        Since the <function>ExecForeignInsert</function> callback function
        is called for this in a different way than it used to be,
        foreign data wrappers must be modified to cope with this change.
       </para>
      </listitem>

      <listitem>
<!--
2018-02-02 [9aef17316] Refactor code for partition bound searching
2018-02-23 [f724022d0] Revise API for partition bound search functions.
2018-04-06 [9fdb675fc] Faster partition pruning
2018-04-23 [055fb8d33] Add GUC enable_partition_pruning
-->

       <para>
        Allow faster partition elimination during query processing (Amit
        Langote, David Rowley, Dilip Kumar)
       </para>

       <para>
        This speeds access to partitioned tables with many partitions.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-07 [499be013d] Support partition pruning at execution time
-->

       <para>
        Allow partition elimination during query execution (David Rowley,
        Beena Emerson)
       </para>

       <para>
        Previously, partition elimination only happened at planning
        time, meaning many joins and prepared queries could not use
        partition elimination.
       </para>
      </listitem>

      <listitem>
<!--
2017-08-15 [e139f1953] Assorted preparatory refactoring for partition-wise join
2017-10-06 [f49842d1e] Basic partition-wise join functionality.
2018-02-16 [2fb1abaeb] Rename enable_partition_wise_join to enable_partitionwis
-->

       <para>
        In an equality join between partitioned tables, allow matching
        partitions to be joined directly (Ashutosh Bapat)
       </para>

       <para>
        This feature is disabled by default
        but can be enabled by changing <link
        linkend="guc-enable-partitionwise-join"><varname>enable_partitionwise_join</varname></link>.
       </para>
      </listitem>

      <listitem>
<!--
2018-01-26 [9fd8b7d63] Factor some code out of create_grouping_paths.
2018-03-22 [e2f1eb0ee] Implement partition-wise grouping/aggregation.
-->

       <para>
        Allow aggregate functions on partitioned tables to be evaluated
        separately for each partition, subsequently merging the results
        (Jeevan Chalke, Ashutosh Bapat, Robert Haas)
       </para>

       <para>
        This feature is disabled by default
        but can be enabled by changing <link
        linkend="guc-enable-partitionwise-aggregate"><varname>enable_partitionwise_aggregate</varname></link>.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-02 [7e0d64c7a] postgres_fdw: Push down partition-wise aggregation.
-->

       <para>
        Allow <link
        linkend="postgres-fdw"><filename>postgres_fdw</filename></link>
        to push down aggregates to foreign tables that are partitions
        (Jeevan Chalke)
       </para>

      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Parallel Queries</title>

     <itemizedlist>

      <listitem>
<!--
2018-02-02 [9da0cc352] Support parallel btree index builds.
-->

       <para>
        Allow parallel building of a btree index (Peter Geoghegan,
        Rushabh Lathia, Heikki Linnakangas)
       </para>
      </listitem>

      <listitem>
<!--
2017-12-21 [180428404] Add parallel-aware hash joins.
-->

       <para>
        Allow hash joins to be performed in parallel using a shared hash
        table (Thomas Munro)
       </para>
      </listitem>

      <listitem>
<!--
2017-12-05 [ab7271677] Support Parallel Append plan nodes.
2018-03-22 [88ba0ae2a] Consider Parallel Append of partial paths for UNION [ALL
-->

       <para>
        Allow <literal>UNION</literal> to run each
        <command>SELECT</command> in parallel if the individual
        <command>SELECT</command>s cannot be parallelized (Amit Khandekar,
        Robert Haas, Amul Sul)
       </para>
      </listitem>

      <listitem>
<!--
same commits as above
2017-12-05 [ab7271677] Support Parallel Append plan nodes.
2018-03-22 [88ba0ae2a] Consider Parallel Append of partial paths for UNION [ALL
-->

       <para>
        Allow partition scans to more efficiently use parallel workers
        (Amit Khandekar, Robert Haas, Amul Sul)
       </para>
      </listitem>

      <listitem>
<!--
2017-08-29 [3452dc524] Push tuple limits through Gather and Gather Merge.
-->

       <para>
        Allow <literal>LIMIT</literal> to be passed to parallel workers
        (Robert Haas, Tom Lane)
       </para>

       <para>
        This allows workers to reduce returned results and use targeted
        index scans.
       </para>
      </listitem>

      <listitem>
<!--
2017-11-16 [e89a71fb4] Pass InitPlan values to workers via Gather (Merge).
2018-03-29 [3f90ec859] Postpone generate_gather_paths for topmost scan/join rel
2018-03-29 [11cf92f6e] Rewrite the code that applies scan/join targets to paths
-->

       <para>
        Allow single-evaluation queries, e.g., <literal>WHERE</literal>
        clause aggregate queries, and functions in the target list to be
        parallelized (Amit Kapila, Robert Haas)
       </para>
      </listitem>

      <listitem>
<!--
2017-11-15 [e5253fdc4] Add parallel_leader_participation GUC.
-->

       <para>
        Add server parameter <link
        linkend="guc-parallel-leader-participation"><varname>parallel_leader_participation</varname></link>
        to control whether the leader also executes subplans (Thomas Munro)
       </para>

       <para>
        The default is enabled, meaning the leader will execute subplans.
       </para>
      </listitem>

      <listitem>
<!--
2017-10-05 [e9baa5e9f] Allow DML commands that create tables to use parallel qu
-->

       <para>
        Allow parallelization of commands <command>CREATE TABLE
        ... AS</command>, <command>SELECT INTO</command>, and
        <command>CREATE MATERIALIZED VIEW</command> (Haribabu Kommi)
       </para>
      </listitem>

      <listitem>
<!--
2017-08-16 [3cda10f41] Use atomic ops to hand out pages to scan in parallel sca

-->

       <para>
        Improve performance of sequential scans with many parallel workers
        (David Rowley)
       </para>
      </listitem>

      <listitem>
<!--
2017-08-29 [bf11e7ee2] Propagate sort instrumentation from workers back to lead
-->

       <para>
        Add reporting of parallel workers' sort activity in
        <command>EXPLAIN</command> (Robert Haas, Tom Lane)
       </para>

      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Indexes</title>

     <itemizedlist>

      <listitem>
<!--
2018-04-07 [8224de4f4] Indexes with INCLUDE columns and their support in B-tree
-->

       <para>
        Allow B-tree indexes to include columns that are not part of the
        search key or unique constraint, but are available to be read by
        index-only scans (Anastasia Lubennikova, Alexander Korotkov, Teodor
        Sigaev)
       </para>

       <para>
        This is enabled by the new <literal>INCLUDE</literal> clause of <link
        linkend="sql-createindex"><command>CREATE INDEX</command></link>.
        It facilitates building <quote>covering indexes</quote> that optimize
        specific types of queries.  Columns can be included even if their
        data types don't have B-tree support.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-26 [2b2727343] Optimize btree insertions for common case of increasing
2018-04-10 [074251db6] Adjustments to the btree fastpath optimization.
-->

       <para>
        Improve performance of monotonically increasing index additions
        (Pavan Deolasee, Peter Geoghegan)
       </para>
      </listitem>

      <listitem>
<!--
2017-09-22 [7c75ef571] hash: Implement page-at-a-time scan.
-->

       <para>
        Improve performance of hash index scans (Ashutosh Sharma)
       </para>
      </listitem>

      <listitem>
<!--
2018-03-27 [3ad55863e] Add predicate locking for GiST
2018-03-30 [43d1ed60f] Predicate locking in GIN index
2018-04-07 [b508a56f2] Predicate locking in hash indexes.
-->

       <para>
        Add predicate locking for hash, GiST and GIN indexes (Shubham
        Barai)
       </para>

       <para>
        This reduces the likelihood of serialization conflicts in
        serializable-mode transactions.
       </para>
      </listitem>

     </itemizedlist>

     <sect5>
      <title><link linkend="spgist">SP-Gist</link></title>

      <itemizedlist>

      <listitem>
<!--
2018-04-03 [710d90da1] Add prefix operator for TEXT type.
-->

       <para>
        Add prefix-match
        operator <type>text</type> <literal>^@</literal> <type>text</type>,
        which is supported by SP-GiST (Ildus Kurbangaliev)
       </para>

       <para>
        This is similar to using <replaceable>var</replaceable> <literal>LIKE
        'word%'</literal> with a btree index, but it is more efficient.
       </para>
      </listitem>

      <listitem>
<!--
2017-12-25 [ff963b393] Add polygon opclass for SP-GiST
-->

       <para>
        Allow polygons to be indexed with SP-GiST (Nikita Glukhov,
        Alexander Korotkov)
       </para>
      </listitem>

      <listitem>
<!--
2017-12-22 [854823fa3] Add optional compression method to SP-GiST
-->

       <para>
        Allow SP-GiST to use lossy representation of leaf keys (Teodor Sigaev,
        Heikki Linnakangas, Alexander Korotkov, Nikita Glukhov)
       </para>

      </listitem>

      </itemizedlist>

     </sect5>

    </sect4>

    <sect4>
     <title>Optimizer</title>

     <itemizedlist>

      <listitem>
<!--
2018-03-22 [b5db1d93d] Improve ANALYZE's strategy for finding MCVs.
-->

       <para>
        Improve selection of the most common values for statistics
        (Jeff Janes, Dean Rasheed)
       </para>

       <para>
        Previously, the most common values (<acronym>MCV</acronym>s) were
        identified based on their frequency compared to all column
        values.  Now, <acronym>MCV</acronym>s are chosen based on their
        frequency compared to the non-<acronym>MCV</acronym> values.
        This improves the robustness of the algorithm for both uniform and
        non-uniform distributions.
       </para>
      </listitem>

      <listitem>
<!--
2017-09-13 [7d08ce286] Distinguish selectivity of &lt; from &lt;= and &gt; from &gt;=.
-->

       <para>
        Improve selectivity estimates for <literal>&gt;=</literal>
        and <literal>&lt;=</literal> (Tom Lane)
       </para>

       <para>
        Previously, such cases used the same selectivity estimates
        as <literal>&gt;</literal> and <literal>&lt;</literal>, respectively,
        unless the comparison constants are <acronym>MCV</acronym>s.
        This change is particularly helpful for queries
        involving <literal>BETWEEN</literal> with small ranges.
       </para>
      </listitem>

      <listitem>
<!--
2017-10-08 [8ec5429e2] Reduce "X = X" to "X IS NOT NULL", if it's easy to do so
-->

       <para>
        Reduce <replaceable>var</replaceable> <literal>=</literal>
        <replaceable>var</replaceable>
        to <replaceable>var</replaceable> <literal>IS NOT NULL</literal>
        where equivalent (Tom Lane)
       </para>

       <para>
        This leads to better selectivity estimates.
       </para>
      </listitem>

      <listitem>
<!--
2017-11-29 [7ca25b7de] Fix neqjoinsel's behavior for semi/anti join cases.
-->

       <para>
        Improve optimizer's row count estimates for <literal>EXISTS</literal>
        and <literal>NOT EXISTS</literal> queries (Tom Lane)
       </para>
      </listitem>

      <listitem>
<!--
2017-11-02 [7b6c07547] Teach planner to account for HAVING quals in aggregation
-->

       <para>
        Make the optimizer account for evaluation costs and selectivity
        of <literal>HAVING</literal> clauses (Tom Lane)
       </para>

      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>General Performance</title>

     <itemizedlist>

      <listitem>
<!--
2018-03-21 [432bb9e04] Basic JIT provider and error handling infrastructure.
2018-03-22 [b96d550eb] Support for optimizing and emitting code in LLVM JIT pro
2018-03-22 [cc415a56d] Basic planner and executor integration for JIT.
2018-03-26 [32af96b2b] JIT tuple deforming in LLVM JIT provider.
2018-03-27 [f4f5845b3] Quick adaption of JIT tuple deforming to the fast defaul
2018-03-28 [9370462e9] Add inlining support to LLVM JIT provider.
2018-09-15 [0fdadfb01] In v11, disable JIT by default (it's still enabled by de
-->

       <para>
        Add <link linkend="jit">Just-in-Time</link>
        (<acronym>JIT</acronym>) compilation of some parts of query plans
        to improve execution speed (Andres Freund)
       </para>

       <para>
        This feature requires <application>LLVM</application> to be
        available.  It is not currently enabled by default, even in
        builds that support it.
       </para>
      </listitem>

      <listitem>
<!--
2017-11-01 [7c70996eb] Allow bitmap scans to operate as index-only scans when p
-->

       <para>
        Allow bitmap scans to perform index-only scans when possible
        (Alexander Kuzmenkov)
       </para>
      </listitem>

      <listitem>
<!--
2018-03-29 [851a26e26] While vacuuming a large table, update upper-level <acronym>FSM</acronym> da
2018-03-30 [c79f6df75] Do index FSM vacuuming sooner.
-->

       <para>
        Update the free space map during <command>VACUUM</command>
        (Claudio Freire)
       </para>

       <para>
        This allows free space to be reused more quickly.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-04 [857f9c36c] Skip full index scan during cleanup of B-tree indexes wh
-->

       <para>
        Allow <command>VACUUM</command> to avoid unnecessary index scans
        (Masahiko Sawada, Alexander Korotkov)
       </para>
      </listitem>

      <listitem>
<!--
2017-09-01 [baaf272ac] Use group updates when setting transaction status in clo
-->

       <para>
        Improve performance of committing multiple concurrent transactions
        (Amit Kapila)
       </para>
      </listitem>

      <listitem>
<!--
2017-10-08 [84ad4b036] Reduce memory usage of targetlist SRFs.
-->

       <para>
        Reduce memory usage for queries using set-returning functions in
        their target lists (Andres Freund)
       </para>
      </listitem>

      <listitem>
<!--
2018-01-09 [69c3936a1] Expression evaluation based aggregate transition invocat
-->

       <para>
        Improve the speed of aggregate computations (Andres Freund)
       </para>
      </listitem>

      <listitem>
<!--
2018-02-07 [1bc0100d2] postgres_fdw: Push down UPDATE/DELETE joins to remote se
-->

       <para>
        Allow <link
        linkend="postgres-fdw"><filename>postgres_fdw</filename></link>
        to push <command>UPDATE</command>s and <command>DELETE</command>s
        using joins to foreign servers (Etsuro Fujita)
       </para>

       <para>
        Previously, only non-join <command>UPDATE</command>s and
        <command>DELETE</command>s were pushed.
       </para>

      </listitem>

      <listitem>
<!--
2018-01-21 [1cc4f536e] Support huge pages on Windows
-->

       <para>
        Add support for <firstterm>large pages</firstterm> on Windows
        (Takayuki Tsunakawa, Thomas Munro)
       </para>

       <para>
        This is controlled by the <link
        linkend="guc-huge-pages">huge_pages</link> configuration
        parameter.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Monitoring</title>

     <itemizedlist>

      <listitem>
<!--
2017-09-01 [c039ba071] Add memory info to getrusage output
-->

       <para>
        Show memory usage in output from <link
        linkend="runtime-config-statistics-monitor"><varname>log_statement_stats</varname></link>,
        <varname>log_parser_stats</varname>,
        <varname>log_planner_stats</varname>, and
        <varname>log_executor_stats</varname> (Justin Pryzby, Peter
        Eisentraut)
       </para>
      </listitem>

      <listitem>
<!--
2017-09-29 [5373bc2a0] Add background worker type
-->

       <para>
        Add column <link
        linkend="pg-stat-activity-view"><structname>pg_stat_activity</structname>.<structfield>backend_type</structfield></link>
        to show the type of a background worker (Peter Eisentraut)
       </para>

       <para>
        The type is also visible in <application>ps</application> output.
       </para>
      </listitem>

      <listitem>
<!--
2017-12-04 [ab6eaee88] When VACUUM or ANALYZE skips a concurrently dropped tabl
-->

       <para>
        Make <link
        linkend="guc-log-autovacuum-min-duration"><varname>log_autovacuum_min_duration</varname></link>
        log skipped tables that are concurrently being dropped (Nathan
        Bossart)
       </para>

      </listitem>

     </itemizedlist>

     <sect5>
      <title><link linkend="infoschema-tables">Information Schema</link></title>

      <itemizedlist>

      <listitem>
<!--
2018-02-07 [32ff26911] Add more information_schema columns
-->

       <para>
        Add <literal>information_schema</literal> columns related to table
        constraints and triggers (Peter Eisentraut)
       </para>

       <para>
        Specifically,
        <structname>triggers</structname>.<structfield>action_order</structfield>,
        <structname>triggers</structname>.<structfield>action_reference_old_table</structfield>,
        and
        <structname>triggers</structname>.<structfield>action_reference_new_table</structfield>
        are now populated, where before they were always null.  Also,
        <structname>table_constraints</structname>.<structfield>enforced</structfield>
        now exists but is not yet usefully populated.
       </para>

      </listitem>

      </itemizedlist>

     </sect5>
    </sect4>

    <sect4>
     <title><acronym>Authentication</acronym></title>

     <itemizedlist>

      <listitem>
<!--
2017-09-12 [83aaac41c] Allow custom search filters to be configured for LDAP au
-->

       <para>
        Allow the server to specify more complex <link
        linkend="auth-ldap"><acronym>LDAP</acronym></link> specifications
        in search+bind mode (Thomas Munro)
       </para>

       <para>
        Specifically, <literal>ldapsearchfilter</literal> allows pattern matching using
        combinations of <acronym>LDAP</acronym> attributes.
       </para>
      </listitem>

      <listitem>
<!--
2018-01-03 [35c0754fa] Allow ldaps when using ldap authentication
2018-01-04 [3ad2afc2e] Define LDAPS_PORT if it's missing and disable implicit L
-->

       <para>
        Allow <acronym>LDAP</acronym> authentication to use
        encrypted <acronym>LDAP</acronym> (Thomas Munro)
       </para>

       <para>
        We already supported <acronym>LDAP</acronym> over
        <acronym>TLS</acronym> by using <literal>ldaptls=1</literal>.
        This new <acronym>TLS</acronym> <acronym>LDAP</acronym> method for
        encrypted <acronym>LDAP</acronym> is enabled
        with <literal>ldapscheme=ldaps</literal>
        or <literal>ldapurl=ldaps://</literal>.
       </para>
      </listitem>

      <listitem>
<!--
2017-10-12 [cf1238cd9] Log diagnostic messages if errors occur during LDAP auth
-->

       <para>
        Improve logging of <acronym>LDAP</acronym> errors (Thomas Munro)
       </para>

      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Permissions</title>

     <itemizedlist>

      <listitem>
<!--
2018-04-06 [0fdc8495b] Add default roles for file/program access
2018-04-07 [da9b580d8] Refactor dir/file permissions
-->

       <para>
        Add <link linkend="default-roles-table">default roles</link> that
        enable file system access (Stephen Frost)
       </para>

       <para>
        Specifically, the new roles are:
        <literal>pg_read_server_files</literal>,
        <literal>pg_write_server_files</literal>, and
        <literal>pg_execute_server_program</literal>.  These roles now also
        control who can use server-side <command>COPY</command> and the <link
        linkend="file-fdw"><filename>file_fdw</filename></link> extension.
        Previously, only superusers could use these functions, and that
        is still the default behavior.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-06 [e79350fef] Remove explicit superuser checks in favor of ACLs
-->

       <para>
        Allow access to file system functions to be controlled by
        <command>GRANT</command>/<command>REVOKE</command> permissions,
        rather than superuser checks (Stephen Frost)
       </para>

       <para>
        Specifically, these functions were modified: <link
        linkend="functions-admin-genfile-table"><function>pg_ls_dir()</function></link>,
        <function>pg_read_file()</function>,
        <function>pg_read_binary_file()</function>,
        <function>pg_stat_file()</function>.
       </para>
      </listitem>

      <listitem>
<!--
2017-11-09 [5ecc0d738] Restrict lo_import()/lo_export() via SQL permissions not
2017-11-14 [6d776522d] Document changes in large-object privilege checking.
-->

       <para>
        Use <command>GRANT</command>/<command>REVOKE</command>
        to control access to <link
        linkend="lo-import"><function>lo_import()</function></link>
        and <function>lo_export()</function> (Michael Paquier, Tom Lane)
       </para>

       <para>
        Previously, only superusers were granted access to these functions.
       </para>

       <para>
        The compile-time option <literal>ALLOW_DANGEROUS_LO_FUNCTIONS</literal>
        has been removed.
       </para>
      </listitem>

      <listitem>
<!--
2017-12-05 [ab3f008a2] postgres_fdw: Judge password use by run-as user, not ses
-->

       <para>
        Use view owner not session owner when
        preventing non-password access to <link
        linkend="postgres-fdw"><filename>postgres_fdw</filename></link>
        tables (Robert Haas)
       </para>

       <para>
        <productname>PostgreSQL</productname> only allows superusers to
        access <filename>postgres_fdw</filename> tables without
        passwords, e.g., via <literal>peer</literal>.  Previously, the
        session owner had to be a superuser to allow such access; now
        the view owner is checked instead.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-14 [50c6bb022] Fix enforcement of SELECT FOR UPDATE permissions with ne
-->

       <para>
        Fix invalid locking permission check in <command>SELECT FOR
        UPDATE</command> on views (Tom Lane)
       </para>

      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Server Configuration</title>

     <itemizedlist>

      <listitem>
<!--
2018-03-17 [8a3d94252] Add ssl_passphrase_command setting
-->

       <para>
        Add server setting <link
        linkend="guc-ssl-passphrase-command"><varname>ssl_passphrase_command</varname></link>
        to allow supplying of the passphrase for <acronym>SSL</acronym>
        key files (Peter Eisentraut)
       </para>

       <para>
        Also add <link
        linkend="guc-ssl-passphrase-command-supports-reload"><varname>ssl_passphrase_command_supports_reload</varname></link>
        to specify whether the <acronym>SSL</acronym> configuration
        should be reloaded and <varname>ssl_passphrase_command</varname>
        called during a server configuration reload.
       </para>
      </listitem>

      <listitem>
<!--
2017-11-20 [c2513365a] Parameter toast_tuple_target controls TOAST for new rows
-->

       <para>
        Add storage parameter <link
        linkend="sql-createtable-storage-parameters"><varname>toast_tuple_target</varname></link>
        to control the minimum tuple length before <acronym>TOAST</acronym>
        storage will be considered (Simon Riggs)
       </para>

       <para>
        The default <acronym>TOAST</acronym> threshold has not been
        changed.
       </para>
      </listitem>

      <listitem>
<!--
2017-09-12 [6e7baa322] Introduce BYTES unit for GUCs.
2018-05-23 [b06d8e58b] Accept "B" in all memory-unit GUCs, and improve error me
-->

       <para>
        Allow server options related to memory and file sizes to be
        specified in units of bytes (Beena Emerson)
       </para>

       <para>
        The new unit suffix is <quote>B</quote>.  This is in addition to the
        existing units <quote>kB</quote>, <quote>MB</quote>, <quote>GB</quote>
        and <quote>TB</quote>.
       </para>

      </listitem>

    </itemizedlist>

    </sect4>

    <sect4>
     <title><link linkend="wal">Write-Ahead Log</link> (<acronym>WAL</acronym>)</title>

     <itemizedlist>

      <listitem>
<!--
2017-09-19 [fc49e24fa] Make WAL segment size configurable at initdb time.
-->

       <para>
        Allow the <acronym>WAL</acronym> file size to be set
        during <application>initdb</application> (Beena Emerson)
       </para>

       <para>
        Previously, the 16MB default could only be changed at compile time.
       </para>
      </listitem>

      <listitem>
<!--
2017-11-07 [4b0d28de0] Remove secondary checkpoint
-->

       <para>
        Retain <acronym>WAL</acronym> data for only a single checkpoint
        (Simon Riggs)
       </para>

       <para>
        Previously, <acronym>WAL</acronym> was retained for two checkpoints.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-30 [4a33bb59d] Ensure that WAL pages skipped by a forced WAL switch are
-->

       <para>
        Fill the unused portion of force-switched <acronym>WAL</acronym>
        segment files with zeros for improved compressibility (Chapman
        Flack)
       </para>

      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Base Backup and Streaming Replication</title>

    <itemizedlist>

      <listitem>
<!--
2018-04-07 [5dfd1e5a6] Logical decoding of TRUNCATE
2018-04-07 [039eb6e92] Logical replication support for TRUNCATE
-->

       <para>
        Replicate <command>TRUNCATE</command> activity when using logical
        replication (Simon Riggs, Marco Nenciarini, Peter Eisentraut)
       </para>
      </listitem>

      <listitem>
<!--
2018-03-28 [1eb6d6527] Store 2PC GID in commit/abort WAL recs for logical decod
-->

       <para>
        Pass prepared transaction information to logical replication
        subscribers (Nikhil Sontakke, Stas Kelvich)
       </para>
      </listitem>

      <listitem>
<!--
2018-03-23 [8694cc96b] Exclude unlogged tables from base backups
2018-03-27 [920a5e500] Skip temp tables from basebackup.
2017-11-07 [98267ee83] Exclude pg_internal.init from BASE_BACKUP
-->

       <para>
        Exclude unlogged tables, temporary tables, and
        <filename>pg_internal.init</filename> files from streaming base
        backups (David Steele)
       </para>

       <para>
        There is no need to copy such files.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-03 [4eb77d50c] Validate page level checksums in base backups
-->

       <para>
        Allow checksums of heap pages to be verified during streaming base
        backup (Michael Banck)
       </para>
      </listitem>

      <listitem>
<!--
2018-01-17 [9c7d06d60] Ability to advance replication slots
-->

       <para>
        Allow replication slots to be advanced programmatically, rather
        than be consumed by subscribers (Petr Jelinek)
       </para>

       <para>
        This allows efficient advancement of replication slots when the
        contents do not need to be consumed.  This is performed by
        <function>pg_replication_slot_advance()</function>.
       </para>
      </listitem>

      <listitem>
<!--
2018-01-06 [6271fceb8] Add TIMELINE to backup_label file
-->

       <para>
        Add timeline information to the <link
        linkend="backup-lowlevel-base-backup"><filename>backup_label</filename></link>
        file (Michael Paquier)
       </para>

       <para>
        Also add a check that the <acronym>WAL</acronym> timeline matches
        the <filename>backup_label</filename> file's timeline.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-31 [9a895462d] Enhance pg_stat_wal_receiver view to display host and po
-->

       <para>
        Add host and port connection information to the
        <structname>pg_stat_wal_receiver</structname> system view
        (Haribabu Kommi)
       </para>
      </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Utility Commands</title>

    <itemizedlist>

      <listitem>
<!--
2018-03-28 [16828d5c0] Fast ALTER TABLE ADD COLUMN with a non-NULL default
-->

       <para>
        Allow <command>ALTER TABLE</command> to add a column with
        a non-null default without doing a table rewrite (Andrew Dunstan,
        Serge Rielau)
       </para>

       <para>
        This is enabled when the default value is a constant.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-30 [34c20de4d] Allow to lock views.
2018-03-31 [1b26bd408] Fix bug with view locking code.
-->

       <para>
        Allow views to be locked by locking the underlying tables
        (Yugo Nagata)
       </para>
      </listitem>

      <listitem>
<!--
2017-09-06 [5b6d13eec] Allow SET STATISTICS on expression indexes
-->

       <para>
        Allow <command>ALTER INDEX</command> to set statistics-gathering
        targets for expression indexes (Alexander Korotkov, Adrien Nayrat)
       </para>

       <para>
        In <application>psql</application>, <literal>\d+</literal> now shows
        the statistics target for indexes.
       </para>
      </listitem>

      <listitem>
<!--
2017-10-03 [11d8d72c2] Allow multiple tables to be specified in one VACUUM or A
-->

       <para>
        Allow multiple tables to be specified in one
        <command>VACUUM</command> or <command>ANALYZE</command> command
        (Nathan Bossart)
       </para>

       <para>
        Also, if any table mentioned in <command>VACUUM</command> uses
        a column list, then the <command>ANALYZE</command> keyword must be
        supplied; previously, <command>ANALYZE</command> was implied in
        such cases.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-05 [854dd8cff] Add parenthesized options syntax for ANALYZE.
-->

       <para>
        Add parenthesized options syntax to <command>ANALYZE</command>
        (Nathan Bossart)
       </para>

       <para>
        This is similar to the syntax supported by
        <command>VACUUM</command>.
       </para>
      </listitem>

      <listitem>
<!--
2017-10-14 [4de2d4fba] Explicitly track whether aggregate final functions modif
2017-10-16 [be0ebb65f] Allow the built-in ordered-set aggregates to share trans
-->

       <para>
        Add <command>CREATE AGGREGATE</command> option to specify the
        behavior of the aggregate's finalization function (Tom Lane)
       </para>

       <para>
        This is helpful for allowing user-defined aggregate functions to be
        optimized and to work as window functions.
       </para>

      </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Data Types</title>

    <itemizedlist>

      <listitem>
<!--
2017-09-30 [c12d570fa] Support arrays over domains.
-->

       <para>
        Allow the creation of arrays of domains (Tom Lane)
       </para>

       <para>
        This also allows <function>array_agg()</function> to be used
        on domains.
       </para>
      </listitem>

      <listitem>
<!--
2017-10-26 [37a795a60] Support domains over composite types.
2017-10-26 [820c0305f] Support domains over composite types in PL/Tcl.
2017-10-28 [60651e4cd] Support domains over composite types in PL/Perl.
2017-11-16 [687f096ea] Make PL/Python handle domain-type conversions correctly.
-->

       <para>
        Support domains over composite types (Tom Lane)
       </para>

       <para>
        Also allow PL/Perl, PL/Python, and PL/Tcl to handle
        composite-domain function arguments and results.  Also improve
        PL/Python domain handling.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-29 [c0cbe00fe] Add casts from jsonb
-->

       <para>
        Add casts from <type>JSONB</type> scalars to numeric and boolean data
        types (Anastasia Lubennikova)
       </para>

      </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Functions</title>

    <itemizedlist>

      <listitem>
<!--
2018-02-07 [0a459cec9] Support all SQL:2011 options for window frame clauses.
2018-02-24 [8b29e88cd] Add window RANGE support for float4, float8, numeric.
-->

       <para>
        Add all <link linkend="sql-window">window function</link> framing
        options specified by SQL:2011 (Oliver Ford, Tom Lane)
       </para>

       <para>
        Specifically, allow <literal>RANGE</literal> mode to use
        <literal>PRECEDING</literal> and <literal>FOLLOWING</literal> to
        select rows having grouping values within plus or minus the
        specified offset.  Add <literal>GROUPS</literal> mode to include plus
        or minus the number of peer groups.  Frame exclusion syntax was also
        added.
       </para>

      </listitem>

      <listitem>
<!--
2018-02-22 [10cfce34c] Add user-callable SHA-2 functions
-->

       <para>
        Add <acronym>SHA-2</acronym> family of hash functions (Peter
        Eisentraut)
       </para>

       <para>
        Specifically, <link
        linkend="functions-binarystring-other"><function>sha224()</function></link>,
        <function>sha256()</function>, <function>sha384()</function>,
        <function>sha512()</function> were added.
       </para>
      </listitem>

      <listitem>
<!--
2017-08-31 [81c5e46c4] Introduce 64-bit hash functions with a 64-bit seed.
-->

       <para>
        Add support for 64-bit non-cryptographic hash functions (Robert
        Haas, Amul Sul)
       </para>
      </listitem>

      <listitem>
<!--
2018-01-09 [11b623dd0] Implement TZH and TZM timestamp format patterns
-->

       <para>
        Allow <function>to_char()</function> and
        <function>to_timestamp()</function> to specify the time zone's
        offset from <acronym>UTC</acronym> in hours and minutes
        (Nikita Glukhov, Andrew Dunstan)
       </para>

       <para>
        This is done with format specifications <link
        linkend="functions-formatting-datetime-table"><literal>TZH</literal></link>
        and <literal>TZM</literal>.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-05 [1664ae197] Add websearch_to_tsquery
-->

       <para>
        Add text search function <link
        linkend="textsearch-functions-table"><function>websearch_to_tsquery()</function></link>
        that supports a query syntax similar to that used by web search
        engines (Victor Drobny, Dmitry Ivanov)
       </para>
      </listitem>

      <listitem>
<!--
2018-04-07 [1c1791e00] Add json(b)_to_tsvector function
-->

       <para>
        Add functions <link
        linkend="textsearch-functions-table"><function>json(b)_to_tsvector()</function></link>
        to create a text search query for matching
        <type>JSON</type>/<type>JSONB</type> values (Dmitry Dolgov)
       </para>

      </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Server-Side Languages</title>

    <itemizedlist>

      <listitem>
<!--
2017-11-30 [e4128ee76] SQL procedures
2018-02-22 [76b6aa41f] Support parameters in CALL
2018-03-14 [33803f67f] Support INOUT arguments in procedures
2018-04-14 [a8677e3ff] Support named and default arguments in CALL
2018-08-22 [e0dc839e7] Change PROCEDURE to FUNCTION in CREATE TRIGGER syntax
2018-08-22 [fd4417e8a] Change PROCEDURE to FUNCTION in CREATE OPERATOR syntax
-->

       <para>
        Add SQL-level procedures, which can start and commit their own
        transactions (Peter Eisentraut)
       </para>

       <para>
        They are created with the new <link
        linkend="sql-createprocedure"><command>CREATE
        PROCEDURE</command></link> command and invoked via <link
        linkend="sql-call"><command>CALL</command></link>.
       </para>

       <para>
        The new <command>ALTER</command>/<command>DROP ROUTINE</command>
        commands allow altering/dropping of all routine-like objects,
        including procedures, functions, and aggregates.
       </para>

       <para>
        Also, writing <literal>FUNCTION</literal> is now preferred
        over writing <literal>PROCEDURE</literal> in <command>CREATE
        OPERATOR</command> and <command>CREATE TRIGGER</command>, because the
        referenced object must be a function not a procedure.  However, the
        old syntax is still accepted for compatibility.
       </para>
      </listitem>

      <listitem>
<!--
2018-01-22 [8561e4840] Transaction control in PL procedures
2018-03-28 [d92bc83c4] PL/pgSQL: Nested CALL with transactions
2018-03-28 [056a5a3f6] Allow committing inside cursor loop
2018-04-05 [b981275b6] PL/pgSQL: Add support for SET TRANSACTION
-->

       <para>
        Add transaction control to PL/pgSQL, PL/Perl, PL/Python, PL/Tcl,
        and <acronym>SPI</acronym> server-side languages (Peter Eisentraut)
       </para>

       <para>
        Transaction control is only available within top-transaction-level
        procedures and nested <command>DO</command> and
        <command>CALL</command> blocks that only contain other
        <command>DO</command> and <command>CALL</command> blocks.
       </para>
      </listitem>

      <listitem>
<!--
2018-02-13 [f9263006d] Support CONSTANT/NOT NULL/initial value for plpgsql comp
-->

       <para>
        Add the ability to define PL/pgSQL composite-type variables as not
        null, constant, or with initial values (Tom Lane)
       </para>
      </listitem>

      <listitem>
<!--
2018-02-13 [4b93f5799] Make plpgsql use its DTYPE_REC code paths for composite-
-->

       <para>
        Allow PL/pgSQL to handle changes to composite types (e.g., record,
        row) that happen between the first and later function executions
        in the same session (Tom Lane)
       </para>

       <para>
        Previously, such circumstances generated errors.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-28 [3f44e3db7] Transforms for jsonb to PL/Python
-->

       <para>
        Add extension <filename>jsonb_plpython</filename> to
        transform <type>JSONB</type> to/from PL/Python types (Anthony
        Bykov)
       </para>
      </listitem>

      <listitem>
<!--
2018-04-03 [341e16618] Transforms for jsonb to PL/Perl
-->

       <para>
        Add extension <filename>jsonb_plperl</filename> to transform
        <type>JSONB</type> to/from PL/Perl types (Anthony Bykov)
       </para>

      </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Client Interfaces</title>

    <itemizedlist>

      <listitem>
<!--
2018-03-17 [e3bdb2d92] Set libpq sslcompression to off by default
-->

       <para>
        Change libpq to disable compression by default (Peter Eisentraut)
       </para>

       <para>
        Compression is already disabled in modern OpenSSL versions, so that
        the libpq setting had no effect with such libraries.
       </para>
      </listitem>

      <listitem>
<!--
2017-08-25 [d22e9d530] Implement <literal>DO CONTINUE</literal> action for <literal>ECPG WHENEVER</literal> statement
-->

       <para>
        Add <literal>DO CONTINUE</literal> option
        to <application>ecpg</application>'s <literal>WHENEVER</literal>
        statement (Vinayak Pokale)
       </para>

       <para>
        This generates a C <command>continue</command> statement, causing a
        return to the top of the contained loop when the specified condition
        occurs.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-14 [3b7ab4380] Add Oracle like handling of char arrays.
-->

       <para>
        Add an <application>ecpg</application> mode to enable Oracle
        Pro*C-style handling of char arrays.
       </para>

       <para>
        This mode is enabled with <option>-C</option>.
       </para>

      </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Client Applications</title>

    <sect4>
     <title><xref linkend="app-psql"/></title>

     <itemizedlist>

      <listitem>
<!--
2017-09-05 [49ca462eb] Add \gdesc psql command.
-->

       <para>
        Add <application>psql</application> command <literal>\gdesc</literal>
        to display the names and types of the columns in a query result
        (Pavel Stehule)
       </para>
      </listitem>

      <listitem>
<!--
2017-09-12 [69835bc89] Add psql variables to track success/failure of SQL queri
-->

       <para>
        Add <application>psql</application> variables to report query
        activity and errors (Fabien Coelho)
       </para>

       <para>
        Specifically, the new variables are <literal>ERROR</literal>,
        <literal>SQLSTATE</literal>, <literal>ROW_COUNT</literal>,
        <literal>LAST_ERROR_MESSAGE</literal>, and
        <literal>LAST_ERROR_SQLSTATE</literal>.
       </para>
      </listitem>

      <listitem>
<!--
2017-09-21 [d57c7a7c5] Provide a test for variable existence in psql
-->

       <para>
        Allow <application>psql</application> to test for the existence
        of a variable (Fabien Coelho)
       </para>

       <para>
        Specifically, the syntax <literal>:{?variable_name}</literal> allows
        a variable's existence to be tested in an <literal>\if</literal>
        statement.
       </para>
      </listitem>

      <listitem>
<!--
2017-09-05 [5e8304fdc] In psql, use PSQL_PAGER in preference to PAGER, if it's
-->

       <para>
        Allow environment variable <envar>PSQL_PAGER</envar> to control
        <application>psql</application>'s pager (Pavel Stehule)
       </para>

       <para>
        This allows <application>psql</application>'s default pager to
        be specified as a separate environment variable from the pager
        for other applications.  <envar>PAGER</envar> is still honored
        if <envar>PSQL_PAGER</envar> is not set.
       </para>
      </listitem>

      <listitem>
<!--
2017-11-23 [05b6ec39d] Show partition info from psql \d+
-->

       <para>
        Make psql's <literal>\d+</literal> command always show the table's
        partitioning information (Amit Langote, Ashutosh Bapat)
       </para>

       <para>
        Previously, partition information would not be displayed for a
        partitioned table if it had no partitions.  Also indicate which
        partitions are themselves partitioned.
       </para>
      </listitem>

      <listitem>
<!--
2018-01-29 [15be27460] Avoid misleading psql password prompt when username is m
-->

       <para>
        Ensure that <application>psql</application> reports the proper user
        name when prompting for a password (Tom Lane)
       </para>

       <para>
        Previously, combinations of <option>-U</option> and a user name
        embedded in a <acronym>URI</acronym> caused incorrect reporting.
        Also suppress the user name before the password prompt when
        <option>--password</option> is specified.
       </para>
      </listitem>

      <listitem>
<!--
2018-02-01 [df9f599bc] psql:  Add quit/help behavior/hint, for other tool porta
-->

       <para>
        Allow <command>quit</command> and <command>exit</command> to
        exit <application>psql</application> when given with no prior input
        (Bruce Momjian)
       </para>

       <para>
        Also print hints about how to exit when <command>quit</command> and
        <command>exit</command> are used alone on a line while the input
        buffer is not empty.  Add a similar hint for <command>help</command>.
       </para>
      </listitem>

      <listitem>
<!--
2018-02-12 [91389228a] psql:  give ^D hint for \q in place where \q is ignored
-->

       <para>
        Make <application>psql</application> hint at using control-D
        when <command>\q</command> is entered alone on a line but ignored
        (Bruce Momjian)
       </para>

       <para>
        For example, <command>\q</command> does not exit when supplied
        in character strings.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-03 [2b8c94e1b] Improve tab-completion for ALTER INDEX RESET/SET.
-->

       <para>
        Improve tab completion for <command>ALTER INDEX
        RESET</command>/<command>SET</command> (Masahiko Sawada)
       </para>
      </listitem>

      <listitem>
<!--
2018-03-05 [722408bcd] Add infrastructure to support server-version-dependent t
-->

       <para>
        Add infrastructure to allow <application>psql</application>
        to adapt its tab completion queries based on the server version
        (Tom Lane)
       </para>

       <para>
        Previously, tab completion queries could fail against older servers.
       </para>

      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title><link linkend="pgbench"><application>pgbench</application></link></title>

     <itemizedlist>

      <listitem>
<!--
2018-01-09 [bc7fa0c15] Improve scripting language in pgbench
-->

       <para>
        Add <application>pgbench</application> expression support for
        NULLs, booleans, and some functions and operators (Fabien Coelho)
       </para>
      </listitem>

      <listitem>
<!--
2018-03-22 [f67b113ac] Add \if support to pgbench
-->

       <para>
        Add <literal>\if</literal> conditional support to
        <application>pgbench</application> (Fabien Coelho)
       </para>
      </listitem>

      <listitem>
<!--
2017-09-04 [9d36a3866] Adjust pgbench to allow non-ASCII characters in variable
-->

       <para>
        Allow the use of non-<acronym>ASCII</acronym> characters in
        <application>pgbench</application> variable names (Fabien Coelho)
       </para>
      </listitem>

      <listitem>
<!--
2017-11-13 [591c504fa] Allow running just selected steps of pgbench's initializ
-->

       <para>
        Add <application>pgbench</application> option
        <option>--init-steps</option> to control the initialization steps
        performed (Masahiko Sawada)
       </para>
      </listitem>

      <listitem>
<!--
2017-12-14 [1fcd0adeb] Add approximated Zipfian-distributed random generator to
-->

       <para>
        Add an approximately Zipfian-distributed random generator to
        <application>pgbench</application> (Alik Khilazhev)
       </para>
      </listitem>

      <listitem>
<!--
2018-03-26 [64f85894a] Set random seed for pgbench.
-->

       <para>
        Allow the random seed to be set in
        <application>pgbench</application> (Fabien Coelho)
       </para>
      </listitem>

      <listitem>
<!--
2017-12-27 [7a727c180] Add pow(), aka power(), function to pgbench.
-->

       <para>
        Allow <application>pgbench</application> to do exponentiation
        with <function>pow()</function> and <function>power()</function>
        (Ra&uacute;l Mar&iacute;n Rodr&iacute;guez)
       </para>
      </listitem>

      <listitem>
<!--
2018-03-21 [e51a04840] Add general purpose hasing functions to pgbench.
-->

       <para>
        Add hashing functions to <application>pgbench</application>
        (Ildar Musin)
       </para>
      </listitem>

      <listitem>
<!--
2017-09-04 [c23bb6bad] Fix some subtle problems in pgbench transaction stats co
2017-11-21 [16827d442] pgbench: fix stats reporting when some transactions are
-->

       <para>
        Make <application>pgbench</application> statistics more
        accurate when using <option>--latency-limit</option> and
        <option>--rate</option> (Fabien Coelho)
       </para>

      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Server Applications</title>

    <itemizedlist>

      <listitem>
<!--
2017-09-27 [3709ca1cf] pg_basebackup: Add option to create replication slot
-->

       <para>
        Add an option to <link
        linkend="app-pgbasebackup"><application>pg_basebackup</application></link>
        that creates a named replication slot (Michael Banck)
       </para>

       <para>
        The option <option>--create-slot</option> creates
        the named replication slot (<option>--slot</option>)
        when the <acronym>WAL</acronym> streaming method
        (<option>--wal-method=stream</option>) is used.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-07 [c37b3d08c] Allow group access on PGDATA
-->

       <para>
        Allow <link
        linkend="app-initdb"><application>initdb</application></link>
        to set group read access to the data directory (David Steele)
       </para>

       <para>
        This is accomplished with the new initdb option
        <option>--allow-group-access</option>.  Administrators
        can also set group permissions on the empty data
        directory before running initdb.  Server variable <link
        linkend="guc-data-directory"><varname>data_directory_mode</varname></link>
        allows reading of data directory group permissions.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-05 [1fde38bea] Allow on-line enabling and disabling of data checksums
2018-04-09 [a228cc13a] Revert "Allow on-line enabling and disabling of data che
-->

       <para>
        Add <link
        linkend="pgverifychecksums"><application>pg_verify_checksums</application></link>
        tool to verify database checksums while offline (Magnus Hagander)
       </para>
      </listitem>

      <listitem>
<!--
2018-03-25 [bf4a8676c] pg_resetwal: Allow users to change the WAL segment size
-->

       <para>
        Allow <link
        linkend="app-pgresetwal"><application>pg_resetwal</application></link>
        to change the <acronym>WAL</acronym> segment size via
        <option>--wal-segsize</option> (Nathan Bossart)
       </para>
      </listitem>

      <listitem>
<!--
2018-03-24 [e22b27f0c] Add long options to pg_resetwal and pg_controldata
-->

       <para>
        Add long options to <application>pg_resetwal</application>
        and <application>pg_controldata</application> (Nathan Bossart,
        Peter Eisentraut)
       </para>
      </listitem>

      <listitem>
<!--
2017-10-29 [5f3971291] pg_receivewal: Add - -no-sync option.
-->

       <para>
        Add <link
        linkend="app-pgreceivewal"><application>pg_receivewal</application></link>
        option <option>--no-sync</option> to prevent synchronous
        <acronym>WAL</acronym> writes, for testing (Michael Paquier)
       </para>
      </listitem>

      <listitem>
<!--
2017-09-11 [6d9fa5264] pg_receivewal: Add - -endpos option
-->

       <para>
        Add <application>pg_receivewal</application> option
        <option>--endpos</option> to specify when <acronym>WAL</acronym>
        receiving should stop (Michael Paquier)
       </para>
      </listitem>

      <listitem>
<!--
2017-10-01 [2e83db3ad] Allow pg_ctl kill to send SIGKILL.
-->

       <para>
        Allow <link
        linkend="app-pg-ctl"><application>pg_ctl</application></link>
        to send the <literal>SIGKILL</literal> signal to processes
        (Andres Freund)
       </para>

       <para>
        This was previously unsupported due to concerns over possible misuse.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-29 [266b6acb3] Make pg_rewind skip files and directories that are remov
-->

       <para>
        Reduce the number of files copied by <link
        linkend="app-pgrewind"><application>pg_rewind</application></link>
        (Michael Paquier)
       </para>
      </listitem>

      <listitem>
<!--
2018-04-09 [5d5aeddab] Make sure pg_rewind can't run as root
-->

       <para>
        Prevent <application>pg_rewind</application> from running as
        <literal>root</literal> (Michael Paquier)
       </para>

      </listitem>

     </itemizedlist>

    <sect4>
     <title><link linkend="app-pgdump"><application>pg_dump</application></link>,
     <link linkend="app-pg-dumpall"><application>pg_dumpall</application></link>,
     <link linkend="app-pgrestore"><application>pg_restore</application></link></title>

     <itemizedlist>

      <listitem>
<!--
2017-09-01 [84be67181] pg_dumpall: Add a -E flag to set the encoding, like pg_d
-->

       <para>
        Add <application>pg_dumpall</application> option
        <option>--encoding</option> to control output encoding
        (Michael Paquier)
       </para>

       <para>
        <application>pg_dump</application> already had this option.
       </para>
      </listitem>

      <listitem>
<!--
2017-08-14 [23d7680d0] pg_dump: Add a - -load-via-partition-root option.
-->

       <para>
        Add <application>pg_dump</application> option
        <option>--load-via-partition-root</option> to force loading of
        data into the partition's root table, rather than the original
        partition (Rushabh Lathia)
       </para>

       <para>
        This is useful if the system to be loaded to has different collation
        definitions or endianness, possibly requiring rows to be stored in
        different partitions than previously.
       </para>
      </listitem>

      <listitem>
<!--
2018-01-25 [1368e92e1] Support - -no-comments in pg_dump, pg_dumpall, pg_restore
-->

       <para>
        Add an option to suppress dumping and restoring database object
        comments (Robins Tharakan)
       </para>

       <para>
        The new <application>pg_dump</application>,
        <application>pg_dumpall</application>, and
        <application>pg_restore</application> option is
        <option>--no-comments</option>.
       </para>

      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Source Code</title>

    <itemizedlist>

      <listitem>
<!--
2018-07-31 [d06eebce5] Provide for contrib and pgxs modules to install include
2018-09-05 [235526a20] Allow extensions to install built as well as unbuilt hea
2018-09-07 [094ffd684] Refactor installation of extension headers.
2018-09-16 [f1ca5a654] Fix out-of-tree build for transform modules.
-->
       <para>
        Add <application>PGXS</application> support for installing include
        files (Andrew Gierth)
       </para>

       <para>
        This supports creating extension modules that depend on other
        modules.  Formerly there was no easy way for the dependent module to
        find the referenced one's include files.  Several
        existing <filename>contrib</filename> modules that define data types
        have been adjusted to install relevant files.  Also, PL/Perl and
        PL/Python now install their include files, to support creation of
        transform modules for those languages.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-05 [1fd869066] Install errcodes.txt for use by extensions.
-->

       <para>
        Install <filename>errcodes.txt</filename> to allow extensions to access
        the list of error codes known to <productname>PostgreSQL</productname>
        (Thomas Munro)
       </para>
      </listitem>

      <listitem>
<!--
2017-09-06 [1c53f612b] Escape &lt; and &amp; in SGML
2017-10-17 [c29c57890] Don't use SGML empty tags
2017-10-20 [1ff01b390] Convert SGML IDs to lower case
2017-11-23 [3c49c6fac] Convert documentation to DocBook XML
-->

       <para>
        Convert documentation to DocBook <acronym>XML</acronym> (Peter
        Eisentraut, Alexander Lakhin, J&uuml;rgen Purtz)
       </para>

       <para>
        The file names still use an <filename>sgml</filename> extension
        for compatibility with back branches.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-22 [9a95a77d9] Use stdbool.h if suitable
2018-03-23 [7ba7986fb] Fix interaction of Perl and stdbool.h
2018-05-02 [6fe25c135] Change SIZEOF_BOOL to 1 for Windows.
-->

       <para>
        Use <filename>stdbool.h</filename> to define type <type>bool</type>
        on platforms where it's suitable, which is most (Peter Eisentraut)
       </para>

       <para>
        This eliminates a coding hazard for extension modules that need
        to include <filename>stdbool.h</filename>.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-03 [a351679c8] Trivial adjustments in preparation for bootstrap data co
2018-04-08 [372728b0d] Replace our traditional initial-catalog-data format with
2018-04-17 [e90d4ddc6] Simplify genbki.pl's data quoting rules.
2018-04-17 [9ffcccdb9] Rationalize handling of array type names in bootstrap da
2018-04-17 [55d26ff63] Rationalize handling of single and double quotes in boot
2018-04-18 [5372c2c84] Improve error detection/reporting in Catalog.pm and genb
2018-04-26 [a0854f107] Avoid parsing catalog data twice during BKI file constru
2018-05-05 [d160882a1] Fix bootstrap parser so that its keywords are unreserved
-->

       <para>
        Overhaul the way that initial system catalog contents are defined
        (John Naylor)
       </para>

       <para>
        The initial data is now represented in Perl data structures, making
        it much easier to manipulate mechanically.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-21 [846b5a525] Prevent extensions from creating custom GUCs that are GU
-->

       <para>
        Prevent extensions from creating custom server parameters that
        take a quoted list of values (Tom Lane)
       </para>

       <para>
        This cannot be supported at present because knowledge of the
        parameter's property would be required even before the extension is
        loaded.
       </para>
      </listitem>

      <listitem>
<!--
2017-11-18 [9288d62bb] Support channel binding 'tls-unique' in SCRAM
2017-12-19 [4bbf110d2] Add libpq connection parameter "scram_channel_binding"
2018-01-04 [d3fb72ea6] Implement channel binding tls-server-end-point for SCRAM
-->

       <para>
        Add ability to use channel binding when using <link
        linkend="auth-password"><acronym>SCRAM</acronym></link>
        authentication (Michael Paquier)
       </para>

       <para>
        Channel binding is intended to prevent man-in-the-middle attacks, but
        <acronym>SCRAM</acronym> cannot prevent them unless it can be forced
        to be active.  Unfortunately, there is no way to do that in libpq.
        Support for it is expected in future versions of libpq and in
        interfaces not built using libpq, e.g., JDBC.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-05 [eed1ce72e] Allow background workers to bypass datallowconn
-->

       <para>
        Allow background workers to attach to databases that normally
        disallow connections (Magnus Hagander)
       </para>
      </listitem>

      <listitem>
<!--
2018-04-04 [f044d71e3] Use ARMv8 CRC instructions where available.
-->

       <para>
        Add support for hardware <acronym>CRC</acronym> calculations
        on <productname>ARMv8</productname> (Yuqi Gu, Heikki Linnakangas,
        Thomas Munro)
       </para>
      </listitem>

      <listitem>
<!--
2017-10-04 [212e6f34d] Replace binary search in fmgr_isbuiltin with a lookup ar
-->

       <para>
        Speed up lookups of built-in functions by OID (Andres Freund)
       </para>

       <para>
        The previous binary search has been replaced by a lookup array.
       </para>
      </listitem>

      <listitem>
<!--
2017-10-11 [1de09ad8e] Add more efficient functions to pqformat API.
-->

       <para>
        Speed up construction of query results (Andres Freund)
       </para>
      </listitem>

      <listitem>
<!--
2017-10-13 [141fd1b66] Improve sys/catcache performance.
-->

       <para>
        Improve speed of access to system caches (Andres Freund)
       </para>
      </listitem>

      <listitem>
<!--
2017-11-23 [a4ccc1cef] Generational memory allocator
-->

       <para>
        Add a generational memory allocator which is optimized for serial
        allocation/deallocation (Tomas Vondra)
       </para>

       <para>
        This reduces memory usage for logical decoding.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-22 [7c91a0364] Sync up our various ways of estimating pg_class.reltuple
-->

       <para>
        Make the computation of
        <structname>pg_class</structname>.<structfield>reltuples</structfield>
        by <command>VACUUM</command> consistent with its computation
        by <command>ANALYZE</command> (Tomas Vondra)
       </para>
      </listitem>

      <listitem>
<!--
2018-04-25 [46cda5bf7] Change pgindent/README to specify that we use perltidy v
2018-04-27 [a2ada08d4] perltidy: Don't write backup files
-->

       <para>
        Update to use <application>perltidy</application> version
        <literal>20170521</literal> (Tom Lane, Peter Eisentraut)
       </para>
      </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Additional Modules</title>

    <itemizedlist>

      <listitem>
<!--
2017-08-21 [79ccd7cbd] pg_prewarm: Add automatic prewarm feature.
-->

       <para>
        Allow extension <link
        linkend="pgprewarm"><filename>pg_prewarm</filename></link>
        to restore the previous shared buffer contents on startup (Mithun
        Cy, Robert Haas)
       </para>

       <para>
        This is accomplished by having <filename>pg_prewarm</filename> store
        the shared buffers' relation and block number data to disk
        occasionally during server operation, and at shutdown.
       </para>
      </listitem>

      <listitem>
<!--
2018-03-21 [be8a7a686] Add strict_word_similarity to pg_trgm module
-->

       <para>
        Add <link linkend="pgtrgm"><filename>pg_trgm</filename></link>
        function <function>strict_word_similarity()</function> to compute
        the similarity of whole words (Alexander Korotkov)
       </para>

       <para>
        The function <function>word_similarity()</function> already
        existed for this purpose, but it was designed to find similar
        parts of words, while <function>strict_word_similarity()</function>
        computes the similarity to whole words.
       </para>
      </listitem>

      <listitem>
<!--
2018-04-05 [f4cd7102b] Add support of bool, bpchar, name and uuid to btree_gin
-->

       <para>
        Allow <link
        linkend="btree-gin"><filename>btree_gin</filename></link>
        to index <type>bool</type>, <type>bpchar</type>, <type>name</type>
        and <type>uuid</type> data types (Matheus Oliveira)
       </para>
      </listitem>

      <listitem>
<!--
2017-11-20 [de1d042f5] Support index-only scans in contrib/cube and contrib/seg
-->

       <para>
        Allow <link linkend="cube"><filename>cube</filename></link>
        and <link linkend="seg"><filename>seg</filename></link>
        extensions to perform index-only scans using GiST indexes
        (Andrey Borodin)
       </para>
      </listitem>

      <listitem>
<!--
2018-01-11 [f50c80dbb] llow negative coordinate for ~&gt; (cube, int) operator
-->

       <para>
        Allow retrieval of negative cube coordinates using
        the <literal>~&gt;</literal> operator (Alexander Korotkov)
       </para>

       <para>
        This is useful for KNN-GiST searches when looking for coordinates in
        descending order.
       </para>
      </listitem>

      <listitem>
<!--
2017-08-16 [ec0a69e49] Extend the default rules file for contrib/unaccent with
-->

       <para>
        Add Vietnamese letter handling to the <link
        linkend="unaccent"><filename>unaccent</filename></link>
        extension (Dang Minh Huong, Michael Paquier)
       </para>
      </listitem>

      <listitem>
<!--
2018-03-31 [7f563c09f] Add amcheck verification of heap relations belonging to
-->

       <para>
        Enhance <link
        linkend="amcheck"><filename>amcheck</filename></link>
        to check that each heap tuple has an index entry (Peter Geoghegan)
       </para>
      </listitem>

      <listitem>
<!--
2018-04-06 [11523e860] Support new default roles with adminpack
-->

       <para>
        Have <link
        linkend="adminpack"><filename>adminpack</filename></link>
        use the new default file system access roles (Stephen Frost)
       </para>

       <para>
        Previously, only superusers could call <filename>adminpack</filename>
        functions; now role permissions are checked.
       </para>
      </listitem>

      <listitem>
<!--
2017-10-11 [cff440d36] pg_stat_statements: Widen query IDs from 32 bits to 64 b
-->

       <para>
        Widen <structname>pg_stat_statement</structname>'s query ID
        to 64 bits (Robert Haas)
       </para>

       <para>
        This greatly reduces the chance of query ID hash collisions.
        The query ID can now potentially display as a negative value.
       </para>
      </listitem>

      <listitem>
<!--
2017-11-17 [527878635] Remove contrib/start-scripts/osx/.
-->

       <para>
        Remove the <filename>contrib/start-scripts/osx</filename> scripts
        since they are no longer recommended
        (use <filename>contrib/start-scripts/macos</filename> instead)
        (Tom Lane)
       </para>
      </listitem>

      <listitem>
<!--
2017-09-22 [5d3cad564] Remove contrib/chkpass
-->

       <para>
        Remove the <filename>chkpass</filename> extension (Peter Eisentraut)
       </para>

       <para>
        This extension is no longer considered to be a usable security tool
        or example of how to write an extension.
       </para>

      </listitem>

    </itemizedlist>

   </sect3>

  </sect2>

  <sect2 id="release-11-acknowledgements">
   <title>Acknowledgments</title>

   <para>
    The following individuals (in alphabetical order) have contributed to this
    release as patch authors, committers, reviewers, testers, or reporters of
    issues.
   </para>

   <simplelist>
    <member>Abhijit Menon-Sen</member>
    <member>Adam Bielanski</member>
    <member>Adam Brightwell</member>
    <member>Adam Brusselback</member>
    <member>Aditya Toshniwal</member>
    <member>Adrián Escoms</member>
    <member>Adrien Nayrat</member>
    <member>Akos Vandra</member>
    <member>Aleksander Alekseev</member>
    <member>Aleksandr Parfenov</member>
    <member>Alexander Korotkov</member>
    <member>Alexander Kukushkin</member>
    <member>Alexander Kuzmenkov</member>
    <member>Alexander Lakhin</member>
    <member>Alexandre Garcia</member>
    <member>Alexey Bashtanov</member>
    <member>Alexey Chernyshov</member>
    <member>Alexey Kryuchkov</member>
    <member>Alik Khilazhev</member>
    <member>Álvaro Herrera</member>
    <member>Amit Kapila</member>
    <member>Amit Khandekar</member>
    <member>Amit Langote</member>
    <member>Amul Sul</member>
    <member>Anastasia Lubennikova</member>
    <member>Andreas Joseph Krogh</member>
    <member>Andreas Karlsson</member>
    <member>Andreas Seltenreich</member>
    <member>André Hänsel</member>
    <member>Andrei Gorita</member>
    <member>Andres Freund</member>
    <member>Andrew Dunstan</member>
    <member>Andrew Fletcher</member>
    <member>Andrew Gierth</member>
    <member>Andrew Grossman</member>
    <member>Andrew Krasichkov</member>
    <member>Andrey Borodin</member>
    <member>Andrey Lizenko</member>
    <member>Andy Abelisto</member>
    <member>Anthony Bykov</member>
    <member>Antoine Scemama</member>
    <member>Anton Dignös</member>
    <member>Antonin Houska</member>
    <member>Arseniy Sharoglazov</member>
    <member>Arseny Sher</member>
    <member>Arthur Zakirov</member>
    <member>Ashutosh Bapat</member>
    <member>Ashutosh Sharma</member>
    <member>Ashwin Agrawal</member>
    <member>Asim Praveen</member>
    <member>Atsushi Torikoshi</member>
    <member>Badrul Chowdhury</member>
    <member>Balazs Szilfai</member>
    <member>Basil Bourque</member>
    <member>Beena Emerson</member>
    <member>Ben Chobot</member>
    <member>Benjamin Coutu</member>
    <member>Bernd Helmle</member>
    <member>Blaz Merela</member>
    <member>Brad DeJong</member>
    <member>Brent Dearth</member>
    <member>Brian Cloutier</member>
    <member>Bruce Momjian</member>
    <member>Catalin Iacob</member>
    <member>Chad Trabant</member>
    <member>Chapman Flack</member>
    <member>Christian Duta</member>
    <member>Christian Ullrich</member>
    <member>Christoph Berg</member>
    <member>Christoph Dreis</member>
    <member>Christophe Courtois</member>
    <member>Christopher Jones</member>
    <member>Claudio Freire</member>
    <member>Clayton Salem</member>
    <member>Craig Ringer</member>
    <member>Dagfinn Ilmari Mannsåker</member>
    <member>Dan Vianello</member>
    <member>Dan Watson</member>
    <member>Dang Minh Huong</member>
    <member>Daniel Gustafsson</member>
    <member>Daniel Vérité</member>
    <member>Daniel Westermann</member>
    <member>Daniel Wood</member>
    <member>Darafei Praliaskouski</member>
    <member>Dave Cramer</member>
    <member>Dave Page</member>
    <member>David Binderman</member>
    <member>David Carlier</member>
    <member>David Fetter</member>
    <member>David G. Johnston</member>
    <member>David Gould</member>
    <member>David Hinkle</member>
    <member>David Pereiro Lagares</member>
    <member>David Rader</member>
    <member>David Rowley</member>
    <member>David Steele</member>
    <member>Davy Machado</member>
    <member>Dean Rasheed</member>
    <member>Dian Fay</member>
    <member>Dilip Kumar</member>
    <member>Dmitriy Sarafannikov</member>
    <member>Dmitry Dolgov</member>
    <member>Dmitry Ivanov</member>
    <member>Dmitry Shalashov</member>
    <member>Don Seiler</member>
    <member>Doug Doole</member>
    <member>Doug Rady</member>
    <member>Edmund Horner</member>
    <member>Eiji Seki</member>
    <member>Elvis Pranskevichus</member>
    <member>Emre Hasegeli</member>
    <member>Erik Rijkers</member>
    <member>Erwin Brandstetter</member>
    <member>Etsuro Fujita</member>
    <member>Euler Taveira</member>
    <member>Everaldo Canuto</member>
    <member>Fabien Coelho</member>
    <member>Fabrízio de Royes Mello</member>
    <member>Feike Steenbergen</member>
    <member>Frits Jalvingh</member>
    <member>Fujii Masao</member>
    <member>Gao Zengqi</member>
    <member>Gianni Ciolli</member>
    <member>Greg Stark</member>
    <member>Gunnlaugur Thor Briem</member>
    <member>Guo Xiang Tan</member>
    <member>Hadi Moshayedi</member>
    <member>Hailong Li</member>
    <member>Haribabu Kommi</member>
    <member>Heath Lord</member>
    <member>Heikki Linnakangas</member>
    <member>Hugo Mercier</member>
    <member>Igor Korot</member>
    <member>Igor Neyman</member>
    <member>Ildar Musin</member>
    <member>Ildus Kurbangaliev</member>
    <member>Ioseph Kim</member>
    <member>Jacob Champion</member>
    <member>Jaime Casanova</member>
    <member>Jakob Egger</member>
    <member>Jean-Pierre Pelletier</member>
    <member>Jeevan Chalke</member>
    <member>Jeevan Ladhe</member>
    <member>Jeff Davis</member>
    <member>Jeff Janes</member>
    <member>Jeremy Evans</member>
    <member>Jeremy Finzel</member>
    <member>Jeremy Schneider</member>
    <member>Jesper Pedersen</member>
    <member>Jim Nasby</member>
    <member>Jimmy Yih</member>
    <member>Jing Wang</member>
    <member>Jobin Augustine</member>
    <member>Joe Conway</member>
    <member>John Gorman</member>
    <member>John Naylor</member>
    <member>Jon Nelson</member>
    <member>Jon Wolski</member>
    <member>Jonathan Allen</member>
    <member>Jonathan S. Katz</member>
    <member>Julien Rouhaud</member>
    <member>Jürgen Purtz</member>
    <member>Justin Pryzby</member>
    <member>KaiGai Kohei</member>
    <member>Kaiting Chen</member>
    <member>Karl Lehenbauer</member>
    <member>Keith Fiske</member>
    <member>Kevin Bloch</member>
    <member>Kha Nguyen</member>
    <member>Kim Rose Carlsen</member>
    <member>Konstantin Knizhnik</member>
    <member>Kuntal Ghosh</member>
    <member>Kyle Samson</member>
    <member>Kyotaro Horiguchi</member>
    <member>Lætitia Avrot</member>
    <member>Lars Kanis</member>
    <member>Laurenz Albe</member>
    <member>Leonardo Cecchi</member>
    <member>Liudmila Mantrova</member>
    <member>Lixian Zou</member>
    <member>Lloyd Albin</member>
    <member>Luca Ferrari</member>
    <member>Lucas Fairchild</member>
    <member>Lukas Eder</member>
    <member>Lukas Fittl</member>
    <member>Magnus Hagander</member>
    <member>Mai Peng</member>
    <member>Maksim Milyutin</member>
    <member>Maksym Boguk</member>
    <member>Mansur Galiev</member>
    <member>Marc Dilger</member>
    <member>Marco Nenciarini</member>
    <member>Marina Polyakova</member>
    <member>Mario de Frutos Dieguez</member>
    <member>Mark Cave-Ayland</member>
    <member>Mark Dilger</member>
    <member>Mark Wood</member>
    <member>Marko Tiikkaja</member>
    <member>Markus Winand</member>
    <member>Martín Marqués</member>
    <member>Masahiko Sawada</member>
    <member>Matheus Oliveira</member>
    <member>Matthew Stickney</member>
    <member>Metin Doslu</member>
    <member>Michael Banck</member>
    <member>Michael Meskes</member>
    <member>Michael Paquier</member>
    <member>Michail Nikolaev</member>
    <member>Mike Blackwell</member>
    <member>Minh-Quan Tran</member>
    <member>Mithun Cy</member>
    <member>Morgan Owens</member>
    <member>Nathan Bossart</member>
    <member>Nathan Wagner</member>
    <member>Neil Conway</member>
    <member>Nick Barnes</member>
    <member>Nicolas Thauvin</member>
    <member>Nikhil Sontakke</member>
    <member>Nikita Glukhov</member>
    <member>Nikolay Shaplov</member>
    <member>Noah Misch</member>
    <member>Noriyoshi Shinoda</member>
    <member>Oleg Bartunov</member>
    <member>Oleg Samoilov</member>
    <member>Oliver Ford</member>
    <member>Pan Bian</member>
    <member>Pascal Legrand</member>
    <member>Patrick Hemmer</member>
    <member>Patrick Krecker</member>
    <member>Paul Bonaud</member>
    <member>Paul Guo</member>
    <member>Paul Ramsey</member>
    <member>Pavan Deolasee</member>
    <member>Pavan Maddamsetti</member>
    <member>Pavel Golub</member>
    <member>Pavel Stehule</member>
    <member>Peter Eisentraut</member>
    <member>Peter Geoghegan</member>
    <member>Petr Jelínek</member>
    <member>Petru-Florin Mihancea</member>
    <member>Phil Florent</member>
    <member>Philippe Beaudoin</member>
    <member>Pierre Ducroquet</member>
    <member>Piotr Stefaniak</member>
    <member>Prabhat Sahu</member>
    <member>Pu Qun</member>
    <member>QL Zhuo</member>
    <member>Rafia Sabih</member>
    <member>Rahila Syed</member>
    <member>Rainer Orth</member>
    <member>Rajkumar Raghuwanshi</member>
    <member>Raúl Marín Rodríguez</member>
    <member>Regina Obe</member>
    <member>Richard Yen</member>
    <member>Robert Haas</member>
    <member>Robins Tharakan</member>
    <member>Rod Taylor</member>
    <member>Rushabh Lathia</member>
    <member>Ryan Murphy</member>
    <member>Sahap Asci</member>
    <member>Samuel Horwitz</member>
    <member>Scott Ure</member>
    <member>Sean Johnston</member>
    <member>Shao Bret</member>
    <member>Shay Rojansky</member>
    <member>Shubham Barai</member>
    <member>Simon Riggs</member>
    <member>Simone Gotti</member>
    <member>Sivasubramanian Ramasubramanian</member>
    <member>Stas Kelvich</member>
    <member>Stefan Kaltenbrunner</member>
    <member>Stephen Froehlich</member>
    <member>Stephen Frost</member>
    <member>Steve Singer</member>
    <member>Steven Winfield</member>
    <member>Sven Kunze</member>
    <member>Taiki Kondo</member>
    <member>Takayuki Tsunakawa</member>
    <member>Takeshi Ideriha</member>
    <member>Tatsuo Ishii</member>
    <member>Tatsuro Yamada</member>
    <member>Teodor Sigaev</member>
    <member>Thom Brown</member>
    <member>Thomas Kellerer</member>
    <member>Thomas Munro</member>
    <member>Thomas Reiss</member>
    <member>Tobias Bussmann</member>
    <member>Todd A. Cook</member>
    <member>Tom Kazimiers</member>
    <member>Tom Lane</member>
    <member>Tomas Vondra</member>
    <member>Tomonari Katsumata</member>
    <member>Torsten Grust</member>
    <member>Tushar Ahuja</member>
    <member>Vaishnavi Prabakaran</member>
    <member>Vasundhar Boddapati</member>
    <member>Victor Drobny</member>
    <member>Victor Wagner</member>
    <member>Victor Yegorov</member>
    <member>Vik Fearing</member>
    <member>Vinayak Pokale</member>
    <member>Vincent Lachenal</member>
    <member>Vitaliy Garnashevich</member>
    <member>Vitaly Burovoy</member>
    <member>Vladimir Baranoff</member>
    <member>Xin Zhang</member>
    <member>Yi Wen Wong</member>
    <member>Yorick Peterse</member>
    <member>Yugo Nagata</member>
    <member>Yuqi Gu</member>
    <member>Yura Sokolov</member>
    <member>Yves Goergen</member>
    <member>Zhou Digoal</member>
   </simplelist>
  </sect2>

 </sect1>
