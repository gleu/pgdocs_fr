<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->

<sect1 id="pgstatstatements" xreflabel="pg_stat_statements">
 <title>pg_stat_statements</title>

 <indexterm zone="pgstatstatements">
  <primary>pg_stat_statements</primary>
 </indexterm>

 <para>
  Le module <filename>pg_stat_statements</filename> fournit un moyen de 
  surveiller les statistiques d'exécution de tous les ordres SQL
  exécutés par un serveur.
 </para>

 <para>
  Le module doit être chargé par l'ajout de <literal>pg_stat_statements</literal>
  à <xref linkend="guc-shared-preload-libraries"/> dans
  <filename>postgresql.conf</filename> parce qu'il a besoin de mémoire partagée
  supplémentaire. Ceci signifie qu'il faut redémarrer le serveur pour ajouter
  ou supprimer le module.
 </para>

 <sect2>
  <title>La vue <structname>pg_stat_statements</structname></title>

  <para>
   Les statistiques collectées par le module sont rendues disponibles par une
   vue système nommée <structname>pg_stat_statements</structname>. Cette vue
   contient une ligne pour chaque texte de requête, identifiant de base de
   données et identifiant utilisateur distincts (jusqu'au nombre maximum
   d'ordres distincts que le module peut surveiller). Les colonnes de la vue
   sont affichées dans <xref linkend="pgstatstatements-columns"/>.
  </para>

  <table id="pgstatstatements-columns">
   <title>Colonnes de <structname>pg_stat_statements</structname></title>

   <tgroup cols="4">
    <thead>
     <row>
      <entry>Nom</entry>
      <entry>Type</entry>
      <entry>Référence</entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><structfield>userid</structfield></entry>
      <entry><type>oid</type></entry>
      <entry><literal><link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.oid</literal></entry>
      <entry>OID de l'utilisateur qui a exécuté l'ordre SQL</entry>
     </row>

     <row>
      <entry><structfield>dbid</structfield></entry>
      <entry><type>oid</type></entry>
      <entry><literal><link linkend="catalog-pg-database"><structname>pg_database</structname></link>.oid</literal></entry>
      <entry>OID de la base de données dans laquelle l'ordre SQL a été exécuté</entry>
     </row>

    <row>
      <entry><structfield>query</structfield></entry>
      <entry><type>text</type></entry>
      <entry></entry>
      <entry>Texte de l'ordre SQL représentatif (jusqu'à <xref linkend="guc-track-activity-query-size"/> octets)</entry>
     </row>

     <row>
      <entry><structfield>calls</structfield></entry>
      <entry><type>bigint</type></entry>
      <entry></entry>
      <entry>Nombre d'exécutions</entry>
     </row>

     <row>
      <entry><structfield>total_time</structfield></entry>
      <entry><type>double precision</type></entry>
      <entry></entry>
      <entry>Durée d'exécution de l'instruction SQL, en millisecondes</entry>
     </row>

     <row>
      <entry><structfield>rows</structfield></entry>
      <entry><type>bigint</type></entry>
      <entry></entry>
      <entry>Nombre total de lignes renvoyées ou affectées par l'ordre SQL</entry>
     </row>
     
     <row>
      <entry><structfield>shared_blks_hit</structfield></entry>
      <entry><type>bigint</type></entry>
      <entry></entry>
      <entry>Nombre total de blocs partagés lus dans le cache par l'ordre
        SQL</entry>
     </row>

     <row>
      <entry><structfield>shared_blks_read</structfield></entry>
      <entry><type>bigint</type></entry>
      <entry></entry>
      <entry>Nombre total de blocs partagés lus sur disque par l'ordre
        SQL</entry>
     </row>

     <row>
      <entry><structfield>shared_blks_dirtied</structfield></entry>
      <entry><type>bigint</type></entry>
      <entry></entry>
      <entry>Nombre total de blocs partagés mis à jour par l'ordre SQL</entry>
     </row>

     <row>
      <entry><structfield>shared_blks_written</structfield></entry>
      <entry><type>bigint</type></entry>
      <entry></entry>
      <entry>Nombre total de blocs partagés écrits sur disque par l'ordre
        SQL</entry>
     </row>

     <row>
      <entry><structfield>local_blks_hit</structfield></entry>
      <entry><type>bigint</type></entry>
      <entry></entry>
      <entry>Nombre total de blocs locaux lus dans le cache par l'ordre
        SQL</entry>
     </row>

     <row>
      <entry><structfield>local_blks_read</structfield></entry>
      <entry><type>bigint</type></entry>
      <entry></entry>
      <entry>Nombre total de blocs locaux lus sur disque par l'ordre
        SQL</entry>
     </row>

     <row>
      <entry><structfield>local_blks_dirtied</structfield></entry>
      <entry><type>bigint</type></entry>
      <entry></entry>
      <entry>Nombre total de blocs locaux mis à jour par l'ordre SQL.</entry>
     </row>

     <row>
      <entry><structfield>local_blks_written</structfield></entry>
      <entry><type>bigint</type></entry>
      <entry></entry>
      <entry>Nombre total de blocs locaux écrits sur disque par l'ordre
        SQL</entry>
     </row>

     <row>
      <entry><structfield>temp_blks_read</structfield></entry>
      <entry><type>bigint</type></entry>
      <entry></entry>
      <entry>Nombre total de blocs temporaires lus par l'ordre SQL</entry>
     </row>

     <row>
      <entry><structfield>temp_blks_written</structfield></entry>
      <entry><type>bigint</type></entry>
      <entry></entry>
      <entry>Nombre total de blocs temporaires écrits par l'ordre SQL</entry>
     </row>

     <row>
      <entry><structfield>blk_read_time</structfield></entry>
      <entry><type>double precision</type></entry>
      <entry></entry>
      <entry>
	    Durée totale du temps passé par l'ordre SQL à lire des blocs, en millisecondes
		(si <xref linkend="guc-track-io-timing"/> est activé, sinon zéro).
      </entry>
     </row>

     <row>
      <entry><structfield>blk_write_time</structfield></entry>
      <entry><type>double precision</type></entry>
      <entry></entry>
      <entry>
	    Durée totale du temps passé par l'ordre SQL à écrire des blocs sur disque, en millisecondes
		(si <xref linkend="guc-track-io-timing"/> est activé, sinon zéro).
      </entry>
     </row>

    </tbody>
   </tgroup>
  </table>

  <para>
   Cette vue, et la fonction <function>pg_stat_statements_reset</function>,
   sont disponibles seulement dans les bases de données dans lesquelles elles 
   ont été installées spécifiquement via l'installation de l'extension
   <literal>pg_stat_statements</literal>. Cependant, 
   si le module <filename>pg_stat_statements</filename> est chargé sur le
   serveur, les statistiques sont pistées à travers toutes les bases de données
   du serveur, sans tenir compte de la présence de la vue.
  </para>

  <para>
   Pour des raisons de sécurité, les utilisateurs qui ne sont pas
   super-utilisateurs ne sont pas autorisés à voir le texte des requêtes
   exécutées par les autres utilisateurs. Ils peuvent cependant voir les
   statistiques si la vue a été installée sur leur base de données.
  </para>

  <para>
   Les requêtes qui disposent d'un plan d'exécution (c'est-à-dire <command>SELECT</command>, <command>INSERT</command>, 
   <command>UPDATE</command>, et <command>DELETE</command>) sont combinées en
   une entrée unique dans <structname>pg_stat_statements</structname> lorsqu'elles
   ont un plan d'exécution similaire (d'après leur hachage). En substance, cela
   signifie que deux requêtes seront considérées comme équivalentes si elles sont
   sémantiquement les mêmes mais disposent de valeurs littérales différentes
   dans la requête. Les requêtes utilitaires (c'est-à-dire toutes les autres)
   ne sont considérées comme unique que lorsqu'elles sont égales au caractère près.
  </para>

  <para>
   Concernant le rendu de la requête SQL fournie par <structname>pg_stat_statements</structname>,
   il est composé du texte de la première requête dont la valeur de hachage
   correspond à l'entrée en question. Toutefois, lorsqu'une valeur constante a
   été ignorée de manière à faire correspondre une requête à cette première
   requête, la constante est remplacée par <literal>?</literal>.   
  </para>

  <para>
   Dans certains cas, les requêtes SQL avec des textes différents peuvent être
   fusionnés en une seule entrée <structname>pg_stat_statements</structname>.
   Normalement, cela n'arrive que pour les requêtes dont la sémantique est
   équivalente, mais il y a une petite chance que des collisions de l'algorithme
   de hachage aient pour conséquence la fusion de requêtes sans rapport en une
   entrée. (Cela ne peut cependant pas arriver pour des requêtes appartenant à
   des utilisateurs différents ou des bases de données différentes).
  </para>

  <para>
   Parce que le hachage est calculé à partir de la représentation après analyse
   de la requête, le résultat inverse est aussi possible&nbsp;: des requêtes
   avec un texte identique peuvent apparaître dans des entrées différentes,
   notamment si elles peuvent être interprétées de différentes façons par
   l'intermédiaire de facteurs tels que le paramètre <varname>search_path</varname>.
  </para>
 </sect2>

 <sect2>
  <title>Fonctions</title>

  <variablelist>
   <varlistentry>
    <term>
     <function>pg_stat_statements_reset() returns void</function>
    </term>

    <listitem>
     <para>
      <function>pg_stat_statements_reset</function> ignore toutes les
      statistiques collectées jusque-là par
      <filename>pg_stat_statements</filename>. Par défaut, cette fonction peut
      uniquement être exécutée par les super-utilisateurs.
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </sect2>

 <sect2>
  <title>Paramètres de configuration</title>

  <variablelist>
   <varlistentry>
    <term>
     <varname>pg_stat_statements.max</varname> (<type>integer</type>)
    </term>

    <listitem>
     <para>
      <varname>pg_stat_statements.max</varname> est le nombre maximum d'ordres
      tracés par le module (c'est-à-dire le nombre maximum de lignes dans la
      vue <structname>pg_stat_statements</structname>). Si un nombre supérieur
      d'ordres SQL distincts a été observé, c'est l'information sur les ordres
      les moins exécutés qui est ignorée. La valeur par défaut est 1000.
      Ce paramètre peut uniquement être positionné au démarrage du serveur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <varname>pg_stat_statements.track</varname> (<type>enum</type>)
    </term>

    <listitem>
     <para>
      <varname>pg_stat_statements.track</varname> contrôle quels sont les ordres
      comptabilisés par le module. Spécifiez <literal>top</literal> pour suivre
      les ordres de plus haut niveau (ceux qui sont soumis directement par les
      clients), <literal>all</literal> pour suivre également les ordres
      imbriqués (tels que les ordres invoqués dans les fonctions) ou
      <literal>none</literal> pour désactiver la récupération des statistiques
      sur les requêtes. La valeur par défaut est
      <literal>top</literal>.
      Seuls les super-utilisateurs peuvent changer ce paramétrage.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <varname>pg_stat_statements.track_utility</varname> (<type>boolean</type>)
    </term>

    <listitem>
     <para>
      <varname>pg_stat_statements.track_utility</varname> contrôle si les
      commandes utilitaires sont tracées par le module. Les commandes
      utilitaires sont toutes les commandes SQL sauf <command>SELECT</command>,
      <command>INSERT</command>, <command>UPDATE</command> et
      <command>DELETE</command>. La valeur par défaut est
      <literal>on</literal>. Seuls les superutilisateurs peuvent modifier
      cette configuration.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <varname>pg_stat_statements.save</varname> (<type>boolean</type>)
    </term>

    <listitem>
     <para>
      <varname>pg_stat_statements.save</varname> précise s'il faut sauvegarder
      les statistiques lors des arrêts du serveur. S'il est
      <literal>off</literal>, alors les statistiques ne sont pas sauvegardées
      lors de l'arrêt ni rechargées au démarrage du serveur. La valeur par
      défaut est <literal>on</literal>.
      Ce paramètre peut uniquement être positionné dans le fichier
      <filename>postgresql.conf</filename> ou sur la ligne de commande du
      serveur.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   Le module a besoin de mémoire partagée supplémentaire d'environ
   <varname>pg_stat_statements.max</varname> <literal>*</literal>
   <xref linkend="guc-track-activity-query-size"/> octets.  Notez que cette
   mémoire est consommée quand le module est chargé, même si
   <varname>pg_stat_statements.track</varname> est positionné à
   <literal>none</literal>.
  </para>

  <para>
   Ces paramètres doivent être définis dans <filename>postgresql.conf</filename>.
   Un usage courant pourrait être&nbsp;:
  </para>

  <programlisting>
# postgresql.conf
shared_preload_libraries = 'pg_stat_statements'

pg_stat_statements.max = 10000
pg_stat_statements.track = all
  </programlisting>
 </sect2>

 <sect2>
  <title>Exemple de sortie</title>

  <screen>bench=# SELECT pg_stat_statements_reset();

$ pgbench -i bench
$ pgbench -c10 -t300 bench

bench=# \x
bench=# SELECT query, calls, total_time, rows, 100.0 * shared_blks_hit /
               nullif(shared_blks_hit + shared_blks_read, 0) AS hit_percent
          FROM pg_stat_statements ORDER BY total_time DESC LIMIT 5;
-[ RECORD 1 ]---------------------------------------------------------------------
query       | UPDATE pgbench_branches SET bbalance = bbalance + ? WHERE bid = ?;
calls       | 3000
total_time  | 9609.00100000002
rows        | 2836
hit_percent | 99.9778970000200936
-[ RECORD 2 ]---------------------------------------------------------------------
query       | UPDATE pgbench_tellers SET tbalance = tbalance + ? WHERE tid = ?;
calls       | 3000
total_time  | 8015.156
rows        | 2990
hit_percent | 99.9731126579631345
-[ RECORD 3 ]---------------------------------------------------------------------
query       | copy pgbench_accounts from stdin
calls       | 1 
total_time  | 310.624
rows        | 100000
hit_percent | 0.30395136778115501520
-[ RECORD 4 ]---------------------------------------------------------------------
query       | UPDATE pgbench_accounts SET abalance = abalance + ? WHERE aid = ?;
calls       | 3000
total_time  | 271.741999999997
rows        | 3000
hit_percent | 93.7968855088209426
-[ RECORD 5 ]---------------------------------------------------------------------
query       | alter table pgbench_accounts add primary key (aid)
calls       | 1 
total_time  | 81.42
rows        | 0 
hit_percent | 34.4947735191637631
</screen>
 </sect2>

 <sect2>
  <title>Auteurs</title>

  <para>
   Takahiro Itagaki <email>itagaki.takahiro@oss.ntt.co.jp</email>.
   La normalisation des requêtes a été ajoutée par Peter Geoghegan <email>peter@2ndquadrant.com</email>.
  </para>
 </sect2>

</sect1>
