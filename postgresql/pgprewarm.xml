<?xml version="1.0" encoding="UTF-8"?>
<!-- doc/src/sgml/pgprewarm.sgml -->

<sect1 id="pgprewarm" xreflabel="pg_prewarm">
 <title>pg_prewarm</title>

 <indexterm zone="pgprewarm">
  <primary>pg_prewarm</primary>
 </indexterm>

 <para>
  Le module <filename>pg_prewarm</filename> fournit un moyen pratique
  de charger des données de relations dans le cache de données du système
  d'exploitation ou dans le cache de données de
  <productname>PostgreSQL</productname>.
 </para>

 <sect2>
  <title>Fonctions</title>

<synopsis>
pg_prewarm(regclass, mode text default 'buffer', fork text default 'main',
           first_block int8 default null,
           last_block int8 default null) RETURNS int8
</synopsis>

  <para>
   Le premier argument correspond à la ration qui doit être préchargée. Le
   second argument correspond à la méthode de préchargement à utiliser,
   comme cela sera vu plus bas. Le troisième argument correspond au fork
   à précharger (généralement <literal>main</literal>).  Le quatrième
   argument correspond au numéro du premier bloc à précharger
   (<literal>NULL</literal> est accepté comme synonyme de zero). Le cinquième
   argument correspond au dernier numéro de bloc à précharger
   (<literal>NULL</literal> signifie précharger jusqu'au dernier bloc trouvé
   dans la relation). La valeur retournée correspond au nombre de blocs
   préchargés.
  </para>

  <para>
   Il y a trois méthodes de préchargement diesponibles.
   <literal>prefetch</literal> envoie une requête de prélecture asynchrone au
   système d'exploitation si celui-ci le supporte ou sinon renvoie une erreur.
   <literal>read</literal> lit l'intervalle de blocs demandé. Contrairement à
   <literal>prefetch</literal>, toutes les plateformes et options de compilation
   le supportent, mais peut être plus lent.  <literal>buffer</literal> lit
   l'intervalle de blocs demandé pour le charger dans le cache de données de la
   base.
  </para>

  <para>
   Il est à noter qu'avec n'importe laquelle de ces méthodes, tenter de
   précharger plus de blocs que'il est possible de mettre en cache &mdash; par
   le système d'exploitation en utilisant <literal>prefetch</literal> ou
   <literal>read</literal>, ou par <productname>PostgreSQL</productname> en
   utilisant <literal>buffer</literal> &mdash; aura probablement pour effet
   d'expulser du cache les blocs de numéro inférieur au fur et à mesure que
   les blocs de numéro supérieurs seront lus.  De plus, le préchargement de
   données apprécie qu'aucune protection contre l'expulsion de données du
   cache ne soit présente, il est donc possible que d'autres activités du
   système d'exploitation puissent évincer du cache les données fraîchement
   préchargées peu de temps après leur préchargement. Pour toutes ces
   raisons, le préchargement est typiquement plus utile au démarrage, quand
   les caches sont majoritairement vides.
  </para>
 </sect2>

 <sect2>
  <title>Auteur</title>

  <para>
   Robert Haas <email>rhaas@postgresql.org</email>
  </para>
 </sect2>

</sect1>
