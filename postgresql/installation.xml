<?xml version="1.0" encoding="UTF-8"?>
<chapter id="installation">
 <title>Procédure d'installation du code source</title>

 <indexterm zone="installation">
  <primary>installation</primary>
 </indexterm>

 <!-- See also the version of this text in standalone-install.xml -->
 <para>
  Ce chapitre décrit l'installation de <productname>PostgreSQL</productname>
  en utilisant le code source. Ce chapitre peut être ignoré lors de
  l'installation d'une distribution pré-empaquetée, paquet RPM ou Debian, par
  exemple. Il est alors plus utile de lire les instruction du mainteneur du
  paquet.
 </para>

 <para>
  Si vous construisez <productname>PostgreSQL</productname> pour Microsoft
  Windows, continuez la lecture de ce chapitre si vous avez pour but
  d'utiliser MinGW ou Cygwin&nbsp;; par contre, si vous voulez utiliser
  <productname>Visual C++</productname> de Microsoft, lire à la place <xref
  linkend="install-windows"/>.
 </para>

 <sect1 id="install-short">
  <title>Version courte</title>

  <para>
   <synopsis>./configure
make
su
make install
adduser postgres
mkdir /usr/local/pgsql/data
chown postgres /usr/local/pgsql/data
su - postgres
/usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data
/usr/local/pgsql/bin/pg_ctl -D /usr/local/pgsql/data -l logfile start
/usr/local/pgsql/bin/createdb test
/usr/local/pgsql/bin/psql test</synopsis>
   Le reste du chapitre est la version longue.
  </para>
 </sect1>


 <sect1 id="install-requirements">
  <title>Prérequis</title>

  <para>
   En général, les plateformes style unix modernes sont capables
   d'exécuter <productname>PostgreSQL</productname>.
   Les plateformes sur lesquelles des tests ont été effectués sont décrites
   dans la <xref linkend="supported-platforms"/> ci-après.
  </para>

  <para>
   Les logiciels suivants sont nécessaires pour compiler
   <productname>PostgreSQL</productname>&nbsp;:

   <itemizedlist>
    <listitem>
     <para>
      <indexterm>
       <primary>make</primary>
      </indexterm>

      <acronym>GNU</acronym> <application>make</application> version 3.80 (ou
      une version plus récente) est nécessaire&nbsp;; les autres programmes
      <application>make</application> ou les versions plus anciennes de
      <acronym>GNU</acronym> <application>make</application> <emphasis>ne</emphasis>
      fonctionnent <emphasis>pas</emphasis>.
      (<acronym>GNU</acronym> <application>make</application> est parfois installé sous le nom
      <filename>gmake</filename>). Pour
      connaître la version utilisée, saisir
<screen><userinput>make --version</userinput></screen>
     </para>
    </listitem>

    <listitem>
     <para>
      Il est nécessaire d'avoir un compilateur C
      <acronym>ISO</acronym>/<acronym>ANSI</acronym> (au minimum compatible
      avec C99). Une version récente de
      <productname>GCC</productname> est recommandée, mais
      <productname>PostgreSQL</productname> est connu pour être compilable avec de
      nombreux compilateurs de divers vendeurs.
     </para>
    </listitem>

    <listitem>
     <para>
      <application>tar</application> est requis pour déballer la distribution
      des sources, associé à <application>gzip</application> ou
      <application>bzip2</application>.
     </para>
    </listitem>

    <listitem>
     <para>
      <indexterm>
       <primary>readline</primary>
      </indexterm>
      <indexterm>
       <primary>libedit</primary>
      </indexterm>

      La bibliothèque <acronym>GNU</acronym> <productname>Readline</productname> est
      utilisée par défaut. Elle permet à <application>psql</application>
      (l'interpréteur de ligne de commandes SQL de PostgreSQL) de se souvenir de
      chaque commande saisie, et permet d'utiliser les touches
      de flèches pour rappeler et éditer les commandes précédentes. C'est très
      pratique et fortement recommandé. Pour ne pas l'utiliser, il
      faut préciser <option>--without-readline</option> au moment de l'exécution
      de la commande <filename>configure</filename>. Une alternative possible est
      l'utilisation de la bibliothèque <filename>libedit</filename> sous licence
      BSD, développée au début sur <productname>NetBSD</productname>. La
      bibliothèque <filename>libedit</filename> est compatible
      GNU <productname>Readline</productname> et est utilisée si cette dernière
      n'est pas trouvée ou si <option>--with-libedit-preferred</option> est utilisé
      sur la ligne de commande de <filename>configure</filename>. Lorsqu'une
      distribution Linux à base de paquets est utilisée, si les paquets
      <literal>readline</literal> et <literal>readline-devel</literal> sont
      séparés, il faut impérativement installer les deux.
     </para>
    </listitem>

    <listitem>
     <para>
      <indexterm>
       <primary>zlib</primary>
      </indexterm>

      La bibliothèque de compression <productname>zlib</productname> est
      utilisée par défaut. Pour ne pas l'utiliser, il faut préciser
      <option>--without-zlib</option> à
      <filename>configure</filename>. Cela a pour conséquence de désactiver le
      support des archives compressées dans <application>pg_dump</application> et
      <application>pg_restore</application>.
     </para>
    </listitem>

   </itemizedlist>
  </para>

  <para>
   Les paquets suivants sont optionnels. S'ils ne sont pas obligatoires lors
   d'une compilation par défaut de <productname>PostgreSQL</productname>,
   ils le deviennent lorsque certaines options sont utilisées, comme cela
   est expliqué par la suite.

   <itemizedlist>
    <listitem>
     <para>
      Pour installer le langage procédural <application>PL/Perl</application>,
      une installation complète de <productname>Perl</productname>,
      comprenant la bibliothèque <filename>libperl</filename> et les
      fichiers d'en-tête, est nécessaire.
      La version minimale requise est <productname>Perl</productname> 5.8.3.
     </para>

     <para>
      Comme <application>PL/Perl</application> est une bibliothèque partagée,
      la bibliothèque <indexterm><primary>libperl</primary></indexterm>
      <filename>libperl</filename> doit aussi être partagée sur la plupart des
      plateformes. C'est désormais le choix par défaut dans les versions
      récentes de <productname>Perl</productname>, mais ce n'était pas le cas
      dans les versions plus anciennes. Dans tous les cas, c'est du ressort de
      celui qui installe Perl.  <filename>configure</filename> échouera si la
      construction de <application>PL/Perl</application> est sélectionnée mais
      qu'il ne trouve pas une bibliothèque partagée
      <filename>libperl</filename>. Dans ce cas, vous devrez reconstruire et
      installer <productname>Perl</productname> manuellement pour être capable
      de construire <application>PL/Perl</application>. Lors du processus de
      configuration pour <productname>Perl</productname>, demandez une
      bibliothèque partagée.
     </para>

     <para>
      Si vous avez l'intention d'avoir plus qu'une utilisation occasionnelle
      de <application>PL/Perl</application>, vous devez vous assurer que
      l'installation de <productname>Perl</productname> a été faite avec
      l'option <literal>usemultiplicity</literal> activée (<literal>perl
      -V</literal> vous indiquera si c'est le cas).
     </para>
    </listitem>

    <listitem>
     <para>
      Pour compiler le langage de programmation serveur <application>PL/Python</application>,
      il faut que <productname>Python</productname> soit installé avec les
      fichiers d'en-tête et le module <application>distutils</application>. La
      version minimum requise est <productname>Python</productname> 2.4.
      <productname>Python 3</productname> est supporté s'il s'agit d'une
      version 3.1 ou ultérieure&nbsp;; voir la
      <xref linkend="plpython-python23"/>
      lors de l'utilisation de Python 3.
     </para>

     <para>
      Puisque <application>PL/Python</application> doit être une bibliothèque
      partagée, la bibliothèque
      <indexterm><primary>libpython</primary></indexterm>
      <filename>libpython</filename> doit l'être aussi sur la plupart des
      plateformes. Ce n'est pas le cas des installations par défaut de
      <productname>Python</productname> construits à partir des sources mais,
      une bibliothèque partagée est disponible dans de nombreuses
      distributions de systèmes d'exploitation. <filename>configure</filename>
      échouera si la construction de <application>PL/Python</application> est
      sélectionnée et qu'il ne peut pas trouver une bibliothèque partagée
      <filename>libpython</filename>. Cela pourrait signifier que vous avez
      soit besoin d'installer des packages supplémentaires soit reconstruire
      (une partie de) l'installation <productname>Python</productname> pour
      fournir cette bibliothèque partagée. Lors de la construction à partir
      des sources, exécutez le configure de <productname>Python</productname>
      avec l'option <literal>--enable-shared</literal>.
     </para>
    </listitem>

    <listitem>
     <para>
      Pour construire le langage procédural
      <application>PL/Tcl</application>, <productname>Tcl</productname> doit
      être installé. La version minimale requise de
      <productname>Tcl</productname> est la 8.4.
     </para>
    </listitem>

    <listitem>
     <para>
      Pour activer le support de langage natif (<acronym>NLS</acronym>), qui
      permet d'afficher les messages d'un programme dans une langue autre que l'anglais,
      une implantation de l'<acronym>API</acronym>
      <application>Gettext</application> est nécessaire. Certains systèmes d'exploitation
      l'intègrent (par exemple, <systemitem class="osname">Linux</systemitem>,
      <systemitem class="osname">NetBSD</systemitem>,
      <systemitem class="osname">Solaris</systemitem>). Pour les autres systèmes,
      un paquet additionnel peut être téléchargé sur <ulink
      url="http://www.gnu.org/software/gettext/"></ulink>.
      Pour utiliser l'implantation <application>Gettext</application> des
      bibliothèques C <acronym>GNU</acronym>, certains utilitaires nécessitent
      le paquet <productname>GNU Gettext</productname>.
      Il n'est pas nécessaire dans les autres implantations.
     </para>
    </listitem>

    <listitem>
     <para>
      Vous aurez besoin de <productname>OpenSSL</productname>, si vous voulez
      utiliser du chiffrement pour vos connexions clientes.
      <productname>OpenSSL</productname> est aussi requis pour la génération
      de nombres aléatoires sur les plateformes qui n'ont pas
      <filename>/dev/urandom</filename> (sauf Windows). La version minimale
      requise est la 0.9.8.
     </para>
    </listitem>

    <listitem>
     <para>
      Vous avez besoin de <application>Kerberos</application>,
      <productname>OpenLDAP</productname> ou <application>PAM</application>
      pour bénéficier de l'authentification ou du chiffrement en utilisant ces services.
     </para>
    </listitem>

    <listitem>
     <para>
      Pour construire la documentation <productname>PostgreSQL</productname>,
      il existe un ensemble de prérequis séparé&nbsp;; voir
      <xref linkend="docguide-toolsets"/>.
     </para>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   En cas de compilation à partir d'une arborescence <acronym>Git</acronym> et
   non d'un paquet de sources publié, ou pour faire du développement au
   niveau serveur, les paquets suivants seront également nécessaires&nbsp;:

   <itemizedlist>
    <listitem>
     <para>
      <indexterm>
       <primary>flex</primary>
      </indexterm>
      <indexterm>
       <primary>lex</primary>
      </indexterm>
      <indexterm>
       <primary>bison</primary>
      </indexterm>
      <indexterm>
       <primary>yacc</primary>
      </indexterm>

      GNU <application>Flex</application> et <application>Bison</application>
      sont nécessaires pour compiler à partir d'un export du Git ou lorsque les
      fichiers de définition de l'analyseur ou du « scanner » sont modifiés.
      Les versions nécessaires sont <application>Flex</application> 2.5.31 ou
      ultérieure et <application>Bison</application> 1.875 ou ultérieure.
      Les autres programmes <application>lex</application> et
      <application>yacc</application> ne peuvent pas être utilisés.
     </para>
    </listitem>
    <listitem>
     <para>
      <indexterm>
       <primary>perl</primary>
      </indexterm>

      <application>Perl</application> 5.8.3 ou ultérieur est aussi nécessaire pour
      construire les sources du Git, ou lorsque les fichiers en entrée pour
      n'importe laquelle des étapes de construction qui utilisent des scripts
      Perl ont été modifiés. Sous Windows, <application>Perl</application> est
      nécessaire dans tous les cas. <application>Perl</application> est aussi
	  requis pour exécuter certains tests unitaires.
     </para>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   Si d'autres paquets <acronym>GNU</acronym> sont nécessaires, ils peuvent
   être récupérés sur un site miroir de <acronym>GNU</acronym> (voir <ulink
   url="https://www.gnu.org/order/ftp.html"></ulink> pour la liste) ou sur
   <ulink url="ftp://ftp.gnu.org/gnu/"></ulink>.
  </para>

  <para>
   Il est important de vérifier qu'il y a suffisamment d'espace disque
   disponible. 100&nbsp;Mo sont nécessaires pour la compilation et 20&nbsp;Mo pour le
   répertoire d'installation. Un groupe de bases de données vide nécessite
   35&nbsp;Mo&nbsp;; les fichiers des bases prennent cinq fois plus d'espace que des
   fichiers texte contenant les mêmes données. Si des tests de
   régression sont prévus, 150&nbsp;Mo supplémentaires sont temporairement
   nécessaires. On peut utiliser la commande <command>df</command> pour
   vérifier l'espace disque disponible.
  </para>
 </sect1>

 <sect1 id="install-getsource">
  <title>Obtenir les sources</title>

  <para>
   Les sources de <productname>PostgreSQL</productname> &version; peuvent être
   obtenues dans la section de téléchargement de notre site web&nbsp;:
   <ulink url="https://www.postgresql.org/download/">téléchargement</ulink>.
   Vous devriez obtenir un fichier nommé
   <filename>postgresql-&version;.tar.gz</filename> ou
   <filename>postgresql-&version;.tar.bz2</filename>.
   Après avoir obtenu le fichier, on le décompresse&nbsp;:
<screen><userinput>gunzip postgresql-&version;.tar.gz</userinput>
<userinput>tar xf postgresql-&version;.tar</userinput></screen>
   (Utilisez <command>bunzip2</command> à la place de <command>gunzip</command>
   si vous avez le fichier <filename>.bz2</filename>.)
   Cela crée un répertoire <filename>postgresql-&version;</filename>
   contenant les sources de <productname>PostgreSQL</productname> dans le répertoire
   courant. Le reste de la procédure d'installation s'effectue depuis ce
   répertoire.
  </para>

  <para>
   Les sources peuvent également être obtenues directement à partir du système de
   contrôle de version. Pour plus d'informations, voir <xref linkend="sourcerepo"/>.
  </para>
 </sect1>

 <sect1 id="install-procedure">
  <title>Procédure d'installation</title>

  <procedure>

  <step id="configure">
   <title>Configuration</title>

   <indexterm zone="configure">
    <primary>configure</primary>
   </indexterm>

   <para>
    La première étape de la procédure d'installation est de configurer
    l'arborescence système et de choisir les options intéressantes.
    Ce qui est fait en exécutant le script <filename>configure</filename>. Pour une
    installation par défaut, entrer simplement
<screen><userinput>./configure</userinput></screen>
    Ce script exécutera de nombreux tests afin de déterminer les valeurs
    de certaines variables dépendantes du système et de détecter certains aléas
    relatifs au système d'exploitation. Il créera divers
    fichiers dans l'arborescence de compilation pour enregistrer ce qui a été
    trouvé. <filename>configure</filename> peut aussi être exécuté à
    partir d'un répertoire hors de l'arborescence des sources pour
    conserver l'arborescence de compilation séparée. Cette procédure est aussi
    appelée une construction de type
    <indexterm><primary>VPATH</primary></indexterm><firstterm>VPATH</firstterm>.
    Voici comment la faire&nbsp;:
<screen>
<userinput>mkdir build_dir</userinput>
<userinput>cd build_dir</userinput>
<userinput>/path/to/source/tree/configure [les options vont ici]</userinput>
<userinput>make</userinput>
   </screen>
  </para>

  <para>
   La configuration par défaut compilera le serveur et les utilitaires, aussi
   bien que toutes les applications clientes et interfaces qui requièrent
   seulement un compilateur C. Tous les fichiers seront installés par défaut
   sous <filename>/usr/local/pgsql</filename>.
  </para>

  <para>
   Les processus de compilation et d'installation peuvent être personnalisés
   par l'utilisation d'une ou plusieurs options sur la ligne de commande après
   <filename>configure</filename>&nbsp;:

   <variablelist>
    <varlistentry>
     <term><option>--prefix=<replaceable>PREFIX</replaceable></option></term>
     <listitem>
      <para>
       Installe tous les fichiers dans le répertoire <replaceable>PREFIX</replaceable>
       au lieu du répertoire <filename>/usr/local/pgsql</filename>.
       Les fichiers actuels seront installés dans divers
       sous-répertoires&nbsp;; aucun fichier ne sera directement installé
       sous <replaceable>PREFIX</replaceable>.
      </para>

      <para>
       Pour satisfaire des besoins spécifiques, les sous-répertoires peuvent
       être personnalisés à l'aide des options qui suivent.
       Toutefois, en laissant les options par défaut, l'installation est
       déplaçable, ce qui signifie que le répertoire peut être déplacé après
       installation. (Cela n'affecte pas les emplacements de
       <literal>man</literal> et <literal>doc</literal>.)
      </para>

      <para>
       Pour les installations déplaçables, on peut utiliser
       l'option <literal>--disable-rpath</literal> de <filename>configure</filename>.
       De plus, il faut indiquer au système d'exploitation
       comment trouver les bibliothèques partagées.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--exec-prefix=<replaceable>EXEC-PREFIX</replaceable></option></term>
     <listitem>
      <para>
       Les fichiers qui dépendent de l'architecture peuvent être installés dans
       un répertoire différent, <replaceable>EXEC-PREFIX</replaceable>, de celui donné
       par <replaceable>PREFIX</replaceable>. Cela peut être utile pour partager
       les fichiers indépendant de l'architecture entre plusieurs machines.
       S'il est omis, <replaceable>EXEC-PREFIX</replaceable> est égal à
       <replaceable>PREFIX</replaceable> et les fichiers dépendants seront installés
       sous la même arborescence que les fichiers indépendants de
       l'architecture, ce qui est probablement le but recherché.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--bindir=<replaceable>REPERTOIRE</replaceable></option></term>
     <listitem>
      <para>
       Précise le répertoire des exécutables. Par défaut, il s'agit de
       <filename><replaceable>EXEC-PREFIX</replaceable>/bin</filename>, ce
       qui signifie <filename>/usr/local/pgsql/bin</filename>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--sysconfdir=<replaceable>REPERTOIRE</replaceable></option></term>
     <listitem>
      <para>
       Précise le répertoire de divers fichiers de configuration. Par défaut,
       il s'agit de <filename><replaceable>PREFIX</replaceable>/etc</filename>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--libdir=<replaceable>REPERTOIRE</replaceable></option></term>
     <listitem>
      <para>
       Précise le répertoire d'installation des bibliothèques et des
       modules chargeables dynamiquement. Par défaut, il s'agit de
       <filename><replaceable>EXEC-PREFIX</replaceable>/lib</filename>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--includedir=<replaceable>REPERTOIRE</replaceable></option></term>
     <listitem>
      <para>
       Précise le répertoire d'installation des en-têtes C et C++. Par défaut, il
       s'agit de <filename><replaceable>PREFIX</replaceable>/include</filename>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--datarootdir=<replaceable>REPERTOIRE</replaceable></option></term>
     <listitem>
      <para>
       Indique le répertoire racine de différents types de fichiers de données
       en lecture seule. Cela ne sert qu'à paramétrer des valeurs par
       défaut pour certaines des options suivantes. La valeur par défaut est
       <filename><replaceable>PREFIX</replaceable>/share</filename>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--datadir=<replaceable>REPERTOIRE</replaceable></option></term>
     <listitem>
      <para>
       Indique le répertoire pour les fichiers de données en lecture seule
       utilisés par les programmes installés. La valeur par défaut est
       <filename><replaceable>DATAROOTDIR</replaceable></filename>.
       Cela n'a aucun rapport avec l'endroit où les fichiers de base de données
       seront placés.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--localedir=<replaceable>REPERTOIRE</replaceable></option></term>
     <listitem>
      <para>
       Indique le répertoire pour installer les données locales, en
       particulier les fichiers catalogues de traductions de messages. La
       valeur par défaut est
       <filename><replaceable>DATAROOTDIR</replaceable>/locale</filename>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--mandir=<replaceable>REPERTOIRE</replaceable></option></term>
     <listitem>
      <para>
       Les pages man fournies avec <productname>PostgreSQL</productname> seront
       installées sous ce répertoire, dans leur sous-répertoire
       <filename>man<replaceable>x</replaceable></filename> respectif.
       Par défaut, il s'agit de <filename><replaceable>DATAROOTDIR</replaceable>/man</filename>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--docdir=<replaceable>RÉPERTOIRE</replaceable></option></term>
     <listitem>
      <para>
       Configure le répertoire racine pour installer les fichiers de documentation,
       sauf les pages <quote>man</quote>. Ceci ne positionne la valeur par défaut
       que pour les options suivantes. La valeur par défaut pour cette option est
       <filename><replaceable>DATAROOTDIR</replaceable>/doc/postgresql</filename>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--htmldir=<replaceable>RÉPERTOIRE</replaceable></option></term>
     <listitem>
      <para>
       La documentation formatée en HTML pour <productname>PostgreSQL</productname>
       sera installée dans ce répertoire. La valeur par défaut est
       <filename><replaceable>DATAROOTDIR</replaceable></filename>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

   <note>
    <para>
     Une attention toute particulière a été prise afin de rendre possible
     l'installation de <productname>PostgreSQL</productname> dans des répertoires
     partagés (comme <filename>/usr/local/include</filename>) sans
     interférer avec des noms de fichiers relatifs au reste du système.
     En premier lieu, le mot <quote><literal>/postgresql</literal></quote>
     est automatiquement ajouté aux répertoires <varname>datadir</varname>,
     <varname>sysconfdir</varname> et <varname>docdir</varname>,
     à moins que le nom du répertoire à partir de la racine contienne déjà
     le mot <quote><literal>postgres</literal></quote> ou
     <quote><literal>pgsql</literal></quote>. Par exemple, si
     <filename>/usr/local</filename> est choisi comme préfixe,
     la documentation sera installée dans
     <filename>/usr/local/doc/postgresql</filename>, mais si le
     préfixe est <filename>/opt/postgres</filename>, alors il sera dans
     <filename>/opt/postgres/doc</filename>. Les fichiers d'en-tête
     publiques C de l'interface cliente seront installés sous
     <varname>includedir</varname> et sont indépendants des noms de
     fichiers relatifs au reste du système. Les fichiers d'en-tête privés et
     les fichiers d'en-tête du serveur sont installés dans des répertoires
     privés sous <varname>includedir</varname>.
     Voir la documentation de chaque interface pour savoir comment obtenir
     ces fichiers d'en-tête.
     Enfin, un répertoire privé sera aussi créé si nécessaire sous
     <varname>libdir</varname> pour les modules chargeables dynamiquement.
    </para>
   </note>
  </para>

  <para>
   <variablelist>
    <varlistentry>
     <term><option>--with-extra-version=<replaceable>STRING</replaceable></option></term>
     <listitem>
      <para>
       Ajoute <replaceable>STRING</replaceable> au numéro de version de
       PostgreSQL. Cela peut être utilisé, par exemple, pour marquer des
       binaires compilés depuis des instantanés Git ne faisant pas encore
       partie d'une version officielle ou contenant des patchs particuliers
       avec une chaîne de texte supplémentaire telle qu'un identifiant
       <command>git describe</command> ou un numéro de version d'un paquet
       d'une distribution.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-includes=<replaceable>REPERTOIRES</replaceable></option></term>
     <listitem>
      <para>
       <replaceable>REPERTOIRES</replaceable> est une liste de répertoires séparés par
       le caractère deux points (<literal>:</literal>) qui sera ajoutée à la liste de recherche
       des fichiers d'en-tête du compilateur. Si vous avez des paquetages optionnels (tels
       que <application>Readline</application> GNU) installés dans des répertoires non
       conventionnels, vous devez utiliser cette option et probablement aussi
       l'option <option>--with-libraries</option> correspondante.
      </para>
      <para>
       Exemple&nbsp;:
       <literal>--with-includes=/opt/gnu/include:/usr/sup/include</literal>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-libraries=<replaceable>REPERTOIRES</replaceable></option></term>
     <listitem>
      <para>
       <replaceable>REPERTOIRES</replaceable> est une liste de recherche de répertoires
       de bibliothèques séparés par le caractère deux points (<literal>:</literal>).
       Si des paquets sont installés dans des répertoires non conventionnels,
       il peut s'avérer nécessaire d'utiliser cette option (ainsi que l'option correspondante
       <option>--with-includes</option>).
      </para>
      <para>
       Exemple&nbsp;: <literal>--with-libraries=/opt/gnu/lib:/usr/sup/lib</literal>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--enable-nls<optional>=<replaceable>LANGUES</replaceable></optional></option></term>
     <listitem>
      <para>
       Permet de mettre en place le support des langues natives
       (<acronym>NLS</acronym>). C'est la capacité d'afficher les messages
       d'un programme dans une langue autre que l'anglais.
       <replaceable>LANGUES</replaceable> est une liste optionnelle des codes
       de langue que vous voulez supporter séparés par un espace. Par
       exemple, <literal>--enable-nls='de fr'</literal> (l'intersection entre la
       liste et l'ensemble des langues traduites actuellement sera calculée
       automatiquement). En l'absence de liste, toutes les
       traductions disponibles seront installées.
      </para>

      <para>
       Pour utiliser cette option, une implantation de
       l'API <application>Gettext</application> est nécessaire&nbsp;; voir ci-dessous.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-pgport=<replaceable>NUMERO</replaceable></option></term>
     <listitem>
      <para>
       Positionne <replaceable>NUMERO</replaceable> comme numéro de port par défaut
       pour le serveur et les clients. La valeur par défaut est 5432. Le port
       peut toujours être modifié ultérieurement mais, s'il est précisé ici,
       les exécutables du serveur et des clients auront la même valeur
       par défaut, ce qui est vraiment très pratique. Habituellement, la
       seule bonne raison de choisir une autre valeur que celle par défaut
       est l'exécution de plusieurs serveurs
       <productname>PostgreSQL</productname> sur la même machine.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-perl</option></term>
     <listitem>
      <para>
       Permet l'utilisation du langage de procédures <application>PL/Perl</application>
       côté serveur.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-python</option></term>
     <listitem>
      <para>
       Permet la compilation du langage de procédures <application>PL/Python</application>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-tcl</option></term>
     <listitem>
      <para>
       Permet la compilation du langage de procédures <application>PL/Tcl</application>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-tclconfig=<replaceable>REPERTOIRE</replaceable></option></term>
     <listitem>
      <para>
       Tcl installe les fichiers <filename>tclConfig.sh</filename>, contenant
       certaines informations de configuration nécessaires pour compiler le
       module d'interfaçage avec Tcl. Ce fichier est trouvé automatiquement
       mais pour utiliser une version différente de Tcl, il faut indiquer le répertoire dans lequel il
       se trouve.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-gssapi</option></term>
     <listitem>
      <para>
       Permet la compilation avec le support de l'authentification GSSAPI. Sur de
       nombreux systèmes, GSSAPI (qui fait habituellement partie d'une
       installation Kerberos) n'est pas installé dans un emplacement
       recherché par défaut (c'est-à-dire <filename>/usr/include</filename>,
       <filename>/usr/lib</filename>), donc vous devez utiliser les options
       <option>--with-includes</option> et <option>--with-libraries</option>
       en plus de cette option. <filename>configure</filename> vérifiera les
       fichiers d'en-tête et les bibliothèques nécessaires pour s'assurer
       que votre installation GSSAPI est suffisante avant de continuer.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-krb-srvnam=<replaceable>NOM</replaceable></option></term>
     <listitem>
      <para>
       Le nom par défaut du service principal de Kerberos utilisé.
       <literal>postgres</literal> est pris par défaut. Il n'y a
       habituellement pas de raison de le changer sauf dans le cas d'un
       environnement Windows, auquel cas il doit être mis en majuscule,
       <literal>POSTGRES</literal>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry id="configure-with-llvm">
     <term><option>--with-llvm</option></term>
     <listitem>
      <para>
       Permet la compilation avec le support de <acronym>JIT</acronym> basée sur
       <productname>LLVM</productname><phrase
       condition="standalone-ignore"> (see <xref
       linkend="jit"/>)</phrase>. Ceci nécessite l'installation de la
	   bibliothèque <productname>LLVM</productname>. La version minimale
	   requise de <productname>LLVM</productname> est actuellement la 3.9.
      </para>
      <para>
       <command>llvm-config</command><indexterm><primary>llvm-config</primary></indexterm>
       sera utilisé pour trouver les options de compilation requises.
       <command>llvm-config</command>, puis
       <command>llvm-config-$major-$minor</command> pour toutes les versions
	   supportées, seront recherché dans <envar>PATH</envar>. Dans le cas où
	   les bons binaires ne sont pas trouvés, il faut utiliser la variable
	   <envar>LLVM_CONFIG</envar> afin de spécifier le chemin à
	   <command>llvm-config</command>. Par exemple&nbsp;:
<programlisting>
./configure ... --with-llvm LLVM_CONFIG='/path/to/llvm/bin/llvm-config'
</programlisting>
      </para>

      <para>
       Le support de <productname>LLVM</productname> nécessite un compilateur
       <command>clang</command> compatible (qui peut être spécifié, si
	   nécessaire, en utilisant la variable d'environnement
	   <envar>CLANG</envar>, et un compilateur C++ fonctionnel (qui peut être
	   spécifié, si nécessaire, en utilisant la variable d'environnement
       <envar>CXX</envar>).
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-icu</option></term>
     <listitem>
      <para>
       Installer PostgreSQL avec la bibliothèque
       <productname>ICU</productname>
       <indexterm><primary>ICU</primary></indexterm>
       L'installation des paquets <productname>ICU4C</productname>
       et <productname>pkg-config</productname>
       <indexterm><primary>pkg-config</primary></indexterm>
       sont un pré-requis.
       La version minimale requise de <productname>ICU4C</productname>
       est actuellement la 4.2.
      </para>

      <para>
       Par défaut,
       <productname>pkg-config</productname><indexterm><primary>pkg-config</primary></indexterm>
       sera utilisé pour trouver les options requises de compilation. C'est
       supporté par les versions 4.6 et ultérieures de
       <productname>ICU4C</productname>. Pour les versions plus anciennes ou
       si <productname>pkg-config</productname> n'est pas disponible, les
       variables <envar>ICU_CFLAGS</envar> et <envar>ICU_LIBS</envar> peuvent
       être données à <filename>configure</filename>, comme dans cet
       exemple&nbsp;:
<programlisting>
./configure ... --with-icu ICU_CFLAGS='-I/some/where/include' ICU_LIBS='-L/some/where/lib -licui18n -licuuc -licudata'
</programlisting>
       (Si <productname>ICU4C</productname> est dans le chemin de recherche
       par défaut du compilateur, alors vous aurez besoin d'indiquer une
       chaîne non vide pour éviter l'utilisation de <productname>pkg-
       config</productname>, par exemple <literal>ICU_CFLAGS=' '</literal>.)
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-openssl</option></term>
     <listitem>
      <indexterm>
       <primary>OpenSSL</primary>
       <seealso>SSL</seealso>
      </indexterm>

      <para>
       Compile le support de connexion <acronym>SSL</acronym> (chiffrement).
       Le paquetage <productname>OpenSSL</productname> doit être
       installé. <filename>configure</filename> vérifiera que les fichiers d'en-tête
       et les bibliothèques soient installés pour s'assurer que votre
       installation d'<productname>OpenSSL</productname> est suffisante avant de
       continuer.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-pam</option></term>
     <listitem>
      <para>
       Compile le support
       <acronym>PAM</acronym><indexterm><primary>PAM</primary></indexterm>
       (<foreignphrase>Modules d'Authentification Pluggable</foreignphrase>).
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
       <term><option>--with-bsd-auth</option></term>
       <listitem>
        <para>
         Compile le support de l'authentification BSD (l'environnement
         d'authentification BSD est uniquement disponible sur OpenBSD
         actuellement.)
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
     <term><option>--with-ldap</option></term>
     <listitem>
      <para>
       Demande l'ajout du support de <acronym>LDAP</acronym><indexterm><primary>LDAP</primary></indexterm>
       pour l'authentification et la recherche des paramètres de connexion
       (voir <xref
        linkend="libpq-ldap"/> et <xref linkend="auth-ldap"/>).
       Sur Unix, cela requiert l'installation du paquet
       <productname>OpenLDAP</productname>. Sur Windows, la bibliothèque
       <productname>WinLDAP</productname> est utilisée par défaut.
       <filename>configure</filename> vérifiera l'existence des fichiers d'en-tête
       et des bibliothèques requis pour s'assurer que votre installation
       d'<productname>OpenLDAP</productname> est suffisante avant de continuer.

      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
       <term><option>--with-systemd</option></term>
       <listitem>
        <para>
         Compile le support des notifications du service <application>systemd</application>
         <indexterm><primary>systemd</primary></indexterm>. Ceci améliore
         l'intégration si le binaire du serveur est lancé par
         <application>systemd</application> mais n'a pas d'impact dans le cas
         contraire (voir <xref linkend="server-start"/> pour plus
         d'informations). <application>libsystemd</application> et les
         fichiers en-têtes associés doivent être installés pour pouvoir utiliser
         cette option.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
     <term><option>--without-readline</option></term>
     <listitem>
      <para>
       Évite l'utilisation de la bibliothèque <application>Readline</application>
       (et de celle de <application>libedit</application>).
       Cela désactive l'édition de la ligne de commande et l'historique dans
       <application>psql</application>, ce n'est donc pas recommandé.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-libedit-preferred</option></term>
     <listitem>
      <para>
       Favorise l'utilisation de la bibliothèque <application>libedit</application>
       (sous licence BSD) plutôt que <application>Readline</application> (GPL).
       Cette option a seulement un sens si vous avez installé les deux
       bibliothèques&nbsp;; dans ce cas, par défaut,
       <application>Readline</application> est utilisé.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-bonjour</option></term>
     <listitem>
      <para>
       Compile le support de Bonjour. Ceci requiert le support de Bonjour
       dans votre système d'exploitation. Recommandé sur macOS.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-uuid=<replaceable>LIBRARY</replaceable></option></term>
     <listitem>
      <para>
       Compile le module uuid-ossp (qui fournit les
       fonctions pour générer les UUID), en utilisant la bibliothèque UUID
       spécifiée.  <indexterm><primary>UUID</primary></indexterm>
       <replaceable>LIBRARY</replaceable> doit correspondre à une de ces
       valeurs&nbsp;:
      </para>
      <itemizedlist>
       <listitem>
        <para>
         <option>bsd</option> pour utiliser les fonctions UUID trouvées dans
         FreeBSD, NetBSD et quelques autres systèmes dérivés de BSD
        </para>
       </listitem>
       <listitem>
        <para>
         <option>e2fs</option> pour utiliser la bibliothèque UUID créée par
         le projet <literal>e2fsprogs</literal>&nbsp;; cette bibliothèque est
         présente sur la plupart des systèmes Linux et sur macOS, et peut
         être obtenu sur d'autres plateformes également
        </para>
       </listitem>
       <listitem>
        <para>
         <option>ossp</option> pour utiliser la <ulink
         url="http://www.ossp.org/pkg/lib/uuid/">bibliothèque OSSP UUID</ulink>
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-ossp-uuid</option></term>
     <listitem>
      <para>
       Équivalent obsolète de <literal>--with-uuid=ossp</literal>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-libxml</option></term>
     <listitem>
      <para>
       Construit avec libxml (active le support SQL/XML). Une version 2.6.23
       ou ultérieure de libxml est requise pour cette fonctionnalité.
      </para>

      <para>
       Libxml installe un programme <command>xml2-config</command> qui est
       utilisé pour détecter les options du compilateur et de l'éditeur de
       liens. PostgreSQL l'utilisera automatiquement si elle est trouvée.
       Pour indiquer une installation de libxml dans un emplacement inhabituel,
       vous pouvez soit configurer la variable d'environnement
       <envar>XML2_CONFIG</envar> pour pointer vers le programme
       <command>xml2-config</command> appartenant à l'installation, ou
       utiliser les options <option>--with-includes</option> et
       <option>--with-libraries</option>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-libxslt</option></term>
     <listitem>
      <para>
       Utilise libxslt pour construire le module <xref linkend="xml2"/>. Le
       module <filename>contrib/xml2</filename> se base sur cette
       bibliothèque pour réaliser les transformations XSL du XML.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--disable-float4-byval</option></term>
     <listitem>
      <para>
       Désactive le passage <quote>par valeur</quote> des valeurs float4,
       entraînant leur passage <quote>par référence</quote> à la place.
       Cette option a un coût en performance, mais peut être nécessaire pour
       maintenir la compatibilité avec des anciennes fonctions créées par
       l'utilisateur qui sont écrites en C et utilisent la convention d'appel
       <quote>version 0</quote>. Une meilleure solution à long terme est
       de mettre à jour toutes ces fonctions pour utiliser la convention d'appel
       <quote>version 1</quote>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--disable-float8-byval</option></term>
     <listitem>
      <para>
       Désactive le passage <quote>par valeur</quote> des valeurs float8,
       entraînant leur passage <quote>par référence</quote> à la place.
       Cette option a un coût en performance, mais peut être nécessaire pour
       maintenir la compatibilité avec des anciennes fonctions créées par
       l'utilisateur qui sont écrites en C et utilisent la convention d'appel
       <quote>version 0</quote>. Une meilleure solution à long terme est
       de mettre à jour toutes ces fonctions pour utiliser la convention d'appel
       <quote>version 1</quote>.
       Notez que cette option n'affecte pas que float8, mais aussi int8 et
       quelques types apparentés comme timestamp.
       Sur les plateformes 32 bits, <option>--disable-float8-byval</option>
       est la valeur par défaut, et il n'est pas permis de sélectionner
       <option>--enable-float8-byval</option>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-segsize=<replaceable>TAILLESEG</replaceable></option></term>
     <listitem>
      <para>
       Indique la <firstterm>taille d'un segment</firstterm>, en gigaoctets.
	   La valeur par défaut est de 1 gigaoctet, valeur considérée comme sûre
	   pour toutes les plateformes prises en charge.
       Les grandes tables sont divisées en plusieurs fichiers du système
       d'exploitation, chacun de taille égale à la taille de segment.
       Cela évite les problèmes avec les limites de tailles de fichiers qui
       existent sur de nombreuses plateformes. Si votre système d'exploitation
       supporte les fichiers de grande taille (<quote>largefile</quote>),
       ce qui est le cas de la plupart d'entre eux de nos jours, vous pouvez
       utiliser une plus grande taille de segment. Cela peut être utile
       pour réduire le nombre de descripteurs de fichiers qui peuvent être
       utilisés lors de travail sur des très grandes tables.
       Attention à ne pas sélectionner une valeur plus grande que ce qui est
       supporté par votre plateforme et le(s) système(s) de fichiers que
       vous prévoyez d'utiliser. D'autres outils que vous pourriez vouloir utiliser,
       tels que <application>tar</application>, pourraient aussi limiter la
       taille maximum utilisable pour un fichier.
       Il est recommandé, même si pas vraiment nécessaire, que cette valeur
       soit une puissance de 2.
       Notez que changer cette valeur impose de faire un initdb.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-blocksize=<replaceable>TAILLEBLOC</replaceable></option></term>
     <listitem>
      <para>
       Indique la <firstterm>taille d'un bloc</firstterm>, en kilooctets. C'est
       l'unité de stockage et d'entrée/sortie dans les tables. La valeur
       par défaut, 8 kilooctets, est appropriée pour la plupart des cas&nbsp;;
       mais d'autres valeurs peuvent être utilisées dans des cas particuliers.
       Cette valeur doit être une puissance de 2 entre 1 et 32 (kilooctets).
       Notez que changer cette valeur impose de faire un initdb.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-wal-blocksize=<replaceable>TAILLEBLOC</replaceable></option></term>
     <listitem>
      <para>
       Indique la <firstterm>taille d'un bloc WAL</firstterm>, en kilooctets. C'est
       l'unité de stockage et d'entrée/sortie dans le journal des transactions. La valeur
       par défaut, 8 kilooctets, est appropriée pour la plupart des cas&nbsp;;
       mais d'autres valeurs peuvent être utilises dans des cas particuliers.
       La valeur doit être une puissance de 2 comprise entre 1 et 64 (kilooctets).
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--disable-spinlocks</option></term>
     <listitem>
      <para>
       Autorise le succès de la construction y compris lorsque
       <productname>PostgreSQL</productname> n'a
       pas le support spinlock du CPU pour la plateforme. Ce manque de support
       résultera en des performances faibles&nbsp;; du coup, cette option
       devra seulement être utilisée si la construction échoue et vous informe
       du manque de support de spinlock sur votre plateforme. Si cette option
       est requise pour construire <productname>PostgreSQL</productname> sur votre
       plateforme, merci de rapporter le problème aux développeurs de
       <productname>PostgreSQL</productname>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--disable-thread-safety</option></term>
     <listitem>
      <para>
       Désactive la sécurité des threads pour les bibliothèques clients. Ceci
       empêche les threads concurrents dans les programmes
       <application>libpq</application> et <application>ECPG</application>
       de contrôler en toute sécurité leurs pointeurs de connexion privés.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--with-system-tzdata=<replaceable>RÉPERTOIRE</replaceable></option></term>

     <listitem>

      <indexterm>
       <primary>données de fuseau horaire</primary>
      </indexterm>

      <para>
       <productname>PostgreSQL</productname> inclut sa propre base de données
       des fuseaux horaires, nécessaire pour les opérations sur les dates et
       les heures. Cette base de données est en fait compatible avec la base
       de fuseaux horaires IANA fournie par de nombreux
       systèmes d'exploitation comme FreeBSD, Linux et Solaris, donc ce serait
       redondant de l'installer une nouvelle fois. Quand cette option est
       utilisée, la base des fuseaux horaires, fournie par le système, dans
       <replaceable>RÉPERTOIRE</replaceable> est utilisée à la place de celle
       incluse dans la distribution des sources de PostgreSQL.
       <replaceable>RÉPERTOIRE</replaceable> doit être indiqué avec un chemin
       absolu. <filename>/usr/share/zoneinfo</filename> est un répertoire
       très probable sur certains systèmes d'exploitation. Notez que la routine
       d'installation ne détectera pas les données de fuseau horaire différentes
       ou erronées. Si vous utilisez cette option, il vous est conseillé de
       lancer les tests de régression pour vérifier que les données de fuseau
       horaire que vous pointez fonctionnent correctement avec
       <productname>PostgreSQL</productname>.
      </para>

      <indexterm><primary>cross compilation</primary></indexterm>

      <para>
       Cette option a pour cible les distributeurs de paquets binaires qui
       connaissent leur système d'exploitation. Le principal avantage
       d'utiliser cette option est que le package PostgreSQL n'aura pas
       besoin d'être mis à jour à chaque fois que les règles des fuseaux
       horaires changent. Un autre avantage est que PostgreSQL peut être
       cross-compilé<indexterm><primary>cross compilation</primary></indexterm>
       plus simplement si les fichiers des fuseaux horaires n'ont pas besoin
       d'être construits lors de l'installation.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--without-zlib</option></term>
     <listitem>
      <para>
       <indexterm>
        <primary>zlib</primary>
       </indexterm>
       Évite l'utilisation de la bibliothèque <application>Zlib</application>. Cela
       désactive le support des archives compressées dans
       <application>pg_dump</application> et <application>pg_restore</application>.
       Cette option est seulement là pour les rares systèmes qui ne
       disposent pas de cette bibliothèque.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--enable-debug</option></term>
     <listitem>
      <para>
       Compile tous les programmes et bibliothèques en mode de débogage.
       Cela signifie que vous pouvez exécuter les programmes via un
       débogueur pour analyser les problèmes. Cela grossit considérablement
       la taille des exécutables et, avec des compilateurs autres que GCC,
       habituellement, cela désactive les optimisations du compilateur,
       provoquant des ralentissements. Cependant, mettre ce mode en place est
       extrêmement utile pour repérer les problèmes. Actuellement, cette
       option est recommandée pour les installations en production seulement
       si vous utilisez GCC. Néanmoins, vous devriez l'utiliser si vous
       développez ou si vous utilisez une version béta.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--enable-coverage</option></term>
     <listitem>
      <para>
       Si vous utilisez GCC, les programmes et bibliothèques sont compilés avec
       de l'instrumentation de test de couverture de code. Quand ils sont exécutés,
       ils génèrent des fichiers dans le répertoire de compilation avec des
       métriques de couverture de code.
       Voir <xref linkend="regress-coverage"/> pour davantage
       d'informations. Cette option ne doit être utilisée qu'avec GCC
       et uniquement en phase de développement.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--enable-profiling</option></term>
     <listitem>
      <para>
       En cas d'utilisation de GCC, tous les programmes et bibliothèques
       sont compilés pour qu'elles puissent être profilées. À la sortie du
       processus serveur, un sous-répertoire sera créé pour contenir le
       fichier <filename>gmon.out</filename> à utiliser pour le profilage.
       Cette option est à utiliser uniquement avec GCC lors d'un développement.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--enable-cassert</option></term>
     <listitem>
      <para>
       Permet la vérification des <firstterm>assertions</firstterm> par le
       serveur qui teste de nombreux cas de conditions
       <quote>impossibles</quote>. Ce qui est inestimable dans le cas de
       développement, mais les tests peuvent ralentir sensiblement le
       système. Activer cette option n'influe pas sur la stabilité de
       votre serveur&nbsp;! Les assertions vérifiées ne sont pas classées
       par ordre de sévérité et il se peut qu'un bogue anodin fasse
       redémarrer le serveur s'il y a un échec de vérification. Cette
       option n'est pas recommandée dans un environnement de production
       mais vous devriez l'utiliser lors de développement ou pour les
       versions béta.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--enable-depend</option></term>
     <listitem>
      <para>
       Active la recherche automatique des dépendances. Avec cette option,
       les fichiers makefile sont appelés pour recompiler les fichiers objet
       dès qu'un fichier d'en-tête est modifié. C'est pratique si vous faites
       du développement, mais inutile si vous ne voulez que compiler une fois
       et installer. Pour le moment, cette option ne fonctionne qu'avec GCC.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--enable-dtrace</option></term>
     <listitem>
      <para>
       <indexterm>
        <primary>DTrace</primary>
       </indexterm>
       Compile <productname>PostgreSQL</productname> avec le support de l'outil
       de trace dynamique, DTrace.
       Voir <xref linkend="dynamic-trace"/>
        pour plus d'informations.
      </para>

      <para>
       Pour pointer vers le programme <command>dtrace</command>, la variable
       d'environnement <envar>DTRACE</envar> doit être configurée. Ceci sera
       souvent nécessaire car <command>dtrace</command> est typiquement
       installé sous <filename>/usr/sbin</filename>, qui pourrait ne pas être
       dans le chemin.
      </para>

      <para>
       Des options supplémentaires en ligne de commande
       peuvent être indiquées dans la variable d'environnement
       <envar>DTRACEFLAGS</envar> pour le programme <command>dtrace</command>.
       Sur Solaris, pour inclure le support de DTrace dans un exécutable 64-bit, ajoutez
       l'option <literal>DTRACEFLAGS="-64"</literal> pour configure. Par
       exemple, en utilisant le compilateur GCC&nbsp;:
       <screen>./configure CC='gcc -m64' --enable-dtrace DTRACEFLAGS='-64' ...
       </screen>
       En utilisant le compilateur de Sun&nbsp;:
       <screen>./configure CC='/opt/SUNWspro/bin/cc -xtarget=native64' --enable-dtrace DTRACEFLAGS='-64' ...
       </screen>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--enable-tap-tests</option></term>
     <listitem>
      <para>
       Active les tests utilisant les outils TAP de Perl. Cela nécessite une
       installation de Perl et de son module <literal>IPC::Run</literal>.
       Voir <xref linkend="regress-tap"/>
       pour plus d'informations.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

  <para>
   Si vous préférez utiliser un compilateur C différent de ceux listés par
   <filename>configure</filename>, positionnez la variable
   d'environnement <envar>CC</envar> pour qu'elle pointe sur le compilateur de
   votre choix.
   Par défaut, <filename>configure</filename> pointe sur
   <filename>gcc</filename> s'il est disponible, sinon il utilise celui par
   défaut de la plateforme (habituellement <filename>cc</filename>).
   De façon similaire, vous pouvez repositionner les options par défaut du
   compilateur à l'aide de la variable <envar>CFLAGS</envar>.
  </para>

  <para>
   Les variables d'environnement peuvent être indiquées sur la ligne de
   commande <filename>configure</filename>, par exemple&nbsp;:
   <screen><userinput>./configure CC=/opt/bin/gcc CFLAGS='-O2 -pipe'</userinput></screen>
    </para>

    <para>
    Voici une liste des variables importantes qui sont configurables de cette
    façon&nbsp;:
    </para>

    <para>
     <variablelist>
      <varlistentry>
       <term><envar>BISON</envar></term>
       <listitem>
        <para>
         programme Bison
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>CC</envar></term>
       <listitem>
        <para>
         compilateur C
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>CFLAGS</envar></term>
       <listitem>
        <para>
         options à passer au compilateur C
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>CLANG</envar></term>
       <listitem>
        <para>
         chemin vers le programme <command>clang</command> utilisé pour
		 l'optimisation inline du code source lors de la compilation avec
		 <literal>--with-llvm</literal>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>CPP</envar></term>
       <listitem>
        <para>
         préprocesseur C
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>CPPFLAGS</envar></term>
       <listitem>
        <para>
         options à passer au préprocesseur C
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>CXX</envar></term>
       <listitem>
        <para>
         compilateur C++
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>CXXFLAGS</envar></term>
       <listitem>
        <para>
         options à passer au compilateur C++
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>DTRACE</envar></term>
       <listitem>
        <para>
         emplacement du programme <command>dtrace</command>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>DTRACEFLAGS</envar></term>
       <listitem>
        <para>
         options à passer au programme <command>dtrace</command>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>FLEX</envar></term>
       <listitem>
        <para>
         programme Flex
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>LDFLAGS</envar></term>
       <listitem>
        <para>
         options à utiliser lors de l'édition des liens des exécutables et des
         bibliothèques partagées
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>LDFLAGS_EX</envar></term>
       <listitem>
        <para>
         options supplémentaires valables uniquement lors de l'édition des
         liens des exécutables
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>LDFLAGS_SL</envar></term>
       <listitem>
        <para>
         options supplémentaires valables uniquement lors de l'édition des
         liens des bibliothèques partagées
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>LLVM_CONFIG</envar></term>
       <listitem>
        <para>
         programme <command>llvm-config</command> à utiliser pour localiser
         l'installation <productname>LLVM</productname>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>MSGFMT</envar></term>
       <listitem>
        <para>
         programme <command>msgfmt</command> pour le support des langues
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>PERL</envar></term>
       <listitem>
        <para>
         programme interpréteur Perl. Il sera utilisé pour déterminer les
         dépendances pour la construction de PL/Perl. La valeur par défaut est
         <command>perl</command>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>PYTHON</envar></term>
       <listitem>
        <para>
         chemin complet vers l'interpréteur Python. Il sera utilisé pour
         déterminer les dépendances pour la construction de PL/Python. De
         plus, si Python 2 ou 3 est spécifié ici (ou implicitement choisi), il
         détermine la variante de PL/Python qui devient disponible.
         Voir <xref linkend="regress-tap"/>
         pour plus d'informations.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>

    <para>
     Si vous préférez utiliser un compilateur C différent de ceux listés par
     <filename>configure</filename>, positionnez la variable
     d'environnement <envar>CC</envar> pour qu'elle pointe sur le compilateur de
     votre choix.
     Par défaut, <filename>configure</filename> pointe sur
     <filename>gcc</filename> s'il est disponible, sinon il utilise celui par
     défaut de la plateforme (habituellement <filename>cc</filename>).
     De façon similaire, vous pouvez repositionner les options par défaut du
     compilateur à l'aide de la variable <envar>CFLAGS</envar>.
    </para>

    <para>
     Les variables d'environnement peuvent être indiquées sur la ligne de
     commande <filename>configure</filename>, par exemple&nbsp;:
<screen><userinput>./configure CC=/opt/bin/gcc CFLAGS='-O2 -pipe'</userinput></screen>
    </para>

    <para>
    Voici une liste des variables importantes qui sont configurables de cette
    façon&nbsp;:
    </para>

    <para>
     <variablelist>
      <varlistentry>
       <term><envar>BISON</envar></term>
       <listitem>
        <para>
         programme Bison
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>CC</envar></term>
       <listitem>
        <para>
         compilateur C
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>CFLAGS</envar></term>
       <listitem>
        <para>
         options à passer au compilateur C
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>CPP</envar></term>
       <listitem>
        <para>
         préprocesseur C
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>CPPFLAGS</envar></term>
       <listitem>
        <para>
         options à passer au préprocesseur C
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>DTRACE</envar></term>
       <listitem>
        <para>
         emplacement du programme <command>dtrace</command>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>DTRACEFLAGS</envar></term>
       <listitem>
        <para>
         options à passer au programme <command>dtrace</command>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>FLEX</envar></term>
       <listitem>
        <para>
         programme Flex
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>LDFLAGS</envar></term>
       <listitem>
        <para>
         options à utiliser lors de l'édition des liens des exécutables et des
         bibliothèques partagées
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>LDFLAGS_EX</envar></term>
       <listitem>
        <para>
         options supplémentaires valables uniquement lors de l'édition des
         liens des exécutables
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>LDFLAGS_SL</envar></term>
       <listitem>
        <para>
         options supplémentaires valables uniquement lors de l'édition des
         liens des bibliothèques partagées
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>MSGFMT</envar></term>
       <listitem>
        <para>
         programme <command>msgfmt</command> pour le support des langues
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>PERL</envar></term>
       <listitem>
        <para>
         chemin complet vers l'interpréteur Perl. Il sera utilisé pour déterminer
         les dépendances pour la construction de PL/Perl.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>PYTHON</envar></term>
       <listitem>
        <para>
         programme interpréteur Python. Il sera utilisé pour
         déterminer les dépendances pour la construction de PL/Python. De
         plus, si Python 2 ou 3 est spécifié ici (ou implicitement choisi), il
         détermine la variante de PL/Python qui devient disponible. Voir
         <xref linkend="plpython-python23"/> pour plus
         d'informations. Si cette variable n'est pas configurée, les suivantes
         sont testées dans cet ordre&nbsp;: <literal>python python3
         python2</literal>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>TCLSH</envar></term>
       <listitem>
        <para>
         programme interpréteur Tcl. Il sera utilisé pour déterminer
         les dépendances pour la construction de PL/Tcl, et il sera substitué
	 dans des scripts Tcl.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>XML2_CONFIG</envar></term>
       <listitem>
        <para>
         programme <command>xml2-config</command> utilisé pour localiser
	 l'installation de libxml.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>

    <para>
     Il est parfois utile d'ajouter des options de compilation à l'ensemble
     choisi par <filename>configure</filename> après coup. Un exemple parlant
     concerne l'option <option>-Werror</option> de
     <application>gcc</application> qui ne peut pas être incluse dans la
     variable <envar>CFLAGS</envar> passée à <filename>configure</filename>,
     car il cassera un grand nombre de tests internes de
     <filename>configure</filename>. Pour ajouter de telles options, incluez-
     les dans la variable d'environnement <envar>COPT</envar> lors de
     l'exécution de <filename>gmake</filename>. Le contenu de
     <envar>COPT</envar> est ajouté aux variables <envar>CFLAGS</envar> et
     <envar>LDFLAGS</envar> configurées par <filename>configure</filename>.
     Par exemple, vous pouvez faire&nbsp;:
<screen>
<userinput>gmake COPT='-Werror'</userinput>
</screen>
     ou
<screen>
<userinput>export COPT='-Werror'</userinput>
<userinput>gmake</userinput>
</screen>
    </para>

    <note>
     <para>
      Lors de l'écriture de code à l'intérieur du serveur, il est recommandé
      d'utiliser les options <option>--enable-cassert</option> (qui active
      un grand nombre de vérifications d'erreur à l'exécution) et
       <option>--enable-debug</option> (qui améliore l'utilité des outils
       de débogage) de configure.
     </para>

     <para>
      Si vous utilisez GCC, il est préférable de construire avec un niveau
      d'optimisation d'au moins <option>-O1</option> parce que désactiver
      toute optimisation (<option>-O0</option>) désactive aussi certains
      messages importants du compilateur (comme l'utilisation de variables
      non initialisées). Néanmoins, les niveaux d'optimisations peuvent
      compliquer le débuggage parce que faire du pas-à-pas sur le code
      compilé ne correspondra pas forcément aux lignes de code une-à-une.
      Si vous avez du mal à débugger du code optimisé, recompilez les fichiers
      intéressants avec <option>-O0</option>. Une façon simple de le faire est
      de passer une option à <application>make</application>:
      <command>make PROFILE=-O0 file.o</command>.
     </para>

     <para>
      Les variables d'environnement <envar>COPT</envar> et
      <envar>PROFILE</envar> sont gérées de façon identique par les fichiers
      makefile de <productname>PostgreSQL</productname>. Laquelle utiliser est
      une affaire de préférence, mais un usage commun parmi les développeurs
      est d'utiliser <envar>PROFILE</envar> pour les ajustements inhabituels
      alors que <envar>COPT</envar> servirait aux variables à configurer à
      chaque fois.
     </para>
    </note>
   </step>

  <step id="build">
   <title>Compilation</title>

   <para>
    Pour démarrer la compilation, saisissez soit
<screen><userinput>make</userinput>
<userinput>make all</userinput></screen>
    (Rappelez-vous d'utiliser <acronym>GNU</acronym>
    <application>make</application>). La compilation prendra quelques minutes,
    selon votre matériel. La dernière ligne affichée devrait être
<screen>All of PostgreSQL successfully made. Ready to install.</screen>
   </para>

   <para>
    Si vous voulez lancer la construction à partir d'un autre fichier
    makefile, vous devez configurer <varname>MAKELEVEL</varname> ou
    l'initialiser à zéro, par exemple ainsi&nbsp;:
<programlisting>
build-postgresql:
        $(MAKE) -C postgresql MAKELEVEL=0 all
</programlisting>
    Ne pas le faire amène des messages d'erreur étranges, typiquement sur des
    fichiers d'en-tête manquants.
   </para>

  <para>
   Si vous voulez construire tout ce qui peut être construit, ceci incluant la
   documentation (HTML et pages man) et les modules supplémentaires
   (<filename>contrib</filename>), saisissez à la place&nbsp;:
<screen>
<userinput>make world</userinput>
   </screen>
   La dernière ligne affichée doit être&nbsp;:
   <screen>
PostgreSQL, contrib, and documentation successfully made. Ready to install.
   </screen>
  </para>
 </step>

 <step>
  <title>Tests de régression</title>

  <indexterm>
   <primary>tests de régression</primary>
  </indexterm>

  <para>
   Si vous souhaitez tester le serveur nouvellement compilé avant de
   l'installer, vous pouvez exécuter les tests de régression à ce moment. Les
   tests de régression sont une suite de tests qui vérifient que
   <productname>PostgreSQL</productname> fonctionne sur votre machine tel que les
   développeurs l'espèrent. Saisissez
   <screen><userinput>make check</userinput></screen>
    (cela ne fonctionne pas en tant que root&nbsp;; faites-le en tant
    qu'utilisateur sans droits).
    Le <xref
    linkend="regress"/> contient
    des détails sur l'interprétation des résultats de ces tests. Vous pouvez
    les répéter autant de fois que vous le voulez en utilisant la même
    commande.
   </para>
  </step>

  <step id="install">
   <title>Installer les fichiers</title>

   <note>
    <para>
      Si vous mettez à jour une version existante, assurez-vous d'avoir bien lu
     <xref linkend="upgrading"/>
     qui donne les instructions sur la mise à jour d'un
     cluster.
    </para>
   </note>

   <para>
    Pour installer <productname>PostgreSQL</productname>, saisissez
<screen><userinput>make install</userinput></screen>
    Cela installera les fichiers dans les répertoires spécifiés dans
    l'<xref linkend="configure"/>. Assurez-vous d'avoir les droits appropriés
    pour écrire dans ces répertoires. Normalement, vous avez besoin d'être
    superutilisateur pour cette étape. Une alternative consiste à créer les
    répertoires cibles à l'avance et à leur donner les droits appropriés.
   </para>

   <para>
    Pour installer la documentation (HTML et pages man), saisissez&nbsp;:
<screen>
<userinput>make install-docs</userinput>
   </screen>
  </para>

  <para>
   Si vous construisez tout, saisissez ceci à la place&nbsp;:
   <screen>
<userinput>make install-world</userinput>
   </screen>
   Cela installe aussi la documentation.
  </para>

  <para>
   Vous pouvez utiliser <literal>make install-strip</literal> en lieu et
   place de <literal>make install</literal> pour dépouiller l'installation
   des exécutables et des bibliothèques. Cela économise un peu d'espace disque.
   Si vous avez effectué la compilation en mode de débogage, ce dépouillage
   l'enlèvera, donc ce n'est à faire seulement si ce mode n'est plus
   nécessaire. <literal>install-strip</literal> essaie d'être raisonnable
   en sauvegardant de l'espace disque mais il n'a pas une connaissance
   parfaite de la façon de dépouiller un exécutable de tous les octets
   inutiles. Ainsi, si vous voulez sauvegarder le maximum d'espace disque, vous
   devrez faire le travail à la main.
  </para>

  <para>
   L'installation standard fournit seulement les fichiers en-têtes nécessaires
   pour le développement d'applications clientes ainsi que pour le développement
   de programmes côté serveur comme des fonctions personnelles ou des
   types de données écrits en C (avant <productname>PostgreSQL</productname> 8.0, une
   commande <literal>make install-all-headers</literal> séparée était nécessaire pour
   ce dernier point, mais cette étape a été intégrée à l'installation standard).
  </para>

  <formalpara>
   <title>Installation du client uniquement&nbsp;:</title>
   <para>
    Si vous voulez uniquement installer les applications clientes et les
    bibliothèques d'interface, alors vous pouvez utilisez ces commandes&nbsp;:
    <screen><userinput>make -C src/bin install</userinput>
<userinput>make -C src/include install</userinput>
<userinput>make -C src/interfaces install</userinput>
<userinput>make -C doc install</userinput></screen>
    <filename>src/bin</filename> comprend quelques exécutables utilisés seulement
    par le serveur mais ils sont petits.
    </para>
   </formalpara>
  </step>
  </procedure>

  <formalpara>
   <title>Désinstallation&nbsp;:</title>
   <para>
    Pour désinstaller, utilisez la commande <command>make
    uninstall</command>. Cependant, cela ne supprimera pas les répertoires créés.
   </para>
  </formalpara>

  <formalpara>
   <title>Nettoyage&nbsp;:</title>

   <para>
    Après l'installation, vous pouvez libérer de l'espace en supprimant les
    fichiers issus de la compilation des répertoires sources à l'aide de la
    commande <command>make clean</command>. Cela conservera les fichiers créés par
    la commande <command>configure</command>, ainsi vous pourrez tout recompiler
    ultérieurement avec <command>make</command>. Pour remettre l'arborescence
    source dans l'état initial, utilisez <command>make distclean</command>.
    Si vous voulez effectuer la compilation pour diverses plateformes à partir
    des mêmes sources vous devrez d'abord refaire la configuration à chaque
    fois (autrement, utilisez un répertoire de construction séparé pour chaque
    plateforme, de façon à ce que le répertoire des sources reste inchangé).
   </para>
  </formalpara>

  <para>
   Si vous avez compilé et que vous vous êtes rendu compte que les options de
   <command>configure</command> sont fausses ou si vous changez quoi que ce soit que
   <command>configure</command> prenne en compte (par exemple, la mise à jour
   d'applications), alors faire un <command>make distclean</command> avant de
   reconfigurer et recompiler est une bonne idée. Sans ça, vos changements dans
   la configuration ne seront pas répercutés partout où il faut.
  </para>
 </sect1>

 <sect1 id="install-post">
  <title>Initialisation post-installation</title>

  <sect2>
   <title>Bibliothèques partagées</title>

   <indexterm>
    <primary>bibliothèque partagée</primary>
   </indexterm>

   <para>
    Sur certains systèmes qui utilisent les bibliothèques partagées (ce que font
    de nombreux systèmes), vous avez besoin de leurs spécifier comment trouver
    les nouvelles bibliothèques partagées. Les systèmes sur lesquels ce
    <emphasis>n'est</emphasis> pas nécessaire comprennent <systemitem
    class="osname">FreeBSD</systemitem>,
    <systemitem class="osname">HP-UX</systemitem>,
    <systemitem class="osname">Linux</systemitem>,
    <systemitem class="osname">NetBSD</systemitem>, <systemitem
    class="osname">OpenBSD</systemitem> et
    <systemitem class="osname">Solaris</systemitem>.
   </para>

   <para>
    La méthode pour le faire varie selon la plateforme, mais la méthode la plus
    répandue consiste à positionner des variables d'environnement comme
    <envar>LD_LIBRARY_PATH</envar>&nbsp;: avec les shells Bourne
    (<command>sh</command>, <command>ksh</command>, <command>bash</command>, <command>zsh</command>)&nbsp;:
<programlisting>LD_LIBRARY_PATH=/usr/local/pgsql/lib
export LD_LIBRARY_PATH</programlisting>
    ou en <command>csh</command> ou <command>tcsh</command>&nbsp;:
<programlisting>setenv LD_LIBRARY_PATH /usr/local/pgsql/lib</programlisting>
    Remplacez <literal>/usr/local/pgsql/lib</literal> par la valeur donnée à
    <option><literal>--libdir</literal></option> dans l'<xref linkend="configure"/>.
    Vous pouvez mettre ces commandes dans un script de démarrage tel
    que <filename>/etc/profile</filename> ou <filename>~/.bash_profile</filename>. Certaines
    informations pertinentes au sujet de mises en garde associées à cette
    méthode peuvent être trouvées sur
    <ulink url="http://xahlee.info/UnixResource_dir/_/ldpath.html"></ulink>.
   </para>

   <para>
    Sur certains systèmes, il peut être préférable de renseigner la
    variable d'environnement
    <envar>LD_RUN_PATH</envar> <emphasis>avant</emphasis>
    la compilation.
   </para>

   <para>
    Avec <systemitem class="osname">Cygwin</systemitem>, placez le répertoire
    des bibliothèques dans la variable <envar>PATH</envar> ou déplacez les
    fichiers <filename>.dll</filename> dans le répertoire
    <filename>bin</filename>.
   </para>

   <para>
    En cas de doute, référez-vous aux pages de man de votre système (peut-être
    <command>ld.so</command> ou <command>rld</command>). Si vous avez
    ultérieurement un message tel que
<screen>psql: error in loading shared libraries
libpq.so.2.1: cannot open shared object file: No such file or directory</screen>
    alors cette étape est vraiment nécessaire. Faites-y attention.
   </para>

   <para>
    <indexterm>
     <primary>ldconfig</primary>
    </indexterm>
    Si votre système d'exploitation est
    <systemitem class="osname">Linux</systemitem>
    et que vous avez les accès de superutilisateur, vous pouvez exécuter&nbsp;:
<programlisting>/sbin/ldconfig /usr/local/pgsql/lib</programlisting>
    (ou le répertoire équivalent) après l'installation pour permettre à
    l'éditeur de liens de trouver les bibliothèques partagées plus rapidement.
    Référez-vous aux pages man portant sur <command>ldconfig</command> pour plus
    d'informations. Pour les systèmes d'exploitation <systemitem
    class="osname">FreeBSD</systemitem>, <systemitem
    class="osname">NetBSD</systemitem> et <systemitem class="osname">OpenBSD</systemitem>,
    la commande est&nbsp;:
<programlisting>/sbin/ldconfig -m /usr/local/pgsql/lib</programlisting>
    Les autres systèmes d'exploitation ne sont pas connus pour avoir de
    commande équivalente.
   </para>
  </sect2>

  <sect2>
   <title>Variables d'environnement</title>

   <indexterm>
    <primary><envar>PATH</envar></primary>
   </indexterm>

   <para>
    Si l'installation a été réalisée dans
    <filename>/usr/local/pgsql</filename> ou à un autre endroit qui n'est pas dans les
    répertoires contenant les exécutables par défaut, vous devez ajouter
    <filename>/usr/local/pgsql/bin</filename> (ou le répertoire fourni à
    <option><literal>--bindir</literal></option> au moment de l'<xref linkend="configure"/>)
    dans votre <envar>PATH</envar>. Techniquement, ce n'est pas une obligation mais
    cela rendra l'utilisation de <productname>PostgreSQL</productname> plus confortable.
   </para>

   <para>
    Pour ce faire, ajoutez ce qui suit dans le fichier d'initialisation de
    votre shell, par exemple
    <filename>~/.bash_profile</filename> (ou <filename>/etc/profile</filename>, si vous voulez
    que tous les utilisateurs l'aient)&nbsp;:
<programlisting>PATH=/usr/local/pgsql/bin:$PATH
export PATH</programlisting>
    Si vous utilisez le <command>csh</command> ou le <command>tcsh</command>, alors utilisez
    la commande&nbsp;:
<programlisting>set path = ( /usr/local/pgsql/bin $path )</programlisting>
   </para>

   <para>
    <indexterm>
     <primary><envar>MANPATH</envar></primary>
    </indexterm>
    Pour que votre système trouve la documentation <application>man</application>,
    il vous faut ajouter des lignes telles que celles qui suivent à votre
    fichier d'initialisation du shell, à moins que vous installiez ces pages
    dans un répertoire où elles sont mises normalement&nbsp;:
<programlisting>MANPATH=/usr/local/pgsql/share/man:$MANPATH
export MANPATH</programlisting>
   </para>

   <para>
    Les variables d'environnement <envar>PGHOST</envar> et <envar>PGPORT</envar>
    indiquent aux applications clientes l'hôte et le port du serveur de base.
    Elles surchargent les valeurs utilisées lors de la compilation. Si vous
    exécutez des applications clientes à distance, alors c'est plus pratique si
    tous les utilisateurs peuvent paramétrer <envar>PGHOST</envar>. Ce n'est pas une
    obligation, cependant, la configuration peut être communiquée via les
    options de lignes de commande à la plupart des programmes clients.
   </para>
  </sect2>
 </sect1>

 <sect1 id="supported-platforms">
  <title>Plateformes supportées</title>

  <para>
   Une plateforme (c'est-à-dire une combinaison d'un processeur et d'un système
   d'exploitation) est considérée supportée par la communauté de développeur de
   <productname>PostgreSQL</productname> si le code permet le fonctionnement
   sur cette plateforme et que la construction et les tests de régression
   ont été récemment vérifiés sur cette plateforme. Actuellement, la plupart
   des tests de compatibilité de plateforme se font automatiquement par des
   machines de tests dans la <ulink
   url="https://buildfarm.postgresql.org/">ferme de construction de
   PostgreSQL</ulink>. Si vous êtes intéressés par l'utilisation de
   <productname>PostgreSQL</productname> sur une plateforme qui n'est pas
   représentée dans la ferme de construction, mais pour laquelle le code
   fonctionne ou peut fonctionner, nous vous suggérons fortement de construire
   une machine qui sera membre de la ferme pour que la compatibilité puisse
   être assurée dans la durée.
  </para>

  <para>
   En général, <productname>PostgreSQL</productname> doit fonctionner sur
   les architectures processeur suivantes&nbsp;: x86, x86_64, IA64, PowerPC,
   PowerPC 64, S/390, S/390x, Sparc, Sparc 64, ARM, MIPS, MIPSEL
   et PA-RISC. Un support du code existe pour M68K, M32R et VAX mais ces
   architectures n'ont pas été testées récemment à notre connaissance. Il est
   souvent possible de construire <productname>PostgreSQL</productname> sur
   un type de processeur non supporté en précisant
   <option>--disable-spinlocks</option>. Cependant, les performances en
   souffriront.
  </para>

  <para>
   <productname>PostgreSQL</productname> doit fonctionner sur les systèmes
   d'exploitation suivants&nbsp;: Linux (toutes les distributions récentes),
   Windows (Win2000 SP4 et ultérieures), FreeBSD, OpenBSD, NetBSD, macOS,
   AIX, HP/UX et Solaris. D'autres systèmes style
   Unix peuvent aussi fonctionner mais n'ont pas été récemment testés. Dans
   la plupart des cas, toutes les architectures processeurs supportées par
   un système d'exploitation donné fonctionneront. Cherchez dans le
   répertoire <xref linkend="installation-platform-notes"/> ci-dessous pour
   voir s'il y a des informations spécifiques à votre système d'exploitation,
   tout particulièrement dans le cas d'un vieux système.
  </para>

  <para>
   Si vous avez des problèmes d'installation sur une plateforme qui est connue
   comme étant supportée d'après les récents résultats de la ferme de
   construction, merci de rapporter cette information à
   <email>pgsql-bugs@lists.postgresql.org</email>. Si vous êtes intéressé pour porter
   <productname>PostgreSQL</productname> sur une nouvelle plateforme,
   <email>pgsql-hackers@lists.postgresql.org</email> est l'endroit approprié pour en
   discuter.
  </para>
 </sect1>

 <sect1 id="installation-platform-notes">
  <title>Notes spécifiques à des plateformes</title>

  <para>
   Cette section documente des problèmes spécifiques additionnels liés à des
   plateformes, en ce qui concerne l'installation et le paramétrage de PostgreSQL.
   Assurez-vous de lire aussi les instructions d'installation, et en particulier
   <xref linkend="install-requirements"/>. Par ailleurs, consultez
   <xref linkend="regress"/> à propos de l'interprétation
   des tests de régression.
  </para>

  <para>
   Les plateformes qui ne sont pas traitées ici n'ont pas de problèmes d'installation
   spécifiques connus.
 </para>

  <sect2 id="installation-notes-aix">
   <title>AIX</title>

   <indexterm zone="installation-notes-aix">
    <primary>AIX</primary>
    <secondary>installation sur</secondary>
   </indexterm>

   <para>
    PostgreSQL fonctionne sur AIX, mais les versions AIX avant la 6.1 ont
    différents problèmes et ne sont donc pas recommendés. Vous pouvez utiliser
    soit GCC soit le compilateur natif IBM <command>xlc</command>.
   </para>

   <sect3>
    <title>Gestion de la mémoire</title>
    <!-- https://archives.postgresql.org/message-id/603bgqmpl9.fsf@dba2.int.libertyrms.com -->

    <para>
     AIX est particulier dans la façon dont il gère la mémoire. Vous pouvez avoir
     un serveur avec des gigaoctets de mémoire libre, mais malgré tout
     avoir des erreurs de mémoire insuffisante ou des erreurs d'espace
     d'adressage quand vous lancez des applications. Un exemple est
     le chargement d'extensions qui échoue avec des erreurs inhabituelles.
     Par exemple, en exécutant en tant que propriétaire de l'installation
     PostgreSQL&nbsp;:
     <screen>
=# CREATE EXTENSION plperl;
ERROR:  could not load library "/opt/dbs/pgsql/lib/plperl.so": A memory address is not in the address space for the process.
     </screen>
     En l'exécutant en tant que non-propriétaire, mais dans le groupe propriétaire de
     l'installation PostgreSQL&nbsp;:
     <screen>
=# CREATE EXTENSION plperl;
ERROR:  could not load library "/opt/dbs/pgsql/lib/plperl.so": Bad address
     </screen>
     On a un autre exemple avec les erreurs 'out of memory' dans les traces
     du serveur PostgreSQL, avec toute allocation de mémoire proche ou supérieure
     256&nbsp;Mo qui échoue.
    </para>

    <para>
     La cause générale de ces problèmes est le nombre de bits et le modèle mémoire
     utilisé par le processus serveur. Par défaut, tous les binaires compilés sur
     AIX sont 32-bits. Cela ne dépend pas du matériel ou du noyau en cours
     d'utilisation. Ces processus 32-bits sont limités à 4&nbsp;Go de mémoire
     présentée en segments de 256&nbsp;Mo utilisant un parmi quelques modèles.
     Le modèle par défaut permet moins de 256&nbsp;Mo dans le tas, comme il partage
     un seul segment avec la pile.
    </para>

    <para>
     Dans le cas de l'exemple <literal>plperl</literal> ci-dessus, vérifiez
     votre umask et les droits des binaires de l'installation PostgreSQL.
     Les binaires de l'exemple étaient 32-bits et installés en mode 750 au lieu
     de 755. En raison des droits, seul le propriétaire ou un membre
     du groupe propriétaire peut charger la bibliothèque. Puisqu'il n'est pas
     lisible par tout le mode, le chargeur place l'objet dans le tas du
     processus au lieu d'un segment de mémoire de bibliothèque où il aurait
     été sinon placé.
    </para>

    <para>
     La solution <quote>idéale</quote> pour ceci est d'utiliser une version
     64-bits de PostgreSQL, mais ce n'est pas toujours pratique, parce
     que les systèmes équipés de processeurs 32-bits peuvent compiler mais ne
     peuvent pas exécuter de binaires 64-bits.
    </para>

    <para>
     Si un binaire 32-bits est souhaité, positionnez <symbol>LDR_CNTRL</symbol>
     à <literal>MAXDATA=0x<replaceable>n</replaceable>0000000</literal>,
     où 1&lt;=n &lt;= 8 avant de démarrer le serveur PostgreSQL, et essayez
     différentes valeurs et paramètres de <filename>postgresql.conf</filename>
     pour trouver une configuration qui fonctionne de façon satisfaisante.
     Cette utilisation de <symbol>LDR_CNTRL</symbol> notifie à AIX que vous voulez
     que le serveur réserve <symbol>MAXDATA</symbol> octets pour le tas, alloués
     en segments de 256&nbsp;Mo. Quand vous avez trouvé une configuration utilisable,
     <command>ldedit</command> peut être utilisé pour modifier les binaires pour
     qu'ils utilisent par défaut la taille de tas désirée. PostgreSQL peut aussi
     être recompilé, en passant à <literal>configure
      LDFLAGS="-Wl,-bmaxdata:0x<replaceable>n</replaceable>0000000"</literal>
     pour obtenir le même résultat.
    </para>

    <para>
     Pour une compilation 64-bits, positionnez <envar>OBJECT_MODE</envar> à
     64 et passez <literal>CC="gcc -maix64"</literal> et
     <literal>LDFLAGS="-Wl,-bbigtoc"</literal> à <command>configure</command>.
     (Les options pour <command>xlc</command> pourraient différer.) Si vous omettez
     les exports de <envar>OBJECT_MODE</envar>, votre compilation échouera avec
     des erreurs de l'éditeur de liens. Lorsque <envar>OBJECT_MODE</envar> est
     positionné, il indique aux outils de compilation d'AIX comme
     <command>ar</command>, <command>as</command> et
     <command>ld</command> quel types de fichiers à manipuler par défaut.
    </para>

    <para>
     Par défaut, de la surallocation d'espace de pagination
     peut se produire. Bien que nous ne l'ayons jamais constaté,
     AIX tuera des processus quand il se trouvera à court de mémoire et
     que la zone surallouée est accédée. Le comportement le plus proche de
     ceci que nous ayons constaté est l'échec de fork parce que le système
     avait décidé qu'il n'y avait plus de suffisamment de mémoire disponible
     pour un nouveau processus. Comme beaucoup d'autres parties d'AIX,
     la méthode d'allocation de l'espace de pagination et le « out-of-memory
     kill » sont configurables soit pour le système soit pour un processus,
     si cela devient un problème.
    </para>

    <bibliography>
     <title>Références et ressources</title>

     <biblioentry>
      <biblioset relation="article">
       <title><ulink url="http://publib.boulder.ibm.com/infocenter/pseries/topic/com.ibm.aix.doc/aixprggd/genprogc/lrg_prg_support.htm">Large Program Support</ulink></title>
      </biblioset>
      <biblioset relation="book">
       <title>AIX Documentation: General Programming Concepts: Writing and Debugging Programs</title>
      </biblioset>
     </biblioentry>

     <biblioentry>
      <biblioset relation="article">
       <title><ulink url="http://publib.boulder.ibm.com/infocenter/pseries/topic/com.ibm.aix.doc/aixprggd/genprogc/address_space.htm">Program Address Space Overview</ulink></title>
      </biblioset>
      <biblioset relation="book">
       <title>AIX Documentation: General Programming Concepts: Writing and Debugging Programs</title>
      </biblioset>
     </biblioentry>

     <biblioentry>
      <biblioset relation="article">
       <title><ulink url="http://publib.boulder.ibm.com/infocenter/pseries/v5r3/topic/com.ibm.aix.doc/aixbman/prftungd/resmgmt2.htm">Performance Overview of the Virtual Memory Manager (VMM)</ulink></title>
      </biblioset>
      <biblioset relation="book">
       <title>AIX Documentation: Performance Management Guide</title>
      </biblioset>
     </biblioentry>

     <biblioentry>
      <biblioset relation="article">
       <title><ulink url="http://publib.boulder.ibm.com/infocenter/pseries/v5r3/topic/com.ibm.aix.doc/aixbman/prftungd/memperf7.htm">Page Space Allocation</ulink></title>
      </biblioset>
      <biblioset relation="book">
       <title>AIX Documentation: Performance Management Guide</title>
      </biblioset>
     </biblioentry>

     <biblioentry>
      <biblioset relation="article">
       <title><ulink url="http://publib.boulder.ibm.com/infocenter/pseries/v5r3/topic/com.ibm.aix.doc/aixbman/prftungd/memperf6.htm">Paging-space thresholds tuning</ulink></title>
      </biblioset>
      <biblioset relation="book">
       <title>AIX Documentation: Performance Management Guide</title>
      </biblioset>
     </biblioentry>

     <biblioentry>
      <title><ulink url="http://www.redbooks.ibm.com/abstracts/sg245674.html?Open">Developing and Porting C and C++ Applications on AIX</ulink></title>
      <publisher>
       <publishername>IBM Redbook</publishername>
      </publisher>
     </biblioentry>
    </bibliography>
   </sect3>
  </sect2>

  <sect2 id="installation-notes-cygwin">
   <title>Cygwin</title>

   <indexterm zone="installation-notes-cygwin">
    <primary>Cygwin</primary>
    <secondary>installation sur</secondary>
   </indexterm>

   <para>
    PostgreSQL peut être construit avec Cygwin, un environnement similaire à
    Linux pour Windows, mais cette méthode est inférieure à la version native
    Windows (voir <xref linkend="install-windows"/>) et
    faire tourner un serveur sur Cygwin n'est plus recommandé.
   </para>

   <para>
    Quand vous compilez à partir des sources, suivant la procédure style Unix
    d'installation (c'est-à-dire <literal>./configure;
     make</literal>; etc...), notez les différences suivantes spécifiques à
    Cygwin&nbsp;:

    <itemizedlist>
     <listitem>
      <para>
       Positionnez le path pour utiliser le répertoire binaire Cygwin avant
       celui des utilitaires Windows. Cela permettra d'éviter des problèmes avec
       la compilation.
      </para>
     </listitem>

     <listitem>
      <para>
       La  commande <command>adduser</command> n'est pas supportée&nbsp;; utilisez
       les outils appropriés de gestion d'utilisateurs sous Windows NT, 2000 ou XP.
       Sinon, sautez cette étape.
      </para>
     </listitem>

     <listitem>
      <para>
       La commande <command>su</command> n'est pas supportée&nbsp;; utilisez ssh
       pour simuler la commande <command>su</command> sous Windows NT, 2000 ou
       XP. Sinon, sautez cette étape.
      </para>
     </listitem>

     <listitem>
      <para>
       OpenSSL n'est pas supporté.
      </para>
     </listitem>

     <listitem>
      <para>
       Démarrez <command>cygserver</command>  pour le support de la mémoire
       partagée.
       Pour cela, entrez la commande <literal>/usr/sbin/cygserver
        &amp;</literal>. Ce programme doit fonctionner à chaque fois que
       vous démarrez le serveur PostgreSQL ou que vous initialisez un cluster
       de bases de données (<command>initdb</command>). La configuration par
       défaut de <command>cygserver</command> pourrait nécessiter des changements
       (par exemple, augmenter <symbol>SEMMNS</symbol>) pour éviter à PostgreSQL
       d'échouer en raison d'un manque de ressources système.
      </para>
     </listitem>

     <listitem>
      <para>
       Il se peut que la construction échoue sur certains système quand
       une locale autre que C est utilisée. Pour résoudre ce problème,
       positionnez la locale à C avec la commande
       <command>export LANG=C.utf8</command> avant de lancer la construction, et ensuite, une fois
       que vous avez installé PostgreSQL, repositionnez-là à son ancienne valeur.
      </para>
     </listitem>

     <listitem>
      <para>
       Les tests de régression en parallèle (<literal>make check</literal>)
       peuvent générer des échecs de tests de régression aléatoires en raison
       d'un dépassement de capacité de la file d'attente de <function>listen()</function>
       qui cause des erreurs de connexion refusée ou des blocages. Vous pouvez
       limiter le nombre de connexions en utilisant la variable de make
       <varname>MAX_CONNECTIONS</varname> comme ceci&nbsp;:
       <programlisting>
make MAX_CONNECTIONS=5 check
       </programlisting>
       (Sur certains systèmes, vous pouvez avoir jusqu'à 10 connexions
       simultanées).
      </para>
     </listitem>
    </itemizedlist>
   </para>

   <para>
    Il est possible d'installer <command>cygserver</command> et le serveur
    PostgreSQL en tant que services Windows NT. Pour plus d'informations sur
    comment le faire, veuillez vous référer au document <filename>README</filename>
    inclus avec le package binaire PostgreSQL sur Cygwin.
    Il est installé dans le répertoire <filename>/usr/share/doc/Cygwin</filename>.
   </para>
  </sect2>

  <sect2 id="installation-notes-macos">
   <title>macOS</title>

   <indexterm zone="installation-notes-macos">
    <primary>macOS</primary>
    <secondary>installation sur</secondary>
   </indexterm>

   <para>
    Sur les versions récentes de <productname>macOS</productname>, il est
    nécessaire d'embarquer le chemin <quote>sysroot</quote> dans les options
    d'inclusion utilisées pour trouver les fichiers d'en-tête systèmes. Ceci a
    pour résultat la génération d'un script
    <application>configure</application> variant suivant la version du SDK
    utilisée durant <application>configure</application>. Ceci ne devrait pas
    poser de problèmes dans les scénarios simples mais si vous essayez de
    faire quelque chose comme la construction d'une extension sur une machine
    différente que celle sur laquelle le code serveur a été construit, vous
    pourriez avoir besoin de forcer l'utilisation d'un chemin sysroot
    différent. Pour cela, configurez <varname>PG_SYSROOT</varname> ainsi par
    exemple
<programlisting>
make PG_SYSROOT=<replaceable>/desired/path</replaceable> all
</programlisting>
    Pour trouver le chemin approprié sur votre machine, lancez
<programlisting>
xcodebuild -version -sdk macosx Path
</programlisting>
    Notez que construire une extension en utilisant une version sysroot
    différente que celle utilisée pour construire le serveur n'est pas
    vraiment recommandée&nbsp;; dans le pire des cas, cela impliquerait des
    incohérences sur l'ABI difficiles à débugger.
   </para>

   <para>
    Vous pouvez aussi sélectionner un chemin sysroot différent de celui par
    défaut lors du configure en indiquant <varname>PG_SYSROOT</varname> à
    <application>configure</application>&nbsp;:
<programlisting>
./configure ... PG_SYSROOT=<replaceable>/desired/path</replaceable>
</programlisting>
   </para>

   <para>
    La fonctionnalité <quote>System Integrity Protection</quote> (SIP) de
    <productname>macOS</productname> casse <literal>make check</literal> parce
    qu'elle empêche de passer la configuration nécessaire de
    <literal>DYLD_LIBRARY_PATH</literal> vers les exécutables en cours de
    tests. Vous pouvez contourner cela en exécutant <literal>make
    install</literal> avant <literal>make check</literal>. Ceci étant dit, la
    plupart des développeurs Postgres désactivent SIP.
   </para>
  </sect2>

  <sect2 id="installation-notes-mingw">
   <title>MinGW/Windows Natif</title>

   <indexterm zone="installation-notes-mingw">
    <primary>MinGW</primary>
    <secondary>installation sur</secondary>
   </indexterm>

   <para>
    PostgreSQL pour Windows peut être compilé en utilisant MinGW, un environnement
    de compilation similaire à celui disponible sous Unix pour les systèmes d'exploitation
    Microsoft, ou en utilisant la suite de compilation
    <productname>Visual C++</productname> de Microsoft.
    La variante de compilation MinGW utilise le système de compilation normal
    décrit dans ce chapitre&nbsp;; la compilation via Visual C++ fonctionne de
    façon totalement différente et est décrite dans <xref linkend="install-windows"/>.
   </para>

   <para>
    Le port natif Windows requiert une version 32 ou 64 bits de Windows 2000 ou ultérieurs.
    Les systèmes d'exploitation antérieurs n'ont pas l'infrastructure
    nécessaire (mais Cygwin peut être utilisé pour ceux-ci). MinGW, le système
    de compilation similaire à Unix, et MSYS, une suite d'outils Unix nécessaires
    pour exécuter des scripts shell tels que <command>configure</command>, peuvent
    être téléchargés à partir de <ulink url="http://www.mingw.org/"></ulink>. Aucun
    de ces outils n'est nécessaire pour exécuter les binaires générés&nbsp;;
    ils ne sont nécessaires que pour créer les binaires.
   </para>

   <para>
    Pour construire les binaires 64 bits avec MinGW, installez l'ensemble d'outils 64 bits à
    partir de <ulink url="https://mingw-w64.org/"></ulink>, ajoutez le répertoire des binaires de MinGW dans
    la variable d'environnement <envar>PATH</envar>, et lancez la commande
    <command>configure</command> avec l'option
    <command>--host=x86_64-w64-mingw32</command>.
   </para>

   <para>
    Après que vous ayez tout installé, il vous est conseillé de lancer
    <application>psql</application> dans <command>CMD.EXE</command>, car
    la console MSYS a des problèmes de tampons.
   </para>

   <sect3 id="windows-crash-dumps">
    <title>Récupérer des dumps suite aux plantages sous Windows</title>

    <para>
     Si PostgreSQL sous Windows plante, il peut générer des
     <productname>minidumps</productname> qui peuvent être utilisés pour dépister la cause du plantage&nbsp;;
     ils sont semblables aux core dumps d'Unix. Vous pouvez lire ces dumps avec
     <productname>Windows Debugger Tools</productname> ou avec
     <productname>Visual Studio</productname>. Pour permettre la génération des dumps sous Windows, créez un
     sous-répertoire nommé <filename>crashdumps</filename>
     dans le répertoire des données du cluster. Ainsi les dumps seront écrits dans ce répertoire
     avec un nom unique généré à partir de l'identifiant du processus planté et du moment du plantage.
    </para>
   </sect3>
  </sect2>

  <sect2 id="installation-notes-solaris">
   <title>Solaris</title>

   <indexterm zone="installation-notes-solaris">
    <primary>Solaris</primary>
    <secondary>installation sur</secondary>
   </indexterm>

   <para>
    PostgreSQL est bien supporté sous Solaris. Plus le système d'exploitation
    est à jour, moins de problèmes vous aurez.
   </para>

   <sect3>
    <title>Outils requis</title>

    <para>
     Vous pouvez compiler soit avec GCC, soit avec le compilateur de Sun.
     Pour une meilleure optimisation du code, le compilateur de Sun est
     fortement recommandé sur l'architecture SPARC. Si vous utilisez le compilateur de Sun,
     attention à ne pas sélectionner <filename>/usr/ucb/cc</filename>&nbsp;;
     utilisez <filename>/opt/SUNWspro/bin/cc</filename>.
    </para>

    <para>
     Vous pouvez télécharger Sun Studio sur <ulink
     url="https://www.oracle.com/technetwork/server-storage/solarisstudio/downloads/"></ulink>.
     De nombreux outils GNU sont intégrés dans Solaris 10, ou sont présents
     sur le Solaris companion CD. Si vous avez besoin des packages pour des
     versions plus anciennes de Solaris, vous pouvez trouver ces outils sur
     <ulink url="http://www.sunfreeware.com"></ulink>. Si vous préférez les
     sources, allez sur <ulink
     url="https://www.gnu.org/order/ftp.html"></ulink>.
    </para>
   </sect3>

   <sect3>
    <title>configure se plaint d'un programme de test en échec</title>

    <para>
     Si <command>configure</command> se plaint d'un programme de test en échec,
     c'est probablement un cas de l'éditeur de lien à l'exécution qui ne trouve
     pas une bibliothèque, probablement libz, libreadline ou une autre bibliothèque
     non standard telle que libssl. Pour l'amener au bon endroit, positionnez
     la variable d'environnement <envar>LDFLAGS</envar> sur la ligne de commande
     de <command>configure</command>, par exemple,
     <programlisting>
configure ... LDFLAGS="-R /usr/sfw/lib:/opt/sfw/lib:/usr/local/lib"
     </programlisting>
     Voir la man page de
     <citerefentry><refentrytitle>ld</refentrytitle><manvolnum>1</manvolnum></citerefentry>
     pour plus d'informations.
    </para>
   </sect3>

   <sect3>
    <title>Compiler pour des performances optimales</title>

    <para>
     Sur l'architecture SPARC, Sun Studio est fortement recommandé pour
     la compilation. Essayez d'utiliser l'option d'optimisation
     <option>-xO5</option> pour générer des binaires sensiblement
     plus rapides. N'utilisez pas d'options qui modifient le comportement
     des opérations à virgule flottante et le traitement de
     <varname>errno</varname> (par exemple, <option>-fast</option>).
    </para>

    <para>
     Si vous n'avez pas de raison d'utiliser des binaires 64 bits sur SPARC,
     préférez la version 32 bits. Les opérations et
     les binaires 64 bits sont plus lents que les variantes 32 bits. D'un autre
     côté, le code 32 bits sur un processeur de la famille AMD64 n'est pas natif,
     donc le code 32 bits est significativement plus lent sur cette
     famille de processeurs.
    </para>
   </sect3>

   <sect3>
    <title>Utiliser DTrace pour tracer PostgreSQL</title>

    <para>
     Oui, l'utilisation de DTrace est possible. Voir <xref
     linkend="dynamic-trace"/> pour davantage d'informations.
    </para>

    <para>
     Si vous voyez l'édition de liens de l'exécutable <command>postgres</command>
     échouer avec un message d'erreur similaire à&nbsp;:
     <screen>
Undefined                       first referenced
 symbol                             in file
AbortTransaction                    utils/probes.o
CommitTransaction                   utils/probes.o
ld: fatal: Symbol referencing errors. No output written to postgres
collect2: ld returned 1 exit status
make: *** [postgres] Error 1
     </screen>
     l'installation DTrace est trop ancienne pour gérer les sondes dans les
     fonctions statiques. Solaris 10u4 ou plus récent est nécessaire pour
     utiliser DTrace.
    </para>
   </sect3>
  </sect2>
 </sect1>

</chapter>
