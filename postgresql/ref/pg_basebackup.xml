<?xml version="1.0" encoding="UTF-8"?>
<refentry id="app-pgbasebackup">
 <indexterm zone="app-pgbasebackup">
  <primary>pg_basebackup</primary>
 </indexterm>

 <refmeta>
  <refentrytitle><application>pg_basebackup</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_basebackup</refname>
  <refpurpose>réalise une sauvegarde de base d'une instance
   <productname>PostgreSQL</productname></refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_basebackup</command>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <application>pg_basebackup</application> est utilisé pour effectuer une
   sauvegarde de base d'une instance <productname>PostgreSQL</productname> en
   cours d'exécution. Elle se fait sans affecter les autres clients du serveur
   de bases de données, et peut être utilisée pour une restauration à un
   certain point dans le temps (PITR, voir <xref
   linkend="continuous-archiving"/>) ou comme point de départ pour un serveur
   secondaire, par envoi des journaux de transactions ou par le flux de
   réplication (voir <xref linkend="warm-standby"/>).
  </para>

  <para>
   <application>pg_basebackup</application> fait une copie exacte des fichiers
   de l'instance, en s'assurant que le système entre et sort du mode
   sauvegarde automatiquement. Les sauvegardes sont toujours faites sur
   l'ensemble de l'instance&nbsp;; il n'est donc pas possible de sauvegarder
   une base individuelle ou des objets d'une base. Pour de telles sauvegardes,
   utiliser un outil comme <xref linkend="app-pgdump"/>.
  </para>

  <para>
   La sauvegarde se fait via une connexion
   <productname>PostgreSQL</productname> standard qui utilise le protocole de
   réplication. La connexion doit se faire avec un rôle doté de l'attribut
   <literal>REPLICATION</literal> ou <literal>SUPERUSER</literal> (voir <xref
   linkend="role-attributes"/>), et <filename>pg_hba.conf</filename> doit
   explicitement permettre la connexion de réplication. Le serveur doit aussi
   être configuré avec un <xref linkend="guc-max-wal-senders"/> suffisamment
   élevé pour fournir au moins une connexion disponible pour la sauvegarde, et
   une autre pour le transfert par flux des journaux de transactions (si
   utilisé).
  </para>

  <para>
   Plusieurs commandes <command>pg_basebackup</command> peuvent tourner en
   même temps, mais, du point de vue des performances, il est généralement
   préférable de n'en faire qu'une seule, puis de faire une copie du résultat.
  </para>

  <para>
   <application>pg_basebackup</application> peut effectuer une sauvegarde non
   seulement à partir du serveur primaire, mais aussi d'un serveur secondaire.
   Pour cela, paramétrez le secondaire pour accepter les connexions pour
   réplication (c'est-à-dire configurez les paramètres
   <varname>max_wal_senders</varname> et <xref linkend="guc-hot-standby"/>, et
   configurez le fichier <filename>pg_hba.conf</filename> de façon approprié).
   Il sera aussi nécessaire d'activer <xref linkend="guc-full-page-writes"/>
   sur le serveur primaire.
  </para>

  <para>
   Il est à noter qu'il existe des limites à la sauvegarde à chaud depuis un
   serveur secondaire&nbsp;:

   <itemizedlist>
    <listitem>
     <para>
      Le fichier d'historique de la sauvegarde n'est pas créé dans l'instance
      sauvegardée.
     </para>
    </listitem>

    <listitem>
     <para>
      <application>pg_basebackup</application> ne peut forcer le serveur
      standby à basculer vers un nouveau fichier WAL à la fin de la
      sauvegarde. Quand vous utilisez <literal>-X none</literal>, si
      l'activité en écriture sur le primaire est basse,
      <application>pg_basebackup</application> peut avoir besoin d'attendre un
      long moment pour que le dernier fichier WAL requis par la sauvegarde
      soit archivé. Dans ce cas, il pourrait être utile d'exécuter
      <function>pg_switch_wal</function> ur le primaire pour causer un
      changement immédiat de fichier WAL.
     </para>
    </listitem>

    <listitem>
     <para>
      Si le serveur secondaire est promu en tant que primaire durant la
      sauvegarde à chaud, celle-ci échouera.
     </para>
    </listitem>

    <listitem>
     <para>
      Toutes les entrées WAL nécessaires à la sauvegarde doivent disposer de
      suffisamment de pages complètes, ce qui nécessite d'activer
      <varname>full_page_writes</varname> sur le primaire et de ne pas utiliser
      d'outils comme <application>pg_compresslog</application> en tant
      qu'<varname>archive_command</varname> pour supprimer les pages complètes
      inutiles des fichiers WAL.
     </para>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   La vue <structname>pg_stat_progress_basebackup</structname> du serveur
   sauvegardé permet de suivre la progression d'une sauvegarde de base
   effectuée avec <application>pg_basebackup</application>. Voir <xref
   linkend="basebackup-progress-reporting"/> pour les détails.
  </para>
 </refsect1>

 <refsect1>
  <title>Options</title>

  <para>
   Les options de ligne de commande suivantes contrôlent l'emplacement et le
   format du résultat.

   <variablelist>
    <varlistentry>
     <term><option>-D <replaceable class="parameter">répertoire</replaceable></option></term>
     <term><option>--pgdata=<replaceable class="parameter">répertoire</replaceable></option></term>
     <listitem>
      <para>
       Configure le répertoire cible de la sauvegarde.
       <application>pg_basebackup</application> créera le répertoire (et les
       répertoires parents) s'il n'existe pas. S'il existe déjà, il doit être
       vide.
      </para>

      <para>
       Quand la sauvegarde est en mode tar, le répertoire doit être spécifié
       sous la forme d'un tiret (<literal>-</literal>), causant l'écriture du
       fichier tar sur <literal>stdout</literal>.
      </para>

      <para>
       Cette option est obligatoire.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-F <replaceable class="parameter">format</replaceable></option></term>
     <term><option>--format=<replaceable class="parameter">format</replaceable></option></term>
     <listitem>
      <para>
       Sélectionne le format de sortie. <replaceable>format</replaceable> peut
       valoir&nbsp;:

       <variablelist>
        <varlistentry>
         <term><literal>p</literal></term>
         <term><literal>plain</literal></term>
         <listitem>
          <para>
           Écrit des fichiers standards, avec l'agencement d'origine du
           répertoire des données et des tablespaces du serveur source.
           Si l'instance n'a pas de tablespace supplémentaire,
           toute l'instance sera placée dans le répertoire cible. Si l'instance
           contient des tablespaces supplémentaires, le répertoire principal
           des données sera placé dans le répertoire cible mais les autres
           tablespaces seront placés dans le même chemin absolu que celui
           d'origine. (Voir <option>--tablespace-mapping</option> pour changer
           cela.)
          </para>

          <para>
           C'est le format par défaut.
          </para>
         </listitem>
        </varlistentry>

        <varlistentry>
         <term><literal>t</literal></term>
         <term><literal>tar</literal></term>
         <listitem>
          <para>
           Écrit des fichiers tar dans le répertoire cible. Le contenu du
           répertoire principal de données sera écrit dans un fichier nommé
           <filename>base.tar</filename>, et tous les autres tablespaces
           seront écrit dans un fichier tar séparé nommé d'après l'OID du
           tablespace.
          </para>

          <para>
           Si le répertoire cible est indiqué avec un tiret
           <literal>-</literal>, le contenu du fichier tar sera écrit sur la
           sortie standard, ce qui est permet de l'envoyer par un tube vers
           gzip, par exemple. Ceci n'est autorisé que si l'instance n'a pas de
           tablespaces supplémentaires, ou que le transfert des WAL par
           streaming n'est pas utilisé.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-R</option></term>
     <term><option>--write-recovery-conf</option></term>
     <listitem>
      <para>
       Crée un fichier <link
       linkend="file-standby-signal"><filename>standby.signal</filename></link>
       <indexterm><primary><filename>standby.signal</filename></primary>
       <secondary>pg_basebackup --write-recovery-conf</secondary></indexterm>
       et ajoute les paramètres de connexion dans le fichier
       <filename>postgresql.auto.conf</filename> du répertoire cible (ou dans
       le fichier d'archive du répertoire principal des données lors de
       l'utilisation du format tar). Ceci facilite la configuration d'un
       serveur secondaire en utilisant les résultats de la sauvegarde.
      </para>

      <para>
       Le fichier <filename>postgresql.auto.conf</filename> enregistrera les
       paramètres de connexion et, si indiqué, le slot de réplication utilisé
       par <application>pg_basebackup</application>, pour que la réplication
       en streaming utilise plus tard la même configuration.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-T <replaceable class="parameter">ancien_repertoire</replaceable>=<replaceable class="parameter">nouveau_repertoire</replaceable></option></term>
     <term><option>--tablespace-mapping=<replaceable class="parameter">ancien_repertoire</replaceable>=<replaceable class="parameter">nouveau_repertoire</replaceable></option></term>
     <listitem>
      <para>
       Déplace le tablespace du répertoire
       <replaceable>ancien_repertoire</replaceable> vers le répertoire
       <replaceable>nouveau_repertoire</replaceable> pendant la sauvegarde.
       Pour bien fonctionner, <replaceable>ancien_repertoire</replaceable>
       doit correspondre exactement à la spécification du tablespace tel qu'il
       est actuellement défini sur le serveur source. (Mais il n'y a pas
       d'erreur s'il n'y a aucun tablespace dans
       <replaceable>ancien_repertoire</replaceable>  sur le serveur source.)
       Pendant ce temps, <replaceable>nouveau_repertoire</replaceable> est un
       répertoire dans le système de fichiers de l'hôte cible. Comme avec le
       répertoire principal cible
       <replaceable>nouveau_repertoire</replaceable> n'a pas besoin d'exister
       déjà, mais s'il existe, il doit être vide.
       <replaceable>ancien_repertoire</replaceable> et
       <replaceable>nouveau_repertoire</replaceable> doivent tous deux être
       des chemins absolus. S'il se trouve qu'un chemin contient un signe
       <literal>=</literal>, échappez-le avec un anti-slash (\). Cette option
       peut être spécifiée plusieurs fois pour différents tablespaces.
      </para>

      <para>
       Si un tablespace est déplacé de cette façon, les liens symboliques à
       l'intérieur du répertoire de données principal sont mis à jour pour
       pointer vers le nouvel emplacement. Du coup, le nouveau répertoire de
       données est prêt à être utilisé sur la nouvelle instance avec les
       nouveaux chemins.
      </para>

      <para>
       Actuellement, cette option ne fonctionne qu'avec le format de sortie
       plain. Elle est ignorée sur le format tar est sélectionné.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--waldir=<replaceable class="parameter">rep_wal</replaceable></option></term>
     <listitem>
      <para>
       Indique l'emplacement du répertoire des journaux de transactions. Par
       défaut, les journaux de transactions seront placés dans le
       sous-répertoire <filename>pg_wal</filename> du répertoire cible, mais
       cette option peut être utilisée pour les placer ailleurs.
       <replaceable>rep_wal</replaceable> doit être un chemin absolu. Comme
       avec le répertoire principal des données,
       <replaceable>waldir</replaceable> peut ne pas exister mais s'il existe
       déjà, il doit être vide. Cette option ne peut être utilisée que quand
       la sauvegarde est au format plain.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-X <replaceable class="parameter">methode</replaceable></option></term>
     <term><option>--wal-method=<replaceable class="parameter">methode</replaceable></option></term>
     <listitem>
      <para>
       Inclut les journaux de transactions requis (fichiers WAL) dans la
       sauvegarde. Cela inclura toutes les transactions intervenues pendant la
       sauvegarde. À moins que la méthode <literal>none</literal> ne soit
       spécifiée, il est possible de démarrer un postmaster sur le répertoire
       cible sans avoir besoin de consulter les archives des journaux, ce qui
       rend la sauvegarde complètement autonome.
      </para>

      <para>
       Les méthodes suivantes sont supportées pour récupérer les journaux de
       transactions&nbsp;:

       <variablelist>
        <varlistentry>
         <term><literal>n</literal></term>
         <term><literal>none</literal></term>
         <listitem>
          <para>
           N'inclut pas les journaux de transactions dans la sauvegarde.
          </para>
         </listitem>
        </varlistentry>

        <varlistentry>
         <term><literal>f</literal></term>
         <term><literal>fetch</literal></term>
         <listitem>
          <para>
           Les journaux de transactions sont récupérés à la fin de la
           sauvegarde. Il est donc nécessaire de définir le paramètre <xref
           linkend="guc-wal-keep-size"/> du serveur source suffisamment haut
           pour que les données WAL requises ne soient pas recyclées avant la
           fin de la sauvegarde. Si les données WAL ont été recyclées avant
           qu'il n'ait été possible de les transférer, la sauvegarde échouera
           et sera inutilisable.
          </para>

          <para>
           Quand le format tar est utilisé, les journaux de transactions
           seront écrits dans le fichier <filename>base.tar</filename>.
          </para>
         </listitem>
        </varlistentry>

        <varlistentry>
         <term><literal>s</literal></term>
         <term><literal>stream</literal></term>
         <listitem>
          <para>
           Envoie les données des journaux de transactions lors de la
           sauvegarde. Cette option ouvre une seconde connexion sur le serveur
           et entame l'envoi du journal de transactions en parallèle de la
           sauvegarde. À cet effet, ce mécanisme consommera deux connexions,
           et non pas juste une. Ce mode permet de ne pas avoir à sauvegarder
           des journaux de transactions additionnels sur le serveur primaire,
           aussi longtemps que le client pourra suivre le flux des journaux de
           transactions.
          </para>

          <para>
           Quand le format tar est utilisé, les journaux de transactions
           seront écrits dans un fichier séparé nommé
           <filename>pg_wal.tar</filename> (si le serveur est d'une version
           antérieure à la version 10, le fichier sera nommé
           <filename>pg_xlog.tar</filename>).
          </para>

          <para>
           Cette valeur est la valeur par défaut.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-z</option></term>
     <term><option>--gzip</option></term>
     <listitem>
      <para>
       Active la compression gzip de l'archive tar en sortie, avec le niveau
       de compression par défaut. La compression n'est disponible
       qu'avec le format tar, et le suffixe <filename>.gz</filename>
       sera automatiquement ajouté à tous les noms de fichier tar.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-Z <replaceable class="parameter">niveau</replaceable></option></term>
     <term><option>--compress=<replaceable class="parameter">niveau</replaceable></option></term>
     <listitem>
      <para>
       Active la compression gzip du fichier tar en sortie, et précise le
       niveau de compression (de 0 à 9, 0 étant sans compression,
       et 9 la meilleure). La compression n'est
       disponible qu'avec le format tar, et le suffixe
       <filename>.gz</filename> sera automatiquement ajouté à tous les noms de
       fichier tar.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

  <para>
   Les options de ligne de commande suivantes contrôlent la génération de la
   sauvegarde et l'exécution du programme&nbsp;:

   <variablelist>
    <varlistentry>
     <term><option>-c <replaceable class="parameter">fast|spread</replaceable></option></term>
     <term><option>--checkpoint=<replaceable class="parameter">fast|spread</replaceable></option></term>
     <listitem>
      <para>
       Configure le mode du checkpoint à immédiat (fast) ou étalé
       (spread, la valeur par défaut). Voir <xref
       linkend="backup-lowlevel-base-backup"/>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-C</option></term>
     <term><option>--create-slot</option></term>
     <listitem>
      <para>
       Indique que le slot de réplication nommé par l'option
       <literal>--slot</literal> doit être créé avant d'exécuter la
       sauvegarde. Une erreur est levée si le slot existe déjà.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-l <replaceable class="parameter">label</replaceable></option></term>
     <term><option>--label=<replaceable class="parameter">label</replaceable></option></term>
     <listitem>
      <para>
       Définit un nom pour la sauvegarde. Sans indication, la valeur par
       défaut, <quote><literal>pg_basebackup base backup</literal></quote>,
       sera utilisée.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-n</option></term>
     <term><option>--no-clean</option></term>
     <listitem>
      <para>
       Par défaut, quand <command>pg_basebackup</command> échoue avec une
       erreur, il supprime tous les répertoires qu'il aurait pu créer avant
       de découvrir qu'il ne peut pas terminer le travail (par exemple, le
       répertoire de données et le répertoire des journaux de transactions du
       serveur cible).  Cette option désactive le nettoyage, et est donc
       pratique pour le débogage.
      </para>

      <para>
       Notez que les répertoires des tablespaces ne sont pas supprimés
       non plus.
      </para>
     </listitem>
    </varlistentry>


    <varlistentry>
     <term><option>-N</option></term>
     <term><option>--no-sync</option></term>
     <listitem>
      <para>
       Par défaut, <command>pg_basebackup</command> attendra que tous les
       fichiers soient écrits de manière sûre sur disque. Cette option
       demande à <command>pg_basebackup</command> de rendre la main sans
       attendre, ce qui est plus rapide, mais signifie qu'un arrêt brutal du
       serveur après la sauvegarde peut laisser la sauvegarde de
       base dans un état corrompu. De manière générale, cette option est
       utile durant les tests, mais ne devrait pas être utilisée dans un
       environnement de production.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-P</option></term>
     <term><option>--progress</option></term>
     <listitem>
      <para>
       Active l'indicateur de progression. Activer cette option donnera un
       rapport de progression approximatif lors de la sauvegarde. Comme la
       base de données peut changer pendant la sauvegarde, ce n'est
       qu'une approximation, et peut ne pas se terminer à exactement
       <literal>100%</literal>. En particulier, lorsque les journaux de
       transactions sont inclus dans la sauvegarde, la quantité totale de
       données ne peut pas être estimée à l'avance et, dans ce cas, la taille
       cible estimée va augmenter une fois dépassée l'estimation totale sans
       les journaux.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-r <replaceable class="parameter">taux</replaceable></option></term>
     <term><option>--max-rate=<replaceable class="parameter">taux</replaceable></option></term>
     <listitem>
      <para>
       Configure le taux maximum de transfert de données avec lequel les
       données sont récupérées du serveur source. Ceci peut se révéler utile
       pour limiter l'impact de <application>pg_basebackup</application> sur
       le serveur Les valeurs sont en kilooctets par seconde. Le suffixe
       <literal>M</literal> indique des mégaoctets par seconde. Un suffixe
       <literal>k</literal> est aussi accepté, mais n'a pas d'effet
       supplémentaire. Les valeurs valides vont de 32&nbsp;ko/s à
       1024&nbsp;Mo/s.
      </para>

      <para>
       Cette option concerne le transfert du répertoire de données. Le
       transfert des journaux de transactions n'est affecté que si la méthode
       de récupération est <literal>fetch</literal>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-S <replaceable>nom_slot</replaceable></option></term>
     <term><option>--slot=<replaceable class="parameter">nom_slot</replaceable></option></term>
     <listitem>
      <para>
       Cette option ne peut être utilisée qu'avec l'option <literal>-X
        stream</literal>. Elle entraîne l'utilisation du slot de réplication
       indiqué par le flux de réplication des journaux. Si la sauvegarde de
       base doit être utilisée pour un serveur secondaire avec un slot, ce
       serveur devra alors utiliser le même nom de slot dans <xref
       linkend="guc-primary-slot-name"/>. Ainsi, on s'assure que le serveur
       primaire ne supprimera pas les journaux nécessaires entre la fin de la
       sauvegarde et le début du lancement de la réplication par streaming sur
       le nouveau secondaire.
      </para>

      <para>
       Le slot de réplication spécifié doit exister, sauf si l'option
       <option>-C</option> est aussi utilisée.
      </para>

      <para>
       Si cette option n'est pas spécifiée, et que le serveur supporte les
       slots de réplication temporaires (versions 10 et supérieures), alors un
       slot de réplication temporaire sera automatiquement utilisé pour le
       transfert des WAL par streaming.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-v</option></term>
     <term><option>--verbose</option></term>
     <listitem>
      <para>
       Active le mode verbeux. Il affichera des étapes supplémentaires
       pendant le démarrage et l'arrêt, ainsi que, si le rapport de
       progression est aussi activé, le nom exact du fichier
       en cours de traitement.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--manifest-checksums=<replaceable class="parameter">algorithm</replaceable></option></term>
     <listitem>
      <para>
       Spécifie l'algorithme à utiliser dans le manifeste de la sauvegarde
       pour les sommes de contrôle appliquées à chaque fichier.
       Les algorithmes disponibles sont actuellement
       <literal>NONE</literal>, <literal>CRC32C</literal>,
       <literal>SHA224</literal>, <literal>SHA256</literal>,
       <literal>SHA384</literal> et <literal>SHA512</literal>.
       Le défaut est <literal>CRC32C</literal>.
      </para>
      <para>
       Si <literal>NONE</literal> est choisi, le manifeste ne contiendra
       aucune somme de contrôle. Sinon, il y en aura une pour chaque fichier
       de la sauvegarde, avec l'algorithme indiqué. De plus, le manifeste
       contiendra toujours une somme de contrôle <literal>SHA256</literal> de
       son propre contenu. Les algorithmes <literal>SHA</literal> sont
       significativement plus consommateurs de CPU que
       <literal>CRC32C</literal>&nbsp;; choisir l'un d'eux peut donc augmenter
       la durée nécessaire à la sauvegarde.
      </para>
      <para>
       Une fonction de hachage SHA fournit un résumé cryptographiquement sûr
       de chaque fichier, pour les utilisateurs voulant vérifier que la
       sauvegarde n'a pas été modifiée&nbsp;; alors que l'algorithme CRC32C
       fournit une somme de contrôle bien plus rapide à calculer, bonne pour
       déceler des erreurs dues à des changements accidentels, mais vulnérable
       à des modifications ciblées. Notez que, pour qu'il serve face à un
       adversaire avec un accès à la sauvegarde, il faut stocker de manière
       sécurisée, ailleurs, le fichier manifeste, ou vérifier d'une manière ou
       d'une autre qu'il n'a pas été modifié depuis le moment de la
       sauvegarde.
      </para>
      <para>
       <xref linkend="app-pgverifybackup"/> peut être utilisé pour vérifier
       l'intégrité d'une sauvegarde grâce à son manifeste.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--manifest-force-encode</option></term>
     <listitem>
      <para>
       Dans le manifeste de la sauvegarde, force l'encodage hexadécimal de
       tous les noms de fichiers. Sans cette option, seuls les noms de
       fichiers non-UTF8 sont ainsi encodés. Cette option est surtout
       destinée à tester que les outils qui lisent un manifeste de
       sauvegarde traitent correctement ce cas.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--no-estimate-size</option></term>
     <listitem>
      <para>
       Empêche le serveur d'estimer la taille totale de la sauvegarde qui
       sera renvoyée, et entraînera toujours une valeur
       <literal>NULL</literal> pour la colonne
       <structfield>backup_total</structfield> de
       <structname>pg_stat_progress_basebackup</structname>.
      </para>
      <para>
       Sans cette option, la sauvegarde commencera par calculer la
       taille de toute l'instance, puis procédera à l'envoi du contenu.
       Cela peut allonger légèrement la sauvegarde, en particulier
       avant l'envoi des premières données. Si cela est trop long,
       cette option permet de l'éviter.
      </para>
      <para>
       Cette option n'est pas autorisée si l'on utilise <option>--progress</option>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--no-manifest</option></term>
     <listitem>
      <para>
       Désactive la génération du fichier manifeste de la sauvegarde.
       Sans cette option, le serveur générera et enverra un manifeste,
       contrôlable avec <xref linkend="app-pgverifybackup" />.
       Ce manifeste est une liste de tous les fichiers présent dans la
       sauvegarde, à l'exception d'éventuels fichiers WAL.
       Pour chaque fichier, il stocke aussi la taille, le moment de
       la dernière modification et, optionnellement, une somme de contrôle.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--no-slot</option></term>
     <listitem>
      <para>
       Empêche la création d'un slot de réplication temporaire pour la
       sauvegarde.
      </para>
      <para>
       Par défaut, si le flux de réplication est sélectionné mais qu'aucun nom
       de slot n'a été donné avec l'option <option>-S</option>, alors un slot
       de réplication temporaire est créé si cela est supporté par le serveur
       source).
      </para>
      <para>
       Le but principal de cette option est de permettre de prendre une
       sauvegarde de base même si le serveur est à cours de slots de
       réplication. Utiliser les slots est presque toujours la meilleure
       solution, car cela empêche le serveur de supprimer les WAL nécessaires
       pendant la sauvegarde.
      </para>
     </listitem>
    </varlistentry>


    <varlistentry>
     <term><option>--no-verify-checksums</option></term>
     <listitem>
      <para>
       Désactive la vérification des sommes de contrôles, si elles sont
       activées sur le serveur sur lequel la sauvegarde est réalisée.
      </para>

      <para>
       Par défaut, les sommes de contrôles sont vérifiées, et les erreurs
       produiront un code de sortie différent de zéro. Cependant, la
       sauvegarde ne sera pas supprimée, comme si l'option
       <option>--no-clean</option> avait été utilisée. Les échecs de
       vérification des sommes de contrôle seront aussi rapportés dans
       la vue <xref linkend="pg-stat-database-view"/>.
      </para>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>

  <para>
   Les options de ligne de commande suivantes contrôlent la connexion au
   serveur source&nbsp;:

   <variablelist>
    <varlistentry>
     <term><option>-d <replaceable class="parameter">connstr</replaceable></option></term>
     <term><option>--dbname=<replaceable class="parameter">connstr</replaceable></option></term>
     <listitem>
      <para>
       Indique les paramètres utilisés pour se connecter au serveur sous la
       forme d'une <link linkend="libpq-connstring">chaîne de
        connexion</link>&nbsp;; elles surchargeront les options en ligne de
       commande conflictuelles.
      </para>

      <para>
       Cette option est appelée <literal>--dbname</literal> par cohérence avec
       les autres applications clientes, mais comme
       <application>pg_basebackup</application> ne se connecte à aucune base
       de données particulière dans l'instance, le nom de la base de données
       dans la chaîne de connexion est ignorée.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-h <replaceable class="parameter">hôte</replaceable></option></term>
     <term><option>--host=<replaceable class="parameter">hôte</replaceable></option></term>
     <listitem>
      <para>
       Indique le nom d'hôte de la machine sur laquelle le serveur de bases de
       données est exécuté. Si la valeur commence par une barre oblique (/),
       elle est interprétée comme le répertoire de socket de domaine Unix. La
       valeur par défaut est fournie par la variable d'environnement
       <envar>PGHOST</envar>, si elle est en place&nbsp;; sinon
       une connexion sur la socket de domaine Unix est tentée.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-p <replaceable class="parameter">port</replaceable></option></term>
     <term><option>--port=<replaceable class="parameter">port</replaceable></option></term>
     <listitem>
      <para>
       Indique le port TCP ou l'extension du fichier local de socket de
       domaine Unix sur lequel le serveur écoute les connexions. La valeur par
       défaut est fournie par la variable d'environnement
       <envar>PGPORT</envar>, si elle est en place&nbsp;; sinon
       il s'agit de la valeur fournie à la compilation.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-s <replaceable class="parameter">interval</replaceable></option></term>
     <term><option>--status-interval=<replaceable class="parameter">interval</replaceable></option></term>
     <listitem>
      <para>
       Spécifie le nombre de secondes entre les envois au serveur source des
       paquets informant de l'état en cours. Des valeurs plus petites
       permettent une supervision plus précise de la progression de la
       sauvegarde à partir du serveur source. Une valeur de zéro désactive
       complètement les mises à jour de statut périodiques, bien qu'une mise à
       jour sera toujours envoyée sur demande du serveur, pour éviter une
       déconnexion suite au dépassement d'un délai. La valeur par défaut est
       de 10 secondes.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-U <replaceable>nom_utilisateur</replaceable></option></term>
     <term><option>--username=<replaceable class="parameter">nom_utilisateur</replaceable></option></term>
     <listitem>
      <para>
       Indique le nom d'utilisateur pour la connexion.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-w</option></term>
     <term><option>--no-password</option></term>
     <listitem>
      <para>
       Enpêche l'affichage d'une demande de mot de passe. Si le serveur en
       réclame un pour l'authentification, et qu'un mot de passe n'est pas
       disponible d'une autre façon (par exemple avec le fichier
       <filename>.pgpass</filename>), la tentative de connexion échouera.
       Cette option peut être utile dans les batchs et les scripts où aucun
       utilisateur n'est présent pour saisir un mot de passe.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-W</option></term>
     <term><option>--password</option></term>
     <listitem>
      <para>
       Force <application>pg_basebackup</application> à demander un mot de
       passe avant la connexion au serveur source.
      </para>

      <para>
       Cette option n'est jamais nécessaire, car
       <application>pg_basebackup</application> demandera automatiquement un mot
       de passe si le serveur exige une telle authentification.
       Néanmoins, <application>pg_basebackup</application> gaspillera une tentative
       de connexion pour découvrir que le serveur veut ce mot de passe. Dans
       certains cas, il est préférable d'ajouter l'option <option>-W</option>
       pour éviter la tentative de connexion.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

  <para>
   D'autres options sont aussi disponibles&nbsp;:

   <variablelist>
    <varlistentry>
     <term><option>-V</option></term>
     <term><option>--version</option></term>
     <listitem>
      <para>
       Affiche la version de <application>pg_basebackup</application>,
       puis quitte.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-?</option></term>
     <term><option>--help</option></term>
     <listitem>
      <para>
       Affiche l'aide sur les arguments en ligne de commande de
       <application>pg_basebackup</application>, puis quitte.
      </para>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>

 </refsect1>

 <refsect1>
  <title>Environnement</title>

  <para>
   Cet outil, comme la plupart des outils
   <productname>PostgreSQL</productname>, utilise les variables
   d'environnement supportées par <application>libpq</application> (voir <xref
   linkend="libpq-envars"/>).
  </para>

  <para>
   La variable d'environnement <envar>PG_COLOR</envar> indique s'il faut
   utiliser les couleurs dans les messages de diagnostique. Les valeurs
   possibles sont <literal>always</literal>, <literal>auto</literal>,
   <literal>never</literal>.
  </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Au début d'une sauvegarde, un checkpoint doit être réalisé sur le serveur
   cible. Ceci peut prendre un certain temps (tout spécialement si l'option
   <literal>--checkpoint=fast</literal> n'est pas utilisée), pendant lequel
   <application>pg_basebackup</application> semblera inactif.
  </para>

  <para>
   La sauvegarde inclura tous les fichiers du répertoire de données et des
   tablespaces, dont les fichiers de configuration, et aussi tout autre fichier
   placé dans le répertoire par d'autres personnes, à
   l'exception de certains fichiers temporaires gérés par PostgreSQL. Seuls
   les fichiers normaux et les répertoires sont cependant copiés.
   Les liens symboliques utilisés pour les tablespaces sont aussi préservés. Les
   liens symboliques pointant vers certains répertoires connus de PostgreSQL
   sont copiés en tant que répertoires vides. Les autres liens symboliques et
   les fichiers de périphérique spéciaux sont ignorés. Voir <xref
   linkend="protocol-replication"/> pour des détails précis.
  </para>

  <para>
   Dans le format plain, les tablespaces seront sauvegardés avec le même
   chemin que sur le serveur source, sauf si l'option
   <literal>--tablespace-mapping</literal> est utilisée. Sans elle, restaurer
   et lancer une sauvegarde de format plain sur le même serveur ne
   fonctionnera pas si les tablespaces sont utilisés, car la sauvegarde devra
   écrire dans les mêmes répertoires que ceux des tablespaces originaux.
  </para>

  <para>
   Quand le format tar est utilisé, il est de la responsabilité de
   l'utilisateur de décompresser chaque archive tar avant de démarrer un
   serveur PostgreSQL qui utilisera ces données. S'il existe des tablespaces
   supplémentaires, les archives tar les concernant doivent être décompressés
   au même emplacement. Dans ce cas, les liens symboliques pour ces
   tablespaces seront créés par le serveur, suivant le contenu du fichier
   <filename>tablespace_map</filename> inclus dans le fichier
   <filename>base.tar</filename>.
  </para>

  <para>
   <application>pg_basebackup</application> fonctionne sur les serveurs de
   même version, ou de version plus ancienne jusqu'à la 9.1. Néanmoins, le
   streaming des WAL (option <literal>-X</literal>) ne fonctionne qu'avec un
   serveur en version 9.3 ou ultérieure, et le format tar
   (<literal>--format=tar</literal>) ne fonctionne qu'avec les serveurs de
   version 9.5 ou ultérieure.
  </para>

  <para>
   <application>pg_basebackup</application> conservera les droits de groupe
   pour les fichiers de données si les droits de groupe sont activés sur
   l'instance cible.
  </para>

 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Pour créer une sauvegarde de base du serveur <literal>mon_sgbd</literal> et
   l'enregistrer dans le répertoire local
   <filename>/usr/local/pgsql/data</filename>&nbsp;:
   <screen>
<prompt>$</prompt> <userinput>pg_basebackup -h mon_sgbd -D /usr/local/pgsql/data</userinput>
   </screen>
  </para>

  <para>
   Pour créer une sauvegarde du serveur local avec un fichier tar compressé
   pour chaque tablespace, et stocker le tout dans le répertoire
   <filename>sauvegarde</filename>, tout en affichant la progression pendant
   l'exécution&nbsp;:
   <screen>
<prompt>$</prompt> <userinput>pg_basebackup -D sauvegarde -Ft -z -P</userinput>
   </screen>
  </para>

  <para>
   Pour créer une sauvegarde d'une base de données locale avec un seul
   tablespace, et la compresser avec <productname>bzip2</productname>&nbsp;:
   <screen>
<prompt>$</prompt> <userinput>pg_basebackup -D - -Ft -X fetch | bzip2 &gt; backup.tar.bz2</userinput>
   </screen>
   (Cette commande échouera s'il existe plusieurs tablespaces dans l'instance.)
  </para>

  <para>
   Pour créer une sauvegarde d'une base locale, où le tablespace situé dans
   <filename>/opt/ts</filename> doit être déplacé vers
   <filename>./backup/ts</filename>&nbsp;:
   <screen>
<prompt>$</prompt> <userinput>pg_basebackup -D backup/data -T /opt/ts=$(pwd)/backup/ts</userinput>
   </screen>
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="app-pgdump"/></member>
   <member><xref linkend="basebackup-progress-reporting"/></member>
  </simplelist>
 </refsect1>

</refentry>
