<?xml version="1.0" encoding="UTF-8"?>
<refentry id="app-pgdump">
 <indexterm zone="app-pgdump">
  <primary>pg_dump</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>pg_dump</refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_dump</refname>

  <refpurpose>
   sauvegarder une base de données <productname>PostgreSQL</productname> dans
   un script ou tout autre fichier d'archive
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_dump</command>
   <arg rep="repeat"><replaceable>option_connexion</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
   <arg choice="opt"><replaceable>nom_base</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>


 <refsect1 id="pg-dump-description">
  <title>
   Description
  </title>

  <para>
   <application>pg_dump</application> est un outil de sauvegarde d'une base de
   données <productname>PostgreSQL</productname>. Les sauvegardes réalisées
   sont cohérentes, même lors d'accès concurrents à la base de données.
   <application>pg_dump</application> ne bloque pas l'accès des autres
   utilisateurs (ni en lecture ni en écriture).
  </para>

  <para>
   <application>pg_dump</application> sauvegarde seulement une base de
   données. Pour sauvegarder une instance complète ou pour sauvegarder les
   objets globaux communs à toutes les bases de données d'une même instance,
   tels que les rôles et les tablespaces, utilisez <xref
   linkend="app-pg-dumpall"/>.
  </para>

  <para>
   Les extractions peuvent être réalisées sous la forme de scripts ou de
   fichiers d'archive. Les scripts sont au format texte et contiennent les
   commandes SQL nécessaires à la reconstruction de la base de données dans
   l'état où elle était au moment de la sauvegarde. La restauration s'effectue
   en chargeant ces scripts avec <xref linkend="app-psql"/>. Ces scripts
   permettent de reconstruire la base de données sur d'autres machines et
   d'autres architectures, et même, au prix de quelques modifications, sur
   d'autres bases de données SQL.
  </para>

  <para>
   La reconstruction de la base de données à partir d'autres formats de
   fichiers archive est obtenue avec <xref linkend="app-pgrestore"/>.
   <application>pg_restore</application> permet, à partir de ces formats, de
   sélectionner les éléments à restaurer, voire de les réordonner avant
   restauration. Les fichiers d'archive sont conçus pour être portables au
   travers d'architectures différentes.
  </para>

  <para>
   Utilisé avec un des formats de fichier d'archive et combiné avec
   <application>pg_restore</application>, <application>pg_dump</application>
   fournit un mécanisme d'archivage et de transfert flexible.
   <application>pg_dump</application> peut être utilisé pour sauvegarder une
   base de données dans son intégralité&nbsp;;
   <application>pg_restore</application> peut alors être utilisé pour examiner
   l'archive et/ou sélectionner les parties de la base de données à restaurer.
   Les formats de fichier en sortie les plus flexibles sont le format
   <quote>custom</quote> (<option>-Fc</option>) et le format
   <quote>directory</quote> (<option>-Fd</option>). Ils permettent la
   sélection et le ré-ordonnancement de tous les éléments archivés, le support
   de la restauration en parallèle. De plus, ils sont compressés par défaut.
   Le format <quote>directory</quote> est aussi le seul format à permettre les
   sauvegardes parallélisées.
  </para>

  <para>
   Lors de l'exécution de <application>pg_dump</application>, il est utile de
   surveiller les messages d'avertissement (affichés sur la sortie erreur
   standard), en particulier en ce qui concerne les limitations indiquées
   ci-dessous.
  </para>
 </refsect1>

 <refsect1 id="pg-dump-options">
  <title>Options</title>

  <para>
   Les options suivantes de la ligne de commande contrôlent le contenu et le
   format de la sortie.

   <variablelist>
    <varlistentry>
     <term><replaceable class="parameter">nom_base</replaceable></term>
     <listitem>
      <para>
       Le nom de la base de données à sauvegarder. En l'absence de précision,
       la variable d'environnement <envar>PGDATABASE</envar> est utilisée. Si
       cette variable n'est pas positionnée, le nom de l'utilisateur de la
       connexion est utilisé.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-a</option></term>
     <term><option>--data-only</option></term>
     <listitem>
      <para>
       Seules les données sont sauvegardées, pas le schéma (définition des
       données). Les données des tables, les Large Objects, et les valeurs des
       séquences sont sauvegardées.
      </para>

      <para>
       Cette option est similaire à <option>--section=data</option> mais, pour
       des raisons historiques, elle n'est pas identique.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-b</option></term>
     <term><option>--blobs</option></term>
     <listitem>
      <para>
       Inclut les objets larges dans la sauvegarde. C'est le comportement par
       défaut, sauf si une des options suivantes est ajoutée&nbsp;:
       <option>--schema</option>, <option>--table</option> ou
       <option>--schema-only</option>. L'option <option>-b</option> n'est de
       ce fait utile que pour ajouter des Large Objects aux sauvegardes pour
       lesquelles un schéma particulier ou une table particulière a été
       demandée. Notez que les Large Objects sont considérés comme des données
       et, de ce fait, seront inclus si <option>--data-only</option> est
       utilisé, mais pas quand <option>--schema-only</option> l'est.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-B</option></term>
     <term><option>--no-blobs</option></term>
     <listitem>
      <para>
       Exclure les objets larges de la sauvegarde.
      </para>

      <para>
       Quand à la fois les options <option>-b</option> et <option>-B</option>
       sont fournies, le comportement est de produire les objets larges, quand
       les données sont sauvegardées, voir la documentation de
       <option>-b</option>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-c</option></term>
     <term><option>--clean</option></term>
     <listitem>
      <para>
       Les commandes de nettoyage (suppression) des objets de la base sont
       écrites avant les commandes de création. (À moins que
       <option>--if-exists</option> ne soit également spécifié, la
       restauration peut générer des messages d'erreur sans gravité si des
       objets ne sont pas présents dans la base de données de destination.)
      </para>

      <para>
       Cette option n'a d'intérêt que pour le format texte. Pour les formats
       archive, l'option est précisée à l'appel de
       <command>pg_restore</command>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-C</option></term>
     <term><option>--create</option></term>
     <listitem>
      <para>
       La sortie débute par une commande de création de la base de données et
       de connexion à cette base. Peu importe, dans ce cas, la base de données
       de connexion à la restauration. De plus, si <option>--clean</option>
       est aussi spécifié, le script supprime puis crée de nouveau la base de
       données cible avant de s'y connecter.
      </para>

      <para>
       Avec <option>--create</option>, la sortie inclut aussi le commentaire
       de la base de données, s'il a été configuré, et toute variable de
       configuration spécifique à cette base de données, configurée via les
       commandes <command>ALTER DATABASE ... SET ...</command> et
       <command>ALTER ROLE ... IN DATABASE ... SET ...</command> mentionnant
       cette base. Les droits d'accès à la base elle-même sont aussi
       sauvegardés, sauf si <option>--no-acl</option> est indiqué.
      </para>

      <para>
       Cette option n'a d'intérêt que pour le format texte. Pour les formats
       archive, l'option est précisée à l'appel de
       <command>pg_restore</command>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-f <replaceable class="parameter">fichier</replaceable></option></term>
     <term><option>--file=<replaceable class="parameter">fichier</replaceable></option></term>
     <listitem>
      <para>
       La sortie est redirigée vers le fichier indiqué. Ce paramètre peut être
       omis pour les sorties en mode fichier, dans ce cas la sortie standard
       sera utilisée. Par contre, il doit être fourni pour le format
       'directory' (répertoire), où il spécifie le répertoire cible plutôt
       qu'un fichier. Dans ce cas, le répertoire est créé par
       <command>pg_dump</command> et ne doit pas exister auparavant.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-E <replaceable class="parameter">codage</replaceable></option></term>
     <term><option>--encoding=<replaceable class="parameter">codage</replaceable></option></term>
     <listitem>
      <para>
       La sauvegarde est créée dans l'encodage indiqué. Par défaut, la
       sauvegarde utilise celui de la base de données. Le même résultat peut
       être obtenu en positionnant la variable d'environnement
       <envar>PGCLIENTENCODING</envar> avec le codage désiré pour la
       sauvegarde.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-F <replaceable class="parameter">format</replaceable></option></term>
     <term><option>--format=<replaceable class="parameter">format</replaceable></option></term>
     <listitem>
      <para>
       Le format de la sortie. <replaceable>format</replaceable> correspond à
       un des éléments suivants&nbsp;:

       <variablelist>
        <varlistentry>
         <term><literal>p</literal></term>
         <listitem>
          <para>
           Fichier de scripts <acronym>SQL</acronym> en texte simple
           (défaut).
          </para>
         </listitem>
        </varlistentry>

        <varlistentry>
         <term><literal>c</literal></term>
         <listitem>
          <para>
           archive personnalisée utilisable par
           <application>pg_restore</application>. Avec le format de sortie
           répertoire, c'est le format le plus souple, car il permet la
           sélection manuelle et le réordonnancement des objets archivés au
           moment de la restauration. Ce format est aussi compressé par
           défaut.
          </para>
         </listitem>
        </varlistentry>

        <varlistentry>
         <term><literal>d</literal></term>
         <term><literal>directory</literal></term>
         <listitem>
          <para>
           Produire une archive au format répertoire utilisable en entrée de
           <application>pg_restore</application>. Cela créera un répertoire
           avec un fichier pour chaque table et blob exporté, ainsi qu'un
           fichier appelé Table of Contents (Table des matières) décrivant les
           objets exportés dans un format machine que
           <application>pg_restore</application> peut lire. Une archive au
           format répertoire peut être manipulée avec des outils Unix
           standard; par exemple, les fichiers d'une archive non-compressée
           peuvent être compressés avec l'outil
           <application>gzip</application>. Ce format est compressé par défaut
           et supporte les sauvegardes parallélisées.
          </para>
         </listitem>
        </varlistentry>

        <varlistentry>
         <term><literal>t</literal></term>
         <listitem>
          <para>
           Archive <command>tar</command> utilisable par
           <application>pg_restore</application>. Le format tar est compatible
           avec le format répertoire; l'extraction d'une archive au format tar
           produit une archive au format répertoire valide. Toutefois, le
           format tar ne supporte pas la compression. Par ailleurs, lors de
           l'utilisation du format tar, l'ordre de restauration des données
           des tables ne peut pas être changé au moment de la restauration.
          </para>
         </listitem>
        </varlistentry>

       </variablelist>
      </para>

     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-j <replaceable class="parameter">njobs</replaceable></option></term>
     <term><option>--jobs=<replaceable class="parameter">njobs</replaceable></option></term>
     <listitem>
      <para>
       Exécute une sauvegarde parallélisée en sauvegardant <replaceable
       class="parameter">njobs</replaceable> tables simultanément. Cette
       option réduit la durée de la sauvegarde mais elle augmente aussi la
       charge sur le serveur de base de données. Vous ne pouvez utiliser cette
       option qu'avec le format de sortie répertoire car c'est le seul format
       où plusieurs processus peuvent écrire leur données en même temps.
      </para>

      <para>
       <application>pg_dump</application> ouvrira <replaceable
       class="parameter">njobs</replaceable> + 1 connexions à la base de
       données. Assurez-vous donc que la valeur de <xref
       linkend="guc-max-connections"/> est configurée suffisamment haut pour
       permettre autant de connexions.
      </para>

      <para>
       Réclamer des verrous exclusifs sur les objets de la base lors de
       l'exécution d'une sauvegarde parallélisée peut causer l'échec de la
       sauvegarde. La raison en est que le processus maître de
       <application>pg_dump</application> réclame des verrous partagés sur les
       objets que les processus fils vont sauvegarder plus tard pour s'assurer
       que personne ne les supprime pendant la sauvegarde. Si un autre client
       demande alors un verrou exclusif sur une table, ce verrou ne sera pas
       accepté mais mis en queue, en attente du relâchement du verrou partagé
       par le processus maître. En conséquence, tout autre accès à la table ne
       sera pas non plus accepté. Il sera lui-aussi mis en queue, après la
       demande de verrou exclusif. Cela inclut le processus fils essayant de
       sauvegarder la table. Sans autre précaution, cela résulterait en un
       classique « deadlock ». Pour détecter ce conflit, le processus fils
       <application>pg_dump</application> réclame un nouveau verrou partagé en
       utilisant l'option <literal>NOWAIT</literal>. Si le processus fils
       n'obtient pas ce verrou, quelqu'un d'autre doit avoir demandé un verrou
       exclusif entre temps, et il n'existe donc aucun moyen de continuer la
       sauvegarde. <application>pg_dump</application> n'a d'autre choix que
       d'annuler la sauvegarde.
      </para>

      <para>
       Pour réaliser une sauvegarde cohérente, le serveur de la base de
       données a besoin de supporter les images (« snapshots ») synchronisées.
       Cette fonctionnalité a été introduite avec
       <productname>PostgreSQL</productname> version 9.2 pour les serveurs
       primaires et version 10 pour les serveurs secondaires. Avec cette
       fonctionnalité, les clients de la base de données peuvent s'assurer de
       voir le même ensemble de données, même s'ils utilisent des connexions
       différentes. <command>pg_dump -j</command> utilise plusieurs connexions
       à la base de données&nbsp;; il se connecte une première fois en tant
       que processus maître et une fois encore par processus fils. Sans la
       fonctionnalité d'images synchronisées, les différent processus ne
       pourraient pas garantir de voir les mêmes données sur chaque connexion,
       ce qui aurait pour résultat une sauvegarde incohérente.
      </para>

      <para>
       Si vous voulez exécuter une sauvegarde parallélisée à partir d'un
       serveur antérieur à la version 9.2, vous devez vous assurer que le
       contenu de la base ne change pas entre le moment où le maître se
       connecte à la base de données et celui où le dernier processus fils se
       connecte à la même base de données. La façon la plus simple est de
       mettre en pause tout processus de modification (DDL et DML) qui a eu
       accès à la base avant le début de la sauvegarde. Vous aurez besoin
       d'utiliser l'option <option>--no-synchronized-snapshots</option> si
       vous exécutez <command>pg_dump -j</command> sur une version de
       <productname>PostgreSQL</productname> antérieure à la 9.2.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-n <replaceable class="parameter">motif</replaceable></option></term>
     <term><option>--schema=<replaceable class="parameter">motif</replaceable></option></term>
     <listitem>
      <para>
       Sauvegarde uniquement les schémas correspondant à <replaceable
       class="parameter">schema</replaceable>&nbsp;; la sélection se fait à la
       fois sur le schéma et sur les objets qu'il contient. Quand cette option
       n'est pas indiquée, tous les schémas non système de la base cible sont
       sauvegardés. Plusieurs schémas peuvent être indiqués en utilisant
       plusieurs fois l'option <option>-n</option>. De plus, le paramètre
       <replaceable class="parameter">motif</replaceable> est interprété
       comme un modèle selon les règles utilisées par les commandes
       <literal>\d</literal> de <application>psql</application> (voir <xref
       linkend="app-psql-patterns"/>). Du coup, plusieurs schémas peuvent être
       sélectionnés en utilisant des caractères joker dans le modèle. Lors de
       l'utilisation de ces caractères, il faut faire attention à placer le
       modèle entre guillemets, si nécessaire, pour empêcher le shell de
       remplacer les jokers&nbsp;; voir <xref linkend="pg-dump-examples"/>.
      </para>

      <note>
       <para>
        Quand <option>-n</option> est indiqué,
        <application>pg_dump</application> ne sauvegarde aucun autre objet de
        la base que ceux dont les schémas sélectionnés dépendent. Du coup, il
        n'est pas garanti que la sauvegarde d'un schéma puisse être restaurée
        avec succès dans une base vide.
       </para>
      </note>

      <note>
       <para>
        Les objets qui ne font pas partie du schéma comme les objets larges ne
        sont pas sauvegardés quand <option>-n</option> est précisé. Ils
        peuvent être rajoutés avec l'option <option>--blobs</option>.
       </para>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-N <replaceable class="parameter">motif</replaceable></option></term>
     <term><option>--exclude-schema=<replaceable class="parameter">motif</replaceable></option></term>
     <listitem>
      <para>
       Ne sauvegarde pas les schémas correspondant au modèle <replaceable
       class="parameter">motif</replaceable>. Le modèle est interprété selon
       les même règles que <option>-n</option>. <option>-N</option> peut aussi
       être indiqué plus d'une fois pour exclure des schémas correspondant à
       des modèles différents.
      </para>

      <para>
       Quand les options <option>-n</option> et <option>-N</option> sont
       indiquées, seuls sont sauvegardés les schémas qui correspondent à au
       moins une option <option>-n</option> et à aucune option
       <option>-N</option>. Si <option>-N</option> apparaît sans
       <option>-n</option>, alors les schémas correspondant à
       <option>-N</option> sont exclus de ce qui est une sauvegarde normale.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-O</option></term>
     <term><option>--no-owner</option></term>
     <listitem>
      <para>
       Les commandes d'initialisation des possessions des objets au regard de
       la base de données originale ne sont pas produites. Par défaut,
       <application>pg_dump</application> engendre des instructions
       <command>ALTER OWNER</command> ou <command>SET SESSION
        AUTHORIZATION</command> pour fixer ces possessions. Ces instructions
       échouent lorsque le script n'est pas lancé par un superutilisateur (ou
       par l'utilisateur qui possède tous les objets de ce script). L'option
       <option>-O</option> est utilisée pour créer un script qui puisse être
       restauré par n'importe quel utilisateur. En revanche, c'est cet
       utilisateur qui devient propriétaire de tous les objets.
      </para>

      <para>
       Cette option n'a d'intérêt que pour le format texte. Pour les formats
       archive, l'option est précisée à l'appel de
       <command>pg_restore</command>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-R</option></term>
     <term><option>--no-reconnect</option></term>
     <listitem>
      <para>
       Cette option, obsolète, est toujours acceptée pour des raisons de
       compatibilité ascendante.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-s</option></term>
     <term><option>--schema-only</option></term>
     <listitem>
      <para>
       Seule la définition des objets (le schéma) est sauvegardée, pas les
       données.
      </para>

      <para>
       Cette option est l'inverse de <option>--data-only</option>. Elle est
       similaire, mais pas identique (pour des raisons historiques), à
       <option>--section=pre-data --section=post-data</option>.
      </para>

      <para>
       (Ne pas la confondre avec l'option <option>--schema</option> qui
       utilise le mot <quote>schema</quote> dans un contexte différent.)
      </para>

      <para>
       Pour exclure les données de la table pour seulement un sous-ensemble
       des tables de la base de données, voir
       <option>--exclude-table-data</option>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-S <replaceable class="parameter">nom_utilisateur</replaceable></option></term>
     <term><option>--superuser=<replaceable class="parameter">nom_utilisateur</replaceable></option></term>
     <listitem>
      <para>
       Le nom du superutilisateur à utiliser lors de la désactivation des
       triggers. Cela n'a d'intérêt que si l'option
       <option>--disable-triggers</option> est précisée. (En règle générale,
       il est préférable de ne pas utiliser cette option et de lancer le
       script produit en tant que superutilisateur.)
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-t <replaceable class="parameter">motif</replaceable></option></term>
     <term><option>--table=<replaceable class="parameter">motif</replaceable></option></term>
     <listitem>
      <para>
       Sauvegarde seulement les tables dont le nom correspond à <replaceable
       class="parameter">motif</replaceable>. Plusieurs tables sont sélectionnables
       en utilisant plusieurs fois l'option <option>-t</option>. De plus, le
       paramètre <replaceable class="parameter">motif</replaceable> est
       interprété comme un modèle suivant les règles utilisées par les
       commandes <literal>\d</literal> de <application>psql</application>
       (voir <xref linkend="app-psql-patterns"/>). Du coup, plusieurs tables
       peuvent être sélectionnées en utilisant des caractères joker dans le
       modèle. Lors de l'utilisation de ces caractères, il faut faire
       attention à placer le modèle entre guillemets, si nécessaire, pour
       empêcher le shell de remplacer les jokers&nbsp;; voir <xref
       linkend="pg-dump-examples"/>.
      </para>

      <para>
       Conçue pour les tables, cette option peut être utilisée pour
       sauvegarder la définition des vues, vues matérialisées, tables externes
       et séquences correspondantes. Elle ne sauvegardera pas le contenu des
       vues et des vues matérialisées. Le contenu des tables externes ne sera
       sauvegardé que si le serveur distant correspondant est précisé avec
       l'option <option>--include-foreign-data</option>.
      </para>

      <para>
       Les options <option>-n</option> et <option>-N</option> n'ont aucun
       effet quand l'option <option>-t</option> est utilisée car les tables
       sélectionnées par <option>-t</option> sont sauvegardées quelle que soit
       la valeur des options relatives aux schémas. Les objets qui ne sont pas
       des tables ne sont pas sauvegardés.
      </para>

      <note>
       <para>
        Quand <option>-t</option> est indiqué,
        <application>pg_dump</application> ne sauvegarde aucun autre objet de
        la base dont la (ou les) table(s) sélectionnée(s) pourrai(en)t
        dépendre. Du coup, il n'est pas garanti que la sauvegarde spécifique
        d'une table puisse être restaurée avec succès dans une base vide.
       </para>
      </note>

      <note>
       <para>
        Le comportement de l'option <option>-t</option> n'est pas entièrement
        compatible avec les versions de <productname>PostgreSQL</productname>
        antérieures à la 8.2. Auparavant, écrire <literal>-t tab</literal>
        sauvegardait toutes les tables nommées <literal>tab</literal>, mais
        maintenant, seules sont sauvegardées celles qui sont visibles dans le
        chemin de recherche des objets. Pour retrouver l'ancien comportement,
        il faut écrire <literal>-t '*.tab'</literal>. De plus, il faut écrire
        quelque chose comme <literal>-t sch.tab</literal> pour sélectionner
        une table dans un schéma particulier plutôt que l'ancienne syntaxe
        <literal>-n sch -t tab</literal>.
       </para>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-T <replaceable class="parameter">motif</replaceable></option></term>
     <term><option>--exclude-table=<replaceable class="parameter">motif</replaceable></option></term>
     <listitem>
      <para>
       Ne sauvegarde pas les tables correspondant au modèle <replaceable
       class="parameter">motif</replaceable>. Le modèle est interprété selon
       les même règles que <option>-t</option>. <option>-T</option> peut aussi
       être indiqué plusieurs pour exclure des tables correspondant à des
       modèles différents.
      </para>

      <para>
       Quand les options <option>-t</option> et <option>-T</option> sont
       indiquées, seules sont sauvegardées les tables qui correspondent à au
       moins une option <option>-t</option> et à aucune option
       <option>-T</option>. Si <option>-T</option> apparaît sans
       <option>-t</option>, alors les tables correspondant à
       <option>-T</option> sont exclues de ce qui est une sauvegarde normale.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-v</option></term>
     <term><option>--verbose</option></term>
     <listitem>
      <para>
       Mode verbeux. <application>pg_dump</application> affiche des
       commentaires détaillés sur les objets et les heures de début et de fin
       dans le fichier de sauvegarde. Des messages de progression sont
       également affichés sur la sortie d'erreur standard.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-V</option></term>
     <term><option>--version</option></term>
     <listitem>
      <para>
       Affiche la version de <application>pg_dump</application> puis quitte.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-x</option></term>
     <term><option>--no-privileges</option></term>
     <term><option>--no-acl</option></term>
     <listitem>
      <para>
       Les droits d'accès (commandes grant/revoke) ne sont pas sauvegardés.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-Z <replaceable class="parameter">0..9</replaceable></option></term>
     <term><option>--compress=<replaceable class="parameter">0..9</replaceable></option></term>
     <listitem>
      <para>
       Indique le niveau de compression à utiliser. Zéro signifie sans
       compression. Pour le format d'archive personnalisé, cela signifie la
       compression des segments individuels des données des tables. Par
       défaut, la compression se fait à un niveau modéré. Pour le format
       texte, indiquer une valeur différente de zéro implique une compression
       du fichier complet, comme s'il était passé à
       <application>gzip</application>&nbsp;; mais par défaut, la sortie n'est
       pas compressée. Le format d'archive tar ne supporte pas du tout la
       compression.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--binary-upgrade</option></term>
     <listitem>
      <para>
       Cette option est destinée à être utilisée pour une mise à jour en
       ligne. Son utilisation dans d'autres buts n'est ni recommandée ni
       supportée. Le comportement de cette option peut changer dans les
       futures versions sans avertissement.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--column-inserts</option></term>
     <term><option>--attribute-inserts</option></term>
     <listitem>
      <para>
       Extraire les données en tant que commandes <command>INSERT</command>
       avec des noms de colonnes explicites (<literal>INSERT INTO
        <replaceable>table</replaceable> (<replaceable>colonne</replaceable>,
        ...) VALUES ...</literal>). Ceci rendra la restauration très
       lente&nbsp;; c'est surtout utile pour créer des extractions qui
       puissent être chargées dans des bases de données autres que
       <productname>PostgreSQL</productname>. Toute erreur lors du
       rechargement causera la perte uniquement des lignes faisant partie du
       <command>INSERT</command> problématique, et pas du contenu complet de
       la table.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--disable-dollar-quoting</option></term>
     <listitem>
      <para>
       Cette option désactive l'utilisation du caractère dollar comme
       délimiteur de corps de fonctions, et force leur délimitation en tant
       que chaîne SQL standard.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--disable-triggers</option></term>
     <listitem>
      <para>
       Cette option ne s'applique que dans le cas d'une extraction de données
       seules. Ceci demande à <application>pg_dump</application> d'inclure des
       commandes pour désactiver temporairement les triggers sur les tables
       cibles pendant que les données sont rechargées. Utilisez ceci si, sur
       les tables, vous avez des contraintes d'intégrité ou des triggers que
       vous ne voulez pas invoquer pendant le rechargement.
      </para>

      <para>
       À l'heure actuelle, les commandes émises pour
       <option>--disable-triggers</option> doivent être exécutées en tant que
       superutilisateur. Par conséquent, vous devez aussi spécifier un nom de
       superutilisateur avec <option>-S</option>, ou préférablement faire
       attention à lancer le script résultat en tant que superutilisateur.
      </para>

      <para>
       Cette option n'a de sens que pour le format texte simple. Pour les
       formats d'archive, vous pouvez spécifier cette option quand vous
       appelez <command>pg_restore</command>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--enable-row-security</option></term>
     <listitem>
      <para>
       Cette option est seulement adéquate lors de la sauvegarde du contenu
       d'une table disposant du mode de sécurité niveau ligne. Par défaut,
       <application>pg_dump</application> configurera <xref
       linkend="guc-row-security"/> à off pour s'assurer que toutes les
       données de la table soient sauvegardées. Si l'utilisateur n'a pas les
       droits suffisant pour contourner la sécurité niveau ligne, alors une
       erreur est renvoyée. Ce paramètre force
       <application>pg_dump</application> à configurer <xref
       linkend="guc-row-security"/> à on, permettant à l'utilisateur de ne
       sauvegarder que le contenu auquel il a le droit d'accéder.
      </para>

      <para>
       Notez que si vous utilisez cette option actuellement, vous serez
       certainement intéressé à faire une sauvegarde au format
       <command>INSERT</command> car les politiques de sécurité ne sont pas
       respectées par l'instruction <command>COPY FROM</command>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--exclude-table-data=<replaceable class="parameter">motif</replaceable></option></term>
     <listitem>
      <para>
       Ne sauvegarde pas les données pour toute table correspondant au motif
       indiqué par <replaceable class="parameter">motif</replaceable>. Le
       motif est interprété selon les même règles que pour l'option
       <option>-t</option>. <option>--exclude-table-data</option> peut être
       utilisé plusieurs fois pour exclure des tables dont le nom correspond à
       des motifs différents. Cette option est utile quand vous avez besoin de
       la définition d'une table particulière mais pas de ses données.
      </para>

      <para>
       Pour exclure les données de toutes les tables de la base, voir
       <option>--schema-only</option>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--extra-float-digits=<replaceable class="parameter">nchiffres</replaceable></option></term>
     <listitem>
      <para>
       Utilise la valeur spécifiée pour <option>extra_float_digits</option>
       lors de la
       sauvegarde de valeurs en virgule flottante, au lieu de la précision
       maximale disponible. Les sauvegardes de routine ne devraient pas
       utiliser cette option.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--if-exists</option></term>
     <listitem>
      <para>
       Utilise des commandes conditionnelles (c'est-à-dire des clauses
       <literal>IF EXISTS</literal>) lors du nettoyage (suppression) des
       objets de la base.  Cette option n'est pas valide à moins que
       <option>--clean</option> ne soit également spécifié.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--include-foreign-data=<replaceable class="parameter">foreignserver</replaceable></option></term>
     <listitem>
      <para>
       Sauvegarde les données de toute table externe ayant comme serveur
       distant <replaceable class="parameter">foreignserver</replaceable>.
       Plusieurs serveurs distants peuvent être sélectionnés en utilisant
       plusieurs fois l'options <option>--include-foreign-data</option>. De
       plus, le paramètre <replaceable
       class="parameter">foreignserver</replaceable> est interprété comme un
       motif suivant les mêmes règles que celles utilisées par les commandes
       <literal>\d</literal> de <application>psql</application> (voir <xref
       linkend="app-psql-patterns"/> ci-dessous), donc plusieurs serveurs
       distants peuvent aussi être sélectionnés en écrivant des caractères
       joker dans le motif. Lors de l'utilisation des jokers, faites
       attention à placer le motif entre guillemets pour empêcher le shell de
       les prendre en compte&nbsp;; voir <xref linkend="pg-dump-examples"/>
       ci-dessous. Le seule exception est qu'un motif vide est interdit.
      </para>

      <note>
       <para>
        Quand <option>--include-foreign-data</option> est précisé,
        <application>pg_dump</application> ne vérifie pas que la table
        externe est accessible en écriture. De ce fait, il n'y a pas de
        garantie que la sauvegarde des données de la table distante pourra
        être restaurée sans erreurs.
       </para>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--inserts</option></term>
     <listitem>
      <para>
       Extraire les données en tant que commandes <command>INSERT</command>
       (plutôt que <command>COPY</command>). Ceci rendra la restauration très
       lente&nbsp;; c'est surtout utile pour créer des extractions qui
       puissent être chargées dans des bases de données autres que
       <productname>PostgreSQL</productname>. Toute erreur lors du
       rechargement fera que seules les lignes comprises dans le
       <command>INSERT</command> problématique seront perdues, plutôt que le
       contenu entier de la table. Notez que la restauration pourrait échouer
       si vous avez modifié l'ordre des colonnes. L'option
       <option>--column-inserts</option> protège contre les changements
       d'ordre des colonnes au prix de lenteurs supplémentaires.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--load-via-partition-root</option></term>
     <listitem>
      <para>
       Lors de l'export de données d'une partition, faire que les instructions
       <command>COPY</command> ou <command>INSERT</command> ciblent la racine
       du partitionnement qui contient cette partition, plutôt que la
       partition elle-même. Ceci fait que la partition appropriée soit
       re-déterminée pour chaque ligne au moment du chargement. Ceci peut être
       utile quand le rechargement des données se fait sur un serveur où les
       lignes ne tomberont pas forcément dans les mêmes partitions que celles
       du serveur original. Ceci pourrait arriver si la colonne de
       partitionnement est de type text et que les deux systèmes ont une
       définition différente du collationnement utilisé pour tier la colonne
       de partitionnement.
      </para>

      <para>
       Il est préférable de ne pas utiliser le parallélisme lors de la
       restauration d'une archive construite avec cette option parce que
       <application>pg_restore</application> ne saura pas exactement quel
       partition sera utilisée par un élément donné de l'archive. Ceci
       pourrait résulter en une inefficacité due à des conflits de verrou
       entre des jobs parallèles, voire même des échecs de rechargement dûs à
       des contraintes de clés étrangères configurées avant que les données
       adéquates ne soient chargées.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--lock-wait-timeout=<replaceable class="parameter">expiration</replaceable></option></term>
     <listitem>
      <para>
       Ne pas attendre indéfiniment l'acquisition de verrous partagés sur
       table au démarrage de l'extraction. Échouer à la place s'il est
       impossible de verrouiller une table dans le temps d'<replaceable
       class="parameter">expiration</replaceable> indiqué. L'expiration peut
       être spécifiée dans tous les formats acceptés par <command>SET
        statement_timeout</command>, les valeurs autorisées dépendant de la
       version du serveur sur laquelle vous faites l'extraction, mais une
       valeur entière en millisecondes est acceptée par toutes les versions.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--no-comments</option></term>
     <listitem>
      <para>
       Ne pas sauvegarder les commentaires.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--no-publications</option></term>
     <listitem>
      <para>
       Ne pas sauvegarder les publications.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--no-security-labels</option></term>
     <listitem>
      <para>
       Ne pas sauvegarder les labels de sécurité.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--no-subscriptions</option></term>
     <listitem>
      <para>
       Ne pas sauvegarder les souscriptions.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--no-sync</option></term>
     <listitem>
      <para>
       Par défaut, <command>pg_dump</command> attendra que tous les fichiers
       aient été écrits de manière sûre sur disque.  Cette option force
       <command>pg_dump</command> à rendre la main sans attendre, ce qui est
       plus rapide, mais signifie qu'un arrêt brutal du serveur survenant
       après la sauvegarde peut laisser la sauvegarde dans un état corrompu.
       De manière générale, cette option est utile durant les tests mais ne
       devrait pas être utilisée dans un environnement de production.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--no-synchronized-snapshots</option></term>
     <listitem>
      <para>
       Cette option permet l'exécution de <command>pg_dump -j</command> sur un
       serveur de version antérieure à la 9.2. Voir la documentation sur le
       paramètre <option>-j</option> pour plus de détails.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--no-tablespaces</option></term>
     <listitem>
      <para>
       Ne pas générer de commandes pour créer des tablespace, ni sélectionner
       de tablespace pour les objets. Avec cette option, tous les objets
       seront créés dans le tablespace par défaut durant la restauration.
      </para>

      <para>
       Cette option n'a de sens que pour le format texte simple. Pour les
       formats d'archive, vous pouvez spécifier cette option quand vous
       appelez <command>pg_restore</command>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--no-unlogged-table-data</option></term>
     <listitem>
      <para>
       Ne pas exporter le contenu des tables non journalisées (unlogged).
       Cette option n'a aucun effet sur le fait que la définition (schéma) des
       tables soit exportée ou non; seul l'export des données de la table est
       supprimé. Les données des tables non journalisées sont toujours exclues
       lors d'une sauvegarde à partir d'un serveur en standby.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--on-conflict-do-nothing</option></term>
     <listitem>
      <para>
       Ajouter <literal>ON CONFLICT DO NOTHING</literal> aux commandes
       <command>INSERT</command>. Cette option n'est seulement valide que si
       <option>--inserts</option>, <option>--column-inserts</option> ou
       <option>--rows-per-insert</option> est aussi utilisée.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--quote-all-identifiers</option></term>
     <listitem>
      <para>
       Force la mise entre guillemets de tous les identifiants. Cette option
       est recommandée lors de la sauvegarde d'un serveur
       <productname>PostgreSQL</productname> dont la version majeure est
       différente de celle du <application>pg_dump</application> ou quand le
       résultat est prévu d'être rechargé dans une autre version majeure. Par
       défaut, <application>pg_dump</application> met entre guillemets
       uniquement les identifiants qui sont des mots réservés dans sa propre
       version majeure. Ceci peut poser parfois des problèmes de compatibilité
       lors de l'utilisation de serveurs de versions différentes qui auraient
       des ensembles différents de mots clés. Utiliser
       <option>--quote-all-identifiers</option> empêche ce type de problèmes
       au prix d'un script résultant plus difficile à lire.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--rows-per-insert=<replaceable class="parameter">nlignes</replaceable></option></term>
     <listitem>
      <para>
       Sauvegarde les données sous la forme de commandes
       <command>INSERT</command> (plutôt qu'avec <command>COPY</command>).
       Contrôle le nombre maximum de lignes par commande
       <command>INSERT</command>. La valeur indiquée doit être strictement
       positive. Toute erreur lors du rechargement provoquera uniquement la
       perte des lignes faisant partie du <command>INSERT</command>
       problématique, et non pas le contenu complet de la table.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--section=<replaceable class="parameter">nom_section</replaceable></option></term>
     <listitem>
      <para>
       Sauvegarde seulement la section nommée. Le nom de la section peut être
       <option>pre-data</option>, <option>data</option> ou
       <option>post-data</option>. Cette option peut être spécifiée plus d'une
       fois pour sélectionner plusieurs sections. La valeur par défaut est
       toutes les sections.
      </para>

      <para>
       La section data contient toutes les données des tables ainsi que la
       définition des Large Objects et les valeurs des séquences. Les éléments
       post-data incluent la définition des index, triggers, règles et
       contraintes (autres que les contraintes de vérification). Les éléments
       pre-data incluent en tous les autres éléments de définition.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--serializable-deferrable</option></term>
     <listitem>
      <para>
       Utiliser une transaction <literal>sérialisable</literal> pour l'export,
       pour garantir que l'instantané utilisé est cohérent avec les états
       futurs de la base; mais ceci est effectué par l'attente d'un point dans
       le flux des transactions auquel aucune anomalie ne puisse être
       présente, afin qu'il n'y ait aucun risque que l'export échoue ou cause
       l'annulation d'une autre transaction pour <literal>erreur de
        sérialisation</literal>. Voyez <xref linkend="mvcc"/> pour davantage
       d'informations sur l'isolation des transactions et le contrôle d'accès
       concurrent.
      </para>

      <para>
       Cette option est inutile pour une sauvegarde qui ne sera utilisée qu'en cas de
       récupération après sinistre. Elle pourrait être utile pour une sauvegarde
       utilisée pour charger une copie de la base pour du reporting ou toute
       autre activité en lecture seule tandis que la base originale continue à
       être mise à jour. Sans cela, la sauvegarde serait dans un état incohérent
       avec l'exécution sérielle des transactions qui auront été finalement
       validées. Par exemple, si un traitement de type batch est exécuté, un
       batch pourrait apparaître comme terminé dans la sauvegarde sans que tous les
       éléments du batch n'apparaissent.
      </para>

      <para>
       Cette option ne fera aucune différence si aucune transaction en
       lecture-écriture n'est active au lancement de pg_dump. Si des
       transactions en lecture-écriture sont actives, le démarrage de la sauvegarde
       pourrait être retardé pour une durée indéterminée. Une fois qu'il sera
       démarré, la performance est identique à celle de la sauvegarde sans cette
       option.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--snapshot=<replaceable class="parameter">nom_snapshot</replaceable></option></term>
     <listitem>
      <para>
       Utilise l'image de base de données synchronisée spécifiée lors de la
       sauvegarde d'une base de données (voir <xref
       linkend="functions-snapshot-synchronization-table"/> pour plus de
       détails).
      </para>

      <para>
       Cette option est utile lorsqu'il est nécessaire de synchroniser la
       sauvegarde avec un slot de réplication logique (voir <xref
       linkend="logicaldecoding"/>) ou avec une session concurrente.
      </para>

      <para>
       Dans le cas d'une sauvegarde parallèle, le nom de l'image défini par
       cette option est utilisé plutôt que de prendre une nouvelle image de
       base.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--strict-names</option></term>
     <listitem>
      <para>
       Requiert que chaque motif de schéma (<option>-n</option> /
       <option>--schema</option>) et/ou de table (<option>-t</option> /
       <option>--table</option>) corresponde à au moins un schéma/table de la
       base de données à sauvegarder. Notez que, si aucun motif de
       schéma/table ne trouve une correspondance,
       <application>pg_dump</application> générera une erreur, y compris sans
       <option>--strict-names</option>.
      </para>

      <para>
       Cette option n'a pas d'effet sur <option>-N</option> /
       <option>--exclude-schema</option>, <option>-T</option> /
       <option>--exclude_table</option> et
       <option>--exclude-table-date</option>. Tout échec de correspondance
       pour un motif d'exclusion n'est pas considéré comme une erreur.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--use-set-session-authorization</option></term>
     <listitem>
      <para>
       Émettre des commandes SQL standard <command>SET SESSION
        AUTHORIZATION</command> à la place de commandes <command>ALTER
        OWNER</command> pour déterminer l'appartenance d'objet. Ceci rend
       l'extraction davantage compatible avec les standards, mais, suivant
       l'historique des objets de l'extraction, peut ne pas se restaurer
       correctement. Par ailleurs, une extraction utilisant <command>SET
        SESSION AUTHORIZATION</command> nécessitera certainement des droits
       superutilisateur pour se restaurer correctement, alors que
       <command>ALTER OWNER</command> nécessite des droits moins élevés.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-?</option></term>
     <term><option>--help</option></term>
     <listitem>
      <para>
       Affiche l'aide sur les arguments en ligne de commande de
       <application>pg_dump</application>, puis quitte
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

  <para>
   Les options de ligne de commande suivantes gèrent les paramètres de
   connexion&nbsp;:

   <variablelist>
    <varlistentry>
     <term><option>-d <replaceable class="parameter">nom_base</replaceable></option></term>
     <term><option>--dbname=<replaceable class="parameter">nom_base</replaceable></option></term>
     <listitem>
      <para>
       Indique le nom de la base de données de connexion. Ceci revient à
       spécifier <replaceable class="parameter">nom_base</replaceable> comme
       premier argument sans option sur la ligne de commande. Ce nom de base
       peut être remplacé par une <link linkend="libpq-connstring">chaîne de
        connexion</link>. Dans ce cas, les paramètres de la chaîne de connexion
       surchargeront toutes les options en ligne de commande conflictuelles.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-h <replaceable class="parameter">hôte</replaceable></option></term>
     <term><option>--host <replaceable class="parameter">hôte</replaceable></option></term>
     <listitem>
      <para>
       Le nom d'hôte de la machine sur laquelle le serveur de bases de données
       est exécuté. Si la valeur commence par une barre oblique (/), elle est
       utilisée comme répertoire pour le socket de domaine Unix. La valeur par
       défaut est fournie par la variable d'environnement
       <envar>PGHOST</envar>, si elle est initialisée. Dans le cas contraire,
       une connexion sur la socket de domaine Unix est tentée.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-p <replaceable class="parameter">port</replaceable></option></term>
     <term><option>--port <replaceable class="parameter">port</replaceable></option></term>
     <listitem>
      <para>
       Le port TCP ou le fichier local de socket de domaine Unix sur lequel le
       serveur écoute les connexions. La valeur par défaut est fournie par la
       variable d'environnement <envar>PGPORT</envar>, si elle est
       initialisée. Dans le cas contraire, il s'agit de la valeur fournie à la
       compilation.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-U <replaceable class="parameter">nomutilisateur</replaceable></option></term>
     <term><option>--username <replaceable class="parameter">nomutilisateur</replaceable></option></term>
     <listitem>
      <para>
       Le nom d'utilisateur utilisé pour la connexion.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-w</option></term>
     <term><option>--no-password</option></term>
     <listitem>
      <para>
       Ne demande jamais un mot de passe. Si le serveur en réclame un pour
       l'authentification et qu'un mot de passe n'est pas disponible d'une
       autre façon (par exemple avec le fichier <filename>.pgpass</filename>),
       la tentative de connexion échouera. Cette option peut être utile pour
       les scripts où aucun utilisateur n'est présent pour saisir un mot de
       passe.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-W</option></term>
     <term><option>--password</option></term>
     <listitem>
      <para>
       Force <application>pg_dump</application> à demander un mot de passe
       avant la connexion à une base de données.
      </para>

      <para>
       Cette option n'est jamais nécessaire car
       <application>pg_dump</application> demande automatiquement un mot de
       passe si le serveur exige une authentification par mot de passe.
       Néanmoins, <application>pg_dump</application> perd une tentative de
       connexion pour tester si le serveur demande un mot de passe. Dans
       certains cas, il est préférable d'ajouter l'option <option>-W</option>
       pour éviter la tentative de connexion.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--role=<replaceable class="parameter">nomrole</replaceable></option></term>
     <listitem>
      <para>
       Spécifie un rôle à utiliser pour créer l'extraction. Avec cette option,
       <application>pg_dump</application> émet une commande <command>SET
        ROLE</command> <replaceable class="parameter">nomrole</replaceable>
       après s'être connecté à la base. C'est utile quand l'utilisateur
       authentifié (indiqué par <option>-U</option>) n'a pas les droits dont
       <application>pg_dump</application> a besoin, mais peut basculer vers un
       rôle qui les a. Certaines installations ont une politique qui est
       contre se connecter directement en tant que superutilisateur, et
       l'utilisation de cette option permet que les extractions soient faites
       sans violer cette politique.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1>
  <title>Environnement</title>

  <variablelist>
   <varlistentry>
    <term><envar>PGDATABASE</envar></term>
    <term><envar>PGHOST</envar></term>
    <term><envar>PGOPTIONS</envar></term>
    <term><envar>PGPORT</envar></term>
    <term><envar>PGUSER</envar></term>

    <listitem>
     <para>
      Paramètres de connexion par défaut.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><envar>PG_COLOR</envar></term>
    <listitem>
     <para>
      Indique s'il faut utiliser la couleur dans les messages de diagnostic.
      Les valeurs possibles sont <literal>always</literal>,
      <literal>auto</literal>, <literal>never</literal>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   Cet outil, comme la plupart des autres outils
   <productname>PostgreSQL</productname>, utilise les variables
   d'environnement supportées par la bibliothèque
   <application>libpq</application> (voir <xref linkend="libpq-envars"/>).
  </para>
 </refsect1>

 <refsect1 id="app-pgdump-diagnostics">
  <title>Diagnostiques</title>

  <para>
   <application>pg_dump</application> exécute intrinsèquement des instructions
   <command>SELECT</command>. Si des problèmes apparaissent à l'exécution de
   <application>pg_dump</application>, <xref linkend="app-psql"/> peut être
   utilisé pour s'assurer qu'il est possible de sélectionner des informations
   dans la base de données. De plus, tout paramètre de connexion par défaut et
   toute variable d'environnement utilisé par la bibliothèque
   <application>libpq</application> s'appliquent.
  </para>

  <para>
   L'activité générée par <application>pg_dump</application> dans la base de
   données est normalement collectée par le collecteur de statistiques. Si
   c'est gênant, vous pouvez positionner le paramètre
   <varname>track_counts</varname> à false via <envar>PGOPTIONS</envar> ou la
   commande <literal>ALTER USER</literal>.
  </para>
 </refsect1>

 <refsect1 id="pg-dump-notes">
  <title>Notes</title>

  <para>
   Si des ajouts locaux à la base <literal>template1</literal> ont été
   effectués, il est impératif de s'assurer que la sortie de
   <application>pg_dump</application> est effectivement restaurée dans une
   base vide&nbsp;; dans le cas contraire, il est fort probable que la
   duplication des définitions des objets ajoutés engendre des erreurs. Pour
   obtenir une base vide de tout ajout local, on utilise
   <literal>template0</literal> à la place de <literal>template1</literal>
   comme modèle. Par exemple&nbsp;:
   <programlisting>CREATE DATABASE foo WITH TEMPLATE template0;
   </programlisting>
  </para>

  <para>
   Quand une sauvegarde des seules données est sélectionnée et que l'option
   <option>--disable-triggers</option> est utilisée,
   <application>pg_dump</application> engendre des commandes de désactivation
   des déclencheurs sur les tables utilisateur avant l'insertion des données,
   puis après coup, des commandes de réactivation après l'insertion. Si la
   restauration est interrompue, il se peut que les catalogues systèmes
   conservent cette position.
  </para>

  <para>
   Le fichier de sauvegarde produit par <application>pg_dump</application> ne
   contient pas les statistiques utilisées par l'optimiseur pour la
   planification des requêtes. Il est donc conseillé, pour assurer des
   performances optimales, de lancer <command>ANALYZE</command> après la
   restauration d'une sauvegarde&nbsp;; voir <xref
   linkend="vacuum-for-statistics"/> et <xref linkend="autovacuum"/> pour plus
   d'informations.
  </para>

  <para>
   Parce que <application>pg_dump</application> est utilisé pour transférer
   des données vers des nouvelles versions de
   <productname>PostgreSQL</productname>, la sortie de
   <application>pg_dump</application> devra pouvoir se charger dans les
   versions du serveur <productname>PostgreSQL</productname> plus récentes que
   la version de <application>pg_dump</application>.
   <application>pg_dump</application> peut aussi extraire des données de
   serveurs <productname>PostgreSQL</productname> plus anciens que sa propre
   version. (À l'heure actuelle, les versions de serveurs supportées vont
   jusqu'à la 8.0.) Toutefois, <application>pg_dump</application> ne peut pas
   réaliser d'extraction de serveurs <productname>PostgreSQL</productname>
   plus récents que sa propre version majeure&nbsp;; il refusera même
   d'essayer, plutôt que de risquer de fournir une extraction invalide. Par
   ailleurs, il n'est pas garanti que la sortie de
   <application>pg_dump</application> puisse être chargée dans un serveur
   d'une version majeure plus ancienne&nbsp;&mdash; pas même si l'extraction a
   été faite à partir d'un serveur dans cette version. Charger un fichier
   d'extraction dans un serveur de version plus ancienne pourra requérir une
   édition manuelle du fichier pour supprimer les syntaxe incomprises de
   l'ancien serveur. L'utilisation de l'option
   <option>--quote-all-identifiers</option> est recommendée lors de
   l'utilisation avec des versions différentes, car cela permet d'empêcher la
   venue de problèmes provenant de listes de mots clés dans différentes
   versions de <productname>PostgreSQL</productname>.
  </para>

  <para>
   Lors de la sauvegarde des souscription de réplication logique,
   <application>pg_dump</application> générera des commandes <command>CREATE
    SUBSCRIPTION</command> qui utilisent l'option <literal>connect =
    false</literal>, afin que la restauration des souscriptions ne fasse pas de
   connexions distantes pour créer un slot de réplication ou pour la copie
   initiale de table.  De cette façon, la sauvegarde peut être restaurée sans
   avoir besoin d'un accès réseau aux serveurs distants.  Il est alors à la
   charge de l'utilisateur de réactiver les souscriptions de manière adaptée.
   Si les hôtes impliquées ont changés, l'information de connexion pourrait
   nécessiter d'être changée.  Il pourrait également être approprié de
   tronquer les tables cibles avant de lancer une nouvelle copie complète des
   tables.
  </para>
 </refsect1>

 <refsect1 id="pg-dump-examples" xreflabel="Exemples">
  <title>Exemples</title>

  <para>
   Sauvegarder une base appelée <literal>ma_base</literal> dans un script
   SQL&nbsp;:
   <screen><prompt>$</prompt> <userinput>pg_dump ma_base &gt; base.sql</userinput>
   </screen>
  </para>

  <para>
   Pour sauvegarder une base de données dans une archive au format
   répertoire&nbsp;:

   <screen>
<prompt>$</prompt> <userinput>pg_dump -Fd ma_base -f rep_sauve</userinput>
   </screen>
  </para>

  <para>
   Charger ce script dans une base nouvellement créée et nommée
   <literal>nouvelle_base</literal>&nbsp;:

   <screen><prompt>$</prompt> <userinput>psql -d nouvelle_base -f base.sql</userinput>
   </screen>
  </para>

  <para>
   Sauvegarder une base dans un fichier au format personnalisé&nbsp;:

   <screen><prompt>$</prompt> <userinput>pg_dump -Fc ma_base &gt; base.dump</userinput>
   </screen>
  </para>

  <para>
   Pour sauvegarder une base de données en utilisant le format répertoire et
   en activant la parallélisation sur cinq jobs&nbsp;:

   <screen>
<prompt>$</prompt> <userinput>pg_dump -Fd ma_base -j 5 -f rep_sauvegarde</userinput>
   </screen>
  </para>

  <para>
   Charger un fichier d'archive dans une nouvelle base nommée
   <literal>nouvelle_base</literal>&nbsp;:

   <screen><prompt>$</prompt> <userinput>pg_restore -d nouvelle_base base.dump</userinput>
   </screen>
  </para>

  <para>
   Pour recharger un fichier archive dans la même base de données, annuler le
   contenu actuel de cette base&nbsp;:

   <screen>
<prompt>$</prompt> <userinput>pg_restore -d postgres --clean --create db.dump</userinput>
   </screen>
  </para>

  <para>
   Sauvegarder la table nommée <literal>mytab</literal>&nbsp;:

   <screen><prompt>$</prompt> <userinput>pg_dump -t ma_table ma_base &gt; base.sql</userinput>
   </screen>
  </para>

  <para>
   Sauvegarder toutes les tables du schéma <literal>detroit</literal> et dont
   le nom commence par <literal>emp</literal> sauf la table nommée
   <literal>traces_employes</literal>&nbsp;:

   <screen><prompt>$</prompt> <userinput>pg_dump -t 'detroit.emp*' -T detroit.traces_employes ma_base &gt; base.sql</userinput>
   </screen>
  </para>

  <para>
   Sauvegarder tous les schémas dont le nom commence par
   <literal>est</literal> ou <literal>ouest</literal> et se termine par
   <literal>gsm</literal>, en excluant les schémas dont le nom contient le mot
   <literal>test</literal>&nbsp;:

   <screen>
<prompt>$</prompt> <userinput>pg_dump -n 'est*gsm' -n 'ouest*gsm' -N '*test*' ma_base &gt; base.sql</userinput>
   </screen>
  </para>

  <para>
   Idem mais en utilisant des expressions rationnelles dans les options&nbsp;:

   <screen><prompt>$</prompt> <userinput>pg_dump -n '(est|ouest)*gsm' -N '*test*' ma_base &gt; base.sql</userinput>
   </screen>
  </para>

  <para>
   Sauvegarder tous les objets de la base sauf les tables dont le nom commence
   par <literal>ts_</literal>&nbsp;:

   <screen><prompt>$</prompt> <userinput>pg_dump -T 'ts_*' ma_base &gt; base.sql</userinput>
   </screen>
  </para>

  <para>
   Pour indiquer un nom qui comporte des majuscules dans les options
   <option>-t</option> et assimilées, il faut ajouter des guillemets
   doubles&nbsp;; sinon le nom est converti en minuscules (voir <xref
   linkend="app-psql-patterns"/>). Les guillemets doubles sont interprétés par
   le shell et doivent donc être placés entre guillemets. Du coup, pour
   sauvegarder une seule table dont le nom comporte des majuscules, on utilise
   une commande du style&nbsp;:

   <screen>
<prompt>$</prompt> <userinput>pg_dump -t "\"NomAMajuscule\"" ma_base &gt; ma_base.sql</userinput>
   </screen>
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="app-pg-dumpall"/></member>
   <member><xref linkend="app-pgrestore"/></member>
   <member><xref linkend="app-psql"/></member>
  </simplelist>
 </refsect1>

</refentry>
