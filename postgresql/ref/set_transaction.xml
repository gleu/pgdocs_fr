<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-set-transaction">
 <indexterm>
  <primary>niveau d'isolation de la transaction</primary>
  <secondary>configuration</secondary>
 </indexterm>

 <indexterm>
  <primary>transaction en lecture seule</primary>
  <secondary>configuration</secondary>
 </indexterm>

 <indexterm>
  <primary>transaction différable</primary>
  <secondary>configuration</secondary>
 </indexterm>

 <refmeta>
  <refentrytitle>SET TRANSACTION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>SET TRANSACTION</refname>
  <refpurpose>initialise les caractéristiques de la transaction
   actuelle</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>SET TRANSACTION <replaceable class="parameter">mode_transaction</replaceable> [, ...]
SET TRANSACTION SNAPSHOT <replaceable class="parameter">id_snapshot</replaceable>
SET SESSION CHARACTERISTICS AS TRANSACTION <replaceable class="parameter">mode_transaction</replaceable> [, ...]

<phrase>où <replaceable class="parameter">mode_transaction</replaceable> fait
partie de&nbsp;:</phrase>

    ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED }
    READ WRITE | READ ONLY
    [ NOT ] DEFERRABLE
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>
  <indexterm zone="sql-set-transaction">
   <primary>SET TRANSACTION</primary>
  </indexterm>

  <para>
   La commande <command>SET TRANSACTION</command> initialise les
   caractéristiques de la transaction courante. Elle est sans effet sur les
   transactions suivantes. <command>SET SESSION CHARACTERISTICS</command>
   positionne les caractéristiques par défaut pour toutes les
   transactions à venir d'une session. Ces valeurs peuvent ensuite être surchargées
   par <command>SET TRANSACTION</command> pour une transaction particulière.
  </para>

  <para>
   Les caractéristiques de transaction disponibles sont le niveau
   d'isolation, le mode d'accès de la transaction
   (lecture/écriture ou lecture seule) et le mode différable.
   De plus, un snapshot peut être sélectionné, bien que pour la transaction
   en cours, et non pas pour la session.
  </para>

  <para>
   Le niveau d'isolation détermine les données que la
   transaction peut voir quand d'autres transactions fonctionnent
   concurrentiellement&nbsp;:

   <variablelist>
    <varlistentry>
     <term><literal>READ COMMITTED</literal></term>
     <listitem>
      <para>
       Une instruction ne peut voir que les lignes validées avant qu'elle ne
       commence. C'est la valeur par défaut.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>REPEATABLE READ</literal></term>
     <listitem>
      <para>
       Toute instruction de la transaction en cours ne peut voir
       que les lignes validées avant que la première requête ou
       instruction de modification de données soit exécutée dans cette
       transaction.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>SERIALIZABLE</literal></term>
     <listitem>
      <para>
       Toutes les requêtes de la transaction en cours peuvent seulement voir
       les lignes validées avant l'exécution de la première requête ou
       instruction de modification de données de cette transaction. Si un
       ensemble de lectures et écritures parmi les transactions sérialisables
       concurrentes créait une situation impossible à obtenir avec une
       exécution en série (une à la fois) de ces transactions, l'une d'entre
       elles sera annulée avec une erreur
       <literal>serialization_failure</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

   Le standard SQL définit un niveau supplémentaire, <literal>READ
    UNCOMMITTED</literal>.
   Dans <productname>PostgreSQL</productname>, <literal>READ
    UNCOMMITTED</literal> est traité comme
   <literal>READ COMMITTED</literal>.
  </para>

  <para>
   Le niveau d'isolation de la transaction ne peut plus être modifié après
   l'exécution de la première requête ou instruction de modification de données
   (<command>SELECT</command>, <command>INSERT</command>,
   <command>DELETE</command>, <command>UPDATE</command>,
   <command>FETCH</command> ou <command>COPY</command>) d'une transaction.
   Voir <xref linkend="mvcc"/> pour plus d'informations sur
   l'isolation et le contrôle de concurrence.
  </para>

  <para>
   La méthode d'accès de la transaction détermine si elle est en
   lecture/écriture ou en lecture seule. Lecture/écriture est la valeur par
   défaut. Quand une transaction est en lecture seule, les commandes SQL
   suivantes sont interdites&nbsp;: <literal>INSERT</literal>,
   <literal>UPDATE</literal>, <literal>DELETE</literal> et <literal>COPY
    FROM</literal> si la table modifiée n'est pas temporaire&nbsp;;
   toutes les commandes <literal>CREATE</literal>,
   <literal>ALTER</literal> et <literal>DROP</literal>&nbsp;;
   <literal>COMMENT</literal>, <literal>GRANT</literal>,
   <literal>REVOKE</literal>, <literal>TRUNCATE</literal>&nbsp;;
   <literal>EXPLAIN ANALYZE</literal> et <literal>EXECUTE</literal> si la
   commande exécutée figure parmi celles listées plus haut. C'est une notion
   de haut niveau de lecture seule qui n'interdit pas toutes les écritures sur
   disque.
  </para>

  <para>
   La propriété <literal>DEFERRABLE</literal> d'une transaction n'a pas
   d'effet tant que la transaction est aussi <literal>SERIALIZABLE</literal>
   et <literal>READ ONLY</literal>. Quand ces trois propriétés sont
   sélectionnées pour une transaction, la transaction pourrait bloquer lors de
   la première acquisition de son image de la base, après quoi il est possible
   de fonctionner sans la surcharge normale d'une transaction
   <literal>SERIALIZABLE</literal> et sans risque de contribuer ou d'être
   annulé par un échec de sérialisation. Ce mode convient bien à l'exécution
   de longs rapports ou à la création de sauvegardes.
  </para>

  <para>
   La commande <literal>SET TRANSACTION SNAPSHOT</literal> permet à une nouvelle
   transaction de s'exécuter avec le même <firstterm>snapshot</firstterm> que
   celle d'une transaction existante. La transaction pré-existante doit avoir
   exportée son snapshot avec la fonction <literal>pg_export_snapshot</literal>
   (voir <xref linkend="functions-snapshot-synchronization"/>). Cette fonction
   renvoie un identifiant de snapshot, qui doit être fourni à <literal>SET
    TRANSACTION SNAPSHOT</literal> pour indiquer le snapshot à importer.
   L'identifiant doit être écrit sous la forme d'une chaîne litérale dans cette
   commande, par exemple <literal>'00000003-0000001B-1'</literal>.
   <literal>SET TRANSACTION SNAPSHOT</literal> peut seulement être exécuté au
   début d'une transaction, avant la première requête ou la première instruction
   de modification de données (<command>SELECT</command>,
   <command>INSERT</command>, <command>DELETE</command>,
   <command>UPDATE</command>, <command>FETCH</command> ou
   <command>COPY</command>) de la transaction. De plus, la transaction doit déjà
   être configurée au niveau d'isolation <literal>SERIALIZABLE</literal> ou
   <literal>REPEATABLE READ</literal> (sinon le snapshot sera immédiatement
   annulé car le mode <literal>READ COMMITTED</literal> prend un nouveau
   snapshot pour chaque commande). Si la transaction d'import utilise le niveau
   d'isolation <literal>SERIALIZABLE</literal>, la transaction qui a exporté le
   snapshot doit aussi utiliser ce niveau d'isolation. De plus, une transaction
   sérialisable en lecture/écriture ne peut pas importer un snapshot à partir
   d'une transaction en lecture seule.
  </para>

 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Si <command>SET TRANSACTION</command> est exécuté sans
   <command>START TRANSACTION</command> ou <command>BEGIN</command> préalable,
   il n'a aucun effet et un avertissement est renvoyé.
  </para>

  <para>
   Il est possible de se dispenser de <command>SET TRANSACTION</command> en
   spécifiant le <replaceable class="parameter">mode_transaction</replaceable>
   désiré dans <command>BEGIN</command> ou <command>START TRANSACTION</command>.
   Mais cette option n'est pas disponible pour <command>SET TRANSACTION
    SNAPSHOT</command>.
  </para>

  <para>
   Les modes de transaction par défaut d'une session peuvent aussi être
   configurés en initialisant les paramètres de configuration <xref
   linkend="guc-default-transaction-isolation"/>, <xref
   linkend="guc-default-transaction-read-only"/> et
   <xref linkend="guc-default-transaction-deferrable"/>. (En fait, <command>SET SESSION
    CHARACTERISTICS</command> est un équivalent verbeux de la configuration de
   ces variables avec <command>SET</command>.) Les valeurs par défaut
   peuvent ainsi être initialisées dans le fichier de configuration, via
   <command>ALTER DATABASE</command>, etc. <xref linkend="runtime-config"/>
   fournit de plus amples informations.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Pour commencer une nouvelle transaction avec le même snapshot qu'une
   autre transaction en cours d'exécution, commencez par exporter le
   snapshot de la transaction existante. Cela renvoie un identifiant de
   snapshot, par exemple&nbsp;:

   <programlisting>
BEGIN TRANSACTION ISOLATION LEVEL REPEATABLE READ;
SELECT pg_export_snapshot();
 pg_export_snapshot
--------------------
 00000003-0000001B-1
(1 row)
   </programlisting>

   Ensuite, donnez l'identifiant de snapshot dans une commande
   <command>SET TRANSACTION SNAPSHOT</command> au début de la nouvelle
   transaction&nbsp;:

   <programlisting>
BEGIN TRANSACTION ISOLATION LEVEL REPEATABLE READ;
SET TRANSACTION SNAPSHOT '00000003-0000001B-1';
   </programlisting></para>
 </refsect1>

 <refsect1 id="r1-sql-set-transaction-3">
  <title>Compatibilité</title>

  <para>
   Ces commandes sont définies dans le standard <acronym>SQL</acronym>,
   sauf en ce qui concerne le mode de transaction
   <literal>DEFERRABLE</literal> et la forme <command>SET TRANSACTION
    SNAPSHOT</command>, qui sont des extensions de
   <productname>PostgreSQL</productname>.
  </para>

  <para>
   <literal>SERIALIZABLE</literal> est le niveau d'isolation par défaut
   dans le standard. Dans <productname>PostgreSQL</productname>, le niveau
   par défaut est d'habitude <literal>READ COMMITTED</literal> mais il
   est possible de le modifier comme indiqué ci-dessus.
  </para>

  <para>
   Dans le standard SQL, il existe une autre caractéristique de transaction
   pouvant être configurée avec ces commandes&nbsp;: la taille de l'aire de
   diagnostique. Ce concept est spécifique au SQL embarqué et, du coup,
   n'est pas implémenté dans <productname>PostgreSQL</productname>.
  </para>

  <para>
   Le standard SQL requiert des virgules entre des <replaceable
   class="parameter">transaction_modes</replaceable> successifs mais, pour
   des raisons historiques, <productname>PostgreSQL</productname> autorise
   de ne pas mettre de virgules.
  </para>
 </refsect1>
</refentry>
