<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-createopclass">
 <indexterm zone="sql-createopclass">
  <primary>CREATE OPERATOR CLASS</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE OPERATOR CLASS</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE OPERATOR CLASS</refname>
  <refpurpose>Définir une nouvelle classe d'opérateur</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>CREATE OPERATOR CLASS <replaceable class="parameter">nom</replaceable> [ DEFAULT ] FOR TYPE <replaceable class="parameter">type_donnee</replaceable>
  USING <replaceable class="parameter">methode_indexage</replaceable> [ FAMILY <replaceable class="parameter">nom_famille</replaceable> ] AS
  {  OPERATOR <replaceable class="parameter">numero_strategie</replaceable> <replaceable class="parameter">nom_operateur</replaceable> [ ( <replaceable class="parameter">type_op</replaceable>, <replaceable class="parameter">type_op</replaceable> ) ] [ FOR SEARCH | FOR ORDER BY <replaceable class="parameter">nom_famille_tri</replaceable> ]
  | FUNCTION <replaceable class="parameter">numero_support</replaceable> [ ( <replaceable class="parameter">type_op</replaceable> [ , <replaceable class="parameter">type_op</replaceable> ] ) ] <replaceable class="parameter">nom_fonction</replaceable> ( <replaceable class="parameter">type_argument</replaceable> [, ...] )
   | STORAGE <replaceable class="parameter">type_stockage</replaceable>
  } [, ... ]
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>CREATE OPERATOR CLASS</command> crée une nouvelle classe
   d'opérateur. Une classe d'opérateur définit la façon dont un type de
   données particulier peut être utilisé avec un index. La classe d'opérateur spécifie
   le rôle particulier ou la <quote>stratégie</quote> que jouent certains opérateurs
   pour ce type de données et cette méthode d'indexation. La
   classe d'opérateur spécifie aussi les fonctions de support à
   utiliser par la méthode d'indexation quand la classe d'opérateur est
   sélectionnée pour une colonne d'index. Tous les opérateurs et fonctions
   utilisés par une classe d'opérateur doivent être définis avant la création de
   la classe d'opérateur.
  </para>

  <para>
   Si un nom de schéma est donné, la classe d'opérateur est créée dans le
   schéma spécifié. Sinon, elle est créée dans le schéma courant. Deux classes
   d'opérateur ne peuvent avoir le même nom que s'ils concernent des méthodes
   d'indexation différentes.
  </para>

  <para>
   L'utilisateur qui définit une classe d'opérateur en devient propriétaire.
   Actuellement, le créateur doit être superutilisateur. Cette restriction
   existe parce qu'une définition erronée d'une classe d'opérateur peut
   gêner le serveur, voire causer un arrêt brutal de celui-ci.
  </para>

  <para>
   Actuellement, <command>CREATE OPERATOR CLASS</command> ne vérifie pas si la
   définition de la classe d'opérateur inclut tous les opérateurs et fonctions
   requis par la méthode d'indexation. Il ne vérifie pas non plus si les
   opérateurs et les fonctions forment un ensemble cohérent. Il est de la
   responsabilité de l'utilisateur de définir une classe d'opérateur valide.
  </para>

  <para>
   Les classes d'opérateur en relation peuvent être groupées dans des
   <firstterm>familles d'opérateurs</firstterm>. Pour ajouter une nouvelle
   classe d'opérateur à une famille existante, indiquez l'option
   <literal>FAMILY</literal> dans <command>CREATE OPERATOR
    CLASS</command>. Sans cette option, la nouvelle classe est placée dans une
   famille de même nom (créant la famille si elle n'existe pas).
  </para>

  <para>
   <xref linkend="xindex"/> fournit de plus amples informations.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nom</replaceable></term>
    <listitem>
     <para>
      Le nom (éventuellement qualifié du nom du schéma) de la classe d'opérateur à créer.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DEFAULT</literal></term>
    <listitem>
     <para>
      La classe d'opérateur est celle par défaut pour son type de données.
      Il ne peut y avoir qu'une classe d'opérateur
      par défaut pour un type de données et une méthode d'indexation particuliers.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">type_données</replaceable></term>
    <listitem>
     <para>
      Le type de données de la colonne auquel s'applique cette classe d'opérateur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">méthode_index</replaceable></term>
    <listitem>
     <para>
      Le nom de la méthode d'indexation à laquelle s'applique la classe d'opérateur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_famille</replaceable></term>
    <listitem>
     <para>
      Le nom d'une famille d'opérateur existante pour lui ajouter cette classe
      d'opérateur. Si non spécifié, une famille du même nom que l'opérateur est
      utilisée (la créant si elle n'existe pas déjà).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">numéro_stratégie</replaceable></term>
    <listitem>
     <para>
      Le numéro de stratégie de la méthode d'indexation pour un opérateur associé
      à la classe d'opérateur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_opérateur</replaceable></term>
    <listitem>
     <para>
      Le nom (éventuellement qualifié du nom du schéma) d'un opérateur associé
      à la classe d'opérateur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">op_type</replaceable></term>
    <listitem>
     <para>
      Dans une clause <literal>OPERATOR</literal>, le(s) type(s) de données de l'opérande d'un opérateur ou <literal>NONE</literal> pour
      signifier un opérateur unaire (droite ou gauche). Les types de données de l'opérande
      peuvent être omis dans le cas où ils sont identiques au type de
      données de la classe d'opérateur.
     </para>

     <para>
      Dans une clause <literal>FUNCTION</literal>, le (ou les) types de
      données en opérande, supporté par la fonction, si différent du type de
      données en entrée de la fonction (pour les fonctions de comparaison
      d'index B-tree et les fonctions des index hash) ou le type de données de
      la classe (pour les fonctions de support du tri pour les index B-tree,
      les fonctions d'égalité d'image des B-tree et pour toutes les fonctions
      des opérateurs de classe des index GiST, SP-GiST, GIN et BRIN). Ces
      valeurs par défaut sont correctes. Du coup, <replaceable
      class="parameter">op_type</replaceable> n'a pas besoin d'être précisé
      dans les clauses <literal>FUNCTION</literal>, sauf dans le cas de la
      fonction de support du tri pour les index B-tree qui doit supporter les
      comparaisons inter-types.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_famille_tri</replaceable></term>
    <listitem>
     <para>
      Le nom (éventuellement qualifié du nom du schéma) d'une famille d'opérateur
      <literal>btree</literal> qui décrit l'ordre de tri associé à un
      opérateur de tri.
     </para>

     <para>
      Si ni <literal>FOR SEARCH</literal> ni <literal>FOR ORDER BY</literal>
      ne sont spécifiés, <literal>FOR SEARCH</literal> est la valeur par
      défaut.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">numéro_support</replaceable></term>
    <listitem>
     <para>
      Le numéro de fonction support de la méthode d'indexation pour une fonction
      associée à la classe d'opérateur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_fonction</replaceable></term>
    <listitem>
     <para>
      Le nom (éventuellement qualifié du nom du schéma) d'une fonction
      support pour la méthode d'indexation de la classe d'opérateur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">types_argument</replaceable></term>
    <listitem>
     <para>
      Le(s) type(s) de données des paramètres de la fonction.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">type_stockage</replaceable></term>
    <listitem>
     <para>
      Le type de données réellement stocké dans l'index. C'est normalement le
      même que le type de données de la colonne mais certaines méthodes
      d'indexage (GiST, GIN et BRIN actuellement)
      autorisent un type différent. La clause <literal>STORAGE</literal> doit être omise
      sauf si la méthode d'indexation autorise un type différent.
      Si la colonne <replaceable class="parameter">type_donnee</replaceable> est spécifiée
      comme <type>anyarray</type>, le <replaceable class="parameter">type_stockage</replaceable>
      peut être déclarré comme <type>anyelement</type> pour indiquer que les
      entrées dans l'index sont des membres du type d'élément appartenant au
      type de donnée du tableau courant pour lequel chaque index est créé
      spécifiquement pour.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   L'ordre des clauses <literal>OPERATOR</literal>, <literal>FUNCTION</literal> et <literal>STORAGE</literal>
   n'a aucune importance.
  </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Comme toute la partie d'indexage ne vérifie pas les droits d'accès aux
   fonctions avant de les utiliser, inclure une fonction ou un opérateur dans
   une classe d'opérateur est équivalent à donner les droits d'exécution à
   PUBLIC sur celle-ci. Ce n'est pas un problème habituellement pour les types
   de fonctions utiles dans une classe d'opérateur.
  </para>

  <para>
   Les opérateurs ne doivent pas être définis par des fonctions SQL. Une
   fonction SQL peut être intégrée dans la requête appelante, ce qui
   empêche l'optimiseur de faire la correspondance avec un index.
  </para>

  <para>
   Avant <productname>PostgreSQL</productname> 8.4, la clause
   <literal>OPERATOR</literal> pouvait inclure l'option
   <literal>RECHECK</literal>. Cela n'est plus supporté car le fait qu'un index
   soit <quote>à perte</quote> est maintenant déterminé à l'exécution. Ceci
   permet une gestion plus efficace des cas où l'opérateur pourrait ou non être
   à perte.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   La commande issue de l'exemple suivant définit une classe d'opérateur
   d'indexation GiST pour le type de données <literal>_int4</literal> (tableau de
   <type>int4</type>). Voir le module <xref linkend="intarray"/> pour l'exemple
   complet.
  </para>

  <programlisting>CREATE OPERATOR CLASS gist__int_ops
    DEFAULT FOR TYPE _int4 USING gist AS
        OPERATOR        3       &amp;&amp;,
        OPERATOR        6       = (anyarray, anyarray),
        OPERATOR        7       @&gt;,
        OPERATOR        8       &lt;@,
        OPERATOR        20      @@ (_int4, query_int),
        FUNCTION        1       g_int_consistent (internal, _int4, smallint, oid, internal),
        FUNCTION        2       g_int_union (internal, internal),
        FUNCTION        3       g_int_compress (internal),
        FUNCTION        4       g_int_decompress (internal),
        FUNCTION        5       g_int_penalty (internal, internal, internal),
        FUNCTION        6       g_int_picksplit (internal, internal),
        FUNCTION        7       g_int_same (_int4, _int4, internal);
  </programlisting>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   <command>CREATE OPERATOR CLASS</command> est une extension
   <productname>PostgreSQL</productname>. Il n'existe pas d'instruction
   <command>CREATE OPERATOR CLASS</command> dans le standard SQL.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alteropclass"/></member>
   <member><xref linkend="sql-dropopclass"/></member>
   <member><xref linkend="sql-createopfamily"/></member>
   <member><xref linkend="sql-alteropfamily"/></member>
  </simplelist>
 </refsect1>
</refentry>
