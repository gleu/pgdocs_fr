<?xml version="1.0" encoding="UTF-8"?>

<refentry id="sql-alterfunction">
 <indexterm zone="sql-alterfunction">
  <primary>ALTER FUNCTION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER FUNCTION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER FUNCTION</refname>
  <refpurpose>Modifier la définition d'une fonction</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>
ALTER FUNCTION <replaceable>nom</replaceable> [ ( [ [ <replaceable class="parameter">mode_arg</replaceable> ] [ <replaceable class="parameter">nom_arg</replaceable> ] <replaceable class="parameter">type_arg</replaceable> [, ...] ] ) ]
     <replaceable class="parameter">action</replaceable> [ ... ] [ RESTRICT ]
ALTER FUNCTION <replaceable>nom</replaceable> [ ( [ [ <replaceable class="parameter">mode_arg</replaceable> ] [ <replaceable class="parameter">nom_arg</replaceable> ] <replaceable class="parameter">type_arg</replaceable> [, ...] ] ) ]
     REnom TO <replaceable>nouveau_nom</replaceable>
ALTER FUNCTION <replaceable>nom</replaceable> [ ( [ [ <replaceable class="parameter">mode_arg</replaceable> ] [ <replaceable class="parameter">nom_arg</replaceable> ] <replaceable class="parameter">type_arg</replaceable> [, ...] ] ) ]
     OWNER TO { <replaceable>nouvea_proprietaire</replaceable> | CURRENT_USER | SESSION_USER }
ALTER FUNCTION <replaceable>nom</replaceable> [ ( [ [ <replaceable class="parameter">mode_arg</replaceable> ] [ <replaceable class="parameter">nom_arg</replaceable> ] <replaceable class="parameter">type_arg</replaceable> [, ...] ] ) ]
     SET SCHEMA <replaceable>nouveau_schema</replaceable>
ALTER FUNCTION <replaceable>nom</replaceable> [ ( [ [ <replaceable class="parameter">mode_arg</replaceable> ] [ <replaceable class="parameter">nom_arg</replaceable> ] <replaceable class="parameter">type_arg</replaceable> [, ...] ] ) ]
     [ NO ] DEPENDS ON EXTENSION <replaceable>nom_extension</replaceable>

<phrase>où <replaceable class="parameter">action</replaceable> peut être&nbsp;:</phrase>

    CALLED ON NULL INPUT | RETURNS NULL ON NULL INPUT | STRICT
    IMMUTABLE | STABLE | VOLATILE | [ NOT ] LEAKPROOF
    [ EXTERNAL ] SECURITY INVOKER | [ EXTERNAL ] SECURITY DEFINER
    PARALLEL { UNSAFE | RESTRICTED | SAFE }
    COST <replaceable class="parameter">cout_execution</replaceable>
    ROWS <replaceable class="parameter">nb_lignes_resultat</replaceable>
    SUPPORT <replaceable class="parameter">support_function</replaceable>
    SET <replaceable class="parameter">parametre</replaceable> { TO | = } { <replaceable class="parameter">valeur</replaceable> | DEFAULT }
    SET <replaceable class="parameter">parametre</replaceable> FROM CURRENT
    RESET <replaceable class="parameter">parametre</replaceable>
    RESET ALL
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>ALTER FUNCTION</command> modifie la définition d'une fonction.
  </para>

  <para>
   Seul le propriétaire de la fonction peut utiliser <command>ALTER FUNCTION</command>.
   Le privilège <literal>CREATE</literal> sur le nouveau schéma est requis
   pour pouvoir changer le schéma de la fonction.
   Pour modifier le propriétaire, il est nécessaire d'être membre
   direct ou indirect du nouveau rôle propriétaire. Ce dernier doit posséder le
   droit <literal>CREATE</literal> sur le schéma de la fonction. Ces
   restrictions assurent que la modification du propriétaire n'a pas d'effets autres
   que ceux obtenus par la suppression et la re-création de la fonction&nbsp;;
   toutefois, un superutilisateur peut modifier
   le propriétaire de n'importe quelle fonction.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nom</replaceable></term>
    <listitem>
     <para>
      Le nom de la fonction (potentiellement qualifié du nom du schéma).  Si
      aucune liste d'argument n'est spécifiée, le nom doit être unique dans son
      schéma.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">modearg</replaceable></term>

    <listitem>
     <para>
      Le mode d'un argument&nbsp;: <literal>IN</literal>, <literal>OUT</literal>,
      <literal>INOUT</literal> ou <literal>VARIADIC</literal>. En cas d'omission, la
      valeur par défaut est <literal>IN</literal>. <command>ALTER
       FUNCTION</command> ne tient pas compte des arguments <literal>OUT</literal>,
      car seuls les arguments en entrée sont nécessaire pour déterminer
      l'identité de la fonction. Les arguments <literal>IN</literal>,
      <literal>INOUT</literal> et <literal>VARIADIC</literal> sont donc
      suffisants.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nomarg</replaceable></term>

    <listitem>
     <para>
      Le nom d'un argument.
      <command>ALTER FUNCTION</command> ne tient pas compte des
      noms des arguments, car seuls les types de données des arguments
      sont nécessaires pour déterminer l'identité d'une fonction.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">typearg</replaceable></term>

    <listitem>
     <para>
      Le(s) type(s) de données des arguments de la fonction (éventuellement
      qualifié(s) du nom du schéma).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nouveau_nom</replaceable></term>
    <listitem>
     <para>
      Le nouveau nom de la fonction.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nouveau_proprietaire</replaceable></term>
    <listitem>
     <para>
      Le nouveau propriétaire de la fonction. Si cette fonction est
      marquée <literal>SECURITY DEFINER</literal>, elle s'exécute par la suite
      sous cette identité.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nouveau_schema</replaceable></term>
    <listitem>
     <para>
      Le nouveau schéma de la fonction.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DEPENDS ON EXTENSION <replaceable class="parameter">nom_extension</replaceable></literal></term>
    <term><literal>NO DEPENDS ON EXTENSION <replaceable class="parameter">nom_extension</replaceable></literal></term>
    <listitem>
     <para>
      Cette clause marque la fonction comme dépendante de l'extension ou comme
      indépendante de l'extension si le mot-clé <literal>NO</literal> est
      ajouté. Une fonction dépendante d'une extension est automatiquement
      supprimée quand l'extension est supprimée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CALLED ON NULL INPUT</literal></term>
    <term><literal>RETURNS NULL ON NULL INPUT</literal></term>
    <term><literal>STRICT</literal></term>

    <listitem>
     <para>
      <literal>CALLED ON NULL INPUT</literal> modifie la fonction pour qu'elle
      puisse être appelée avec des arguments NULL.
      <literal>RETURNS NULL ON NULL INPUT</literal> et
      <literal>STRICT</literal> modifie la fonction pour qu'elle ne soit pas
      appelée si un des arguments est NULL&nbsp;; un résultat NULL
      est alors automatiquement déterminé. Voir
      <xref linkend="sql-createfunction"/>
      pour plus d'informations.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>IMMUTABLE</literal></term>
    <term><literal>STABLE</literal></term>
    <term><literal>VOLATILE</literal></term>

    <listitem>
     <para>
      Modifie la volatilité de la fonction. Voir
      <xref linkend="sql-createfunction"/>
      pour plus d'informations.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal><optional> EXTERNAL </optional> SECURITY INVOKER</literal></term>
    <term><literal><optional> EXTERNAL </optional> SECURITY DEFINER</literal></term>

    <listitem>
     <para>
      Précise si la fonction doit être appelée avec les droits de l'utilisateur
      qui l'a créée.
      Le mot clé <literal>EXTERNAL</literal>, ignoré, existe pour des raisons
      de compatibilité SQL. Voir <xref linkend="sql-createfunction"/> pour plus
      d'informations.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>PARALLEL</literal></term>

    <listitem>
     <para>
      Indique si la fonction peut être exécutée en parallèle. Voir
      <xref linkend="sql-createfunction"/> pour les détails.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>LEAKPROOF</literal></term>
    <listitem>
     <para>
      Indique si la fonction doit être considérée comme étant étanche (<foreignphrase>leakproof</foreignphrase>).
      Voir <xref linkend="sql-createfunction"/> pour plus d'informations.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>COST</literal> <replaceable class="parameter">cout_execution</replaceable></term>

    <listitem>
     <para>
      Modifie l'estimation du coût d'exécution de la fonction.
      Voir <xref linkend="sql-createfunction"/> pour plus d'informations.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ROWS</literal> <replaceable class="parameter">nb_lignes_resultat</replaceable></term>

    <listitem>
     <para>
      Modifie l'estimation du nombre de lignes renvoyées par une fonction SRF.
      Voir <xref linkend="sql-createfunction"/> pour plus d'informations.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SUPPORT</literal> <replaceable class="parameter">support_function</replaceable></term>

    <listitem>
     <para>
      Fournit une fonction de support de planification utilisable pour cette fonction.
      Voir <xref linkend="xfunc-optimization"/> pour plus d'informations.
      Il faut être superutilisateur pour utiliser cette option.
     </para>

     <para>
      Cette option ne peut pas être utilisée pour supprimer la fonction de support,
      parce qu'elle doit indiquer une nouvelle fonction de support. Si vous avez besoin
      de faire cela, utilisez <command>CREATE OR REPLACE FUNCTION</command>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable>parametre</replaceable></term>
    <term><replaceable>valeur</replaceable></term>
    <listitem>
     <para>
      Ajoute ou modifie l'initialisation d'un paramètre de configuration
      lorsque la fonction est appelée. Si <replaceable>valeur</replaceable>
      est <literal>DEFAULT</literal> ou, de façon équivalente, si
      <literal>RESET</literal> est utilisé, le paramètre local de la fonction
      est supprimée pour que la fonction s'exécute avec la valeur par défaut
      du paramètre. Utiliser <literal>RESET ALL</literal> supprime tous les
      valeurs spécifiques des paramètres pour cette fonction.
      <literal>SET FROM CURRENT</literal> sauvegarde la valeur actuelle du
      paramètre quand <command>ALTER FUNCTION</command> est exécuté comme
      valeur à appliquer lors de l'exécution de la fonction.
     </para>

     <para>
      Voir <xref linkend="sql-set"/> et
      <xref linkend="runtime-config"/> pour plus d'informations sur les
      noms des paramètres et les valeurs autorisés.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RESTRICT</literal></term>

    <listitem>
     <para>
      Ignoré, présent pour des raisons de conformité avec le standard SQL.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Renommer la fonction <literal>sqrt</literal> pour le type
   <type>integer</type> en <literal>square_root</literal>&nbsp;:
   <programlisting>ALTER FUNCTION sqrt(integer) RENAME TO square_root;
   </programlisting>
  </para>

  <para>
   Changer le propriétaire de la fonction <literal>sqrt</literal> pour
   le type <type>integer</type> en <literal>joe</literal>&nbsp;:
   <programlisting>ALTER FUNCTION sqrt(integer) OWNER TO joe;
   </programlisting>
  </para>

  <para>
   Modifier le schéma de la fonction <literal>sqrt</literal> du type
   <type>integer</type> par <literal>maths</literal>&nbsp;:
   <programlisting>ALTER FUNCTION sqrt(integer) SET SCHEMA maths;
   </programlisting>
  </para>

  <para>
   Pour marquer la fonction <literal>sqrt</literal> du type
   <type>integer</type> comme dépendant de l'extension
   <literal>mathlib</literal>&nbsp;:
<programlisting>
ALTER FUNCTION sqrt(integer) DEPENDS ON EXTENSION mathlib;
</programlisting>
  </para>

  <para>
   Pour ajuster automatiquement le chemin de recherche des schémas pour une
   fonction&nbsp;:
   <programlisting>
ALTER FUNCTION verifie_motdepasse(text) SET search_path = admin, pg_temp;
   </programlisting>
  </para>

  <para>
   Pour désactiver le paramètre <varname>search_path</varname> d'une
   fonction&nbsp;:
   <programlisting>
ALTER FUNCTION verifie_motdepasse(text) RESET search_path;
   </programlisting>
   La fonction s'exécutera maintenant avec la valeur de la session pour cette
   variable.
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   La compatibilité de cette instruction avec l'instruction
   <command>ALTER FUNCTION</command> du standard SQL est partielle. Le standard autorise la
   modification d'un plus grand nombre de propriétés d'une fonction mais ne
   laisse pas la possibilité de renommer une fonction, de placer le commutateur
   <literal>SECURITY DEFINER</literal> sur la fonction, d'y attacher des valeurs
   de paramètres ou d'en modifier le
   propriétaire, le schéma ou la volatilité. Le standard
   requiert le mot clé <literal>RESTRICT</literal>&nbsp;; il est optionnel avec
   <productname>PostgreSQL</productname>.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createfunction"/></member>
   <member><xref linkend="sql-dropfunction"/></member>
  </simplelist>
 </refsect1>
</refentry>
