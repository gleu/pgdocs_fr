<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-reindex">
 <indexterm zone="sql-reindex">
  <primary>REINDEX</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>REINDEX</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>REINDEX</refname>
  <refpurpose>reconstruit les index</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>REINDEX [ ( VERBOSE ) ] { INDEX | TABLE | SCHEMA | DATABASE | SYSTEM } <replaceable class="parameter">nom</replaceable></synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>REINDEX</command> reconstruit un index en utilisant les données
   stockées dans la table, remplaçant l'ancienne copie de l'index. Il y a
   plusieurs raisons pour utiliser <command>REINDEX</command>&nbsp;:

   <itemizedlist>
    <listitem>
     <para>
      Un index a été corrompu et ne contient plus de données valides. Bien
      qu'en théorie, ceci ne devrait jamais arriver, en pratique, les index
      peuvent se corrompre à cause de bogues dans le logiciel ou d'échecs
      matériels. <command>REINDEX</command> fournit une méthode de récupération.
     </para>
    </listitem>

    <listitem>
     <para>
      L'index en question a <quote>explosé</quote>, c'est-à-dire qu'il contient
      beaucoup de pages d'index mortes ou presque mortes. Ceci peut arriver
      avec des index B-tree dans <productname>PostgreSQL</productname> sous
      certains modèles d'accès inhabituels.
      <command>REINDEX</command> fournit un moyen de réduire la consommation
      d'espace de l'index en écrivant une nouvelle version de l'index sans les
      pages mortes. Voir <xref linkend="routine-reindex"/> pour plus
      d'informations.
     </para>
    </listitem>

    <listitem>
     <para>
      Vous avez modifié un paramètre de stockage (par exemple, fillfactor) pour
      un index et vous souhaitez vous assurer que la modification a été prise en
      compte.
     </para>
    </listitem>

    <listitem>
     <para>
      La construction d'un index avec l'option <literal>CONCURRENTLY</literal> a
      échoué, laissant un index <quote>invalide</quote>. De tels index sont
      inutiles donc il est intéressant d'utiliser <command>REINDEX</command>
      pour les reconstruire. Notez que <command>REINDEX</command> n'exécutera pas
      une construction en parallèle. Pour construire l'index sans interférer avec
      le système en production, vous devez supprimer l'index et ré-exécuter la
      commande <command>CREATE INDEX CONCURRENTLY</command>.
     </para>
    </listitem>

   </itemizedlist>
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><literal>INDEX</literal></term>
    <listitem>
     <para>
      Recrée l'index spécifié.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>TABLE</literal></term>
    <listitem>
     <para>
      Recrée tous les index de la table spécifiée. Si la table a une seconde
      table <quote>TOAST</quote>, elle est aussi réindexée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SCHEMA</literal></term>
    <listitem>
     <para>
      Recrée tous les index du schéma spécifié. Si une table de ce schéma a
      une table secondaire (<quote>TOAST</quote>), elle est aussi réindexée.
      Les index sur les catalogues systèmes partagées sont aussi traités.
      Cette forme de <command>REINDEX</command> ne peut pas être exécutée dans
      un bloc de transaction.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DATABASE</literal></term>
    <listitem>
     <para>
      Recrée tous les index de la base de données en cours. Les index sur
      les catalogues système partagés sont aussi traités. Cette forme de
      <command>REINDEX</command>
      ne peut pas être exécutée à l'intérieur d'un bloc de transaction.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SYSTEM</literal></term>
    <listitem>
     <para>
      Recrée tous les index des catalogues système à l'intérieur de la base de
      données en cours. Les index sur les catalogues système partagés sont aussi
      inclus. Les index des tables utilisateur ne sont pas traités. Cette forme
      de <command>REINDEX</command> ne peut pas être exécutée à l'intérieur d'un
      bloc de transaction.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom</replaceable></term>
    <listitem>
     <para>
      Le nom de l'index, de la table ou de la base de données spécifique à
      réindexer. Les noms de table et d'index peuvent être qualifiés du nom du
      schéma. Actuellement, <command>REINDEX DATABASE</command> et
      <command>REINDEX SYSTEM</command> ne peuvent réindexer que la base de
      données en cours, donc ce paramètre doit correspondre au nom de la
      base de données en cours.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>VERBOSE</literal></term>
    <listitem>
     <para>
      Affiche un message de progression à chaque index traité.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Si vous suspectez la corruption d'un index sur une table utilisateur, vous
   pouvez simplement reconstruire cet index, ou tous les index de la table, en
   utilisant <command>REINDEX INDEX</command> ou <command>REINDEX
    TABLE</command>.
  </para>

  <para>
   Les choses sont plus difficiles si vous avez besoin de récupérer la
   corruption d'un index sur une table système. Dans ce cas, il est important
   pour le système de ne pas avoir utilisé lui-même un des index suspects. (En
   fait, dans ce type de scénario, vous pourriez constater que les processus
   serveur s'arrêtent brutalement au lancement du service, en cause l'utilisation
   des index corrompus.) Pour récupérer proprement, le serveur doit être lancé
   avec l'option <option>-P</option>, qui inhibe l'utilisation des index pour
   les recherches dans les catalogues système.
  </para>

  <para>
   Une autre façon est d'arrêter le serveur et de relancer le serveur
   <productname>PostgreSQL</productname> en mode simple utilisateur avec l'option
   <option>-P</option> placée sur la ligne de commande. Ensuite,
   <command>REINDEX DATABASE</command>, <command>REINDEX SYSTEM</command>,
   <command>REINDEX TABLE</command> ou <command>REINDEX INDEX</command> peuvent être lancés
   suivant ce que vous souhaitez reconstruire. En
   cas de doute, utilisez la commande <command>REINDEX SYSTEM</command> pour activer la
   reconstruction de tous les index système de la base de données. Enfin,
   quittez la session simple utilisateur du serveur et relancez le serveur en mode normal. Voir
   la page de référence de <xref linkend="app-postgres"/> pour plus
   d'informations sur l'interaction avec l'interface du serveur en mode simple utilisateur.
  </para>

  <para>
   Une session standard du serveur peut aussi être lancée avec
   <option>-P</option> dans les options de la ligne de commande. La
   méthode pour ce faire varie entre les clients mais dans tous les clients
   basés sur <application>libpq</application>, il est possible de configurer la variable
   d'environnement <envar>PGOPTIONS</envar> à <literal>-P</literal> avant de lancer le
   client. Notez que, bien que cette méthode ne verrouille
   pas les autres clients, il est conseillé d'empêcher les autres
   utilisateurs de se connecter à la base de données endommagée jusqu'à la fin
   des réparations.
  </para>

  <para>
   <command>REINDEX</command> est similaire à une suppression et à une nouvelle
   création de l'index. Dans les faits, le contenu de l'index est complètement
   recréé. Néanmoins, les considérations de verrouillage sont assez
   différentes. <command>REINDEX</command> verrouille les écritures mais pas les
   lectures de la table mère de l'index. Il positionne également un verrou de
   type <literal>ACCESS EXCLUSIVE</literal> sur l'index en cours de
   traitement, ce qui bloque les lectures qui tentent de l'utiliser. Au
   contraire, <command>DROP INDEX</command> prends temporairement un verrou de
   type <literal>ACCESS EXCLUSIVE</literal> sur la table parent, bloquant
   ainsi écritures et lectures.
   Le <command>CREATE INDEX</command> qui suit verrouille les écritures mais pas les
   lectures&nbsp;; comme l'index n'existe pas, aucune lecture ne peut être
   tentée, signifiant qu'il n'y a aucun blocage et que les lectures sont
   probablement forcées de réaliser des parcours séquentiels complets.
  </para>

  <para>
   Ré-indexer un seul index ou une seule table requiert d'être le propriétaire
   de cet index ou de cette table. Ré-indexer un schéma ou une base de données
   requiert d'être le propriétaire du schéma ou de la base de données. Notez
   que, du coup, il est parfois possible pour des utilisateurs standards de
   reconstruire les index de tables dont ils ne sont pas propriétaires
   Néanmoins, il existe une exception spéciale, quand <command>REINDEX
   DATABASE</command>, <command>REINDEX SCHEMA</command> ou <command>REINDEX
   SYSTEM</command> est exécuté par un utilisateur standard, les index sur les
   catalogues partagés seront ignorés sauf si l'utilisateur possède le
   catalogue (ce qui ne sera généralement pas le cas). Bien sûr, les
   superutilisateurs peuvent toujours tout ré-indexer.
  </para>

  <para>
   Ré-indexer les tables partitionnées ou les index partitionnés n'est pas
   supporté. Par contre, chaque partition individuelle peut être ré-indexée
   séparément.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Reconstruit un index simple&nbsp;:

   <programlisting>REINDEX INDEX my_index;
  </programlisting>
 </para>

 <para>
  Recrée les index sur la table <literal>ma_table</literal>&nbsp;:

  <programlisting>REINDEX TABLE ma_table;
  </programlisting>
 </para>

 <para>
  Reconstruit tous les index d'une base de données particulière sans
  faire confiance à la validité des index système&nbsp;:

  <programlisting>$ <userinput>export PGOPTIONS="-P"</userinput>
$ <userinput>psql broken_db</userinput>
...
broken_db=&gt; REINDEX DATABASE broken_db;
broken_db=&gt; \q
  </programlisting>
 </para>
</refsect1>

<refsect1>
 <title>Compatibilité</title>

 <para>
  Il n'existe pas de commande <command>REINDEX</command> dans le standard SQL.
 </para>
</refsect1>
</refentry>
