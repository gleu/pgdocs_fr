<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->
<!-- SAS 20060616 -->

<refentry id="sql-alterdomain">
 <indexterm zone="sql-alterdomain">
  <primary>ALTER DOMAIN</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER DOMAIN</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>
   ALTER DOMAIN
  </refname>
  <refpurpose>
   Modifier la définition d'un domaine
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>ALTER DOMAIN <replaceable class="parameter">nom</replaceable>
    { SET DEFAULT <replaceable class="parameter">expression</replaceable> | DROP DEFAULT }
ALTER DOMAIN <replaceable class="parameter">nom</replaceable>
    { SET | DROP } NOT NULL
ALTER DOMAIN <replaceable class="parameter">nom</replaceable>
    ADD <replaceable class="parameter">contrainte_de_domaine</replaceable> [ NOT VALID ]
ALTER DOMAIN <replaceable class="parameter">nom</replaceable>
    DROP CONSTRAINT [ IF EXISTS ] <replaceable class="parameter">nom_de_contrainte</replaceable> [ RESTRICT | CASCADE ]
ALTER DOMAIN <replaceable class="parameter">nom</replaceable>
     RENAME CONSTRAINT <replaceable class="parameter">nom_de_contrainte</replaceable> TO <replaceable class="parameter">nouveau_nom_de_contrainte</replaceable>
ALTER DOMAIN <replaceable class="parameter">nom</replaceable>
    VALIDATE CONSTRAINT <replaceable class="parameter">nom_de_contrainte</replaceable>
ALTER DOMAIN <replaceable class="parameter">nom</replaceable>
    OWNER TO { <replaceable class="parameter">nouveau_propriétaire</replaceable> | CURRENT_USER | SESSION_USER }
ALTER DOMAIN <replaceable class="parameter">nom</replaceable>
    RENAME TO <replaceable class="parameter">nouveau_nom</replaceable>
ALTER DOMAIN <replaceable class="parameter">nom</replaceable>
    SET SCHEMA <replaceable class="parameter">nouveau_schema</replaceable>
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>ALTER DOMAIN</command> modifie la définition d'un domaine.
   Il existe plusieurs sous-formes&nbsp;:
  </para>

  <variablelist>
   <varlistentry>
    <term><literal>SET</literal>/<literal>DROP DEFAULT</literal></term>
    <listitem>
     <para>
      Ces formes positionnent ou suppriment la valeur par défaut d'un domaine.
      Les valeurs par défaut ne s'appliquent qu'aux commandes
      <command>INSERT</command> ultérieures&nbsp;; les colonnes d'une table
      qui utilise déjà le domaine ne sont pas affectées.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET</literal>/<literal>DROP NOT NULL</literal></term>
    <listitem>
     <para>
      Ces formes agissent sur l'acceptation ou le rejet des valeurs NULL par un domaine.
      <literal>SET NOT NULL</literal> ne peut être utilisé que si les colonnes qui utilisent
      le domaine contiennent des valeurs non nulles.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ADD <replaceable class="parameter">contrainte de domaine</replaceable> [ NOT VALID ]</literal></term>
    <listitem>
     <para>
      Cette forme ajoute une nouvelle contrainte à un domaine avec la même
      syntaxe que <xref linkend="sql-createdomain"/>.
      Lorsqu'une nouvelle contrainte est ajoutée à un domaine, toutes les colonnes
      utilisant ce domaine seront vérifiées avec cette nouvelle contrainte. Cette
      vérification initiale peut être annulée en ajoutant l'option <literal>NOT VALID</literal>
      lors de l'ajout de la nouvelle contrainte&nbsp;; la contrainte pourra à nouveau être
      activée en utilisant la commande <command>ALTER DOMAIN ... VALIDATE CONSTRAINT</command>.
      Les lignes nouvellement ajoutées ou modifiées sont toujours vérifiées pour l'ensemble
      des contraintes, y compris celles marquées <literal>NOT VALID</literal>. À noter enfin
      que l'option <literal>NOT VALID</literal> n'est acceptée que pour les contraintes de
      type <literal>CHECK</literal>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP CONSTRAINT [ IF EXISTS ]</literal></term>
    <listitem>
     <para>
      Cette forme supprime les contraintes sur un domaine.
      Si l'option <literal>IF EXISTS</literal> est spécifiée et que la contrainte
      n'existe pas, aucune erreur n'est retournée. Dans ce cas, un simple message
      d'avertissement est retourné.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME CONSTRAINT</literal></term>
    <listitem>
     <para>
      Cette forme modifie le nom de la contrainte d'un domaine.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>VALIDATE CONSTRAINT</literal></term>
    <listitem>
     <para>
      Cette forme valide une contrainte ajoutée précédemment avec l'option <literal>NOT VALID</literal>,
      c'est-à-dire qu'elle vérifie que les valeurs de chaque colonne utilisant ce type
      domaine satisfont la contrainte spécifiée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OWNER</literal></term>
    <listitem>
     <para>
      Cette forme change le propriétaire du domaine.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME</literal></term>
    <listitem>
     <para>
      Cette forme modifie le nom du domaine.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET SCHEMA</literal></term>
    <listitem>
     <para>
      Cette forme change le schéma du domaine. Toute contrainte associée au
      domaine est déplacée dans le nouveau schéma.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   Seul le propriétaire de la fonction d'agrégat peut utiliser
   <command>ALTER AGGREGATE</command>.
  </para>

  <para>
   Seul le propriétaire du domaine peut utiliser <command>ALTER
    DOMAIN</command>. Pour modifier le schéma d'un domaine,
   le droit <literal>CREATE</literal> sur le nouveau schéma est également requis.
   Pour modifier le propriétaire, il faut être un membre direct ou
   indirect du nouveau rôle propriétaire et ce rôle doit avoir le droit
   <literal>CREATE</literal> sur le schéma du domaine. Ces
   restrictions assurent que la modification du propriétaire n'agissent pas
   au-delà de ce qui est réalisable en supprimant et en re-créant
   le domaine. Toutefois, un superutilisateur peut modifier
   le propriétaire de n'importe quel domaine.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <para>
   <variablelist>
    <varlistentry>
     <term><replaceable class="parameter">nom</replaceable></term>
     <listitem>
      <para>
       Le nom du domaine à modifier.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">contrainte_de_domaine</replaceable></term>
     <listitem>
      <para>
       Nouvelle contrainte de domaine pour le domaine.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nom_de_contrainte</replaceable></term>
     <listitem>
      <para>
       Le nom d'une contrainte à supprimer ou renommer.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>NOT VALID</literal></term>
     <listitem>
      <para>
       Ne vérifie pas la validité de la contrainte appliquée aux valeurs des colonnes existantes.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>CASCADE</literal></term>
     <listitem>
      <para>
       Les objets qui dépendent de la contrainte sont automatiquement supprimés,
       ainsi que tous les objets dépendants de ces objets (voir <xref
       linkend="ddl-depend"/>).
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>RESTRICT</literal></term>
     <listitem>
      <para>
       La contrainte n'est pas supprimée si des objets en dépendent.
       C'est le comportement par défaut.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nouveau_nom</replaceable></term>
     <listitem>
      <para>
       Le nouveau nom du domaine.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nouveau_nom_de_contrainte</replaceable></term>
     <listitem>
      <para>
       Le nouveau nom de la contrainte.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nouveau_propriétaire</replaceable></term>
     <listitem>
      <para>
       Le nom de l'utilisateur nouveau propriétaire du domaine.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nouveau_schema</replaceable></term>
     <listitem>
      <para>
       Le nouveau schéma du domaine.
      </para>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Bien que <command>ALTER DOMAIN ADD CONSTRAINT</command> essaie de vérifier
   que les données existantes satisfont la nouvelle contrainte,
   le test n'est pas absolu, parce que la commande ne peut pas <quote>voir</quote>
   les lignes de la table qui sont nouvellement insérées ou mises à jour et
   dont la transaction n'est pas encore validée.  S'il y a un risque
   que des opérations concurrentes puissent insérer des données ne
   satisfaisant pas la contrainte, la manière de procéder consiste à
   ajouter la contrainte avec l'option <literal>NOT VALID</literal>,
   valider (commit) cette commande, attendre jusqu'à ce que toutes les
   transactions démarrées avant cette validation aient fini, et alors
   exécuter <command>ALTER DOMAIN VALIDATE CONSTRAINT</command> pour
   chercher les données qui violeraient la contrainte. Cette méthode
   est fiable parce qu'une fois que la création de contrainte a fait
   l'objet d'un commit, il est garanti que les nouvelles transactions
   sont soumises à cette contrainte pour toute nouvelle valeur du type
   domaine.
  </para>

  <para>
   Actuellement, <command>ALTER DOMAIN ADD CONSTRAINT</command>,
   <command>ALTER DOMAIN VALIDATE CONSTRAINT</command> et <command>ALTER
   DOMAIN SET NOT NULL</command> échoueront si le domaine nommé ou tout
   domaine dérivé est utilisé pour une colonne de type conteneur (type
   composé, tableau ou intervalle) dans toute table de la base de données. Il
   se pourrait que cela soit amélioré pour vérifier la nouvelle contrainte sur
   ce type de colonnes intégrées.
  </para>

 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Ajouter une contrainte <literal>NOT NULL</literal> à un domaine&nbsp;:
   <programlisting>ALTER DOMAIN codezip SET NOT NULL;</programlisting>
   Supprimer une contrainte <literal>NOT NULL</literal> d'un domaine&nbsp;:
   <programlisting>ALTER DOMAIN codezip DROP NOT NULL;</programlisting>
  </para>

  <para>
   Ajouter une contrainte de contrôle à un domaine&nbsp;:
   <programlisting>ALTER DOMAIN codezip ADD CONSTRAINT verif_zip CHECK (char_length(VALUE) = 5);</programlisting>
  </para>

  <para>
   Supprimer une contrainte de contrôle d'un domaine&nbsp;:
   <programlisting>ALTER DOMAIN codezip DROP CONSTRAINT verif_zip;</programlisting>
  </para>

  <para>
   Pour renommer une contrainte de contrôle d'un domaine&nbsp;:
<programlisting>
ALTER DOMAIN codezip RENAME CONSTRAINT verif_zip TO zip_verif;
   </programlisting>
  </para>

  <para>
   Déplacer le domaine dans un schéma différent&nbsp;:
   <programlisting>ALTER DOMAIN zipcode SET SCHEMA customers;</programlisting>
  </para>
 </refsect1>

 <refsect1 id="sql-alterdomain-compatibility">
  <title>Compatibilité</title>

  <para>
   <command>ALTER DOMAIN</command> se conforme au standard <acronym>SQL</acronym>,
   à l'exception des variantes <literal>OWNER</literal>, <literal>RENAME</literal>,
   <literal>SET SCHEMA</literal> et
   <literal>VALIDATE CONSTRAINT</literal>, qui sont des extensions
   <productname>PostgreSQL</productname>. L'option <literal>NOT VALID</literal>
   de la variante <literal>ADD CONSTRAINT</literal> est elle-aussi une extension de
   <productname>PostgreSQL</productname>.
  </para>
 </refsect1>

 <refsect1 id="sql-alterdomain-see-also">
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createdomain"/></member>
   <member><xref linkend="sql-dropdomain"/></member>
  </simplelist>
 </refsect1>

</refentry>
