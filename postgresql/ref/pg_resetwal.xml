<?xml version="1.0" encoding="UTF-8"?>
<refentry id="app-pgresetwal">
 <indexterm zone="app-pgresetwal">
  <primary>pg_resetwal</primary>
 </indexterm>

 <refmeta>
  <refentrytitle><application>pg_resetwal</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_resetwal</refname>
  <refpurpose>réinitialiser les WAL et les autres informations de contrôle
   d'une instance <productname>PostgreSQL</productname></refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_resetwal</command>
   <group choice="opt">
    <arg choice="plain"><option>--force</option></arg>
    <arg choice="plain"><option>-f</option></arg>
   </group>
   <group choice="opt">
    <arg choice="plain"><option>--dry-run</option></arg>
    <arg choice="plain"><option>-n</option></arg>
   </group>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
   <group choice="plain">
    <group choice="opt">
     <arg choice="plain"><option>--pgdata</option></arg>
     <arg choice="plain"><option>-D</option></arg>
    </group>
    <replaceable class="parameter"> répertoire_données</replaceable>
   </group>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1 id="r1-app-pgresetwal-1">
  <title>Description</title>

  <para>
   <command>pg_resetwal</command> efface les journaux d'écritures anticipées
   (<foreignphrase>Write-Ahead Log</foreignphrase> ou WAL) et réinitialise
   optionnellement quelques autres informations de contrôle stockées dans le
   fichier <filename>pg_control</filename>. Cette fonction est parfois
   nécessaire si ces fichiers ont été corrompus. Elle ne doit être utilisée
   qu'en dernier ressort quand le serveur ne démarre plus du fait d'une telle
   corruption.
  </para>

  <para>
   À la suite de cette commande, le serveur doit pouvoir redémarrer.
   Toutefois, il ne faut pas perdre de vue que la base de données peut
   contenir des données inconsistantes du fait de transactions partiellement
   validées. Il est alors opportun de sauvegarder les données, lancer
   <command>initdb</command> et de les recharger. Après cela, les incohérences
   doivent être recherchées et le cas échéant corrigées.
  </para>

  <para>
   Seul l'utilisateur qui a installé le serveur peut utiliser cet outil. Il
   requiert, en effet, un accès en lecture/écriture au répertoire des données.
   Pour des raisons de sécurité, <command>pg_resetwal</command> n'utilise pas
   la variable d'environnement <envar>PGDATA</envar>. Le répertoire des
   données doit donc être précisé sur la ligne de commande.
  </para>

  <para>
   Si <command>pg_resetwal</command> se plaint de ne pas pouvoir déterminer de
   données valides pour <filename>pg_control</filename>, vous pouvez malgré
   tout le forcer à continuer en spécifiant l'option <option>-f</option>
   (force). Dans ce cas, des valeurs probables sont substituées aux données
   manquantes. La plupart des champs correspondent mais une aide manuelle
   pourrait être nécessaire pour le prochain OID, le prochain TID et sa date,
   le prochain identifiant multi-transaction et son décalage, l'adresse de
   début des journaux de transactions. Ces champs peuvent être configurés en
   utilisant les options indiquées ci-dessus.  Si vous n'êtes pas capable de
   déterminer les bonnes valeurs pour tous ces champs, <option>-f</option>
   peut toujours être utilisé mais la base de données récupérée doit être
   traitée avec encore plus de suspicion que d'habitude&nbsp;: une sauvegarde
   immédiate et un rechargement sont impératifs. <emphasis>Ne pas</emphasis>
   exécuter d'opérations de modifications de données dans la base avant de
   sauvegarder&nbsp;; ce type d'action risque de faire empirer la corruption.
  </para>
 </refsect1>

 <refsect1>
  <title>Options</title>

  <variablelist>
   <varlistentry>
    <term><option>-f</option></term>
    <term><option>--force</option></term>
    <listitem>
     <para>
      Force <command>pg_resetwal</command> à continuer même s'il ne peut pas
      déterminer de données valides pour <filename>pg_control</filename>,
      comme expliquées ci-dessus.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-n</option></term>
    <term><option>--dry-run</option></term>
    <listitem>
     <para>
      L'option <option>-n</option>/<option>--dry-run</option> demande à
      <command>pg_resetwal</command> d'afficher les valeurs reconstruites à
      partir de <filename>pg_control</filename> et les valeurs à modifier,
      puis quitte sans faire aucune modification. C'est principalement un
      outil de débugage, mais il peut être utilisé aussi comme outil de
      vérification avant d'autoriser <command>pg_resetwal</command> à réaliser
      des modifications.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-V</option></term>
    <term><option>--version</option></term>
    <listitem>
     <para>
      Affiche les informations de version, puis quitte.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-?</option></term>
    <term><option>--help</option></term>
    <listitem>
     <para>
      Affiche l'aide, puis quitte.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   Les options suivantes sont seulement nécessaires quand
   <command>pg_resetwal</command> est incapable de déterminer les valeurs
   appropriées lors de la lecture de <filename>pg_control</filename>. Des
   valeurs sûres peuvent être déterminées comme décrit ci-dessous. Pour les
   valeurs prenant des arguments numériques, les valeurs hexadécimales peuvent
   être précisées en utilisant le préfixe <literal>0x</literal>.
  </para>

  <variablelist>
   <varlistentry>
    <term><option>-c <replaceable class="parameter">xid</replaceable>,<replaceable class="parameter">xid</replaceable></option></term>
    <term><option>--commit-timestamp-ids=<replaceable class="parameter">xid</replaceable>,<replaceable class="parameter">xid</replaceable></option></term>
    <listitem>
     <para>
      Configure manuellement le plus ancien et le plus récent identifiant de
      transaction pour lesquels le temps de validation peut être retrouvé.
     </para>

     <para>
      Une valeur sûre pour la plus ancienne transaction dont le temps de
      validation peut être retrouvé (première partie) peut être déterminée en
      recherchant le numéro de fichier le plus petit numériquement dans le
      sous-répertoire <filename>pg_commit_ts</filename> du répertoire
      principal des données. De la même manière, une valeur sûre pour
      l'identifiant de transaction le plus récent dont le temps de validation
      peut être retrouvé (deuxième partie) peut être déterminé en recherchant
      le nom de fichier le plus grand numériquement dans le même répertoire.
      Les noms de fichiers sont en hexadécimal.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-e <replaceable class="parameter">xid_epoch</replaceable></option></term>
    <term><option>--epoch=<replaceable class="parameter">xid_epoch</replaceable></option></term>
    <listitem>
     <para>
      Configure manuellement l'epoch du prochain identifiant de transaction.
     </para>

     <para>
      L'epoch de l'identifiant de transaction n'est pas enregistré
      actuellement dans la base de données, en dehors du champ configuré par
      <command>pg_resetwal</command>, donc n'importe quelle valeur
      fonctionnera. Vous pourriez avoir besoin d'ajuster cette valeur pour
      assurer que les systèmes de réplication comme
      <application>Slony-I</application> et
      <application>Skytools</application> fonctionnent correctement &mdash;
      dans ce cas, une valeur appropriée est récupérable à partir de l'état de
      la base de données répliquée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-l <replaceable class="parameter">fichier_wal</replaceable></option></term>
    <term><option>--next-wal-file=<replaceable class="parameter">fichier_wal</replaceable></option></term>
    <listitem>
     <para>
      Configure manuellement l'emplacement de démarrage du WAL en spécifiant
      le nom du prochain fichier de segment WAL.
     </para>

     <para>
      Le nom du prochain fichier de segment WAL devrait être plus gros que le
      nom des segments WAL existant actuellement dans le sous-répertoire
      <filename>pg_wal</filename> sous le répertoire principal de données. Ces
      noms sont aussi en hexadécimal et sont composés de trois parties. La
      première partie est l'<quote>identifiant de la ligne de temps</quote> et
      devrait être généralement identique. Par exemple, si
      <filename>00000001000000320000004A</filename> est la plus large entrée
      dans largest entry in <filename>pg_wal</filename>, utilisez <literal>-l
       00000001000000320000004B</literal> ou plus haut.
     </para>

     <para>
      Notez que, en utilisant des tailles non standards pour les segments WAL,
      les nombres dans les noms des fichiers WAL sont différents des LSN
      reportés par les fonctions systèmes et les vues systèmes. Cette option
      prend un nom de fichier WAL, pas un LSN.
     </para>

     <note>
      <para>
       <command>pg_resetwal</command> recherche lui-même les fichiers dans
       <filename>pg_wal</filename> et choisit une configuration par défaut
       pour <option>-l</option> au-dessus du dernier nom de fichier existant.
       De ce fait, un ajustement manuel de <option>-l</option> est seulement
       nécessaire si vous connaissez des fichiers de segments WAL qui ne sont
       pas actuellement présents dans <filename>pg_wal</filename>, comme les
       entrées d'une archive hors-ligne ou si le contenu de
       <filename>pg_wal</filename> a été entièrement perdu.
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-m <replaceable class="parameter">mxid</replaceable>,<replaceable class="parameter">mxid</replaceable></option></term>
    <term><option>--multixact-ids=<replaceable class="parameter">mxid</replaceable>,<replaceable class="parameter">mxid</replaceable></option></term>
    <listitem>
     <para>
      Configure manuellement le plus ancien et le prochain identifiants de
      multitransaction.
     </para>

     <para>
      Une valeur sûre pour le prochain identifiant de multitransaction
      (première partie) peut être déterminée en recherchant le nom de fichier
      le plus élevé numériquement dans le sous-répertoire
      <filename>pg_multixact/offsets</filename> du répertoire principal des
      données, en ajoutant 1, puis en multipliant par 65536 (0x10000). De la
      même façon, une valeur sûr pour l'identifiant de multitransaction le
      plus ancien (deuxième partie de <option>-m</option>) peut être
      déterminée en recherchant le nom de fichier le moins élevé numériquement
      dans le même répertoire et en multipliant par 65536. Les noms de fichier
      sont en hexadécimal, donc la façon la plus simple de le faire est de
      spécifier la valeur en option en hexadécimal et d'ajouter quatre zéros.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-o <replaceable class="parameter">oid</replaceable></option></term>
    <term><option>--next-oid=<replaceable class="parameter">oid</replaceable></option></term>
    <listitem>
     <para>
      Configure manuellement le prochain OID.
     </para>

     <para>
      Il n'existe pas de façon simple de déterminer le prochain OID, celui qui
      se trouve après le numéro le plus élevé dans la base de données.
      Heureusement, ce n'est pas critique de configurer correctement ce
      paramètre.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-O <replaceable class="parameter">mxoff</replaceable></option></term>
    <term><option>--multixact-offset=<replaceable class="parameter">mxoff</replaceable></option></term>
    <listitem>
     <para>
      Configure manuellement le prochain décalage de multitransaction.
     </para>

     <para>
      Une valeur sûre peut être déterminée en recherchant le nom de fichier le
      plus élevé numériquement dans le sous-répertoire
      <filename>pg_multixact/members</filename> du répertoire principal des
      données, en ajoutant 1, puis en multipliant par 52352 (0xCC80). Les noms
      de fichier sont en hexadécimal. Il n'existe pas de recette simple telle
      que celles fournies pour les autres options avec l'ajout de zéros.

     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>--wal-segsize=<replaceable class="parameter">wal_segment_size</replaceable></option></term>
    <listitem>
     <para>
      Configure la nouvelle taille d'un segment WAL, en mégaoctets. La valeur
      doit être une puissance de 2 entre 1 et 1024 (mégaoctets). Voir la même
      option de <xref linkend="app-initdb"/> pour plus d'informations.
     </para>

     <note>
      <para>
       Bien que <command>pg_resetwal</command> configurera l'adresse de début
       de WAL après le dernier fichier segment de WAL existant, certaines
       modifications de taille de segment peuvent causer la réutilisation de
       précédents noms de fichier WAL. Il est recommandé d'utiliser l'option
       <option>-l</option> avec cette option pour configurer manuellement
       l'adresse de début de WAL si une surcharge d'un nom de fichier WAL
       causerait des problèmes avec votre stratégie d'archivage.
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-x <replaceable class="parameter">xid</replaceable></option></term>
    <term><option>--next-transaction-id=<replaceable class="parameter">xid</replaceable></option></term>
    <listitem>
     <para>
      Configure manuellement la prochain identifiant de transaction.
     </para>

     <para>
      Une valeur sûre peut être déterminée en recherchant le nom de fichier le
      plus élevé numériquement dans le sous-répertoire
      <filename>pg_xact</filename> du répertoire principal des données, en
      ajoutant 1, puis en multipliant par 1048576 (0x100000). Notez que les
      noms de fichier sont en hexadécimal. Il est généralement plus simple de
      spécifier la valeur de l'option en hexadécimal. Par exemple, si
      <filename>0011</filename> est l'entrée la plus élevée dans
      <filename>pg_xact</filename>, <literal>-x 0x1200000</literal>
      fonctionnera (cinq zéros à l'arrière fournissent le bon multiplicateur).
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Environment</title>

  <variablelist>
   <varlistentry>
    <term><envar>PG_COLOR</envar></term>
    <listitem>
     <para>
      Précise s'il faut utiliser des couleurs dans les messages de
      diagnostique. Les valeurs possibles sont <literal>always</literal>,
      <literal>auto</literal>, <literal>never</literal>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Cette commande ne doit pas être utilisée quand le serveur est en cours
   d'exécution. <command>pg_resetwal</command> refusera de démarrer s'il
   trouve un fichier verrou du serveur dans le répertoire de données. Si le
   serveur s'est arrêté brutalement, un fichier verrou pourrait être toujours
   présent. Dans ce cas, vous pouvez supprimer le fichier verrou pour
   permettre l'exécution de <command>pg_resetwal</command>. Mais avant de
   faire cela, assurez-vous qu'aucun processus serveur n'est toujours en cours
   d'exécution.
  </para>

  <para>
   <command>pg_resetwal</command> fonctionne seulement avec les serveurs de la
   même version majeure.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="app-pgcontroldata"/></member>
  </simplelist>
 </refsect1>
</refentry>
