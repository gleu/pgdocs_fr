<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->
<!-- SAS 20060327 : Correction de tags -->

<refentry id="sql-vacuum">
 <indexterm zone="sql-vacuum">
  <primary>VACUUM</primary>
 </indexterm>

 <refmeta>
  <refentrytitle id="sql-vacuum-title">VACUUM</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>VACUUM</refname>
  <refpurpose>récupère l'espace inutilisé et, optionnellement, analyse une base</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>VACUUM [ ( { FULL | FREEZE | VERBOSE | ANALYZE | DISABLE_PAGE_SKIPPING } [, ...] ) ] [ <replaceable class="PARAMETER">nom_table</replaceable> [ (<replaceable class="PARAMETER">nom_colonne</replaceable> [, ...] ) ] ]
VACUUM [ FULL ] [ FREEZE ] [ VERBOSE ] [ <replaceable class="parameter">nom_table</replaceable> ]
VACUUM [ FULL ] [ FREEZE ] [ VERBOSE ] ANALYZE [ <replaceable class="parameter">nom_table</replaceable> [ (<replaceable class="parameter">nom_colonne</replaceable> [, ...] ) ] ]
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>VACUUM</command> récupère l'espace de stockage occupé par des
   lignes mortes.
   Lors des opérations normales de <productname>PostgreSQL</productname>,
   les lignes supprimées ou rendues obsolètes par une mise à jour
   ne sont pas physiquement supprimées de leur table. Elles restent présentes
   jusqu'à ce qu'un <command>VACUUM</command> soit lancé.
   C'est pourquoi, il est nécessaire de faire un <command>VACUUM</command>
   régulièrement, spécialement sur les tables fréquemment mises à jour.
  </para>

  <para>
   Sans paramètre, <command>VACUUM</command> traite toutes les tables de la
   base de données courante pour lequel l'utilisateur connecté dispose du
   droit d'exécution du VACUUM. Avec un paramètre, <command>VACUUM</command>
   ne traite que cette table.
  </para>

  <para>
   <command>VACUUM ANALYZE</command> fait un <command>VACUUM</command>,
   puis un <command>ANALYZE</command> sur chaque table sélectionnée.
   C'est une combinaison pratique pour les scripts de maintenance de
   routine. Voir
   <xref linkend="sql-analyze"/> pour avoir
   plus de détails sur ce qu'il traite.
  </para>

  <para>
   Le <command>VACUUM</command> standard (sans <literal>FULL</literal>)
   récupère simplement l'espace et le rend disponible pour une réutilisation.
   Cette forme de la commande peut opérer en parallèle avec les opérations
   normales de lecture et d'écriture de la table, car elle n'utilise pas de
   verrou exclusif. Néanmoins, l'espace récupéré n'est pas renvoyé au système
   de fichiers dans la plupart des cas&nbsp;; il est conservé pour être
   réutilisé dans la même table. <command>VACUUM FULL</command> ré-écrit le
   contenu complet de la table dans un nouveau fichier sur disque sans
   perte d'espace, permettant à l'espace inutilisé d'être retourné au système
   d'exploitation. Cette forme est bien plus lente et nécessite un verrou
   exclusif sur chaque table le temps de son traitement.
  </para>

  <para>
   Quand la liste d'options est entourée de parenthèses, les options peuvent
   être écrites dans n'importe quel ordre. Sans parenthèses, les options
   doivent être écrit dans l'ordre exact décrit ci-dessus. La syntaxe avec
   parenthèse a été ajoutée dès la version 9.0 de
   <productname>PostgreSQL</productname>&nbsp;; la syntaxe sans parenthèse est
   maintenant considérée comme obsolète.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><literal>FULL</literal></term>
    <listitem>
     <para>
      Choisit un vacuum <quote>full</quote>, qui récupère plus d'espace,
      mais est beaucoup plus long et prend un verrou exclusif sur la table.
      Cette méthode requiert aussi un espace disque supplémentaire car il
      écrit une nouvelle copie de la table et ne supprime l'ancienne copie
      qu'à la fin de l'opération. Habituellement, cela doit seulement être
      utilisé quand une quantité importante d'espace doit être récupérée de
      la table.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>FREEZE</literal></term>
    <listitem>
     <para>
      Choisit un <quote>gel</quote> agressif des lignes.
      Indiquer <literal>FREEZE</literal> est équivalent à réaliser un
      <command>VACUUM</command> avec les paramètres
      <xref linkend="guc-vacuum-freeze-min-age"/> et
      <xref linkend="guc-vacuum-freeze-table-age"/> configurés à zéro.
      Un gel aggressif est toujours effectué quand la table est
      réécrite, cette option est donc redondante quand <literal>FULL</literal>
      est spécifié.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>VERBOSE</literal></term>
    <listitem>
     <para>
      Affiche un rapport détaillé de l'activité de vacuum sur chaque table.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ANALYZE</literal></term>
    <listitem>
     <para>
      Met à jour les statistiques utilisées par l'optimiseur pour
      déterminer la méthode la plus efficace pour exécuter une
      requête.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DISABLE_PAGE_SKIPPING</literal></term>
    <listitem>
     <para>
      Habituellement, <command>VACUUM</command> ignorera certains blocs en se
      basant sur la <link linkend="vacuum-for-visibility-map">carte de
      visibilité</link>. Les blocs connues pour être entièrement gelés peuvent
      toujours être ignorés, et ceux où toutes les lignes sont connues pour
      être visibles par toutes les transactions peuvent être ignorées sauf
      lors de l'exécution d'un vacuum agressif. De plus, en dehors d'un vacuum
      agressif, certains blocs peuvent être ignorés pour éviter d'attendre la
      fin de leur utilisation par d'autres sessions. Cette option désactive
      entièrement ce comportement permettant d'ignorer certains blocs, et a
      pour but d'être utilisé uniquement quand le contenu de la carte de
      visibilité semble suspect, ce qui peut arrive seulement s'il y a un
      problème matériel ou logiciel causant une corruption de la base de
      données.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_table</replaceable></term>
    <listitem>
     <para>
      Le nom (optionnellement qualifié par le nom d'un schéma) d'une table à
      traiter par vacuum. Par défaut, toutes les tables et vues matérialiséees 
      de la base de données courante sont traitées. Si la table spécifiée est 
      partitionnée, toutes les partitions enfants seront traitées.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_colonne</replaceable></term>
    <listitem>
     <para>
      Le nom d'une colonne spécifique à analyser. Par défaut, toutes les
      colonnes. Si une liste de colonnes est spécifiée,
      <literal>ANALYZE</literal> en est déduit.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Sorties</title>

  <para>
   Lorsque <literal>VERBOSE</literal> est précisé, <command>VACUUM</command> indique sa
   progression par des messages indiquant la table en cours
   de traitement. Différentes statistiques sur les tables sont aussi
   affichées.
  </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Pour exécuter un VACUUM sur une table, vous devez habituellement être le
   propriétaire de la table ou un superutilisateur. Néanmoins, les
   propriétaires de la base de données sont autorisés à exécuter VACUUM sur
   toutes les tables de leurs bases de données, sauf sur les catalogues
   partagés. Cette restriction signifie qu'un vrai <command>VACUUM</command>
   sur une base complète ne peut se faire que par un superutilisateur.)
   <command>VACUUM</command> ignorera toutes les tables pour lesquelles
   l'utilisateur n'a pas le droit d'exécuter un VACUUM.
  </para>

  <para>
   <command>VACUUM</command> ne peut pas être exécuté à l'intérieur
   d'un bloc de transactions.
  </para>

  <para>
   Pour les tables ayant des index <acronym>GIN</acronym>, <command>VACUUM</command>
   (sous n'importe quelle forme) termine aussi toutes les insertions d'index en
   attente, en déplaçant les entrées d'index aux bons endroits dans la structure
   d'index <acronym>GIN</acronym> principale. Voir <xref linkend="gin-fast-update"/>
   pour les détails.
  </para>

  <para>
   Nous recommandons que les bases de données actives de production soient
   traitées par vacuum fréquemment (au moins toutes les nuits), pour supprimer
   les lignes mortes. Après avoir ajouté ou supprimé un grand nombre de
   lignes, il peut être utile de faire un <command>VACUUM ANALYZE</command>
   sur la table affectée. Cela met les catalogues système à jour
   de tous les changements récents et permet à l'optimiseur de
   requêtes de <productname>PostgreSQL</productname> de faire de meilleurs
   choix lors de l'optimisation des requêtes.
  </para>

  <para>
   L'option <option>FULL</option> n'est pas recommandée en usage normal, mais
   elle peut être utile dans certains cas. Par exemple, si vous avez supprimé
   ou mis à jour l'essentiel des lignes d'une table et si vous voulez que la table diminue
   physiquement sur le disque pour n'occuper que l'espace réellement
   nécessaire et pour que les parcours de table soient plus rapides.
   Généralement, <command>VACUUM FULL</command> réduit plus la table qu'un
   simple <command>VACUUM</command>.
  </para>

  <para>
   <command>VACUUM</command> peut engendrer une
   augmentation substantielle du trafic en entrées/sorties pouvant causer
   des performances diminuées pour les autres sessions actives. Du coup,
   il est quelque fois conseillé d'utiliser la fonctionnalité du délai du
   vacuum basé sur le coût. Voir <xref
   linkend="runtime"/>
   pour des informations supplémentaires.
  </para>

  <para>
   <productname>PostgreSQL</productname> inclut un <quote>autovacuum</quote>
   qui peut automatiser la maintenance par VACUUM. Pour plus d'informations
   sur le VACUUM automatique et manuel, voir
   <xref linkend="routine-vacuuming"/>.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Pour nettoyer une seule table <literal>onek</literal>, l'analyser pour
   l'optimiseur et afficher un rapport détaillé de l'activité du VACUUM&nbsp;:

<programlisting>VACUUM (VERBOSE, ANALYZE) onek;</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Il n'y a pas de commande <command>VACUUM</command> dans le standard SQL.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="app-vacuumdb"/></member>
   <member><xref linkend="runtime-config-resource-vacuum-cost"/></member>
   <member><xref linkend="autovacuum"/></member>
  </simplelist>
 </refsect1>
</refentry>
