<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-dropforeigntable">
 <indexterm zone="sql-dropforeigntable">
  <primary>DROP FOREIGN TABLE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>DROP FOREIGN TABLE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions de langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>DROP FOREIGN TABLE</refname>
  <refpurpose>Supprime une table distante</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>
DROP FOREIGN TABLE [ IF EXISTS ] <replaceable class="parameter">nom</replaceable> [, ...] [ CASCADE | RESTRICT ]
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>DROP FOREIGN TABLE</command> supprime une table distante.
  </para>

  <para>
   Vous devez être propriétaire de la table distante pour utiliser <command>DROP FOREIGN TABLE</command>.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><literal>IF EXISTS</literal></term>
    <listitem>
     <para>
      Permet de ne pas retourner d'erreur si la table distante n'existe pas. Une simple notice est alors rapportée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom</replaceable></term>
    <listitem>
     <para>
      Le nom de la table distante à supprimer.
      Il est aussi possible de spécifier le schéma qui contient cette table.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CASCADE</literal></term>
    <listitem>
     <para>
      Supprime automatiquement les objets qui dépendent de cette table
      distante (comme les vues par exemple), ainsi que tous les objets
      dépendants de ces objets (voir <xref linkend="ddl-depend"/>).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RESTRICT</literal></term>
    <listitem>
     <para>
      Permet de spécifier que la table distante ne sera pas supprimée si des objets
      en dépendent. Il s'agit du comportement par défaut.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Pour supprimer deux tables distantes, <literal>films</literal> et
   <literal>distributeurs</literal>:
   <programlisting>
DROP FOREIGN TABLE films, distributeurs;
   </programlisting>
   Cette commande va échouer s'il existe des objets qui dépendent de <literal>films</literal>
   ou <literal>distributeurs</literal>. Par exemple, si des contraintes sont liées à des
   colonnes de <literal>films</literal>. Dans ce cas de figure, ajoutez l'option
   cascade <literal>CASCADE</literal> pour forcer la suppression de ces objets.
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Cette commande est conforme avec le standard ISO/IEC 9075-9 (SQL/MED),
   aux exceptions prêtes que ce standard n'accepte la suppression que d'une
   table distante par commande, et de l'option <literal>IF EXISTS</literal>,
   qui est une spécificité de <productname>PostgreSQL</productname>.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterforeigntable"/></member>
   <member><xref linkend="sql-createforeigntable"/></member>
  </simplelist>
 </refsect1>

</refentry>
