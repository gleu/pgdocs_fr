<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-insert">
 <indexterm zone="sql-insert">
  <primary>INSERT</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>INSERT</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>INSERT</refname>
  <refpurpose>Insérer de nouvelles lignes dans une table</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>[ WITH [ RECURSIVE ] <replaceable class="parameter">requête_with</replaceable> [, ...] ]
INSERT INTO <replaceable class="parameter">nom_table</replaceable> [ AS <replaceable class="parameter">alias</replaceable> ] [ ( <replaceable class="parameter">nom_colonne</replaceable> [, ...] ) ]
    [ OVERRIDING { SYSTEM | USER } VALUE ]
    { DEFAULT VALUES | VALUES ( { <replaceable class="parameter">expression</replaceable> | DEFAULT } [, ...] ) [, ...] | <replaceable class="parameter">requête</replaceable> }
    [ ON CONFLICT [ <replaceable class="parameter">cible_conflit</replaceable> ] <replaceable class="parameter">action_conflit</replaceable> ]
    [ RETURNING * | <replaceable class="parameter">expression_sortie</replaceable> [ [ AS ] <replaceable class="parameter">nom_sortie</replaceable> ] [, ...] ]

<phrase>où <replaceable class="parameter">cible_conflit</replaceable> peut valoir&nbsp;:</phrase>

    ( { <replaceable class="parameter">nom_colonne_index</replaceable> | ( <replaceable class="parameter">expression_index</replaceable> ) } [ COLLATE <replaceable class="parameter">collation</replaceable> ] [ <replaceable class="parameter">classe_operateur</replaceable> ] [, ...] ) [ WHERE <replaceable class="parameter">predicat_index</replaceable> ]
    ON CONSTRAINT <replaceable class="parameter">nom_contrainte</replaceable>

<phrase>et <replaceable class="parameter">action_conflit</replaceable> peut valoir&nbsp;:</phrase>

    DO NOTHING
    DO UPDATE SET { <replaceable class="parameter">nom_colonne</replaceable> = { <replaceable class="parameter">expression</replaceable> | DEFAULT } |
                    ( <replaceable class="parameter">nom_colonne</replaceable> [, ...] ) = [ ROW ] ( { <replaceable class="parameter">expression</replaceable> | DEFAULT } [, ...] ) |
                    ( <replaceable class="parameter">nom_colonne</replaceable> [, ...] ) = ( <replaceable class="parameter">sous-SELECT</replaceable> )
                  } [, ...]
              [ WHERE <replaceable class="parameter">condition</replaceable> ]
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>INSERT</command> insère de nouvelles lignes dans une
   table. Vous pouvez insérer une ou plusieurs lignes spécifiées
   par les expressions de valeur, ou zéro ou plusieurs lignes
   provenant d'une requête.
  </para>

  <para>
   L'ordre des noms des colonnes n'a pas d'importance. Si
   aucune liste de noms de colonnes n'est donnée,
   toutes les colonnes de la table sont utilisée dans l'ordre de leur déclaration (les
   <replaceable>N</replaceable> premiers noms de colonnes si seules <replaceable>N</replaceable>
   valeurs de colonnes sont fournies dans la clause <literal>VALUES</literal> ou dans
   la <replaceable>requête</replaceable>). Les valeurs fournies par la clause
   <literal>VALUES</literal> ou par la <replaceable>requête</replaceable> sont associées à la
   liste explicite ou implicite des colonnes de gauche à droite.
  </para>

  <para>
   Chaque colonne absente de la liste, implicite ou explicite, des colonnes se voit
   attribuer sa valeur par défaut, s'il y en a une, ou NULL dans le cas contraire.
  </para>

  <para>
   Un transtypage automatique est entrepris lorsque l'expression d'une colonne ne correspond
   pas au type de donnée déclaré.
  </para>

  <para>
   <literal>ON CONFLICT</literal> peut être utilisé pour indiquer une
   action alternative lorsqu'une erreur sur une contrainte unique ou une
   contrainte d'exclusion est levée (voir <xref linkend="sql-on-conflict"/>
   ci-dessous).
  </para>

  <para>
   La clause <literal>RETURNING</literal> optionnelle fait que
   <command>INSERT</command> calcule et renvoie le(s) valeur(s)
   basée(s) sur chaque ligne en cours d'insertion (ou mises à jour
   si une clause <literal>ON CONFLICT DO UPDATE </literal> a été
   utilisée). C'est principalement utile pour obtenir les valeurs qui
   ont été fournies par défaut, comme un numéro de séquence.
   Néanmoins, toute expression utilisant les colonnes de la table
   est autorisée. La syntaxe de la liste <literal>RETURNING</literal>
   est identique à celle de la commande <command>SELECT</command>. Seules
   les lignes qui ont été insérées ou mises à jour avec
   succès sont retournées. Par exemple, si une ligne a été
   verrouillée mais non mise à jour parce que la <replaceable
   class="parameter">condition</replaceable> de la clause <literal>ON
    CONFLICT DO UPDATE ... WHERE</literal> n'a pas été satisfaite,
   la ligne ne sera pas renvoyée.
  </para>

  <para>
   Vous devez avoir le droit <literal>INSERT</literal> sur une
   table pour insérer des données dedans. Si <literal>ON CONFLICT DO
    UPDATE</literal> est indiqué, le droit <literal>UPDATE</literal>
   est aussi requis.
  </para>

  <para>
   Si une liste de colonnes est indiquée, vous avez seulement besoin
   d'avoir le droit <literal>INSERT</literal> sur les colonnes
   spécifiées. De la même manière, lorsque <literal>ON CONFLICT DO
    UPDATE</literal> est indiqué, vous avez seulement besoin d'avoir
   le droit <literal>UPDATE</literal> sur les colonnes qui
   sont listées comme à mettre à jour. Cependant, <literal>ON
    CONFLICT DO UPDATE</literal> exige également le droit
   <literal>SELECT</literal> sur toutes les colonnes dont les valeurs
   sont lues dans l'expression de <literal>ON CONFLICT DO UPDATE</literal>
   ou la <replaceable>condition</replaceable>.
  </para>

  <para>
   L'utilisation de la clause <literal>RETURNING</literal> requiert
   le droit <literal>SELECT</literal> sur toutes les colonnes
   mentionnées dans <literal>RETURNING</literal>. Si vous utilisez la
   clause <replaceable class="parameter">requête</replaceable> pour
   insérer des lignes à partir d'une requête, vous avez bien sûr besoin
   d'avoir le droit <literal>SELECT</literal> sur toutes les
   tables ou colonnes référencées dans la requête.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <refsect2 id="SQL-INSERTING-PARAMS">
   <title>Insertion</title>

   <para>
    Cette section concerne les paramètres qui peuvent être utilisés
    lors de l'insertion de nouvelles lignes. Les paramètres
    <emphasis>exclusivement</emphasis> utilisés avec la clause
    <literal>ON CONFLICT</literal> sont décrits séparément.
   </para>

   <variablelist>
    <varlistentry>
     <term><replaceable class="parameter">requête_with</replaceable></term>
     <listitem>
      <para>
       La clause <literal>WITH</literal> vous permet de spécifier une
       ou plusieurs sous-requêtes qui peuvent être référencées
       par leur nom dans la commande <command>INSERT</command>. Voir
       <xref linkend="queries-with"/> et <xref linkend="sql-select"/>
       pour les détails.
      </para>
      <para>
       Il est possible que la <replaceable
       class="parameter">requête</replaceable> (commande
       <command>SELECT</command>) contienne également une
       clause <literal>WITH</literal>. Dans un tel cas, les deux
       ensembles de <replaceable>requête_with</replaceable>
       peuvent être référencés à l'intérieur de <replaceable
       class="parameter">requête</replaceable>, mais le second prime
       dans la mesure où il est plus proche.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nom_table</replaceable></term>
     <listitem>
      <para>
       Le nom (éventuellement préfixé du schéma) d'une table existante.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">alias</replaceable></term>
     <listitem>
      <para>
       Un nom de substitution pour <replaceable
       class="parameter">nom_table</replaceable>. Lorsqu'un alias est
       indiqué, il masque complètement le nom actuel de la table. Ceci
       est particulièrement utile lorsque <literal>ON CONFLICT DO
        UPDATE</literal> fait référence à une table nommée
       <varname>excluded</varname>, puisque sinon ce nom serait utilisé pour
       le nom de la table spéciale représentant les lignes proposées à
       l'insertion.
      </para>
     </listitem>
    </varlistentry>


    <varlistentry>
     <term><replaceable class="parameter">nom_colonne</replaceable></term>
     <listitem>
      <para>
       Le nom d'une colonne dans la table nommée par <replaceable
       class="parameter">nom_table</replaceable>. Le nom de la colonne
       peut être qualifié avec un nom de sous-champ ou un indice
       de tableau, si besoin. (L'insertion uniquement dans certains
       champs d'une colonne composite positionne les autres champs à
       NULL.) Lorsque vous référencez une colonne avec <literal>ON
        CONFLICT DO UPDATE</literal>, n'incluez pas le nom de la table
       dans la spécification de la colonne. Par exemple, <literal>INSERT
        INTO nom_table ... ON CONFLICT DO UPDATE tab SET nom_table.col = 1</literal>
       est invalide (ceci est conforme au comportement général pour
       la commande <command>UPDATE</command>).
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>OVERRIDING SYSTEM VALUE</literal></term>
     <listitem>
      <para>
       Si cette clause est indiquée, alors toutes les valeurs fournies par
       les colonnes d'identité surchargeront les valeurs par défaut générées
       par les séquences.
      </para>

      <para>
       Pour une colonne d'identité définie comme <literal>GENERATED
        ALWAYS</literal>, insérer une valeur explicite (autre que
       <literal>DEFAULT</literal>) sans préciser soit <literal>OVERRIDING
        SYSTEM VALUE</literal> soit <literal>OVERRIDING USER VALUE</literal>
       est considéré comme une erreur. (Pour une colonne d'identité définie
       comme <literal>GENERATED BY DEFAULT</literal>, <literal>OVERRIDING
        SYSTEM VALUE</literal> est le comportement normal et le préciser ne
       change rien mais <productname>PostgreSQL</productname> l'autorise
       comme extension.)
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>OVERRIDING USER VALUE</literal></term>
     <listitem>
      <para>
       Si cette clause est spécifiée, alors toute valeur fournir pour les
       colonnes d'identité sont ignorées et les valeurs par défaut générée
       par la séquence sont appliquées.
      </para>

      <para>
       Cette clause est utile par exemple lors de la copie de valeur entre
       des tables. Écrire <literal>INSERT INTO tbl2 OVERRIDING USER VALUE
        SELECT * FROM tbl1</literal> copiera de <literal>tbl1</literal> toutes
       les colonnes de <literal>tbl2</literal> qui ne sont pas des colonnes
       d'identité dans <literal>tbl2</literal> alors que des valeurs pour les
       colonnes d'identité dans <literal>tbl2</literal> seront générées par
       les séquences associées avec <literal>tbl2</literal>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>DEFAULT VALUES</literal></term>
     <listitem>
      <para>
       Toutes les colonnes seront remplies avec leur valeur par défaut, comme
       si <literal>DEFAULT</literal> était indiqué explicitement pour chaque
       colonne. (Une clause <literal>OVERRIDING</literal> n'est pas permise
       dans cette forme.)
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">expression</replaceable></term>
     <listitem>
      <para>
       Une expression ou valeur à assigner à la colonne correspondante.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>DEFAULT</literal></term>
     <listitem>
      <para>
       La colonne correspondante sera remplie avec sa valeur par défaut. Une
       colonne d'identité sera remplie avec une nouvelle valeur générée par
       la séquence associée. Pour une colonne générée, l'indiquer est permis
       mais ne fait que préciser le comportement normal du calcul de la
       colonne à partir de son expression de génération.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">requête</replaceable></term>
     <listitem>
      <para>
       Une requête (commande <command>SELECT</command>) qui fournit
       les lignes à insérer. Référez-vous à la commande <xref
       linkend="sql-select"/> pour une description de la syntaxe.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">expression_sortie</replaceable></term>
     <listitem>
      <para>
       Une expression à calculer et à retourner par la
       commande <command>INSERT</command> après que chaque
       ligne soit insérée ou mise à jour. L'expression peut
       utiliser n'importe quel nom de colonnes de la table nommée
       <replaceable class="parameter">nom_table</replaceable>. Écrivez
       <literal>*</literal> pour renvoyer toutes les colonnes de(s)
       ligne(s) insérée(s) ou mise(s) à jour.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nom_sortie</replaceable></term>
     <listitem>
      <para>
       Un nom à utiliser pour une colonne renvoyée.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </refsect2>

  <refsect2 id="sql-on-conflict" xreflabel="Clause ON CONFLICT">
   <title>Clause <literal>ON CONFLICT</literal></title>
   <indexterm zone="sql-insert">
    <primary>UPSERT</primary>
   </indexterm>
   <indexterm zone="sql-insert">
    <primary>ON CONFLICT</primary>
   </indexterm>
   <para>
    La clause optionelle <literal>ON CONFLICT</literal> indique une
    action alternative lors d'une erreur de violation d'une contrainte
    unique ou d'exclusion. Pour chaque ligne individuelle proposée
    pour l'insertion, soit l'insertion est effectuée, soit si une
    contrainte <emphasis>arbitrale</emphasis> ou un index indiqué par
    <parameter>cible_conflit</parameter> est violé, l'action alternative
    <parameter>cible_conflit</parameter> est effectuée. <literal>ON
     CONFLICT DO NOTHING</literal> évite simplement d'insérer une ligne
    comme action alternative. Comme action alternative, <literal>ON
     CONFLICT DO UPDATE</literal> met à jour la ligne existante en
    conflit avec la ligne proposée pour l'insertion.
   </para>

   <para>
    <parameter>cible_conflit</parameter> peut effectuer une
    <emphasis>inférence d'un index unique</emphasis>. L'inférence
    consiste à indiquer un ou plusieurs <replaceable
    class="parameter">nom_colonne_index</replaceable> et/ou <replaceable
    class="parameter">expression_index</replaceable>. Tous les index
    uniques de <replaceable class="parameter">nom_table</replaceable>
    qui, indépendamment de l'ordre, contiennent exactement les
    colonnes/expressions <parameter>cible_conflit</parameter> spécifiées
    sont inférés (choisis) comme index arbitraux. Si un <replaceable
    class="parameter">predicat_index</replaceable> est indiqué, il doit,
    comme une condition supplémentaire pour l'inférence, satisfaire
    les index arbitraux. Notez que cela signifie qu'un index unique
    non partiel (un index unique sans prédicat) sera inféré (et
    donc utilisé par <literal>ON CONFLICT</literal>) si un tel index
    remplissant l'ensemble des autres critères est disponible. Si une
    tentative d'inférence est impossible, une erreur est levée.
   </para>

   <para>
    <literal>ON CONFLICT DO UPDATE</literal> garantit un traitement
    atomique de <command>INSERT</command> ou de <command>UPDATE</command>&nbsp;;
    dans la mesure où il n'y a pas d'erreur indépendante,
    l'un de ces deux traitements est garanti, y compris en
    cas d'accès concurrents. Ceci est aussi connu sous le nom
    d'<firstterm>UPSERT</firstterm> (<quote>UPDATE ou INSERT</quote>).
   </para>

   <variablelist>
    <varlistentry>
     <term><replaceable class="parameter">cible_conflit</replaceable></term>
     <listitem>
      <para>
       Indique les conflits <literal>ON CONFLICT</literal>
       entrainant l'action alternative en choisissant les
       <firstterm>index arbitraux</firstterm>. Soit effectue
       l'<emphasis>inférence d'un index unique</emphasis>,
       soit nomme une contrainte explicitement. Pour
       <literal>ON CONFLICT DO NOTHING</literal>, l'indication de
       <parameter>cible_conflit</parameter> est facultatif&nbsp;; s'il est
       omis, les conflits avec toutes les contraintes utilisables
       (et index uniques) sont retenus. Pour <literal>ON CONFLICT
        DO UPDATE</literal>, <parameter>cible_conflit</parameter>
       <emphasis>doit</emphasis> être indiqué.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">action_conflit</replaceable></term>
     <listitem>
      <para>
       <parameter>action_conflit</parameter> indique une action
       alternative à <literal>ON CONFLICT</literal>. Elle peut
       être soit une clause <literal>DO NOTHING</literal>, soit une clause
       <literal>DO UPDATE</literal> indiquant le détail exact de l'action
       <literal>UPDATE</literal> à effectuer en cas de conflit. Les
       clauses <literal>SET</literal> et <literal>UPDATE</literal>
       dans <literal>ON CONFLICT DO UPDATE</literal> ont accès à la
       ligne existante en utilisant le nom de la table (ou un alias),
       et aux lignes proposées à l'insertion en utilisant la table
       spéciale de nom <varname>excluded</varname>. Le droit
       <literal>SELECT</literal> est requis sur l'ensemble des
       colonnes de la table cible où les colonnes correspondantes de
       <varname>excluded</varname> sont lues.
      </para>
      <para>
       Notez que les effets de tous les trigegrs par ligne
       <literal>BEFORE INSERT</literal> sont reflétés dans les valeurs
       de <varname>excluded</varname>, dans la mesure où ces effets
       peuvent avoir contribués à la ligne exclue de l'insertion.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nom_colonne_index</replaceable></term>
     <listitem>
      <para>
       Le nom d'une colonne de <replaceable
       class="parameter">nom_table</replaceable>. Utilisé pour
       inférer les index arbitraux. Suit le format de <command>CREATE
        INDEX</command>. Le droit <literal>SELECT</literal> sur
       <replaceable class="parameter">nom_colonne_index</replaceable>
       est nécessaire.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">expression_index</replaceable></term>
     <listitem>
      <para>
       Similaire à <replaceable
       class="parameter">nom_colonne_index</replaceable>, mais utilisé
       pour inférer les expressions sur les colonnes de <replaceable
       class="parameter">nom_table</replaceable> apparaissant dans
       les définitions de l'index (pas de simples colonnes). Suit
       le format de <command>CREATE INDEX</command>. Le droit
       <literal>SELECT</literal> sur toutes les colonnes apparaissant
       dans <replaceable class="parameter">expression_index</replaceable>
       est nécessaire.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">collation</replaceable></term>
     <listitem>
      <para>
       Lorsque mentionné, indique que la colonne <replaceable
       class="parameter">nom_colonne_index</replaceable>
       correspondante ou <replaceable
       class="parameter">expression_index</replaceable>
       utilise une collation particulière pour être mis en
       correspondance durant l'inférence. Typiquement, ceci est
       omis, dans la mesure où les collations n'ont généralement
       pas d'incidence sur la survenu ou non d'une violation de
       contrainte.
       Suit le format de <command>CREATE INDEX</command>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">classe_operateur</replaceable></term>
     <listitem>
      <para>
       Lorsque mentionné, elle indique que la colonne <replaceable
       class="parameter">nom_colonne_index</replaceable> correspondante
       ou <replaceable class="parameter">expression_index</replaceable>
       utilise une classe d'opérateur en particulier pour être
       mis en correspondance durant l'inférence. Typiquement,
       ceci est omis, dans la mesure où les sémantiques
       d'<emphasis>égalité</emphasis> sont souvent équivalentes entre
       les différents types de classes d'opérateurs, ou parce qu'il est
       suffisant de s'appuyer sur le fait que les définitions d'index
       uniques ont une définition pertinente de l'égalité. Suit le
       format de <command>CREATE INDEX</command>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">predicat_index</replaceable></term>
     <listitem>
      <para>
       Utilisé pour permettre l'inférence d'index uniques
       partiels. Tous les index qui satisfont le prédicat
       (qui ne sont pas nécessairement des index partiels)
       peuvent être inférés. Suit le format de <command>CREATE
        INDEX</command>. Le droit <literal>SELECT</literal>
       sur toutes les colonnes apparaissant dans <replaceable
       class="parameter">predicat_index</replaceable> est nécessaire.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nom_contrainte</replaceable></term>
     <listitem>
      <para>
       Spécifie explicitement une <emphasis>contrainte</emphasis>
       arbitrale par nom, plutôt que d'inférer une contrainte par
       nom ou index.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">condition</replaceable></term>
     <listitem>
      <para>
       Une expression qui renvoie une valeur de type
       <type>boolean</type>. Seules les lignes pour lesquelles cette
       expression renvoie <literal>true</literal> seront mises à jour,
       bien que toutes les lignes seront verrouillées lorsque l'action
       <literal>ON CONFLICT DO UPDATE</literal> est prise. Notez que
       <replaceable>condition</replaceable> est évaluée en dernier, après
       qu'un conflit ait été identifié comme un candidat à la mise
       à jour.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    Notez que les contraintes d'exclusion ne sont pas supportées comme
    arbitres avec <literal>ON CONFLICT DO UPDATE</literal>. Dans tous
    les cas, seules les contraintes <literal>NOT DEFERRABLE</literal>
    et les index uniques sont supportés comme arbitres.
   </para>

   <para>
    La commande <command>INSERT</command> avec une clause <literal>ON
     CONFLICT DO UPDATE</literal> est une instruction déterministe. Ceci
    signifie que la commande ne sera pas autorisée à modifier n'importe
    quelle ligne individuelle plus d'une fois&nbsp;; une erreur de violation
    de cardinalité sera levée si cette situation arrive. Les lignes
    proposées à l'insertion ne devraient pas avoir de duplication les
    unes par rapport aux autres relativement aux attributs contraints
    par un index arbitral ou une contrainte.
   </para>

   <para>
    Notez qu'il n'y a pas de support d'une clause <literal>ON CONFLICT DO
     UPDATE</literal> d'un <command>INSERT</command> appliquée à une table
    partitionnée pour mettre à jour la clé de partitionnement d'une ligne en
    conflit qui causerait le déplacement de la ligne dans une nouvelle
    partition.
   </para>

   <tip>
    <para>
     Il est souvent préférable d'utiliser l'inférence d'un
     index unique plutôt que de nommer une contrainte directement en
     utilisant <literal>ON CONFLICT ON CONSTRAINT</literal> <replaceable
     class="parameter">nom_contrainte</replaceable>. L'inférence
     continuera de fonctionner correctement lorsque l'index sous-jacent
     est remplacé par un autre plus ou moins équivalent de manière
     recouvrante, par exemple en utilisant <literal>CREATE UNIQUE INDEX
      ... CONCURRENTLY</literal> avant de supprimer l'index remplacé.
    </para>
   </tip>

  </refsect2>
 </refsect1>

 <refsect1>
  <title>Sorties</title>

  <para>
   En cas de succès, la commande <command>INSERT</command> renvoie un code de
   la forme <screen>INSERT <replaceable>oid</replaceable> <replaceable
   class="parameter">nombre</replaceable> </screen> <replaceable
   class="parameter">nombre</replaceable> correspond au nombre de lignes
   insérées ou mises à jour. <replaceable>oid</replaceable> vaut toujours 0
   (il s'agissait de l'<acronym>OID</acronym> affecté à la ligne insérée si
   <replaceable>count</replaceable> valait exactement 1 et que la table cible
   était déclarée <literal>WITH OIDS</literal> et 0 dans les autres cas, mais
   créer une table <literal>WITH OIDS</literal> n'est plus supporté).
  </para>

  <para>
   Si la commande <command>INSERT</command> contient une clause
   <literal>RETURNING</literal>, le résultat sera similaire à celui d'une
   instruction <command>SELECT</command> contenant les colonnes et les valeurs
   définies dans la liste <literal>RETURNING</literal>, à partir de la liste
   des lignes insérées ou mises à jour par la commande.
  </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Si la table spécifiée est une table partitionnée, chaque ligne est redirigée
   vers la partition appropriée et insérée dedans.  Si la table spécifiée est
   une partition, une erreur sera remontée si une des lignes en entrée viole la
   contrainte de partition.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Insérer une ligne dans la table <literal>films</literal>&nbsp;:

   <programlisting>INSERT INTO films
	VALUES ('UA502', 'Bananas', 105, '1971-07-13', 'Comédie', '82 minutes');
   </programlisting>
  </para>

  <para>
   Dans l'exemple suivant, la colonne <literal>longueur</literal> est omise et
   prend donc sa valeur par défaut&nbsp;:

   <programlisting>INSERT INTO films (code, titre, did, date_prod, genre)
    VALUES ('T_601', 'Yojimbo', 106, '1961-06-16', 'Drame');
   </programlisting>
  </para>

  <para>
   L'exemple suivant utilise la clause <literal>DEFAULT</literal> pour les
   colonnes date plutôt qu'une valeur précise&nbsp;:

   <programlisting>INSERT INTO films VALUES
    ('UA502', 'Bananas', 105, DEFAULT, 'Comédie', '82 minutes');
INSERT INTO films (code, titre, did, date_prod, genre)
    VALUES ('T_601', 'Yojimbo', 106, DEFAULT, 'Drame');
   </programlisting>
  </para>

  <para>
   Insérer une ligne constituée uniquement de valeurs par défaut&nbsp;:

   <programlisting>INSERT INTO films DEFAULT VALUES;
   </programlisting>
  </para>

  <para>
   Pour insérer plusieurs lignes en utilisant la syntaxe multi-lignes
   <command>VALUES</command>&nbsp;:

   <programlisting>INSERT INTO films (code, titre, did, date_prod, genre) VALUES
    ('B6717', 'Tampopo', 110, '1985-02-10', 'Comedy'),
    ('HG120', 'The Dinner Game', 140, DEFAULT, 'Comedy');
   </programlisting>
  </para>

  <para>
   Insérer dans la table <literal>films</literal> des lignes extraites de la table
   <literal>tmp_films</literal> (la disposition des colonnes est identique dans les deux tables)&nbsp;:

   <programlisting>INSERT INTO films SELECT * FROM tmp_films WHERE date_prod &lt; '2004-05-07';
   </programlisting>
  </para>

  <para>
   Insérer dans des colonnes de type tableau&nbsp;:
   <programlisting>-- Créer un jeu de 3 cases sur 3
INSERT INTO tictactoe (game, board[1:3][1:3])
    VALUES (1, '{{" "," "," "},{" "," "," "},{" "," "," "}}');
-- Les indices de l'exemple ci-dessus ne sont pas vraiment nécessaires
INSERT INTO tictactoe (game, board)
    VALUES (2, '{{X," "," "},{" ",O," "},{" ",X," "}}');
   </programlisting>
  </para>

  <para>
   Insérer une ligne simple dans la table <literal>distributeurs</literal>, en
   renvoyant le numéro de séquence généré par la clause
   <literal>DEFAULT</literal>&nbsp;:

   <programlisting>INSERT INTO distributeurs (did, dnom) VALUES (DEFAULT, 'XYZ Widgets')
   RETURNING did;
   </programlisting>
  </para>

  <para>
   Augmenter le nombre de ventes du vendeur qui gère le compte Acme
   Corporation, et enregistrer la ligne complètement mise à jour avec l'heure
   courante dans une table de traçage&nbsp;:
   <programlisting>
WITH upd AS (
  UPDATE employees SET sales_count = sales_count + 1 WHERE id =
    (SELECT sales_person FROM accounts WHERE name = 'Acme Corporation')
    RETURNING *
)
INSERT INTO employees_log SELECT *, current_timestamp FROM upd;
   </programlisting>
  </para>
  <para>
   Insérer ou mettre à jour de nouveaux distributeurs comme
   approprié. Suppose qu'un index unique a été défini qui contraint les
   valeurs apparaissant dans la colonne <literal>did</literal>. Notez
   que la table spéciale <varname>excluded</varname> est utilisée pour
   référencer les valeurs proposées à l'origine pour l'insertion&nbsp;:
   <programlisting>
INSERT INTO distributeurs (did, dnom)
    VALUES (5, 'Gizmo Transglobal'), (6, 'Associated Computing, Inc')
    ON CONFLICT (did) DO UPDATE SET dnom = EXCLUDED.dnom;
   </programlisting>
  </para>
  <para>
   Insérer un distributeur, ou ne fait rien pour les lignes proposées
   à l'insertion lorsqu'une ligne existante, exclue (une ligne avec une
   contrainte correspondante sur une ou plusieurs colonnes après que les
   triggers après ou avant se soient déclenchés) existe. L'exemple
   suppose qu'un index unique a été défini qui contraint les valeurs
   apparaissant dans la colonne <literal>did</literal>&nbsp;:
   <programlisting>
INSERT INTO distributeurs (did, dnom) VALUES (7, 'Redline GmbH')
    ON CONFLICT (did) DO NOTHING;
   </programlisting>
  </para>
  <para>
   Insérer ou mettre à jour de nouveaux distributeurs comme
   approprié. L'exemple suppose qu'un index unique a été
   défini qui contraint les valeurs apparaissant dans la colonne
   <literal>did</literal>. La clause <literal>WHERE</literal> est
   utilisée pour limiter les lignes mises à jour (toutes les lignes
   existantes non mises à jour seront tout de même verrouillées)&nbsp;:
   <programlisting>
-- Ne pas mettre à jour les distributeurs existants avec un certain code postal
INSERT INTO distributeurs AS d (did, dnom) VALUES (8, 'Anvil Distribution')
    ON CONFLICT (did) DO UPDATE
    SET dnom = EXCLUDED.dnom || ' (précédemment ' || d.dnom || ')'
    WHERE d.code_postal &lt;&gt; '21201';

-- Nomme une contrainte directement dans l'instruction (utilise
-- l'index associé pour décider de prendre l'action DO NOTHING)
INSERT INTO distributeurs (did, dnom) VALUES (9, 'Antwerp Design')
    ON CONFLICT ON CONSTRAINT distributeurs_pkey DO NOTHING;
   </programlisting>
  </para>
  <para>
   Insérer un nouveau distributeur si possible&nbsp;; sinon <literal>DO
    NOTHING</literal>. L'exemple suppose qu'un index unique a été
   défini qui contraint les valeurs apparaissant dans la colonne
   <literal>did</literal> à un sous-ensemble des lignes où la
   colonne booléenne <literal>est_actif</literal> est évaluée à
   <literal>true</literal>&nbsp;:
   <programlisting>
-- Cette instruction pourrait inférer un index unique partiel sur "did"
-- avec un prédicat de type "WHERE est_actif", mais il pourrait aussi
-- juste utiliser une contrainte unique régulière sur "did"
INSERT INTO distributeurs (did, dnom) VALUES (10, 'Conrad International')
    ON CONFLICT (did) WHERE est_actif DO NOTHING;
   </programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   <command>INSERT</command> est conforme au standard SQL, sauf
   la clause <literal>RETURNING</literal> qui est une extension
   <productname>PostgreSQL</productname>, comme la possibilité
   d'utiliser la clause <literal>WITH</literal> avec l'instruction
   <command>INSERT</command>, et de spécifier une action alternative
   avec <literal>ON CONFLICT</literal>.  Le standard n'autorise
   toutefois pas l'omission de la liste des noms de colonnes alors
   qu'une valeur n'est pas affectée à chaque colonne, que ce soit
   à l'aide de la clause <literal>VALUES</literal> ou à partir de la
   <replaceable>requête</replaceable>.
  </para>

  <para>
   The SQL standard spécifie que <literal>OVERRIDING SYSTEM VALUE</literal>
   ne peut être spécifié que si une colonne d'identité qui est toujours générée
   existe.  PostgreSQL autorise cette clause dans tous les cas et l'ignore si
   elle ne s'applique pas.
  </para>

  <para>
   Les limitations possibles de la clause <replaceable class="parameter">requête</replaceable>
   sont documentées sous <xref linkend="sql-select"/>.
  </para>
 </refsect1>
</refentry>
