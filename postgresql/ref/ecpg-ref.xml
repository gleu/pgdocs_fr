<?xml version="1.0" encoding="UTF-8"?>
<refentry id="app-ecpg">
 <indexterm zone="app-ecpg">
  <primary>ecpg</primary>
 </indexterm>

 <refmeta>
  <refentrytitle><application>ecpg</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname><application>ecpg</application></refname>
  <refpurpose>Préprocesseur C pour le SQL embarqué</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>ecpg</command>
   <arg choice="opt" rep="repeat"><replaceable>option</replaceable></arg>
   <arg choice="plain" rep="repeat"><replaceable>fichier</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>


 <refsect1 id="app-ecpg-description">
  <title>Description</title>

  <para>
   <command>ecpg</command> est le préprocesseur du SQL embarqué pour les
   programmes écrits en C. Il convertit des programmes écrits en C contenant des instructions SQL
   embarqué en code C normal. Pour se faire, les appels au SQL sont remplacés par des
   appels spéciaux de fonctions. Les fichiers en sortie peuvent être traités
   par n'importe quel compilateur C.
  </para>

  <para>
   <command>ecpg</command> convertit chaque fichier en entrée, donné sur la
   ligne de commande, en un fichier C correspondant. Si le nom d'un fichier en
   entrée n'a pas d'extension, <filename>.pgc</filename> est supposé.
   L'extension du fichier sera remplacée par <filename>.c</filename> pour
   construire le nom du fichier en sortie. Mais ce nom peut aussi être
   surchargé en utilisant l'option <option>-o</option>.
  </para>

  <para>
   Si un nom de fichier en entrée est simplement <literal>-</literal>,
   <command>ecpg</command> lit le source du programme à partir de l'entrée
   standard (et écrit sur la sortie standard, sauf si ce comportement est
   surchargé avec l'option <option>-o</option>).
  </para>

  <para>
   Cette page de référence ne décrit pas le langage SQL embarqué.
   Voir <xref linkend="ecpg"/> pour plus d'informations sur ce thème.
  </para>
 </refsect1>


 <refsect1>
  <title>Options</title>

  <para>
   <command>ecpg</command> accepte les arguments suivants en ligne de
   commande&nbsp;:

   <variablelist>
    <varlistentry>
     <term><option>-c</option></term>
     <listitem>
      <para>
       Engendre automatiquement du code C à partir de code SQL. Actuellement,
       cela fonctionne pour <literal>EXEC SQL TYPE</literal>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-C <replaceable>mode</replaceable></option></term>
     <listitem>
      <para>
       Initialise un mode de compatibilité. <replaceable>mode</replaceable>
       peut être <literal>INFORMIX</literal>, <literal>INFORMIX_SE</literal>
       ou <literal>ORACLE</literal>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-D <replaceable>symbol</replaceable></option></term>
     <listitem>
      <para>
       Définit un symbole du préprocesseur C.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-h</option></term>
     <listitem>
      <para>
       Traite les fichiers d'en-tête. Quand cette option est utilisée,
       l'extension du fichier en sortie devient <literal>.h</literal>, et non
       pas <literal>.c</literal>, et l'extension par défaut du fichier en
       entrée est <literal>.pgh</literal>, et non pas <literal>.pgc</literal>.
       De plus, l'option <option>-c</option> est forcée.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-i</option></term>
     <listitem>
      <para>
       Les fichiers d'en-tête du système sont également analysés.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-I <replaceable
       class="parameter">répertoire</replaceable></option></term>
     <listitem>
      <para>
       Spécifie un chemin d'inclusion supplémentaire, utilisé pour trouver les
       fichiers inclus via <literal>EXEC SQL INCLUDE</literal>. Par défaut, il
       s'agit de <filename>.</filename> (répertoire courant),
       <filename>/usr/local/include</filename>, du répertoire de fichiers entêtes de
       <productname>PostgreSQL</productname> défini à la compilation (par défaut&nbsp;:
       <filename>/usr/local/pgsql/include</filename>), puis de
       <filename>/usr/include</filename>, dans cet ordre.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-o <replaceable>nom_fichier</replaceable></option></term>
     <listitem>
      <para>
       Indique le nom du fichier de sortie, <replaceable>nom_fichier</replaceable>,
       utilisé par <command>ecpg</command>.
       Écrire <literal>-o -</literal> pour envoyer toute la sortie sur la
       sortie standard.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-r <replaceable>option</replaceable></option></term>
     <listitem>
      <para>
       Sélectionne un comportement en exécution. <replaceable>option</replaceable>
       peut avoir une des valeurs suivantes&nbsp;:
       <variablelist>
        <varlistentry>
         <term><option>no_indicator</option></term>
         <listitem>
          <para>
           Ne pas utiliser d'indicateurs mais utiliser à la place des valeurs
           spéciales pour représenter les valeurs NULL. Historiquement, certaines
           bases de données utilisent cette approche.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><option>prepare</option></term>
         <listitem>
          <para>
           Préparer toutes les instructions avant de les utiliser. Libecpg
           conservera un cache d'instructions préparées et réutilisera une
           instruction si elle est de nouveau exécutée. Si le cache est plein,
           libecpg libérera l'instruction la moins utilisée.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><option>questionmarks</option></term>
         <listitem>
          <para>
           Autoriser les points d'interrogation comme marqueur pour des raisons
           de compatibilité. C'était la valeur par défaut il y a longtemps.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-t</option></term>
     <listitem>
      <para>
       Active la validation automatique (autocommit) des transactions. Dans ce
       mode, chaque commande SQL est validée automatiquement, sauf si elle est à
       l'intérieur d'un bloc de transaction explicite. Dans le mode par défaut,
       les commandes ne sont validées qu'à l'exécution de
       <command>EXEC SQL COMMIT</command>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-v</option></term>
     <listitem>
      <para>
       Affiche des informations supplémentaires dont la version et
       le chemin des entêtes.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--version</option></term>
     <listitem>
      <para>
       Affiche la version de <application>ecpg</application> et quitte.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-?</option></term>
     <term><option>--help</option></term>
     <listitem>
      <para>
       Affiche l'aide sur les arguments en ligne de commande de
       <application>ecpg</application> et quitte.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>


 <refsect1>
  <title>Notes</title>

  <para>
   Lors de la compilation de fichiers C prétraités, le compilateur a
   besoin de trouver les fichiers d'en-tête <application>ECPG</application>
   dans le répertoire des entêtes de <productname>PostgreSQL</productname>. De ce fait, il
   faut généralement utiliser l'option <option>-I</option> lors de l'appel du
   compilateur (c'est-à-dire <literal>-I/usr/local/pgsql/include</literal>).
  </para>

  <para>
   Les programmes C qui utilisent du SQL embarqué doivent être liés
   avec la bibliothèque <filename>libecpg</filename>. Cela peut peut être
   effectué, par exemple, en utilisant
   les options de l'éditeur de liens <literal>-L/usr/local/pgsql/lib -lecpg</literal>.
  </para>

  <para>
   La valeur réelle des répertoires, fonction de l'installation, peut
   être obtenue par l'utilisation de la commande <xref linkend="app-pgconfig"/>.
  </para>
 </refsect1>


 <refsect1>
  <title>Exemples</title>

  <para>
   Soit un fichier source C contenant du SQL embarqué nommé
   <filename>prog1.pgc</filename>. Il peut être transformé en programme exécutable à l'aide des commandes suivantes&nbsp;:
   <programlisting>ecpg prog1.pgc
cc -I/usr/local/pgsql/include -c prog1.c
cc -o prog1 prog1.o -L/usr/local/pgsql/lib -lecpg
   </programlisting>
  </para>
 </refsect1>

</refentry>
