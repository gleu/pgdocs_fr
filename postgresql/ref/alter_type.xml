<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->
<!-- SAS 20060616 -->

<refentry id="sql-altertype">
 <indexterm zone="sql-altertype">
  <primary>ALTER TYPE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER TYPE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>
   ALTER TYPE
  </refname>
  <refpurpose>
   Modifier la définition d'un type
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>ALTER TYPE <replaceable class="PARAMETER">nom</replaceable> <replaceable class="PARAMETER">action</replaceable> [, ... ]
ALTER TYPE <replaceable class="PARAMETER">nom</replaceable> OWNER TO { <replaceable class="PARAMETER">nouveau_propriétaire</replaceable> | CURRENT_USER | SESSION_USER }
ALTER TYPE <replaceable class="PARAMETER">nom</replaceable> RENAME ATTRIBUTE <replaceable class="PARAMETER">nom_attribut</replaceable> TO <replaceable class="PARAMETER">nouveau_nom_attribut</replaceable> [ CASCADE | RESTRICT ]
ALTER TYPE <replaceable class="PARAMETER">nom</replaceable> RENAME TO <replaceable class="PARAMETER">nouveau_nom</replaceable>
ALTER TYPE <replaceable class="parameter">nom</replaceable> SET SCHEMA <replaceable class="parameter">nouveau_schéma</replaceable></synopsis>
ALTER TYPE <replaceable class="PARAMETER">nom</replaceable> ADD VALUE [ IF NOT EXISTS ] <replaceable class="PARAMETER">nouvelle_valeur_enumérée</replaceable> [ { BEFORE | AFTER } <replaceable class="PARAMETER">valeur_enumérée</replaceable> ]
ALTER TYPE <replaceable class="PARAMETER">nom</replaceable> ADD VALUE [ IF NOT EXISTS ] <replaceable class="PARAMETER">nouvelle_valeur_enum</replaceable> [ { BEFORE | AFTER } <replaceable class="PARAMETER">valeur_enum_voisine</replaceable> ]
ALTER TYPE <replaceable class="PARAMETER">nom</replaceable> RENAME VALUE <replaceable class="PARAMETER">valeur_enum_existante</replaceable> TO <replaceable class="PARAMETER">nouvelle_valeur_enum</replaceable>

<phrase>où <replaceable class="PARAMETER">action</replaceable> fait partie de&nbsp;:</phrase>

    ADD ATTRIBUTE <replaceable class="PARAMETER">nom_attribut</replaceable> <replaceable class="PARAMETER">type_de_donnée</replaceable> [ COLLATE <replaceable class="PARAMETER">collationnement</replaceable> ] [ CASCADE | RESTRICT ]
    DROP ATTRIBUTE [ IF EXISTS ] <replaceable class="PARAMETER">nom_attribut</replaceable> [ CASCADE | RESTRICT ]
    ALTER ATTRIBUTE <replaceable class="PARAMETER">nom_attribut</replaceable> [ SET DATA ] TYPE <replaceable class="PARAMETER">type_de_donnée</replaceable> [ COLLATE <replaceable class="PARAMETER">collationnement</replaceable> ] [ CASCADE | RESTRICT ]
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>ALTER TYPE</command> modifie la définition d'un type existant.
   Les variantes suivantes existent&nbsp;:

  <variablelist>
   <varlistentry>
    <term><literal>ADD ATTRIBUTE</literal></term>
    <listitem>
     <para>
      Cette forme ajoute un nouvel attribut à un type composite, avec la même syntaxe que
      <xref linkend="sql-createtype"/>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP ATTRIBUTE [ IF EXISTS ]</literal></term>
    <listitem>
     <para>
      Cette forme supprime un attribut d'un type composite.
      Si <literal>IF EXISTS</literal> est spécifié et que l'attribut
      cible n'existe pas, aucun message d'erreur ne sera émis, mais
      remplacé par une alerte de niveau NOTICE.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET DATA TYPE</literal></term>
    <listitem>
     <para>
      Cette forme modifie le type d'un attribut d'un type composite.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OWNER</literal></term>
    <listitem>
     <para>
      Cette forme modifie le propriétaire d'un type.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME</literal></term>
    <listitem>
     <para>
      Cette forme permet de modifier le nom du type ou celui d'un attribut d'un type composite.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET SCHEMA</literal></term>
    <listitem>
     <para>
      Cette forme déplace le type dans un autre schéma.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ADD VALUE [ IF NOT EXISTS ] [ BEFORE | AFTER ]</literal></term>
    <listitem>
     <para>
      Cette forme ajoute une valeur à une énumération. L'emplacement de la
      nouvelle valeur dans l'énumération peut être spécifié comme étant avant
      (<literal>BEFORE</literal>) ou après (<literal>AFTER</literal>) une des
      valeurs existantes. Dans le cas contraire, le nouvel élément est ajouté
      à la fin de la liste de valeurs.
     </para>
     <para>
      Si <literal>IF NOT EXISTS</literal> est précisé, l'existence d'une valeur
      de même nom ne constitue par une erreur&nbsp;: un message d'avertissement
      sera envoyé mais aucune action ne sera prise. Dans le cas contraire, une
      erreur est revnoyée si la nouvelle valeur est déjà présente.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME VALUE</literal></term>
    <listitem>
     <para>
      Renomme une valeur d'un type énumération. La place de la valeur dans l'ordre de l'énumération n'est pas affecté.  Une erreur sera renvoyée if la valeur spécifiée n'est pas présente ou si le nouveau nom est déjà présent.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  </para>

  <para>
   Les actions <literal>ADD ATTRIBUTE</literal>, <literal>DROP
   ATTRIBUTE</literal>, et <literal>ALTER ATTRIBUTE</literal>
   peuvent être combinées dans une liste de modifications multiples
   à appliquer en parallèle. Il est ainsi possible d'ajouter et/ou modifier
   plusieurs attributs par une seule et même commande.
  </para>

  <para>
   Seul le propriétaire du type peut utiliser <command>ALTER TYPE</command>.
   Pour modifier le schéma d'un type,
   le droit <literal>CREATE</literal> sur le nouveau schéma est requis.
   Pour modifier le propriétaire, il faut être un membre direct ou
   indirect du nouveau rôle propriétaire et ce rôle doit avoir le droit
   <literal>CREATE</literal> sur le schéma du type (ces
   restrictions assurent que la modification du propriétaire ne va pas au-delà de ce qui
   est possible par la suppression et la recréation du type&nbsp;; toutefois, un superutilisateur peut modifier
   le propriétaire de n'importe quel type).
   Pour ajouter un attribut ou pour modifier le type d'un attribut, vous devez
   aussi avoir le droit <literal>USAGE</literal> sur le type.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

   <para>
    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">nom</replaceable></term>
      <listitem>
       <para>
        Le nom du type à modifier (éventuellement qualifié du nom du schéma).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">nouveau_nom</replaceable></term>
      <listitem>
       <para>
        Le nouveau nom du type.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">nouveau_propriétaire</replaceable></term>
      <listitem>
       <para>
        Le nom du nouveau propriétaire du type.
       </para>
      </listitem>
     </varlistentry>

    <varlistentry>
      <term><replaceable class="parameter">nouveau_schema</replaceable></term>
      <listitem>
       <para>
        Le nouveau schéma du type.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">nom_attribut</replaceable></term>
      <listitem>
       <para>
        Le nom de l'attribut à ajouter, modifier ou supprimer.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">nouveau_nom_attribute</replaceable></term>
      <listitem>
       <para>
        Le nouveau nom de l'attribut à renommer.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">type_de_donnée</replaceable></term>
      <listitem>
       <para>
        Le type de donnée pour l'attribut à ajouter ou modifier.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">nouvelle_valeur_enumérée</replaceable></term>
      <listitem>
       <para>
        La nouvelle valeur à ajouter à la liste d'un type, ou le nouveau nom à
        être donné à une valeur existante.  . Comme pour tous les littéraux, la
        valeur devra être délimitée par des guillements simples.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">valeur_enumérée_voisine</replaceable></term>
      <listitem>
       <para>
        La valeur existante d'une énumération par rapport à laquelle la nouvelle valeur doit être
	ajoutée (permet de déterminer l'ordre de tri du type énuméré).
        Comme pour tous les littéraux, la valeur existante devra être délimitée par des guillements simples.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="PARAMETER">existing_enum_value</replaceable></term>
      <listitem>
       <para>
        La valeur existante de l'énumération qui doit être renommée.  Comme
        toutes les littéraux d'énumération , elle doit être délimitée par des
        guillemets simples.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CASCADE</literal></term>
      <listitem>
       <para>
        Propage automatiquement les opération sur les tables typées du type
        étant modifié, ainsi que leur descendants.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>RESTRICT</literal></term>
      <listitem>
       <para>
        Refuse les opérations si le type étant modifié est le type d'une table
        typée.  C'est le comportement par défaut.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>

   </para>
  </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   <command>ALTER TYPE ... ADD VALUE</command> ne peut pas être exécuté à
   l'intérieur d'un bloc de transaction.
  </para>

  <para>
   Les comparaisons faisant intervenir une valeur ajoutée à postériori peuvent
   quelquefois s'avérer plus lentes que celles portant uniquement sur les valeurs
   originales d'un type énuméré. Ce ralentissement ne devrait toutefois intervenir que si
   la position de la nouvelle valeur a été spécifiée en utilisant les options <literal>BEFORE</literal>
   ou <literal>AFTER</literal>, au lieu d'insérer la nouvelle valeur en fin de liste.
   Ce ralentissement peut également se produire, bien que la nouvelle valeur ait été insérée en fin d'énumération,
   en cas de <quote>bouclage</quote> du compteur des OID depuis la création du
   type énuméré. Le ralentissement est généralement peu significatif&nbsp;; mais s'il s'avère
   important, il est toujours possible de retrouver les performances optimales par une
   suppression / recréation du type énuméré, ou encore par sauvegarde et rechargement de
   la base.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Pour renommer un type de données&nbsp;:
   <programlisting>
ALTER TYPE courrier_electronique RENAME TO courriel;
  </programlisting>
 </para>

 <para>
  Donner la propriété du type <literal>courriel</literal>
  à <literal>joe</literal>&nbsp;:
  <programlisting>ALTER TYPE courriel OWNER TO joe;</programlisting>
  </para>

  <para>
   Changer le schéma du type <literal>courriel</literal>
   en <literal>clients</literal>&nbsp;:
   <programlisting>ALTER TYPE courriel SET SCHEMA clients;</programlisting>
  </para>

  <para>
   Ajouter un nouvel attribut à un type composite&nbsp;:
<programlisting>
ALTER TYPE compfoo ADD ATTRIBUTE f3 int;
  </programlisting>
 </para>

 <para>
  Ajouter une nouvelle valeur à une énumération, en spécifiant sa position de tri&nbsp;:
  <programlisting>
ALTER TYPE colors ADD VALUE 'orange' AFTER 'red';
</programlisting>
  </para>

  <para>
   Pour renommer une valeur d'une énumération :
<programlisting>
ALTER TYPE colors RENAME VALUE 'purple' TO 'mauve';
</programlisting>
  </para>
</refsect1>

<refsect1>
 <title>Compatibilité</title>

 <para>
  Les variantes permettant d'ajouter et supprimer un attribut font
  partie du standard <acronym>SQL</acronym>&nbsp;; les autres variantes sont des extensions
  spécifiques à <productname>PostgreSQL</productname>.
 </para>
</refsect1>

<refsect1 id="sql-altertype-see-also">
 <title>Voir aussi</title>

 <simplelist type="inline">
  <member><xref linkend="sql-createtype"/></member>
  <member><xref linkend="sql-droptype"/></member>
 </simplelist>
</refsect1>
</refentry>
