<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-altertype">
 <indexterm zone="sql-altertype">
  <primary>ALTER TYPE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER TYPE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>
   ALTER TYPE
  </refname>
  <refpurpose>
   Modifier la définition d'un type
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>
ALTER TYPE <replaceable class="parameter">nom</replaceable> OWNER TO { <replaceable class="parameter">nouveau_propriétaire</replaceable> | CURRENT_ROLE | CURRENT_USER | SESSION_USER }
ALTER TYPE <replaceable class="parameter">nom</replaceable> RENAME TO <replaceable class="parameter">nouveau_nom</replaceable>
ALTER TYPE <replaceable class="parameter">nom</replaceable> SET SCHEMA <replaceable class="parameter">nouveau_schéma</replaceable>
ALTER TYPE <replaceable class="parameter">name</replaceable> RENAME ATTRIBUTE <replaceable class="parameter">attribute_name</replaceable> TO <replaceable class="parameter">new_attribute_name</replaceable> [ CASCADE | RESTRICT ]
ALTER TYPE <replaceable class="parameter">name</replaceable> <replaceable class="parameter">action</replaceable> [, ... ]
ALTER TYPE <replaceable class="parameter">nom</replaceable> ADD VALUE [ IF NOT EXISTS ] <replaceable class="parameter">nouvelle_valeur_enumérée</replaceable> [ { BEFORE | AFTER } <replaceable class="parameter">valeur_enumérée</replaceable> ]
ALTER TYPE <replaceable class="parameter">nom</replaceable> ADD VALUE [ IF NOT EXISTS ] <replaceable class="parameter">nouvelle_valeur_enum</replaceable> [ { BEFORE | AFTER } <replaceable class="parameter">valeur_enum_voisine</replaceable> ]
ALTER TYPE <replaceable class="parameter">nom</replaceable> RENAME VALUE <replaceable class="parameter">valeur_enum_existante</replaceable> TO <replaceable class="parameter">nouvelle_valeur_enum</replaceable>
ALTER TYPE <replaceable class="parameter">name</replaceable> SET ( <replaceable class="parameter">property</replaceable> = <replaceable class="parameter">value</replaceable> [, ... ] )

<phrase>où <replaceable class="parameter">action</replaceable> fait partie de&nbsp;:</phrase>

    ADD ATTRIBUTE <replaceable class="parameter">nom_attribut</replaceable> <replaceable class="parameter">type_de_donnée</replaceable> [ COLLATE <replaceable class="parameter">collationnement</replaceable> ] [ CASCADE | RESTRICT ]
    DROP ATTRIBUTE [ IF EXISTS ] <replaceable class="parameter">nom_attribut</replaceable> [ CASCADE | RESTRICT ]
    ALTER ATTRIBUTE <replaceable class="parameter">nom_attribut</replaceable> [ SET DATA ] TYPE <replaceable class="parameter">type_de_donnée</replaceable> [ COLLATE <replaceable class="parameter">collationnement</replaceable> ] [ CASCADE | RESTRICT ]
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>ALTER TYPE</command> modifie la définition d'un type existant.
   Les variantes suivantes existent&nbsp;:

   <variablelist>
    <varlistentry>
     <term><literal>OWNER</literal></term>
     <listitem>
      <para>
       Cette forme change le propriétaire du type.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>RENAME</literal></term>
     <listitem>
      <para>
       Cette forme change le nom du type.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>SET SCHEMA</literal></term>
     <listitem>
      <para>
       Cette forme déplace le type dans un autre schéma.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>RENAME ATTRIBUTE</literal></term>
     <listitem>
      <para>
       Cette forme n'est seulement utilisable que sur des types composites.
       Elle change le nom d'un attribut individuel du type.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>ADD ATTRIBUTE</literal></term>
     <listitem>
      <para>
       Cette forme ajoute un nouvel attribut à un type composite,
       en utilisant la même syntaxe que
       <link linkend="sql-createtype"><command>CREATE TYPE</command></link>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>DROP ATTRIBUTE [ IF EXISTS ]</literal></term>
     <listitem>
      <para>
       Cette forme supprime un attribut d'un type composite.
       Si <literal>IF EXISTS</literal> est précisé et que l'attribut n'existe pas,
       aucune erreur n'est renvoyée. Dans ce cas, un avertissement est affichée
       à la place.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>ALTER ATTRIBUTE ... SET DATA TYPE</literal></term>
     <listitem>
      <para>
       Cette forme change le type d'un attribut d'un type composite.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>ADD VALUE [ IF NOT EXISTS ] [ BEFORE | AFTER ]</literal></term>
     <listitem>
      <para>
       Cette forme ajoute une valeur à une énumération. L'emplacement de la
       nouvelle valeur dans l'énumération peut être spécifié comme étant avant
       (<literal>BEFORE</literal>) ou après (<literal>AFTER</literal>) une des
       valeurs existantes. Dans le cas contraire, le nouvel élément est ajouté
       à la fin de la liste de valeurs.
      </para>
      <para>
       Si <literal>IF NOT EXISTS</literal> est précisé, l'existence d'une valeur
       de même nom ne constitue par une erreur&nbsp;: un message d'avertissement
       sera envoyé mais aucune action ne sera prise. Dans le cas contraire, une
       erreur est renvoyée si la nouvelle valeur est déjà présente.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>RENAME VALUE</literal></term>
     <listitem>
      <para>
       Renomme une valeur d'un type énumération. La place de la valeur dans l'ordre de l'énumération n'est pas affecté.  Une erreur sera renvoyée if la valeur spécifiée n'est pas présente ou si le nouveau nom est déjà présent.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <literal>SET ( <replaceable class="parameter">property</replaceable> = <replaceable class="parameter">value</replaceable> [, ... ] )</literal>
     </term>
     <listitem>
      <para>
       Cette forme est applicable seulement sur les types de base. Elle permet
       l'ajustement d'un sous-ensemble des propriétés de type de base qui peuvent être
       défini dans  <command>CREATE TYPE</command>. Ces propriétées peuvent être modifiées
       spécifiquement&nbsp;:
       <itemizedlist>
        <listitem>
         <para>
          <literal>RECEIVE</literal> peut se voir affecter le nom d'une fonction
          d'entrée binaire ou <literal>NONE</literal> pour supprimer la fonction
          d'entrée binaire du type. L'utilisation de cette option requiert
          l'attribut superuser.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>SEND</literal> peut se voir affecter le nom d'une fonction de
          sortie binaire ou <literal>NONE</literal> pour supprimer la fonction de
          sortie binaire du type. L'utilisation de cette option requiert
          l'attribut superuser.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>TYPMOD_IN</literal> peut se voir affecter le nom d'une
          fonction de modificateur d'entrée du type ou <literal>NONE</literal>
          pour supprimer la fonction de modificateur d'entrée du type.
          L'utilisation de cette option requiert l'attribut superuser.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>TYPMOD_OUT</literal> peut se voir affecter le nom d'une
          fonction de modificateur de sortie du type ou <literal>NONE</literal>
          pour supprimer la fonction de modificateur de sortie du type.
          L'utilisation de cette option requiert l'attribut superuser.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>ANALYZE</literal> peut se voir affecter le nom d'une fonction
          de récupération des statistique pour ce type ou <literal>NONE</literal>
          pour supprimer la fonction de récupération des statistiques
          L'utilisation de cette option requiert l'attribut superuser.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>SUBSCRIPT</literal> peut être initialisé avec le nom d'une
          fonction de gestion d'indices spécifique au type, ou
          <literal>NONE</literal> pour supprimer la fonction de gestion
          d'indices du type. Utiliser cette fonction nécessite l'attribut de
          super-utilisateur.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>STORAGE</literal><indexterm>
           <primary>TOAST</primary>
           <secondary>paramètres de stockage par type</secondary>
          </indexterm>
          Peut être affecté à <literal>plain</literal>,
          <literal>extended</literal>, <literal>external</literal>,
          ou <literal>main</literal> (voir <xref linkend="storage-toast"/> pour plus
          d'informations sur ce que cela signifie). Cependant, passer de
          <literal>plain</literal> à un autre paramètre nécessite l'attribut superuser
          (car cela demande que toutes les fonctions de type C soient prêtes pour TOAST),
          et passer à <literal>plain</literal> depuis un autre paramètrage n'est pas
          autorisé du tout (car des valeurs de type TOAST peuvent déjà être contenues
          dans la base de données). Notez que modifier cette option ne modifie pas d'elle même
          les données stockées, elle permet juste d'utiliser la stratégie TOAST par défaut
          pour les colonnes de tables créées dans le futur. Voir <xref linkend="sql-altertable"/>
          pour changer la stratégie TOAST pour des colonnes d'une table existante.
         </para>
        </listitem>
       </itemizedlist>
       Voir <xref linkend="sql-createtype"/> pour plus de détail sur ces
       propriétés de type. Notez qu'une modification sur les propriétés de type
       de base sera propagé automatiquement sur les domaines basés sur ce type
       si cela s'avère nécessaire.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

  <para>
   Les actions <literal>ADD ATTRIBUTE</literal>, <literal>DROP
    ATTRIBUTE</literal>, et <literal>ALTER ATTRIBUTE</literal>
   peuvent être combinées dans une liste de modifications multiples
   à appliquer en parallèle. Il est ainsi possible d'ajouter et/ou modifier
   plusieurs attributs par une seule et même commande.
  </para>

  <para>
   Seul le propriétaire du type peut utiliser <command>ALTER TYPE</command>.
   Pour modifier le schéma d'un type,
   le droit <literal>CREATE</literal> sur le nouveau schéma est requis.
   Pour modifier le propriétaire, il faut être un membre direct ou
   indirect du nouveau rôle propriétaire et ce rôle doit avoir le droit
   <literal>CREATE</literal> sur le schéma du type (ces
   restrictions assurent que la modification du propriétaire ne va pas au-delà de ce qui
   est possible par la suppression et la recréation du type&nbsp;; toutefois, un super-utilisateur peut modifier
   le propriétaire de n'importe quel type).
   Pour ajouter un attribut ou pour modifier le type d'un attribut, vous devez
   aussi avoir le droit <literal>USAGE</literal> sur le type de données de la
   colonne.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <para>
   <variablelist>
    <varlistentry>
     <term><replaceable class="parameter">nom</replaceable></term>
     <listitem>
      <para>
       Le nom du type à modifier (éventuellement qualifié du nom du schéma).
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nouveau_nom</replaceable></term>
     <listitem>
      <para>
       Le nouveau nom du type.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nouveau_propriétaire</replaceable></term>
     <listitem>
      <para>
       Le nom du nouveau propriétaire du type.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nouveau_schema</replaceable></term>
     <listitem>
      <para>
       Le nouveau schéma du type.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nom_attribut</replaceable></term>
     <listitem>
      <para>
       Le nom de l'attribut à ajouter, modifier ou supprimer.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nouveau_nom_attribute</replaceable></term>
     <listitem>
      <para>
       Le nouveau nom de l'attribut à renommer.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">type_de_donnée</replaceable></term>
     <listitem>
      <para>
       Le type de donnée pour l'attribut à ajouter ou modifier.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nouvelle_valeur_enumérée</replaceable></term>
     <listitem>
      <para>
       La nouvelle valeur à ajouter à la liste d'un type, ou le nouveau nom à
       être donné à une valeur existante.  . Comme pour tous les littéraux, la
       valeur devra être délimitée par des guillemets simples.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">valeur_enumérée_voisine</replaceable></term>
     <listitem>
      <para>
       La valeur existante d'une énumération par rapport à laquelle la nouvelle valeur doit être
       ajoutée (permet de déterminer l'ordre de tri du type énuméré).
       Comme pour tous les littéraux, la valeur existante devra être délimitée par des guillemets simples.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">existing_enum_value</replaceable></term>
     <listitem>
      <para>
       La valeur existante de l'énumération qui doit être renommée.  Comme
       toutes les littéraux d'énumération , elle doit être délimitée par des
       guillemets simples.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">property</replaceable></term>
     <listitem>
      <para>
       Le nom de la propriété du type à modifier&nbsp;; voir ci-dessus
       pour les valeurs possibles.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>CASCADE</literal></term>
     <listitem>
      <para>
       Propage automatiquement les opération sur les tables typées du type
       étant modifié, ainsi que leur descendants.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>RESTRICT</literal></term>
     <listitem>
      <para>
       Refuse les opérations si le type étant modifié est le type d'une table
       typée.  C'est le comportement par défaut.
      </para>
     </listitem>
    </varlistentry>

   </variablelist>

  </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Si <command>ALTER TYPE ... ADD VALUE</command> (la forme qui ajoute une
   nouvelle valeur à un type énuméré) est exécuté à l'intérieur d'un bloc
   transactionnel, la nouvelle valeur ne peut être utilisée qu'à partir
   d'après la validation de la transaction.
  </para>

  <para>
   Les comparaisons faisant intervenir une valeur ajoutée à postériori peuvent
   quelquefois s'avérer plus lentes que celles portant uniquement sur les valeurs
   originales d'un type énuméré. Ce ralentissement ne devrait toutefois intervenir que si
   la position de la nouvelle valeur a été spécifiée en utilisant les options <literal>BEFORE</literal>
   ou <literal>AFTER</literal>, au lieu d'insérer la nouvelle valeur en fin de liste.
   Ce ralentissement peut également se produire, bien que la nouvelle valeur ait été insérée en fin d'énumération,
   en cas de <quote>bouclage</quote> du compteur des OID depuis la création du
   type énuméré. Le ralentissement est généralement peu significatif&nbsp;; mais s'il s'avère
   important, il est toujours possible de retrouver les performances optimales par une
   suppression / recréation du type énuméré, ou encore par sauvegarde et rechargement de
   la base.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Pour renommer un type de données&nbsp;:
   <programlisting>
ALTER TYPE courrier_electronique RENAME TO courriel;
   </programlisting>
  </para>

  <para>
   Donner la propriété du type <literal>courriel</literal>
   à <literal>joe</literal>&nbsp;:
   <programlisting>ALTER TYPE courriel OWNER TO joe;</programlisting>
  </para>

  <para>
   Changer le schéma du type <literal>courriel</literal>
   en <literal>clients</literal>&nbsp;:
   <programlisting>ALTER TYPE courriel SET SCHEMA clients;</programlisting>
  </para>

  <para>
   Ajouter un nouvel attribut à un type composite&nbsp;:
<programlisting>
ALTER TYPE compfoo ADD ATTRIBUTE f3 int;
   </programlisting>
  </para>

  <para>
   Ajouter une nouvelle valeur à une énumération, en spécifiant sa position de tri&nbsp;:
   <programlisting>
ALTER TYPE colors ADD VALUE 'orange' AFTER 'red';
   </programlisting>
  </para>

  <para>
   Pour renommer une valeur d'une énumération&nbsp;:
   <programlisting>
ALTER TYPE colors RENAME VALUE 'purple' TO 'mauve';
   </programlisting>
  </para>

  <para>
   Créer une fonction I/O binaire pour un type existant&nbsp;:
   <programlisting>
CREATE FUNCTION mytypesend(mytype) RETURNS bytea ...;
CREATE FUNCTION mytyperecv(internal, oid, integer) RETURNS mytype ...;
ALTER TYPE mytype SET (
    SEND = mytypesend,
    RECEIVE = mytyperecv
);
   </programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Les variantes permettant d'ajouter et supprimer un attribut font
   partie du standard <acronym>SQL</acronym>&nbsp;; les autres variantes sont des extensions
   spécifiques à <productname>PostgreSQL</productname>.
  </para>
 </refsect1>

 <refsect1 id="sql-altertype-see-also">
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createtype"/></member>
   <member><xref linkend="sql-droptype"/></member>
  </simplelist>
 </refsect1>
</refentry>
