<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-createsequence">
 <indexterm zone="sql-createsequence">
  <primary>CREATE SEQUENCE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE SEQUENCE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE SEQUENCE</refname>
  <refpurpose>Définir un nouveau générateur de séquence</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>CREATE [ TEMPORARY | TEMP ] SEQUENCE [ IF NOT EXISTS ] <replaceable class="parameter">name</replaceable>
    [ AS <replaceable class="parameter">type_donnee</replaceable> ]
    [ INCREMENT [ BY ] <replaceable class="parameter">increment</replaceable> ]
    [ MINVALUE <replaceable class="parameter">valeurmin</replaceable> | NO MINVALUE ]
    [ MAXVALUE <replaceable class="parameter">valeurmax</replaceable> | NO MAXVALUE ]
    [ START [ WITH ] <replaceable class="parameter">début</replaceable> ]
    [ CACHE <replaceable class="parameter">cache</replaceable> ]
    [ [ NO ] CYCLE ]
    [ OWNED BY { <replaceable class="parameter">nom_table</replaceable>.<replaceable class="parameter">nom_colonne</replaceable> | NONE } ]
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>CREATE SEQUENCE</command> crée un nouveau générateur de
   séquence de nombres. Cela implique la création et l'initialisation d'une nouvelle table
   à une seule ligne nommée <replaceable class="parameter">nom</replaceable>. Le générateur appartient à
   l'utilisateur qui exécute la commande.
  </para>

  <para>
   Si un nom de schéma est donné, la séquence est créée dans le schéma
   spécifié. Sinon, elle est créée dans le schéma courant. Les séquences
   temporaires existent dans un schéma spécial, il n'est donc pas utile
   de préciser un nom de schéma lors de la création d'une séquence temporaire. Le nom de
   la séquence doit être distinct du nom de toute autre séquence, table,
   index, vue ou table distante du schéma.
  </para>

  <para>
   Après la création d'une séquence, les fonctions
   <function>nextval</function>, <function>currval</function> et
   <function>setval</function> sont utilisées pour agir sur la séquence. Ces fonctions sont
   documentées dans <xref linkend="functions-sequence"/>.
  </para>

  <para>
   Bien qu'il ne soit pas possible de mettre à jour une séquence en accédant directement
   à la table, une requête telle que&nbsp;:

   <programlisting>SELECT * FROM <replaceable>nom</replaceable>;
   </programlisting>

   peut être utilisée pour examiner les paramètres et l'état courant d'une séquence. En
   particulier, le champ <literal>last_value</literal> affiche la
   dernière valeur allouée par une session. (Cette valeur peut être rendue obsolète à
   l'affichage par des appels effectifs de <function>nextval</function> dans des sessions
   concurrentes.)
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><literal>TEMPORARY</literal> ou <literal>TEMP</literal></term>
    <listitem>
     <para>
      Si ce paramètre est spécifié, l'objet séquence n'est créé que pour la session en cours
      et est automatiquement supprimé lors de la sortie de session. Les
      séquences permanentes portant le même nom ne sont pas visibles
      (dans cette session) tant que la séquence temporaire existe, sauf à être
      référencées par les noms qualifiés du schéma.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>IF NOT EXISTS</literal></term>
    <listitem>
     <para>
      Ne renvoie pas une erreur si une relation de même nom existe déjà. Un
      message d'avertissement est renvoyé dans ce cas. Notez qu'il n'y a
      aucune garantie que la relation existante ressemble à la séquence qui
      aurait été créée. Il est même possible que cela ne soit pas une
      séquence.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom</replaceable></term>
    <listitem>
     <para>
      Le nom (éventuellement qualifié du nom du schéma) de la séquence à
      créer.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">type_donnee</replaceable></term>
    <listitem>
     <para>
      La clause facultative <literal>AS <replaceable
       class="parameter">type_donnee</replaceable></literal>
      spécifie le type de donnée de la séquence.  Les types valides sont
      <literal>smallint</literal>, <literal>integer</literal>,
      et <literal>bigint</literal>.  <literal>bigint</literal> est le type par
      défault.  Le type de donnée détermine les valeurs minimales et maximales
      par défaut pour la séquence.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">incrément</replaceable></term>
    <listitem>
     <para>
      La clause optionnelle
      <literal>INCREMENT BY <replaceable class="parameter">incrément</replaceable></literal>
      précise la
      valeur à ajouter à la valeur courante de la séquence pour créer une
      nouvelle valeur. Une valeur positive crée une séquence ascendante, une
      valeur négative une séquence descendante. 1 est la valeur par défaut.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">valeurmin</replaceable></term>
    <term><literal>NO MINVALUE</literal></term>
    <listitem>
     <para>
      La clause optionnelle
      <literal>MINVALUE <replaceable class="parameter">valeurmin</replaceable></literal>
      détermine la valeur
      minimale de la séquence. Si cette clause n'est pas fournie
      ou si <option>NO MINVALUE</option> est spécifié, alors les valeurs par
      défaut sont utilisées.   La valeur par défaut pour une séquence
      ascendante est 1.  La valeur par défaut pour une séquence descendante est
      la valeur minimale du type de donnée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">valeurmax</replaceable></term>
    <term><literal>NO MAXVALUE</literal></term>
    <listitem>
     <para>
      La clause optionnelle <literal>MAXVALUE <replaceable
       class="parameter">valeurmax</replaceable></literal> détermine la valeur
      maximale de la séquence. Si cette clause n'est pas fournie ou si
      <option>NO MAXVALUE</option> est spécifié, alors les valeurs par défaut
      sont utilisées. La valeur par défaut pour une séquence ascendante est la
      valeur maximale pour le type de données. La valeur par défaut pour une
      séquence descendante est -1.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">début</replaceable></term>
    <listitem>
     <para>
      La clause optionnelle
      <literal>START WITH <replaceable class="parameter">début</replaceable> </literal>
      permet à la séquence de démarrer n'importe où.
      La valeur de début par défaut est
      <replaceable class="parameter">valeurmin</replaceable> pour les séquences ascendantes
      et <replaceable class="parameter">valeurmax</replaceable> pour les
      séquences descendantes.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">cache</replaceable></term>
    <listitem>
     <para>
      La clause optionnelle
      <literal>CACHE <replaceable class="parameter">cache</replaceable></literal>
      spécifie le nombre de numéros de séquence à préallouer et stocker en mémoire pour un
      accès plus rapide. 1 est la valeur minimale (une seule valeur est
      engendrée à la fois, soit pas de cache) et la valeur
      par défaut.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CYCLE</literal></term>
    <term><literal>NO CYCLE</literal></term>
    <listitem>
     <para>
      L'option <literal>CYCLE</literal> autorise la séquence à recommencer au
      début lorsque <replaceable class="parameter">valeurmax</replaceable> ou
      <replaceable class="parameter">valeurmin</replaceable> sont atteintes, respectivement, par
      une séquence ascendante ou descendante. Si la limite est
      atteinte, le prochain nombre engendré est respectivement
      <replaceable class="parameter">valeurmin</replaceable> ou
      <replaceable class="parameter">valeurmax</replaceable>.
     </para>

     <para>
      Si <literal>NO CYCLE</literal> est spécifié, tout appel à
      <function>nextval</function> alors que la séquence a atteint la valeur
      maximale (dans le cas d'une séquence ascendante) ou la valeur minimale (dans l'autre cas)
      retourne une erreur. En l'absence de précision, <literal>NO CYCLE</literal>
      est la valeur par défaut.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OWNED BY</literal> <replaceable class="parameter">nom_table</replaceable>.<replaceable class="parameter">nom_colonne</replaceable></term>
    <term><literal>OWNED BY NONE</literal></term>
    <listitem>
     <para>
      L'option <literal>OWNED BY</literal> permet d'associer la séquence à une
      colonne de table spécifique. De cette façon, la séquence sera
      automatiquement supprimée si la colonne (ou la table entière) est supprimée.
      La table indiquée doit avoir le même propriétaire et être dans le même
      schéma que la séquence.
      <literal>OWNED BY NONE</literal>, valeur par défaut, indique qu'il n'y a
      pas d'association.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   <command>DROP SEQUENCE</command> est utilisé pour supprimer une séquence.
  </para>

  <para>
   Les séquences sont fondées sur l'arithmétique <type>bigint</type>, leur échelle
   ne peut donc pas excéder l'échelle d'un entier sur huit octets
   (-9223372036854775808 à 9223372036854775807).
  </para>

  <para>
   Comme les appels à <function>nextval</function> et <function>setval</function>
   ne sont jamais annulés, les objets séquences ne peuvent pas être utilisés
   si des affectations <quote>sans trous</quote> sont nécessaires. Il est
   possible de construire une affectation sans trou en utilisant des verrous
   exclusifs sur une table contenant un compteur. Cependant, cette solution
   est bien plus coûteuse que les objets séquences, tout spécialement si un
   grand nombre de transactions ont besoin de numéro de séquence en parallèle.
  </para>

  <para>
   Des résultats inattendus peuvent être obtenus dans le cas d'un
   paramétrage de <replaceable class="parameter">cache</replaceable> supérieur
   à un pour une séquence utilisée concurrentiellement par
   plusieurs sessions. Chaque session alloue et cache des valeurs de
   séquences successives lors d'un accès à la séquence et augmente en conséquence la
   valeur de <literal>last_value</literal>. Les <replaceable class="parameter">cache</replaceable>-1
   appels suivants de <function>nextval</function> au cours de la session
   session retourne simplement les valeurs préallouées sans toucher à la
   séquence. De ce fait, tout nombre alloué mais non utilisé au cours d'une session est
   perdu à la fin de la session, créant ainsi des <quote>trous</quote> dans
   la séquence.
  </para>

  <para>
   De plus, bien qu'il soit garanti que des sessions différentes engendrent
   des valeurs de séquence distinctes, si l'on considère toutes les sessions,
   les valeurs peuvent ne pas être engendrées séquentiellement.
   Par exemple, avec un paramétrage du
   <replaceable class="parameter">cache</replaceable> à 10, la session A peut réserver
   les valeurs 1..10 et récupérer <function>nextval</function>=1&nbsp;; la
   session B peut alors réserver les valeurs 11..20 et récupérer
   <function>nextval</function>=11 avant que la session A n'ait engendré
   <literal>nextval</literal>=2.
   De ce fait, un paramétrage de <replaceable class="parameter">cache</replaceable> à un
   permet d'assumer que les valeurs retournées par <function>nextval</function> sont
   engendrées séquentiellement&nbsp;; avec un
   <replaceable class="parameter">cache</replaceable> supérieur,
   on ne peut qu'assumer que les valeurs retournées par <function>nextval</function>
   sont tous distinctes, non qu'elles sont réellement engendrées
   séquentiellement. De plus, <literal>last_value</literal> reflète la dernière
   valeur réservée pour toutes les sessions, que <function>nextval</function> ait ou non
   retourné cette valeur.
  </para>

  <para>
   D'autre part, <function>setval</function> exécuté sur une telle
   séquence n'est pas pris en compte par les autres sessions avant qu'elle n'aient
   utilisé toutes les valeurs préallouées et cachées.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Créer une séquence ascendante appelée <literal>serie</literal>, démarrant à
   101&nbsp;:
   <programlisting>CREATE SEQUENCE serie START 101;
   </programlisting>
  </para>

  <para>
   Sélectionner le prochain numéro de cette séquence&nbsp;:
   <programlisting>SELECT nextval('serie');

 nextval
---------
     101
   </programlisting>
  </para>

  <para>
   Récupérer le prochain numéro d'une séquence&nbsp;:
   <programlisting>
SELECT nextval('serial');

 nextval
---------
     102
   </programlisting>
  </para>

  <para>
   Utiliser cette séquence dans une commande <command>INSERT</command>&nbsp;:
   <programlisting>INSERT INTO distributors VALUES (nextval('serie'), 'nothing');
   </programlisting>
  </para>

  <para>
   Mettre à jour la valeur de la séquence après un <command>COPY
    FROM</command>&nbsp;:
   <programlisting>BEGIN;
COPY distributeurs FROM 'fichier_entrees';
SELECT setval('serie', max(id)) FROM distributeurs;
END;
   </programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   <command>CREATE SEQUENCE</command> est conforme au standard
   <acronym>SQL</acronym>, exception faites des remarques suivantes&nbsp;:
   <itemizedlist>
    <listitem>
     <para>
      Obtenir la prochaine valeur se fait en utilisant la fonction
      <function>nextval()</function> au lieu de l'expression standard
      <command>NEXT VALUE FOR</command>.
     </para>
    </listitem>
    <listitem>
     <para>
      La clause <literal>OWNED BY</literal> est une extension
      <productname>PostgreSQL</productname>.
     </para>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-altersequence"/></member>
   <member><xref linkend="sql-dropsequence"/></member>
  </simplelist>
 </refsect1>

</refentry>
