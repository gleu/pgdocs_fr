<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->
<!-- SAS 20070921, PG825 -->

<refentry id="sql-cluster">
 <indexterm zone="sql-cluster">
  <primary>CLUSTER</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CLUSTER</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CLUSTER</refname>
  <refpurpose>Réorganiser une table en fonction d'un index</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>CLUSTER [VERBOSE] <replaceable class="parameter">nom_table</replaceable> [ USING <replaceable class="parameter">nom_index</replaceable> ]
CLUSTER [VERBOSE]
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>CLUSTER</command> réorganise (groupe) la table
   <replaceable class="parameter">nom_table</replaceable>
   en fonction de l'index <replaceable class="parameter">nom_index</replaceable>. L'index doit avoir été
   préalablement défini sur <replaceable class="parameter">nom_table</replaceable>.
  </para>

  <para>
   Une table reorganisée est physiquement réordonnée en fonction des informations de l'index.
   Ce regroupement est une opération ponctuelle&nbsp;:
   les actualisations ultérieures ne sont pas réorganisées. C'est-à-dire
   qu'aucune tentative n'est réalisée pour stocker les lignes nouvelles ou actualisées
   d'après l'ordre de l'index. (Une réorganisation périodique peut être
   obtenue en relançant la commande aussi souvent que souhaité. De plus,
   configurer le paramètre <literal>FILLFACTOR</literal> à moins de 100%
   peut aider à préserver l'ordre du cluster lors des mises à jour car les
   lignes mises à jour sont conservées dans la même page si suffisamment
   d'espace est disponible ici.)
  </para>

  <para>
   Quand une table est réorganisée, <productname>PostgreSQL</productname>
   enregistre l'index utilisé à cet effet. La forme
   <command>CLUSTER <replaceable class="parameter">nom_table</replaceable></command>
   réorganise la table en utilisant le même index qu'auparavant. Vous pouvez
   aussi utiliser les formes <literal>CLUSTER</literal> ou <literal>SET
    WITHOUT CLUSTER</literal> de <xref linkend="sql-altertable"/> pour
   initialiser l'index de façon à ce qu'il soit intégré aux prochaines
   opérations cluster ou pour supprimer tout précédent paramètre.
  </para>

  <para>
   <command>CLUSTER</command>, sans paramètre, réorganise toutes les tables de
   la base de données courante qui ont déjà été réorganisées et dont
   l'utilisateur est propriétaire, ou toutes les tables s'il s'agit d'un
   superutilisateur. Cette forme de <command>CLUSTER</command> ne peut pas être
   exécutée à l'intérieur d'une transaction.
  </para>

  <para>
   Quand une table est en cours de réorganisation, un verrou
   <literal>ACCESS EXCLUSIVE</literal> est acquis. Cela empêche toute opération
   sur la table (à la fois en lecture et en écriture) pendant l'exécution de
   <command>CLUSTER</command>.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nom_table</replaceable></term>
    <listitem>
     <para>
      Le nom d'une table (éventuellement qualifié du nom du schéma).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_index</replaceable></term>
    <listitem>
     <para>
      Le nom d'un index.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>VERBOSE</literal></term>
    <listitem>
     <para>
      Affiche la progression pour chaque table traitée.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Lorsque les lignes d'une table sont accédées aléatoirement et unitairement,
   l'ordre réel des données dans la table n'a que peu d'importance.
   Toutefois, si certaines données sont plus accédées que d'autres, et qu'un
   index les regroupe, l'utilisation de <command>CLUSTER</command> peut s'avérer
   bénéfique. Si une requête porte sur un ensemble de valeurs indexées ou sur
   une seule valeur pour laquelle plusieurs lignes de la table correspondent,
   <command>CLUSTER</command> est utile. En effet, lorsque l'index
   identifie la page de la table pour la première ligne correspondante, toutes
   les autres lignes correspondantes sont déjà probablement sur la même page
   de table, ce qui diminue les accès disque et accélère la requête.
  </para>

  <para>
   <command>CLUSTER</command> peut trier de nouveau en utilisant soit un
   parcours de l'index spécifié soit (si l'index est un Btree) un parcours
   séquentiel suivi d'un tri. Il choisira la méthode qui lui semble la plus
   rapide, en se basant sur les paramètres de coût du planificateur et sur les
   statistiques disponibles.
  </para>

  <para>
   Quand un parcours d'index est utilisé, une copie temporaire de la table
   est créée. Elle contient les données de la table dans l'ordre de l'index.
   Des copies temporaires de chaque index sur la table sont aussi créées. Du
   coup, vous devez disposer d'un espace libre sur le disque d'une taille
   au moins égale à la somme de la taille de la table et des index.
  </para>

  <para>
   Quand un parcours séquentiel suivi d'un tri est utilisé, un fichier de tri
   temporaire est aussi créé. Donc l'espace temporaire requis correspond à au
   maximum le double de la taille de la table et des index. Cette méthode est
   généralement plus rapide que le parcours d'index mais si le besoin en espace
   disque est trop important, vous pouvez désactiver ce choix en désactivant
   temporairement <xref linkend="guc-enable-sort"/> (<literal>off</literal>).
  </para>

  <para>
   Il est conseillé de configurer <xref linkend="guc-maintenance-work-mem"/>
   à une valeur suffisamment large (mais pas plus importante que la quantité
   de mémoire que vous pouvez dédier à l'opération
   <command>CLUSTER</command>) avant de lancer la commande.
  </para>

  <para>
   Puisque le planificateur enregistre les statistiques d'ordonnancement
   des tables, il est conseillé de lancer
   <xref linkend="sql-analyze"/> sur la table
   nouvellement réorganisée. Dans le cas contraire, les plans de requêtes
   peuvent être mal choisis par le planificateur.
  </para>

  <para>
   Comme <command>CLUSTER</command> se rappelle les index utilisés pour
   cette opération, un utilisateur peut exécuter manuellement des commandes
   <command>CLUSTER</command> une première fois, puis configurer un script
   de maintenance périodique qui n'exécutera qu'un <command>CLUSTER</command>
   sans paramètres, pour que les tables soient fréquemment triées physiquement.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Réorganiser la table <literal>employes</literal> sur la base de son index
   <literal>employes_ind</literal>&nbsp;:
   <programlisting>CLUSTER employes ON employes_ind;
   </programlisting>
  </para>

  <para>
   Réorganiser la relation <literal>employes</literal> en utilisant le même index
   que précédemment&nbsp;:
   <programlisting>CLUSTER employes;
   </programlisting>
  </para>

  <para>
   Réorganiser toutes les tables de la base de données qui ont déjà été préalablement
   réorganisées&nbsp;:
   <programlisting>CLUSTER;
   </programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Il n'existe pas d'instruction <command>CLUSTER</command> dans le standard
   SQL.
  </para>

  <para>
   La syntaxe
   <synopsis>
CLUSTER <replaceable class="parameter">nom_index</replaceable> ON <replaceable class="parameter">nom_table</replaceable>
   </synopsis>
   est aussi supportée pour la compatibilité avec les versions de
   <productname>PostgreSQL</productname> antérieures à la 8.3.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="app-clusterdb"/></member>
  </simplelist>
 </refsect1>
</refentry>
