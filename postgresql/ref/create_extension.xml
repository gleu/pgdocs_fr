<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-createextension">
 <indexterm zone="sql-createextension">
  <primary>CREATE EXTENSION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE EXTENSION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions de langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE EXTENSION</refname>
  <refpurpose>installe une nouvelle extension</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>
CREATE EXTENSION [ IF NOT EXISTS ] <replaceable class="parameter">nom_extension</replaceable>
    [ WITH ] [ SCHEMA <replaceable class="parameter">nom_schema</replaceable> ]
             [ VERSION <replaceable class="parameter">version</replaceable> ]
             [ CASCADE ]
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>CREATE EXTENSION</command> charge une nouvelle extension dans la
   base de donnée courante. Il ne doit pas y avoir d'extension déjà chargée
   portant le même nom.
  </para>

  <para>
   L'utilisateur qui exécute <command>CREATE EXTENSION</command> devient le
   propriétaire de l'extension, ce qui est important pour les vérifications de
   droit ultérieurement, et devient aussi normalement le propriétaire de tout
   objet créé par le script de l'extension.
  </para>

  <para>
   Charger une extension nécessite normalement les même droits que pour créer
   les objets qui le composent. Pour beaucoup d'extensions, cela signifie que
   l'attribut <literal>SUPERUSER</literal> est nécessaire. Néanmoins, si
   l'extension est marquée <firstterm>de confiance</firstterm> dans son
   fichier confiance, alors elle peut être installée par tout utilisateur
   disposant du droit <literal>CREATE</literal> sur la base de données
   actuelle. Dans ce cas, l'objet extension sera la propriété de l'utilisateur
   appelant, mais les objets contenus auront pour propriétaire le
   super-utilisateur (sauf si le script de l'extension ne les affecte lui même
   à l'utilisateur appelant). Cette configuration donne à l'utilisateur
   appelant le droit de supprimer l'extension, mais pas de modifier les objets
   individuels qu'elle contient.
  </para>

  <para>
   Le chargement d'une extension nécessite les mêmes droits que ceux
   qui permettent la création de ses objets. La plupart des extensions
   nécessitent ainsi des droits super-utilisateur ou d'être le propriétaire
   de la base de donnée.
   L'utilisateur qui lance la commande <command>CREATE EXTENSION</command>
   devient alors le propriétaire de l'extension (une vérification ultérieure
   des droits permettra de le confirmer) et le propriétaire de chacun
   des objets créé par le script de l'extension.
  </para>

 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><literal>IF NOT EXISTS</literal></term>
    <listitem>
     <para>
      Permet de ne pas retourner d'erreur si une extension de même nom existe déjà.
      Un simple message d'avertissement est alors rapporté. À noter que l'extension
      existante n'a potentiellement aucun lien avec l'extension qui aurait pu être créée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_extension</replaceable></term>
    <listitem>
     <para>
      Le nom de l'extension à installer. <productname>PostgreSQL</productname>
      créera alors l'extension en utilisant les instructions du fichier de contrôle
      <literal>SHAREDIR/extension/</literal><replaceable class="parameter">nom_extension</replaceable><literal>.control</literal> .
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_schema</replaceable></term>
    <listitem>
     <para>
      Le nom du schéma dans lequel installer les objets de l'extension, en supposant
      que l'extension permette de déplacer ses objets dans un autre schéma.
      Le schéma en question doit exister au préalable.
      Si ce nom n'est pas spécifié et que le fichier de contrôle de l'extension
      ne spécifie pas de schéma, le schéma par défaut en cours sera utilisé.
     </para>

     <para>
      Si l'extension indique un paramètre <literal>schema</literal> dans son
      fichier contrôle, alors ce schéma ne peut pas être surchargé avec une
      clause <literal>SCHEMA</literal>. Habituellement, une erreur est levée
      si une clause <literal>SCHEMA</literal> est indiquée et qu'elle entre en
      conflit avec le paramètre <literal>schema</literal> de l'extension.
      Néanmoins, si la clause <literal>CASCADE</literal> est aussi indiquée,
      alors <replaceable class="parameter">nom_schema</replaceable> est ignoré
      s'il y a conflit. Le <replaceable
      class="parameter">nom_schema</replaceable> indiqué sera utilisé pour
      l'installation de toute extension qui ne précise pas
      <literal>schema</literal> dans son fichier contrôle.
     </para>

     <para>
      Rappelez-vous que l'extension en soit n'est pas considérée comme étant
      dans un schéma. Les extensions ont des noms non qualifiés qui doivent
      être uniques au niveau de la base de données. Par contre, les objets
      appartenant à l'extension peuvent être dans des schémas.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">version</replaceable></term>
    <listitem>
     <para>
      La version de l'extension à installer. Il peut s'agir d'un identifiant
      autant que d'une chaîne de caractère. La version par défaut est celle
      spécifiée dans le fichier de contrôle de l'extension.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CASCADE</literal></term>
    <listitem>
     <para>
      Installe automatiquement toute extension non déjà présente dont cette extension dépend.
      Leurs dépendances sont aussi automatiquement installées, récursivement. La clause
      <literal>SCHEMA</literal>, si elle est indiquée, s'applique à toutes les extensions
      installées de cette façon. Les autres options de l'instruction ne sont pas appliquées
      aux extensions créées automatiquement. En particulier, leurs versions par défaut
      sont toujours sélectionnées.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Avant d'utiliser la commande <command>CREATE EXTENSION</command> pour charger
   une extension dans une base de données, il est nécessaire d'installer les fichiers qui l'accompagnent.
   Les informations de <link linkend="contrib">Modules supplémentaires fournis</link>
   permettent d'installer les extensions fournies avec <productname>PostgreSQL</productname>.
  </para>

  <para>
   Les extensions disponibles à l'installation sur le serveur peuvent être identifiées au moyen des vues systèmes
   <link linkend="view-pg-available-extensions"><structname>pg_available_extensions</structname></link>
   et
   <link linkend="view-pg-available-extension-versions"><structname>pg_available_extension_versions</structname></link>.
  </para>

  <caution>
   <para>
    Installer une extension en tant que super-utilisateur nécessite d'avoir
    confiance dans le fait que l'auteur de l'extension a écrit le script
    d'installation avec la sécurité en tpete. Il n'est pas particulièrement
    compliqué pour un utilisateur ayant de mauvaises intentions de créer des
    objets de type cheval de Troie qui comprométeront une exécution ultérieure
    d'un script d'extension mal écrit, permettant à l'utilisateur d'acquérir
    des droits super-utilisateur. Néanmoins, les objets chevaux de Troie sont
    seulement dangereux s'ils se trouvent dans le
    <varname>search_path</varname> lors de l'exécution du script, signifiant
    qu'ils sont dans le schéma d'installation de l'extension ou dans le schéma
    d'une extension dont l'extension installée dépend. De ce fait, une bonne
    règle lors de la gestion d'extensions dont les scripts n'ont pas été
    validés est de les installer seulement dans des schémas pour lesquels le
    droit CREATE n'a pas été et ne sera jamais donné à des utilisateurs qui ne
    bénéficient pas d'une confiance complète. De même pour toute extension
    dont elle dépend.
   </para>

   <para>
    Les extensions fournies avec <productname>PostgreSQL</productname> sont
    supposées être sécurisées contre les attaques à l'installation de ce type,
    sauf quelques unes dépendant d'autres extensions. Comme indiqué dans la
    documentation pour ces extensions, elles devraient être installées dans
    des schémas sécurisés ou installés dans les mêmes schémas que celles des
    extensions dont elles dépendant, ou les deux.
   </para>
  </caution>

  <para>
   Pour obtenir des informations sur l'écriture de nouvelles extensions, consultez
   <xref linkend="extend-extensions"/>.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Installer l'extension <link linkend="hstore">hstore</link> dans la base de
   données courante, en plaçant ses objets dans le schéma
   <literal>addons</literal>&nbsp;:
   <programlisting>
CREATE EXTENSION hstore SCHEMA addons;
   </programlisting>
   Une autre façon d'accomplir la même chose&nbsp;:
   <programlisting>
SET search_path = addons;
CREATE EXTENSION hstore;
   </programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   La commande <command>CREATE EXTENSION</command> est spécifique à
   <productname>PostgreSQL</productname>.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterextension"/></member>
   <member><xref linkend="sql-dropextension"/></member>
  </simplelist>
 </refsect1>

</refentry>
