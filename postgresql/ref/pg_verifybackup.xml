<?xml version="1.0" encoding="UTF-8"?>
<refentry id="app-pgverifybackup">
 <indexterm zone="app-pgverifybackup">
  <primary>pg_verifybackup</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>pg_verifybackup</refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_verifybackup</refname>
  <refpurpose>
   Vérifie l'intégrité d'une sauvegarde de base d'une instance
   <productname>PostgreSQL</productname>
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_verifybackup</command>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>
   Description
  </title>
  <para>
   <application>pg_verifybackup</application> est utilisé pour contrôler
   l'intégrité d'une sauvegarde d'une instance effectuée avec
   <command>pg_basebackup</command>, grâce au manifeste de sauvegarde
   (<literal>backup_manifest</literal>) généré par le serveur au moment de la
   sauvegarde de base. La sauvegarde doit être stockée au format
   «&nbsp;plain&nbsp;»&nbsp;: un format «&nbsp;tar&nbsp;:» peut être vérifié
   après son extraction.
  </para>

  <para>
   Notez que la validation effectuée par
   <application>pg_verifybackup</application> n'effectue pas toutes les
   vérifications effectuées par un serveur qui cherche à utiliser cette
   sauvegarde, et ne pourrait pas le faire. Même si vous utilisez cet outil,
   vous devez toujours procéder à des tests de restauration, vérifier que les
   bases de données résultantes fonctionnent comme prévu, et semblent contenir
   les bonnes données. Cependant, <application>pg_verifybackup</application>
   peut détecter de nombreux problèmes courants, dus au stockage ou une erreur
   de l'utilisateur.
  </para>

  <para>
   La vérification de sauvegarde s'effectue en quatre étapes. Premièrement,
   <literal>pg_verifybackup</literal> lit le fichier
   <literal>backup_manifest</literal>. S'il n'existe pas, ne peut être lu, est
   malformé, ou échoue au contrôle face à sa propre somme de contrôle interne,
   <literal>pg_verifybackup</literal> se termine avec une erreur fatale.
  </para>

  <para>
   Deuxièmement, <literal>pg_verifybackup</literal> tentera de vérifier que
   les fichiers de données en place sur le disque à ce moment sont exactement
   les mêmes que les fichiers que le serveur voulait envoyer, à quelques
   exceptions près listées plus bas. Les fichiers en trop ou manquants seront
   détectés, avec quelques exceptions. Cette étape ignore la présence ou la
   modification de <literal>postgresql.auto.conf</literal>,
   <literal>standby.signal</literal>, et <literal>recovery.signal</literal>,
   car il est prévisible que la procédure de sauvegarde les crée ou les
   modifie. Il n'y aura pas non plus de plainte à propos d'un fichier
   <literal>backup_manifest</literal> dans le répertoire cible, ou quoi que ce
   soit dans <literal>pg_wal</literal>, bien que ces fichiers ne soient pas
   listés dans le manifeste de sauvegarde. Seuls les fichiers sont
   contrôlés&nbsp;; la présence ou l'absence des répertoires n'est pas
   vérifiée, ou indirectement&nbsp;: si un répertoire manque, tout fichier
   qu'il aurait dû contenir sera forcément porté manquant.
  </para>

  <para>
   Ensuite, <literal>pg_verifybackup</literal> calcule les sommes de contrôle
   de tous les fichiers, les compare aux valeurs du manifeste, et émet des
   erreurs pour tous les fichiers où la somme de contrôle calculée ne
   correspond pas à celle du manifeste. Cette étape n'est pas effectuée pour
   les fichiers qui ont produit des erreurs à l'étape précédente, puisqu'il
   est déjà connu qu'ils sont problématiques. Les fichiers ignorés à l'étape
   précédente sont aussi ignorés à celle-ci.
  </para>

  <para>
   Enfin, <literal>pg_verifybackup</literal> va utiliser le manifeste pour
   vérifier que les enregistrements des journaux de transaction nécessaires à
   la restauration de la sauvegarde sont présents, et peuvent être lus et
   analysés. Le <literal>backup_manifest</literal> contient des informations
   sur les enregistrements nécessaires des journaux.
   <literal>pg_verifybackup</literal> les utilise pour invoquer
   <literal>pg_waldump</literal> et analyser les journaux. L'option
   <literal>--quiet</literal> peut être utilisée pour que
   <literal>pg_waldump</literal> ne renvoie que les erreurs, sans générer
   d'autre sortie. Bien qu'à ce niveau les vérifications soient suffisantes
   pour détecter les problèmes évidents, comme des fichiers manquants ou une
   somme de contrôle incohérente, elles ne sont pas assez complètes pour
   détecter tous les problèmes possibles pouvant arriver lors d'une tentative
   de restauration. Par exemple, un bug du serveur générant des journaux de
   transaction avec les bonnes sommes de contrôle, mais spécifiant des
   opérations absurdes, ne peut être détecté par cette méthode.
  </para>

  <para>
   Notez que s'il y a des fichiers WAL en plus, non nécessaires pour restaurer
   la sauvegarde, ils ne seront pas vérifiés par cet outil, bien qu'un appel
   séparé à <literal>pg_waldump</literal> permet de le faire. Notez aussi que
   la vérification des journaux est spécifique à chaque version&nbsp;: vous
   devez utiliser la version de <literal>pg_verifybackup</literal>, et donc de
   <literal>pg_waldump</literal>, qui correspond à la sauvegarde à vérifier.
   En revanche, les tests d'intégrité des fichiers devraient fonctionner avec
   toutes les versions du serveur qui génèrent un fichier
   <literal>backup_manifest</literal>.
  </para>
 </refsect1>

 <refsect1>
  <title>Options</title>

  <para>
   <application>pg_verifybackup</application> accepte les arguments suivants
   en ligne de commande&nbsp;:

   <variablelist>
    <varlistentry>
     <term><option>-e</option></term>
     <term><option>--exit-on-error</option></term>
     <listitem>
      <para>
       Sort dès qu'un problème avec la sauvegarde est détecté. Si cette
       option n'est pas spécifiée, <literal>pg_verifybackup</literal> va
       continuer à vérifier la sauvegarde après la détection d'un problème,
       et rapportera tous les problèmes en tant qu'erreurs.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-i <replaceable class="parameter">path</replaceable></option></term>
     <term><option>--ignore=<replaceable class="parameter">path</replaceable></option></term>
     <listitem>
      <para>
       Ignore le fichier ou répertoire spécifié (à exprimer avec un chemin
       relatif), lors de la comparaison des fichiers effectivement dans la
       sauvegarde avec ceux listés dans le fichier
       <literal>backup_manifest</literal>. Si un répertoire est spécifié,
       cette option affecte toute l'arborescence en-dessous. Les plaintes sur
       des fichiers excédentaires ou manquants, des différences de taille, ou
       des incohérences de sommes de contrôle, seront supprimées si le chemin
       relatif correspond à celui spécifié. Cette option peut être répétée
       plusieurs fois.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-m <replaceable class="parameter">path</replaceable></option></term>
     <term><option>--manifest-path=<replaceable class="parameter">path</replaceable></option></term>
     <listitem>
      <para>
       Utiliser le fichier manifeste au chemin spécifié, plutôt que celui à
       la racine du répertoire de sauvegarde.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-n</option></term>
     <term><option>--no-parse-wal</option></term>
     <listitem>
      <para>
       N'essaie pas d'analyser les journaux de transaction nécessaires à la
       restauration de la sauvegarde.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-q</option></term>
     <term><option>--quiet</option></term>
     <listitem>
      <para>
       N'affiche rien si la sauvegarde est vérifiée avec succès.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-s</option></term>
     <term><option>--skip-checksums</option></term>
     <listitem>
      <para>
       Ne vérifie pas les sommes de contrôle. La présence ou l'absence des
       fichiers et leur taille sera toujours contrôlée. C'est beaucoup plus
       rapide, car il n'y a pas besoin de lire les fichiers eux-mêmes.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-w <replaceable class="parameter">path</replaceable></option></term>
     <term><option>--wal-directory=<replaceable class="parameter">path</replaceable></option></term>
     <listitem>
      <para>
       Essaie d'analyser les fichiers WAL stockés dans le répertoire indiqué,
       plutôt que ceux dans <literal>pg_wal</literal>. Ce peut être utile si
       la sauvegarde est stockée dans un emplacement différent des archives
       des journaux.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

  <para>
   D'autres options sont disponibles&nbsp;:

   <variablelist>
    <varlistentry>
     <term><option>-V</option></term>
     <term><option>--version</option></term>
     <listitem>
      <para>
       Affiche la version de <application>pg_verifybackup</application> et
       sort.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-?</option></term>
     <term><option>--help</option></term>
     <listitem>
      <para>
       Affiche l'aide sur les arguments en ligne de commande
       de <application>pg_verifybackup</application>,
       puis sort.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Pour créer une sauvegarde de base du serveur sur
   <literal>mydbserver</literal>, et vérifier son intégrité&nbsp;:
   <screen>
<prompt>$</prompt> <userinput>pg_basebackup -h mydbserver -D /usr/local/pgsql/data</userinput>
<prompt>$</prompt> <userinput>pg_verifybackup /usr/local/pgsql/data</userinput>
   </screen>
  </para>

  <para>
   Pour créer une sauvegarde de base du serveur sur
   <literal>mydbserver</literal>, déplacer le manifeste hors du répertoire de
   la sauvegarde, et vérifier l'intégrité de la sauvegarde&nbsp;:
   <screen>
<prompt>$</prompt> <userinput>pg_basebackup -h mydbserver -D /usr/local/pgsql/backup1234</userinput>
<prompt>$</prompt> <userinput>mv /usr/local/pgsql/backup1234/backup_manifest /my/secure/location/backup_manifest.1234</userinput>
<prompt>$</prompt> <userinput>pg_verifybackup -m /my/secure/location/backup_manifest.1234 /usr/local/pgsql/backup1234</userinput>
   </screen>
  </para>

  <para>
   Pour vérifier une sauvegarde, tout en ignorant un fichier ajouté
   manuellement au répertoire de sauvegarde, et aussi sauter la vérification
   des sommes de contrôle&nbsp;:
   <screen>
<prompt>$</prompt> <userinput>pg_basebackup -h mydbserver -D /usr/local/pgsql/data</userinput>
<prompt>$</prompt> <userinput>edit /usr/local/pgsql/data/note.to.self</userinput>
<prompt>$</prompt> <userinput>pg_verifybackup --ignore=note.to.self --skip-checksums /usr/local/pgsql/data</userinput>
   </screen>
  </para>

 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="app-pgbasebackup"/></member>
  </simplelist>
 </refsect1>

</refentry>
