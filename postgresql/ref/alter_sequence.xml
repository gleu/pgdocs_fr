<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->
<!-- SAS 20060616 -->

<refentry id="sql-altersequence">
 <indexterm zone="sql-altersequence">
  <primary>ALTER SEQUENCE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER SEQUENCE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>
   ALTER SEQUENCE
  </refname>
  <refpurpose>
   Modifier la définition d'un générateur de séquence
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>+ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">nom</replaceable>
    [ AS <replaceable class="parameter">type_donnee</replaceable> ]
    [ INCREMENT [ BY ] <replaceable class="parameter">increment</replaceable> ]
    [ MINVALUE <replaceable class="parameter">valeurmin</replaceable> | NO MINVALUE ] [ MAXVALUE <replaceable class="parameter">valeurmax</replaceable> | NO MAXVALUE ]
    [ START [ WITH ] <replaceable class="parameter">début</replaceable> ]
    [ RESTART [ [ WITH ] <replaceable class="parameter">nouveau_début</replaceable> ] ]
    [ CACHE <replaceable class="parameter">cache</replaceable> ] [ [ NO ] CYCLE ]
    [ OWNED BY { <replaceable class="parameter">nom_table</replaceable>.<replaceable class="parameter">nom_colonne</replaceable> | NONE } ]
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">nom</replaceable> OWNER TO { <replaceable class="parameter">nouveau_propriétaire</replaceable> | CURRENT_USER | SESSION_USER }
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">nom</replaceable> RENAME TO <replaceable class="parameter">nouveau_nom</replaceable>
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">nom</replaceable> SET SCHEMA <replaceable class="parameter">nouveau_schema</replaceable>
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>ALTER SEQUENCE</command> modifie les paramètres d'un générateur de
   séquence. Tout paramètre non précisé dans la commande <command>ALTER
    SEQUENCE</command> conserve sa valeur précédente. Pour modifier le
   propriétaire, vous devez aussi être un membre direct ou indirect du nouveau
   rôle propriétaire, et ce rôle doit avoir le droit <literal>CREATE</literal>
   sur le schéma de la séquence (ces restrictions permettent de s'assurer que
   modifier le propriétaire ne fait rien de plus que ce que vous pourriez faire
   en supprimant puis recréant la séquence&nbsp;; néanmoins un superutilisateur
   peut déjà modifier le propriétaire de toute séquence).
  </para>

  <para>
   Seul le propriétaire de la séquence peut utiliser
   <command>ALTER SEQUENCE</command>. Pour modifier le schéma de la séquence, il faut posséder
   le droit <literal>CREATE</literal> sur le nouveau schéma.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <para>
   <variablelist>
    <varlistentry>
     <term><replaceable class="parameter">nom</replaceable></term>
     <listitem>
      <para>
       Le nom de la séquence à modifier (éventuellement qualifié du nom du schéma).
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>IF EXISTS</literal></term>
     <listitem>
      <para>
       Ne retourne pas d'erreur si la séquence n'existe pas. Seul un message d'avertissement
       est retourné dans ce cas.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
      <term><replaceable class="parameter">type_donnee</replaceable></term>
      <listitem>
       <para>
        La clause facultative
        <literal>AS <replaceable class="parameter">type_donnee</replaceable></literal>
        change le type de données de la séquence.  Les types valides sont
        <literal>smallint</literal>, <literal>integer</literal>,
        et <literal>bigint</literal>.
       </para>

       <para>
        Changer le type de donnée change automatiquement les valeurs minimales
        et maximales de la séquence si et seulement si les précédentes valeurs
        minimales et maximales était les valeurs minimales et maximales de
        l'ancien type de donnée (autrement dit, si la séquence avait été créée
        en utilisant <literal>NO MINVALUE</literal> ou <literal>NO
        MAXVALUE</literal>, de manière implicite ou explicite).  Sinon les
        valeurs minimales et maximales sont préservées, à moins que de
        nouvelles valeurs soient spécifiées dans la même commande.  Si les
        nouvelles valeurs minimales et maximales ne rentrent pas dans le nouvau
        type de donnée, une erreur sera générée.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
     <term><replaceable class="parameter">increment</replaceable></term>
     <listitem>
      <para>
       La clause <literal>INCREMENT BY <replaceable class="parameter">increment</replaceable></literal>
       est optionnelle. Une
       valeur positive crée une séquence croissante, une valeur négative une
       séquence décroissante. Lorsque cette clause n'est pas spécifiée, la valeur de l'ancien incrément
       est conservée.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">valeurmin</replaceable></term>
     <term><literal>NO MINVALUE</literal></term>
     <listitem>
      <para>
       La clause optionnelle <literal>MINVALUE <replaceable class="parameter">valeurmin</replaceable></literal>,
       détermine la valeur minimale de la séquence. Si <literal>NO MINVALUE</literal>
       est utilisé, les valeurs par défaut, 1 et la valeur minimale du type de
       donnée sont utilisées respectivement pour les séquences croissantes et
       décroissantes. Si aucune option n'est précisée, la valeur minimale
       courante est conservée.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">valeurmax</replaceable></term>
     <term><literal>NO MAXVALUE</literal></term>
     <listitem>
      <para>
       La clause optionnelle <literal>MAXVALUE <replaceable
       class="parameter">valeurmax</replaceable></literal> détermine la valeur
       maximale de la séquence. Si <literal>NO MAXVALUE</literal> est utilisé,
       la valeur maximale du type de données et -1 sont utilisées
       respectivement pour les séquences croissantes et décroissantes comme
       valeurs par défaut. Si aucune option n'est précisée, la valeur maximale
       courante est conservée.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">début</replaceable></term>
     <listitem>
      <para>
       La clause optionnelle <literal>START WITH <replaceable
        class="parameter">début</replaceable></literal> modifie la valeur de
       départ enregistré pour la séquence. Cela n'a pas d'effet sur la valeur
       <emphasis>actuelle</emphasis> de celle-ci&nbsp;; cela configure la
       valeur que les prochaines commandes <command>ALTER SEQUENCE
        RESTART</command> utiliseront.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">restart</replaceable></term>
     <listitem>
      <para>
       La clause optionnelle <literal>RESTART [ WITH <replaceable
        class="parameter">restart</replaceable> ]</literal> modifie la valeur
       actuelle de la séquence. C'est équivalent à l'appel de la fonction
       <function>setval</function> avec <literal>is_called</literal> =
       <literal>false</literal>&nbsp;: la valeur spécifiée sera renvoyée par
       le <emphasis>prochain</emphasis> appel à <function>nextval</function>.
       Écrire <literal>RESTART</literal> sans valeur pour <replaceable
       class="parameter">restart</replaceable> est équivalent à fournir la
       valeur de début enregistrée par <command>CREATE SEQUENCE</command>
       ou par <command>ALTER SEQUENCE START WITH</command>.
      </para>

       <para>
        En contraste avec un appel à <function>setval</function>, une
        opération <literal>RESTART</literal> sur une séquence est
        transactionnelle et empêche les transactions concurrentes d'obtenir
        des nombres de la même séquence. Si ce n'est pas le mode désiré,
        <function>setval</function> doit être utilisé.
       </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">cache</replaceable></term>
     <listitem>
      <para>
       La clause <literal>CACHE <replaceable class="parameter">cache</replaceable></literal> active la préallocation
       des numéros de séquences et leur stockage en mémoire pour en accélerer l'accès. 1 est la valeur minimale
       (une seule valeur est engendrée à la
       fois, soit pas de cache). Lorsque la clause n'est pas spécifiée, l'ancienne valeur est conservée.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>CYCLE</literal></term>
     <listitem>
      <para>
       Le mot clé optionnel <literal>CYCLE</literal> est utilisé
       pour autoriser la séquence à boucler lorsque <replaceable class="parameter">valeurmax</replaceable>
       ou <replaceable class="parameter">valeurmin</replaceable> est atteint par,
       respectivement, une séquence croissante ou décroissante. Lorsque la limite est
       atteinte, le prochain numéro engendré est, respectivement,
       <replaceable class="parameter">valeurmin</replaceable> ou
       <replaceable class="parameter">valeurmax</replaceable>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>NO CYCLE</literal></term>
     <listitem>
      <para>
       Si le mot clé optionnel <literal>NO CYCLE</literal> est spécifié, tout
       appel à <function>nextval</function> alors que la séquence a atteint
       <!-- SAS 20060502 : Petite précision -->
       sa valeur maximale, dans le cas d'une séquence croissante, ou sa valeur minimale dans
       le cas contraire, retourne une erreur. Lorsque ni <literal>CYCLE</literal> ni
       <literal>NO CYCLE</literal> ne sont spécifiés, l'ancien comportement est préservé.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>OWNED BY</literal> <replaceable class="parameter">nom_table</replaceable>.<replaceable class="parameter">nom_colonne</replaceable></term>
     <term><literal>OWNED BY NONE</literal></term>
     <listitem>
      <para>
       L'option <literal>OWNED BY</literal> permet d'associer la séquence à une
       colonne spécifique d'une table pour que cette séquence soit supprimée
       automatiquement si la colonne (ou la table complète) est supprimée. Si
       cette option est spécifiée, cette association remplacera toute ancienne
       association de cette séquence. La table indiquée doit avoir le même
       propriétaire et être dans le même schéma que la séquence.
       Indiquer <literal>OWNED BY NONE</literal> supprime toute association
       existante, rendant à la séquence son <quote>autonomie</quote>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nouveau_propriétaire</replaceable></term>
     <listitem>
      <para>
       Le nom utilisateur du nouveau propriétaire de la séquence.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nouveau_nom</replaceable></term>
     <listitem>
      <para>
       Le nouveau nom de la séquence.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">nouveau_schema</replaceable></term>
     <listitem>
      <para>
       Le nouveau schéma de la séquence.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   <command>ALTER SEQUENCE</command> n'affecte pas immédiatement les
   résultats de <function>nextval</function> pour les sessions, à l'exception
   de la session courante, qui ont préalloué (caché) des valeurs de la séquence.
   Elles épuisent les valeurs en cache avant de prendre en compte les
   modifications sur les paramètres de génération de la séquence. La session à
   l'origine de la commande est, quant à elle, immédiatement affectée.
  </para>

  <para>
   <command>ALTER SEQUENCE</command> ne modifie pas le statut
   <function>currval</function> d'une séquence (avant
   <productname>PostgreSQL</productname> 8.3, c'était le cas quelque fois).
  </para>

  <para>
   <command>ALTER SEQUENCE</command> les appels concurrents à
   <function>nextval</function>, <function>currval</function>,
   <function>lastval</function>, et <command>setval</command>.
  </para>

  <para>
   Pour des raisons historiques, <command>ALTER TABLE</command> peut aussi être
   utilisé avec les séquences, mais seules les variantes d'<command>ALTER
    TABLE</command> autorisées pour les séquences sont équivalentes aux formes
   affichées ci-dessus.
  </para>
 </refsect1>


 <refsect1>
  <title>Exemples</title>

  <para>
   Redémarrez la séquence <literal>serial</literal> à 105&nbsp;:
   <programlisting>
ALTER SEQUENCE serial RESTART WITH 105;
   </programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   <command>ALTER SEQUENCE</command> est conforme au standard
   <acronym>SQL</acronym>, à l'exception des variantes <literal>AS</literal>, <literal>START
    WITH</literal>, <literal>OWNED BY</literal>, <literal>OWNER TO</literal>,
   <literal>RENAME TO</literal> et <literal>SET SCHEMA</literal> qui sont une
   extension <productname>PostgreSQL</productname>.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createsequence"/></member>
   <member><xref linkend="sql-dropsequence"/></member>
  </simplelist>
 </refsect1>

</refentry>
