<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-prepare-transaction">
 <indexterm zone="sql-prepare-transaction">
  <primary>PREPARE TRANSACTION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>PREPARE TRANSACTION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>PREPARE TRANSACTION</refname>
  <refpurpose>prépare la transaction en cours pour une validation en deux phases</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>PREPARE TRANSACTION <replaceable class="parameter">id_transaction</replaceable>
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>PREPARE TRANSACTION</command> prépare la transaction courante en vue
   d'une validation en deux phases. À la suite de cette commande, la transaction n'est
   plus associée à la session courante&nbsp;; au lieu de cela, son état est
   entièrement stocké sur disque. La probabilité est donc forte qu'elle
   puisse être validée avec succès, y compris en cas d'arrêt brutal de la base de
   données avant la demande de validation.
  </para>

  <para>
   Une fois préparée, une transaction peut être validée ou annulée ultérieurement
   par, respectivement, <xref linkend="sql-commit-prepared"
    /> et <xref linkend="sql-rollback-prepared"
    />. Ces commandes peuvent être exécutées
   à partir d'une session quelconque. Il n'est pas nécessaire de le faire depuis
   celle qui a exécuté la transaction initiale.
  </para>

  <para>
   Du point de vue de la session l'initiant, <command>PREPARE
    TRANSACTION</command> diffère peu de la commande
   <command>ROLLBACK</command>&nbsp;: après son exécution, il n'y a plus de transaction
   active et les effets de la transaction préparée ne sont plus visibles. (Les
   effets redeviendront visibles si la transaction est validée.)
  </para>

  <para>
   Si la commande <command>PREPARE TRANSACTION</command> échoue, quelqu'en soit
   la raison, elle devient une commande <command>ROLLBACK</command>&nbsp;: la
   transaction courante est annulée.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">id_transaction</replaceable></term>
    <listitem>
     <para>
      Un identifiant arbitraire de la transaction pour les
      commandes <command>COMMIT PREPARED</command> et <command>ROLLBACK PREPARED</command>.
      L'identifiant, obligatoirement de type chaîne littérale, doit être
      d'une longueur inférieure à 200 octets. Il ne peut être identique à un autre
      identifiant de transaction préparée.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   <command>PREPARE TRANSACTION</command> n'a pas pour but d'être utilisé dans
   des applications ou des sessions interactives. Son but est de permettre à
   un gestionnaire de transactions externe pour réaliser des transactions
   globales atomiques au travers de plusieurs bases de données ou de
   ressources transactionnelles. Sauf si vous écrivez un gestionnaire de
   transactions, vous ne devriez probablement pas utiliser <command>PREPARE
    TRANSACTION</command>.
  </para>

  <para>
   Cette commande doit être utilisée dans un bloc de transaction, initié par
   <xref linkend="sql-begin"/>.
  </para>

  <para>
   Il n'est actuellement pas possible de préparer
   (<command>PREPARE</command>) une transaction qui a exécuté des opérations
   impliquant des tables temporaires ou le schéma temporaire de la session,
   ou qui a créé des curseurs
   <literal>WITH HOLD</literal>, ou qui a exécuté <command>LISTEN</command>,
   <command>UNLISTEN</command> ou <command>NOTIFY</command>. Ces
   fonctionnalités sont trop intégrées à la session en cours pour avoir la
   moindre utilité dans une transaction préparée.
  </para>

  <para>
   Si la transaction a modifié des paramètres en exécution à l'aide de la commande <command>SET</command>
   (sans l'option <literal>LOCAL</literal>),
   ces effets persistent au-delà du <command>PREPARE TRANSACTION</command> et ne seront
   pas affectés par les commandes <command>COMMIT PREPARED</command> et
   <command>ROLLBACK PREPARED</command>. Du coup, dans ce cas,
   <command>PREPARE TRANSACTION</command> agit plus comme <command>COMMIT</command> que comme
   <command>ROLLBACK</command>.
  </para>

  <para>
   Toutes les transactions préparées disponibles sont listées dans
   la vue système <link linkend="view-pg-prepared-xacts"><structname>pg_prepared_xacts</structname></link>.
  </para>

  <caution>
   <para>
    Il est préférable de ne pas conserver trop longtemps des transactions
    préparées dans cet état&nbsp;; cela compromet, par exemple, les
    possibilités de récupération de l'espace par <command>VACUUM</command>, et
    dans certains cas extrêmes peut causer l'arrêt de la base de données pour
    empêcher une réutilisation d'identifiants de transactions (voir <xref
    linkend="vacuum-for-wraparound"/>). Il ne faut pas oublier non plus qu'une
    telle transaction maintient les verrous qu'elle a posé. L'usage principal
    de cette fonctionnalité consiste à valider ou annuler une transaction
    préparée dès lors qu'un gestionnaire de transactions externe a pu s'assurer
    que les autres bases de données sont préparées à la validation.
   </para>

   <para>
    Si vous n'avez pas configuré un gestionnaire de transactions externe pour
    gérer les transactions préparées et vous assurer qu'elles sont fermées
    rapidement, il est préférable de désactiver la fonctionnalité des
    transactions préparées en configurant <xref
    linkend="guc-max-prepared-transactions"/> à zéro. Ceci empêchera toute
    création accidentelle de transactions préparées qui pourraient alors être
    oubliées, ce qui finira par causer des problèmes.
   </para>
  </caution>

 </refsect1>

 <refsect1 id="sql-prepare-transaction-examples">
  <title>Exemples</title>
  <para>
   Préparer la transaction en cours pour une validation en deux phases en
   utilisant <literal>foobar</literal> comme identifiant de transaction&nbsp;:

   <programlisting>PREPARE TRANSACTION 'foobar';
   </programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   <command>PREPARE TRANSACTION</command> est une extension
   <productname>PostgreSQL</productname>.  Elle est conçue pour être utilisée
   par des systèmes extérieurs de gestion des transactions. Certains de
   ceux-là sont couverts par des standards (tels que X/Open XA),
   mais la partie SQL de ces systèmes n'est pas standardisée.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-commit-prepared"/></member>
   <member><xref linkend="sql-rollback-prepared"/></member>
  </simplelist>
 </refsect1>

</refentry>
