<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-createsubscription">
 <indexterm zone="sql-createsubscription">
  <primary>CREATE SUBSCRIPTION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE SUBSCRIPTION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Ordres du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE SUBSCRIPTION</refname>
  <refpurpose>définir une nouvelle souscription</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>
CREATE SUBSCRIPTION <replaceable class="parameter">nom_souscription</replaceable>
    CONNECTION '<replaceable class="parameter">conninfo</replaceable>'
    PUBLICATION <replaceable class="parameter">nom_publication</replaceable> [, ...]
    [ WITH ( <replaceable class="parameter">param_souscription</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] ) ]
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>CREATE SUBSCRIPTION</command> ajoute une nouvelle souscription de
   réplication logique. Le nom de la souscription doit être différent
   du nom de toutes les autres souscriptions existantee dans la base.
  </para>

  <para>
   Une souscription représente une connexion de réplication vers un serveur
   publiant des données. De ce fait, en plus d'ajouter les définitions dans les
   catalogues locaux, cette commence crée normalement un slot de réplication sur
   le publieur.
  </para>

  <para>
   Un worker de réplication logique sera démarré pour répliquer les données pour
   la nouvelle souscription à la validation de la transaction dans laquelle
   cette commande est lancée, sauf si la souscription est désactivé à sa
   création.
  </para>

  <para>
   Des informations supplémentaires sur la souscription et la réplication
   logique dans son ensemble sont également disponible sur <xref
   linkend="logical-replication-subscription"/> et <xref
   linkend="logical-replication"/>.
  </para>

 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nom_souscription</replaceable></term>
    <listitem>
     <para>
      Le nom de la nouvelle souscriptions.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CONNECTION '<replaceable class="parameter">conninfo</replaceable>'</literal></term>
    <listitem>
     <para>
      La chaîne de connexion <application>libpq</application> définissant la
      façon de se connecter à la base publieur. Pour plus de détails voir <xref
      linkend="libpq-connstring"/>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>PUBLICATION <replaceable class="parameter">publication_name</replaceable> [, ...]</literal></term>
    <listitem>
     <para>
      Nom des publications sur le serveur publiant les données auxquelles souscrire.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>WITH ( <replaceable class="parameter">param_souscription</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] )</literal></term>
    <listitem>
     <para>
      Cette clause indique les paramètres optionnelles pour une souscription.
     </para>

     <para>
      Les paramètres suivants contrôlent ce qui arrive lors de la création de
      la souscription&nbsp;:

      <variablelist>
       <varlistentry>
        <term><literal>connect</literal> (<type>boolean</type>)</term>
        <listitem>
         <para>
          Indique si la commande <command>CREATE SUBSCRIPTION</command> doit se
          connecter au publieur. La valeur par défaut est
          <literal>true</literal>. Configuré à <literal>false</literal>, cela
          forcera les valeurs de <literal>create_slot</literal>,
          <literal>enabled</literal> et <literal>copy_data</literal> à
          <literal>false</literal>.  (Vous ne pouvez pas combiner
          <literal>connect</literal> à <literal>false</literal> avec
          <literal>create_slot</literal>, <literal>enabled</literal> et/ou
          <literal>copy_data</literal> à <literal>true</literal>.)
         </para>

         <para>
          Comme aucune connexion n'a lieu quand cette option vaut
          <literal>false</literal>, aucune table n'est souscrite et,
          de ce fait, une fois la souscription activée, rien ne sera
          répliqué. Vous devrez alors exécuter
          <literal>ALTER SUBSCRIPTION ... REFRESH PUBLICATION</literal>
          pour que les tables soient prises en compte.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>create_slot</literal> (<type>boolean</type>)</term>
        <listitem>
         <para>
          Spécifie si la commande devrait créer le slot de réplication sur le
          serveur publiant les données.  La valeur par défaut est
          <literal>true</literal>.
          If set to <literal>false</literal>, you are responsible for
          creating the publisher's slot in some other way.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>enabled</literal> (<type>boolean</type>)</term>
        <listitem>
         <para>
          Spécifie si la souscription devrait répliquer activement, ou si elle
          devrait uniquement configurée mais pas démarrée.  La valeur par
          défaut est <literal>true</literal>.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>slot_name</literal> (<type>string</type>)</term>
        <listitem>
         <para>
          Nom du slot de réplication à utiliser. Par défaut, le nom
          de la souscription est utilisé comme nom du slot.
         </para>

         <para>
          Configurer <literal>slot_name</literal> à <literal>NONE</literal>
          signifie qu'il n'y aura pas de slot de réplication associé à la
          souscription. Utiliser cela quand vous créerez le slot de réplication
          manuellement plus tard.  Une telle souscription doit également avoir à
          la fois <literal>enabled</literal> et <literal>create_slot</literal>
          positionnés à <literal>false</literal>.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>

     <para>
      Les paramètres suivants contrôlent le comportement de la réplication pour
      la souscription après sa création&nbsp;:

      <variablelist>

       <varlistentry>
        <term><literal>binary</literal> (<type>boolean</type>)</term>
        <listitem>
         <para>
          Spécifie si la souscription réclamera au publieur d'envoyer les
          données au format binaire (contrairement au texte). La valeur par
          défaut est <literal>false</literal>. Même quand cette option est
          activée, seuls les types de données qui ont les fonctions d'envoi et
          de réception binaire seront transférés en binaire.
         </para>

         <para>
          Lors d'une réplication entre versions différentes, le publieur
          pourrait avoir une fonction d'envoi binaire pour certains types de
          données mais que le souscripteur n'ait pas de fonction de réception
          binaire pour ce type.  Dans ce cas, le transfert de données échouera
          et l'option <literal>binary</literal> ne pourra pas être utilisée.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>copy_data</literal> (<type>boolean</type>)</term>
        <listitem>
         <para>
          Spécifie si les données existantes dans les publications qui sont
          en train d'être souscrites devraient être copiées une fois la
          réplication démarrée. La valeur par défaut est
          <literal>true</literal>.
         </para>
         <para>
          Si les publications contiennent des clauses <literal>WHERE</literal>,
          elles affecteront les données copiées. Référez-vous à <xref
          linkend="sql-createsubscription-notes" /> pour les détails.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>streaming</literal> (<type>boolean</type>)</term>
        <listitem>
         <para>
          Spécifie l'activation du flux de transactions en cours pour cette
          souscription. Par défaut, toutes les transactions sont entièrement
          décodées sur le publieur, puis envoyées entièrement au souscripteur.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>synchronous_commit</literal> (<type>enum</type>)</term>
        <listitem>
         <para>
          La valeur de ce paramètre surcharge le paramètre <xref
          linkend="guc-synchronous-commit"/> pour les processus workers
          d'application de cette souscription. La valeur par défaut est
          <literal>off</literal>.
         </para>

         <para>
          Il est sans danger d'utiliser <literal>off</literal> pour la
          réplication logique&nbsp;: si le souscripteur perd des transactions à
          cause d'une synchronisation manquée, les données seront renvoyées par
          le serveur publiant les données.
         </para>

         <para>
          Un paramétrage différent peut être appropriée si l'on utilise une
          réplication logique synchrone. Les workers de réplication logique
          rapportent les positions d'écriture et de synchronisation au serveur
          publiant les données, et, en réplication synchrone,
          ce dernier attendra que la synchronisation ait lieu.
          Cela veut dire que laisser <literal>synchronous_commit</literal>
          à <literal>off</literal> sur une souscription
          en réplication synchrone peut augmenter la
          latence des <command>COMMIT</command> sur le serveur publiant les
          données. Dans ce scénario, il peut être avantageux de positionner
	  <literal>synchronous_commit</literal> à <literal>local</literal> ou
	  au-dessus.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>two_phase</literal> (<type>boolean</type>)</term>
        <listitem>
         <para>
          Spécifie si la validation en deux phases est activée pour cette
          souscription. La valeur par défaut est <literal>false</literal>.
         </para>

         <para>
          Quand la validation en deux phases est activée, les transactions
          préparées sont envoyés au souscripteur au moment du <command>PREPARE
          TRANSACTION</command>, et sont traitées comme des transactions en deux
          phases, y compris sur le souscripteur. Sinon, les requêtes préparées
          sont envoyés au souscripteur uniquement quand elles sont validées, et
          elles sont traitées immédiatement après par le souscripteur.
         </para>

         <para>
          L'implémentation de la validation en deux phases requiert que la
          réplication ait terminée avec succès la synchronisation initiale des
          tables.  Donc même si <literal>two_phase</literal> est activé pour une
          souscription, l'état interne de la validation en deux phases reste en
          attente temporaire jusqu'à ce que la phase d'initialisation se
          termine. Voir la colonne <structfield>subtwophasestate</structfield>
          de <link
          linkend="catalog-pg-subscription"><structname>pg_subscription</structname></link>
          pour connaître l'état actuel de two-phase.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>disable_on_error</literal> (<type>boolean</type>)</term>
        <listitem>
         <para>
          Spécifie si la souscription doit être désactivée automatiquement si
          des erreurs sont détectées par les workers de la souscription lors de
          la réplication des données du publieur. La valeur par défaut est
          <literal>false</literal>.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 id="sql-createsubscription-notes" xreflabel="Notes">
  <title>Notes</title>

  <para>
   Voir <xref linkend="logical-replication-security"/> pour plus de
   détail sur comment configurer le contrôle d'accès entre la souscription et
   l'instance de publication.
  </para>

  <para>
   Lors de la création d'un slot de réplication (comportement par défaut),
   <command>CREATE SUBSCRIPTION</command> ne peut pas être exécuté à
   l'intérieur d'un bloc de transaction.
  </para>

  <para>
   Créer une souscription qui connecte la même instance (par exemple, pour
   répliquer entre des bases de données de la même instance ou pour répliquer
   dans la même base de données) réussira seulement si le slot de réplication
   n'est pas créé dans la même commande. Sinon, l'appel à <command>CREATE
    SUBSCRIPTION</command> va pauser. Pour le faire fonctionner, créer le slot
   de réplication séparément (en utilisant la fonction
   <function>pg_create_logical_replication_slot</function> avec le nom de
   plugin <literal>pgoutput</literal>) et créer la souscription en utilisant
   le paramètre <literal>create_slot = false</literal>. C'est une restriction
   d'implémentation qui pourrait être supprimé dans une prochaine version.
  </para>

  <para>
   Si une table dans la publication a une clause <literal>WHERE</literal>, les
   lignes pour lesquelles l'<replaceable
   class="parameter">expression</replaceable> s'évalue à false ou null ne seront
   pas publiées. Si la souscription a plusieurs publications dans lesquelles la
   même table a été publiée avec des clauses <literal>WHERE</literal>
   différentes, une ligne sera publiée si une des expressions (référant à cette
   opération de publication) sera publiée si une des expressions (référant à
   cette opération de publication) sont satisfaites. Dans le cas où différentes
   clauses <literal>WHERE</literal>, si une des publications n'a pas de clause
   <literal>WHERE</literal> (référant à cette opération de publication) ou si la
   publication est déclarée <literal>FOR ALL TABLES</literal> ou <literal>FOR
   TABLES IN SCHEMA</literal>, les lignes sont toujours publiées quelque
   soit la définition des autres expressions.  Si le souscripteur est une
   version <productname>PostgreSQL</productname> avant la 15, puis toute ligne
   filtrante est ignorée lors de la phase de synchronisation initiale des
   données. Pour ce cas, l'utilisateur pourrait vouloir considérer la
   suppression des données copiées initialement qui serait incompatible avec un
   filtrage précédent.  Comme la synchronisation des données ne prend pas en
   compte le paramètre de publication <literal>publish</literal> lors de la
   copie des tables existantes, certaines lignes pourraient être copiées sans
   être répliquées en utilisant DML. Voir <xref
   linkend="logical-replication-subscription-examples"/> pour des exemples.
  </para>

  <para>
   Les souscriptions ayant plusieurs publications pour lesquels la même table
   a été publiée avec des listes de colonnes différentes ne sont pas
   supportées.
  </para>

  <para>
   Nous autorisons que des publications inexistantes soient indiquées pour que
   les utilisateurs puissent les ajouter après coup. Ceci signifie que <link
   linkend="catalog-pg-subscription"><structname>pg_subscription</structname></link>
   peut avoir des publications inexistantes.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Créer une souscription à un serveur distant qui réplique les tables dans la
   publication <literal>mypublication</literal> et
   <literal>insert_only</literal> et démarre la réplication immédiatement après
   le commit :
   <programlisting>
CREATE SUBSCRIPTION mysub
         CONNECTION 'host=192.168.1.50 port=5432 user=foo dbname=foodb'
        PUBLICATION mypublication, insert_only;
   </programlisting>
  </para>

  <para>
   Crée une souscription vers un serveur distant qui réplique les tables
   dans la publication <literal>insert_only</literal> et ne commence pas
   la réplication jusqu'à ce qu'elle soit activée plus tard.
   <programlisting>
CREATE SUBSCRIPTION mysub
         CONNECTION 'host=192.168.1.50 port=5432 user=foo dbname=foodb'
        PUBLICATION insert_only
               WITH (enabled = false);
   </programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   <command>CREATE SUBSCRIPTION</command> est une extension
   <productname>PostgreSQL</productname> au standard SQL.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-altersubscription"/></member>
   <member><xref linkend="sql-dropsubscription"/></member>
   <member><xref linkend="sql-createpublication"/></member>
   <member><xref linkend="sql-alterpublication"/></member>
  </simplelist>
 </refsect1>
</refentry>
