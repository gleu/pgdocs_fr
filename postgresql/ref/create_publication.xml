<?xml version="1.0" encoding="UTF-8"?>
<!--
doc/src/sgml/ref/create_publication.sgml
PostgreSQL documentation
-->

<refentry id="sql-createpublication">
 <indexterm zone="sql-createpublication">
  <primary>CREATE PUBLICATION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE PUBLICATION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Ordres du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE PUBLICATION</refname>
  <refpurpose>définir une nouvelle publication</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>
CREATE PUBLICATION <replaceable class="parameter">nom</replaceable>
    [ FOR TABLE [ ONLY ] <replaceable class="parameter">nom_table</replaceable> [ * ] [, ...]
      | FOR ALL TABLES ]
    [ WITH ( <replaceable class="parameter">parametre_publication</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] ) ]

  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>CREATE PUBLICATION</command> ajoute une nouvelle publication dans
   la base courante.  Le nom de la publication doit être différent du nom de
   toutes les autres publications existante au sein de la base courante.
  </para>

  <para>
   Une publication est essentiellement un groupe de table dont les changement
   de données sont destinés à être répliqué grâce à la réplication logique.
   Voir <xref linkend="logical-replication-publication"/> pour les détails de
   comment les publications participent à la mise en place de la réplication
   logique.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nom</replaceable></term>
    <listitem>
     <para>
      Le nom de la nouvelle publication.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>FOR TABLE</literal></term>
    <listitem>
     <para>
      Spécifie une liste de tables à ajouter à la publication.  Si
      <literal>ONLY</literal> est spécifié avant le nom de la table, seul
      cette table est ajoutée à la publication.  Si <literal>ONLY</literal>
      n'est pas spécifié, la table ainsi que toutes les tables descendantes
      (s'il y en a) est ajoutées.  De manière facultative,
      <literal>*</literal> peut être spécifié après le nom de la table pour
      indiquer explicitement que les tables descendantes doivent être
      incluses. Néanmoins, ceci ne s'applique pas à une table partitionnée.
      Les partitions d'une table sont toujours considérées implicitement comme
      faisant partie de la publication, donc elles ne sont jamais ajoutées
      explicitement à la publication.
     </para>

     <para>
      Seules les tables persistentes et les tables partitionnées peuvent faire
      partie d'une publication. Les tables temporaires, tables non
      journalisées, tables distantes, vues matérialisées et vues standard ne
      peuvent pas faire partie d'une publication. Pour répliquer une table
      partitionnée, il faut ajouter chaque partition individuellement à la
      publication.
     </para>

     <para>
      Quand une table partitionnée est ajoutée à une publication, toutes les
      partitions existantes et futures seront considérées implicitement comme
      faisant partie de la publication. Donc, même les opérations réalisées
      directement sur une partition seront publiées via les publications dont
      fait partie la table partitionnée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>FOR ALL TABLES</literal></term>
    <listitem>
     <para>
      Marque la publication comme publication qui réplique les changement pour
      toutes les tables de la base, en incluant les tables qui seront crées
      dans le futur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>WITH ( <replaceable class="parameter">parametre_publication</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] )</literal></term>
    <listitem>
     <para>
      Cette clause spécifique les paramètres facultatifs d'une publication.
      Les paramètres suivants sont supportés :

      <variablelist>
       <varlistentry>
        <term><literal>publish</literal> (<type>string</type>)</term>
        <listitem>
         <para>
          Ce paramètre détermine quelles opération DML seront publiées par la
          nouvelle publication aux souscripteurs.  Le contenu est une liste
          d'opération séparé par des virgules.  Les opérations autorisées sont
          <literal>insert</literal>, <literal>update</literal>,
          <literal>delete</literal> et <literal>truncate</literal>.  Par
          défaut toutes les actions sont publiées, et donc la valeur par
          défaut pour cette option est <literal>'insert, update,
           delete, truncate'</literal>.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>publish_via_partition_root</literal> (<type>boolean</type>)</term>
        <listitem>
         <para>
          Ce paramètre détermine si les modifications dans une table
          partitionnée (ou dans ses partitions) contenue dans la publication
          seront publiées en utilisant l'identité et le schéma de la table
          partitionnée plutôt que celle des partitions individuelles
          réellement modifiées&nbsp;; ce dernier est le comportement par
          défaut. Activer ce paramètre permet à des changements d'être
          répliqués dans une table non partitionnée ou dans une table
          partitionnée différemment.
         </para>

         <para>
          Si ceci est activé, les opérations <literal>TRUNCATE</literal>
          réalisées directement sur les partitions ne sont pas répliquées.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>

     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Si ni <literal>FOR TABLE</literal> ni <literal>FOR ALL
    TABLES</literal> n'est spécifié, alors la publication commence avec un
   ensemble de tables vide.  C'est utile si des tables doivent être ajoutée
   ultérieurement.
  </para>

  <para>
   La création d'une publication ne démarre pas la réplication.  Cela définit
   uniquement un regroupement ainsi qu'un filtre logique pour les futurs
   souscripteurs.
  </para>

  <para>
   Pour créer une publication, l'utilisateur lançant la commande doit avec le
   privilège <literal>CREATE</literal> pour la base de données courante.
   (Bien entendu, les super-utilisateurs coutournent cette vérification.)
  </para>

  <para>
   Pour ajouter une table à une publication, l'utilisateur lançant la commande
   doit avoir les droits de propriétaire de la table.  La clause <command>FOR
    ALL TABLES</command> nécessite d'être super-utilisateur pour pouvoir
   l'utiliser.
  </para>

  <para>
   Les tables ajoutées à une publication qui publie les opérations
   <command>UPDATE</command> et/ou <command>DELETE</command> doivent avoir
   <literal>REPLICA IDENTITY</literal> défini.  Autrement ces opérations seront
   interdites sur ces tables.
  </para>

  <para>
   Pour une commande <command>INSERT ... ON CONFLICT</command>, la publication
   publiera l'opération qui résulte réellement de la commande.  Ainsi, en
   fonction du résultat, cela pourrait être publiée comme un
   <command>INSERT</command> ou un <command>UPDATE</command>, ou cela pourrait
   ne pas être publié du tout.
  </para>

  <para>
   <command>ATTACH</command>-er une table dans un arbre de partition dont la
   racine est publiée en utilisant une publication ayant
   <literal>publish_via_partition_root</literal> configuré to
   <literal>true</literal> ne résulte pas en la réplication du contenu existant
   de la table.
  </para>

  <para>
   Les commandes <command>COPY ... FROM</command> sont publiées comme des
   opérations <command>INSERT</command>.
  </para>

  <para>
   Les opérations <acronym>DDL</acronym> ne sont pas publiées.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Créer une publication qui publie tous les changement sur deux tables :
   <programlisting>
CREATE PUBLICATION mypublication FOR TABLE users, departments;
   </programlisting>
  </para>

  <para>
   Créer une publication qui publie tous les changement sur toutes les tables :
   <programlisting>
CREATE PUBLICATION alltables FOR ALL TABLES;
   </programlisting>
  </para>

  <para>
   Créer une publication qui ne publie que les opérations
   d'<command>INSERT</command> sur une table :
   <programlisting>
CREATE PUBLICATION insert_only FOR TABLE mydata
    WITH (publish = 'insert');
   </programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   <command>CREATE PUBLICATION</command> est une extension
   <productname>PostgreSQL</productname> au langage SQL.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterpublication"/></member>
   <member><xref linkend="sql-droppublication"/></member>
   <member><xref linkend="sql-createsubscription"/></member>
   <member><xref linkend="sql-altersubscription"/></member>
  </simplelist>
 </refsect1>
</refentry>
