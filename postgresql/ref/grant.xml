<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->
<!-- SAS 20060619 : Relecture initiale -->

<refentry id="sql-grant">
 <refmeta>
  <refentrytitle id="sql-grant-title">GRANT</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>GRANT</refname>
  <refpurpose>Définir les droits d'accès</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>GRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }
    [, ...] | ALL [ PRIVILEGES ] }
    ON { [ TABLE ] <replaceable class="PARAMETER">nom_table</replaceable> [, ...]
         | ALL TABLES IN SCHEMA <replaceable class="PARAMETER">nom_schéma</replaceable> [, ...] }
    TO { [ GROUP ] <replaceable class="PARAMETER">nom_rôle</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { SELECT | INSERT | UPDATE | REFERENCES } ( <replaceable class="PARAMETER">nom_colonne</replaceable> [, ...] )
    [, ...] | ALL [ PRIVILEGES ] ( <replaceable class="PARAMETER">nom_colonne</replaceable> [, ...] ) }
    ON [ TABLE ] <replaceable class="PARAMETER">nom_table</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nom_rôle</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { USAGE | SELECT | UPDATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON { SEQUENCE <replaceable class="PARAMETER">nom_séquence</replaceable> [, ...]
         | ALL SEQUENCES IN SCHEMA <replaceable class="PARAMETER">nom_schéma</replaceable> [, ...] }
    TO { [ GROUP ] <replaceable class="PARAMETER">nom_rôle</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { CREATE | CONNECT | TEMPORARY | TEMP } [, ...] | ALL [ PRIVILEGES ] }
    ON DATABASE <replaceable>nom_base</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nom_rôle</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON DOMAIN <replaceable>nom_domaine</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nom_rôle</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON FOREIGN DATA WRAPPER <replaceable>nom_fdw</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nom_rôle</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON FOREIGN SERVER <replaceable>nom_serveur</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nom_rôle</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { EXECUTE | ALL [ PRIVILEGES ] }
    ON { FUNCTION <replaceable>nom_fonction</replaceable> ( [ [ <replaceable class="parameter">mode_arg</replaceable> ] [ <replaceable class="parameter">nom_arg</replaceable> ] <replaceable class="parameter">type_arg</replaceable> [, ...] ] ) [, ...]
         | ALL FUNCTIONS IN SCHEMA <replaceable class="PARAMETER">nom_schéma</replaceable> [, ...] }
    TO { [ GROUP ] <replaceable class="PARAMETER">nom_rôle</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON LANGUAGE <replaceable>nom_lang</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nom_rôle</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { SELECT | UPDATE } [, ...] | ALL [ PRIVILEGES ] }
    ON LARGE OBJECT <replaceable class="PARAMETER">loid</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nom_rôle</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { CREATE | USAGE } [, ...] | ALL [ PRIVILEGES ] }
    ON SCHEMA <replaceable>nom_schéma</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nom_rôle</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { CREATE | ALL [ PRIVILEGES ] }
    ON TABLESPACE <replaceable>tablespace_name</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nom_rôle</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON TYPE <replaceable>nom_type</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nom_rôle</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT <replaceable class="PARAMETER">nom_rôle</replaceable> [, ...] TO <replaceable class="PARAMETER">nom_rôle</replaceable> [, ...] [ WITH ADMIN OPTION ]
</synopsis>
 </refsynopsisdiv>

 <refsect1 id="sql-grant-description">
  <title>Description</title>
  <indexterm zone="sql-grant">
   <primary>GRANT</primary>
  </indexterm>

  <para>
   La commande <command>GRANT</command> a deux variantes basiques&nbsp;: la première
   donne des droits sur un objet de la base de données (table, colonne, vue,
   table distante, séquence, base de données, wrapper de données distantes, serveur distant,
   fonction, langage de procédure, schéma ou espace
   logique), la seconde gère les appartenances à un rôle. Ces variantes sont
   assez similaires mais somme toute assez différentes pour être
   décrites séparément.
  </para>

 <refsect2 id="sql-grant-description-objects">
  <title>GRANT sur les objets de la base de données</title>

  <para>
   Cette variante de la commande <command>GRANT</command> donne des droits
   spécifiques sur un objet de la base de données a un ou plusieurs rôles.
   Ces droits sont ajoutés à ceux déjà possédés, s'il y en a.
  </para>

  <para>
   Il existe aussi une option pour donner les droits sur tous les objets d'un
   même type sur un ou plusieurs schémas. Cette fonctionnalité n'est
   actuellement proposée que pour les tables, séquences et fonctions (mais
   notez que <literal>ALL TABLES</literal> incluent aussi les vues et les
   tables distantes).
  </para>

  <para>
   Le mot clé <literal>PUBLIC</literal> indique que les droits sont donnés à
   tous les rôles, y compris ceux créés ultérieurement.
   <literal>PUBLIC</literal> peut être vu comme un groupe implicitement
   défini qui inclut en permanence tous les rôles. Un rôle
   particulier dispose de la somme des droits qui lui sont acquis en propre, des droits
   de tout rôle dont il est membre et des droits donnés à <literal>PUBLIC</literal>.
  </para>

  <para>
   Si <literal>WITH GRANT OPTION</literal> est précisé, celui qui reçoit le
   droit peut le transmettre à son tour (NDT&nbsp;: par la suite on parlera
   d'&laquo;&nbsp;option de transmission de droit&nbsp;&raquo;, là où en
   anglais il est fait mention de &laquo;&nbsp;grant options&nbsp;&raquo;).
   Sans l'option GRANT, l'utilisateur ne peut pas le faire. Cette option ne
   peut pas être donnée à <literal>PUBLIC</literal>.
  </para>

  <para>
   Il n'est pas nécessaire d'accorder des droits au propriétaire d'un objet
   (habituellement l'utilisateur qui l'a créé) car, par défaut, le
   propriétaire possède tous les
   droits. (Le propriétaire peut toutefois choisir de révoquer
   certains de ses propres droits.)
  </para>

  <para>
   Le droit de supprimer un objet ou de modifier sa définition n'est pas
   configurable avec cette commande. Il est spécifique au propriétaire de
   l'objet. Ce droit ne peut ni être donné ni supprimé. Néanmoins, il est
   possible d'avoir le même effet en rendant un utilisateur membre du rôle
   qui possède cet object ou en le supprimant de ce rôle. Le propriétaire a
   aussi implicitement les options de transmission de droits pour l'objet.
  </para>

  <para>
   PostgreSQL donne des droits par défaut sur certains types d'objets à
   <literal>PUBLIC</literal>. Aucun droit n'est donné à
   <literal>PUBLIC</literal> par défaut sur les tables, colonnes, schémas
   et tablespaces. Pour les autres types, les droits par défaut donnés
   à <literal>PUBLIC</literal> sont les suivants&nbsp;:
   <literal>CONNECT</literal> et <literal>CREATE TEMP TABLE</literal> pour les
   bases de données&nbsp;; <literal>EXECUTE</literal> pour les procédures
   stockées&nbsp;; <literal>USAGE</literal> pour les langages. Le propriétaire
   de l'objet peut, bien sûr, utiliser <command>REVOKE</command> pour
   enlever les droits par défaut et les droits donnés après coup.
   (Pour un maximum de sécurité, 
   <command>REVOKE</command> est lancé dans la même transaction que la création de l'objet&nbsp;;
   ainsi, il n'y a pas de laps de temps pendant lequel un autre utilisateur 
   peut utiliser l'objet.) De plus, cette configuration des droits par défaut
   peut être modifiée en utilisant la commande <xref
   linkend="sql-alterdefaultprivileges"/>.
  </para>

  <para>
   Les droits possibles sont&nbsp;:

   <variablelist>
    <varlistentry>
     <term>SELECT</term>
     <listitem>
      <para>
       Autorise <xref linkend="sql-select"/> sur
       toutes les colonnes, ou sur les colonnes listées spécifiquement, de
       la table, vue ou séquence indiquée. Autorise aussi l'utilisation de
       <xref linkend="sql-copy"/> TO.
       De plus, ce droit est nécessaire pour référencer des valeurs de colonnes
       existantes avec <xref linkend="sql-update"/>
       ou <xref linkend="sql-delete"/>.
       Pour les séquences, ce droit autorise aussi l'utilisation de la
       fonction <function>currval</function>.
       Pour les «&nbsp;Large Objects&nbsp;», ce droit permet la lecture de
       l'objet.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>INSERT</term>
     <listitem>
      <para>
       Autorise <xref linkend="sql-insert"/> d'une
       nouvelle ligne dans la table indiquée. Si des colonnes spécifiques sont
       listées, seules ces colonnes peuvent être affectées dans une commande
       <command>INSERT</command>, (les autres colonnes recevront par conséquent
       des valeurs par défaut).
       Autorise aussi <xref linkend="sql-copy"/> FROM.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>UPDATE</term>
     <listitem>
      <para>
       Autorise <xref linkend="sql-update"/> sur toute
       colonne de la table spécifiée, ou sur les colonnes spécifiquement listées.
       (En fait, toute commande <command>UPDATE</command> non triviale nécessite
       aussi le droit <literal>SELECT</literal> car elle doit référencer les
       colonnes pour déterminer les lignes à mettre à jour et/ou calculer les
       nouvelles valeurs des colonnes.) <literal>SELECT ... FOR UPDATE</literal>
       et <literal>SELECT ... FOR SHARE</literal> requièrent également ce droit
       sur au moins une colonne en plus du droit <literal>SELECT</literal>.
       Pour les séquences, ce droit autorise l'utilisation des fonctions
       <function>nextval</function> et <function>setval</function>.
       Pour les «&nbsp;Large Objects&nbsp;», ce droit permet l'écriture et le
       tronquage de l'objet.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>DELETE</term>
     <listitem>
      <para>
       Autorise <xref linkend="sql-delete"/> d'une
       ligne sur la table indiquée. (En fait, toute commande
       <command>DELETE</command> non triviale nécessite aussi le droit
       <literal>SELECT</literal> car elle doit référencer les colonnes pour
       déterminer les lignes à supprimer.)
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>TRUNCATE</term>
     <listitem>
      <para>
       Autorise <xref linkend="sql-truncate"/> 
       sur la table indiquée.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>REFERENCES</term>
     <listitem>
      <para>
       Ce droit est requis sur les colonnes de référence et les colonnes
       qui référencent pour créer une contrainte de clé étrangère. Le droit
       peut être accordé pour toutes les colonnes, ou seulement des colonnes
       spécifiques.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>TRIGGER</term>
     <listitem>
      <para>
       Autorise la création d'un déclencheur sur la table indiquée. (Voir
       l'instruction <xref linkend="sql-createtrigger"/>.)
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>CREATE</term>
     <listitem>
      <para>
       Pour les bases de données, autorise la création de nouveaux schémas
       dans la base de données.
      </para>
      <para>
       Pour les schémas, autorise la création de nouveaux objets dans le schéma.
       Pour renommer un objet existant, il est nécessaire d'en être le propriétaire
       <emphasis>et</emphasis> de posséder ce droit sur le schéma qui le contient.
      </para>
      <para>
       Pour les tablespaces, autorise la création 
       de tables, d'index et de fichiers temporaires dans le tablespace et autorise la création de bases de
       données utilisant ce tablespace par défaut. (Révoquer ce
       privilège ne modifie pas l'emplacement des objets existants.)
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>CONNECT</term>
     <listitem>
      <para>
       Autorise l'utilisateur à se connecter à la base indiquée. Ce droit
       est vérifié à la connexion (en plus de la vérification des restrictions
       imposées par <filename>pg_hba.conf</filename>).
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>TEMPORARY</term>
     <term>TEMP</term>
     <listitem>
      <para>
       Autorise la création de tables temporaires lors de l'utilisation
       de la base de données spécifiée.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>EXECUTE</term>
     <listitem>
      <para>
       Autorise l'utilisation de la fonction indiquée et l'utilisation de tout
       opérateur défini sur cette fonction. C'est le seul type de
       droit applicable aux fonctions. (Cette syntaxe fonctionne aussi
       pour les fonctions d'agrégat.)
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>USAGE</term>
     <listitem>
      <para>
       Pour les langages procéduraux, autorise l'utilisation du langage
       indiqué pour la création de fonctions. C'est le seul
       type de droit applicable aux langages procéduraux.
      </para>
      <para>
       Pour les schémas, autorise l'accès aux objets contenus dans le schéma
       indiqué (en supposant que les droits des objets soient
       respectés). Cela octroie, pour l'essentiel, au bénéficiaire le 
       droit de <quote>consulter</quote> les objets contenus dans ce schéma.
       Sans ce droit, il est toujours possible de voir les noms des objets
       en lançant des requêtes sur les tables système. De plus, après avoir
       révoqué ce droit, les processus serveur existants pourraient recevoir
       des requêtes qui ont déjà réalisé cette recherche auparavant, donc ce
       n'est pas un moyen complètement sécurisé d'empêcher l'accès aux objets.
      </para>
      <para>
       Pour les séquences, ce droit autorise l'utilisation des fonctions
       <function>currval</function> et <function>nextval</function>.
      </para>
      <para>
       Pour les types et domaines, ce droit autorise l'utilisation du type
       ou du domaine dans la création de tables, procédures stockées et
       quelques autres objets du schéma. (Notez qu'il ne contrôle pas un
       <quote>usage</quote> général du type, comme les valeurs du type
       apparaissant dans les requêtes. Il empêche seulement les objets
       d'être créés s'ils dépendent de ce type. Le but principal de ce
       droit est de contrôler lrs utilisateurs pouvant créer des dépendances
       sur un type, ce qui peut empêcher le propriétaire de changer le type
       après coup.)
      </para>
      <para>
       Pour des wrappers de données distantes, ce droit autorise son
       bénéficiaire à créer de nouveaux serveurs utilisant ce wrapper.
      </para>
      <para>
       For servers, this privilege enables the grantee to create foreign
       tables using the server, and also to create, alter, or drop his own
       user's user mappings associated with that server.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>ALL PRIVILEGES</term>
     <listitem>
      <para>
       Octroie tous les droits disponibles en une seule opération.
       Le mot clé <literal>PRIVILEGES</literal> est optionnel sous
       <productname>PostgreSQL</productname> mais est requis dans le standard SQL.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

   Les droits requis par les autres commandes sont listés sur les pages de référence
   de ces commandes.
  </para>
 </refsect2>


 <refsect2 id="sql-grant-description-roles">
  <title>GRANT sur les rôles</title>

  <para>
   Cette variante de la commande <command>GRANT</command> définit l'appartenance
   d'un (ou plusieurs) rôle(s) à un autre. L'appartenance à un rôle est importante
   car elle offre tous les droits accordés à un rôle à l'ensemble de ses membres.
  </para>

  <para>
   Si <literal>WITH ADMIN OPTION</literal> est spécifié, le membre peut
   à la fois en octroyer l'appartenance à d'autres rôles, et la révoquer.
   Sans cette option, les utilisateurs ordinaires ne peuvent
   pas le faire. Toutefois, les superutilisateurs peuvent
   donner ou enlever à tout rôle l'appartenance à un rôle. Les rôles
   qui possèdent le droit <literal>CREATEROLE</literal> peuvent agir ainsi sur tout rôle
   qui n'est pas superutilisateur.
  </para>

  <para>
   Contrairement au cas avec les droits, l'appartenance à un rôle ne peut pas
   être donné à <literal>PUBLIC</literal>. Notez aussi que ce format de la
   commande n'autorise pas le mot <literal>GROUP</literal>.
  </para>
 </refsect2>
 </refsect1>


 <refsect1 id="sql-grant-notes">
  <title>Notes</title>

   <para>
    La commande <xref linkend="sql-revoke"/> est
    utilisée pour retirer les droits d'accès.
   </para>

   <para>
    Depuis <productname>PostgreSQL</productname> 8.1, le concept des
    utilisateurs et des groupes a été unifié en un seul type d'entité appelé
    rôle. Il n'est donc plus nécessaire d'utiliser le mot clé
    <literal>GROUP</literal> pour indiquer si le bénéficiaire est un
    utilisateur ou un groupe. <literal>GROUP</literal> est toujours autorisé
    dans cette commande mais est ignoré.
   </para>

   <para>
    Un utilisateur peut exécuter des <command>SELECT</command>,
    <command>INSERT</command>, etc. sur une colonne si il a le privilège soit sur
    cette colonne spécifique, soit sur la table entière. Donner un privilège de
    table puis le révoquer pour une colonne ne fera pas ce que vous pourriez
    espérer&nbsp;: l'autorisation au niveau de la table n'est pas affectée par
    une opération au niveau de la colonne.
   </para>

   <para>
    Quand un utilisateur, non propriétaire d'un objet, essaie d'octroyer des
    droits sur cet objet, la commande échoue si l'utilisateur
    n'a aucun droit sur l'objet. Tant que des privilèges existent, la commande
	s'exécute, mais n'octroie que les droits pour lesquels l'utilisateur dispose
	de l'option de transmission.
	Les formes <command>GRANT ALL PRIVILEGES</command> engendrent un message d'avertissement
	si aucune option de transmission de droit n'est détenue, tandis que les autres formes
	n'engendrent un message que lorsque les options de transmission du privilège concerné
	par la commande ne sont pas détenues. (Cela s'applique aussi au
    propriétaire de l'objet, mais comme on considère toujours que ce dernier détient
    toutes les options de transmission, le problème ne se pose jamais.)
   </para>

   <para>
    Les superutilisateurs de la base de données
    peuvent accéder à tous les objets sans tenir compte des droits qui les régissent.
    Cela est comparable aux droits de <literal>root</literal> sur un système
    Unix. Comme avec <literal>root</literal>, il est déconseillé d'opérer en tant que
    superutilisateur, sauf en cas d'impérieuse nécessité.
   </para>

   <para>
    Si un superutilisateur lance une commande <command>GRANT</command> ou
    <command>REVOKE</command>, tout se passe comme si la commande était exécutée
	par le propriétaire de l'objet concerné. Les droits octroyés par
    cette commande semblent ainsi l'avoir été par le propriétaire de l'objet.
    (L'appartenance à rôle, elle, semble être donnée par le rôle conteneur.)
   </para>

   <para>
    <command>GRANT</command> et <command>REVOKE</command> peuvent aussi être
    exécutées par un rôle qui n'est pas le propriétaire de l'objet considéré,
    mais est membre du rôle propriétaire de l'objet, ou membre du rôle
    titulaire du privilège <literal>WITH GRANT OPTION</literal> sur cet objet.
    Dans ce cas, les droits sont enregistrés comme donnés par le rôle
    propriétaire de l'objet ou titulaire du privilège <literal>WITH GRANT
    OPTION</literal>. Par exemple, si la table <literal>t1</literal> appartient
    au rôle <literal>g1</literal>, dont le rôle <literal>u1</literal> est
    membre, alors <literal>u1</literal> peut donner les droits sur
    <literal>t1</literal> à <literal>u2</literal>, mais ces droits apparaissent
    octroyés directement par <literal>g1</literal>. Tout autre membre du rôle
    <literal>g1</literal> peut les révoquer par la suite.
   </para>

   <para>
    Si le rôle qui exécute <command>GRANT</command> détient, de manière indirecte,
    les droits souhaités à travers plus d'un niveau d'appartenance, il est difficile
    de prévoir le rôle reconnu comme fournisseur du privilège. Dans de tels cas,
    le meilleur moyen d'utiliser <command>SET ROLE</command> est de devenir le rôle
    qui doit octroyer les droits.
   </para>

   <para>
    Donner un droit sur une table n'étend pas automatiquement les droits
    sur les séquences utilisées par cette table, ceci incluant les
    séquences liées par des colonnes de type <type>SERIAL</type>. Les droits
    sur les séquences doivent être donnés séparément.
   </para>

   <para>
    La commande <command>\dp</command> de <xref linkend="app-psql"/> permet
    d'obtenir des informations sur les droits existants pour les tables et
    colonnes, par exemple&nbsp;:
<programlisting>=&gt; \z matable
                              Access privileges
 Schema |  Name   | Type  |   Access privileges   | Column access privileges 
--------+---------+-------+-----------------------+--------------------------
 public | mytable | table | miriam=arwdDxt/miriam | col1:
                          : =r/miriam             :   miriam_rw=rw/miriam
                          : admin=arw/miriam        
(1 row)
</programlisting>
    Les entrées affichées par <command>\dp</command> sont interprétées
    ainsi&nbsp;:
<programlisting>      rolename=xxxx -- privileges granted to a role
              =xxxx -- privileges granted to PUBLIC


                  r -- SELECT ("lecture")
                  w -- UPDATE ("écriture")
                  a -- INSERT ("ajout")
                  d -- DELETE
                  D -- TRUNCATE
                  x -- REFERENCES
                  t -- TRIGGER
                  X -- EXECUTE
                  U -- USAGE
		  C -- CREATE
		  c -- CONNECT
                  T -- TEMPORARY
            arwdDxt -- ALL PRIVILEGES (pour les tables, varie pour les autres objets)
                  * -- option de transmission du privilège qui précède

              /yyyy -- role qui a donné le droit
</programlisting>

    L'exemple ci-dessus présente ce que voit l'utilisatrice
    <literal>miriam</literal> après la création de la table <literal>matable</literal> et
    l'exécution de&nbsp;:

<programlisting>GRANT SELECT ON matable TO PUBLIC;
GRANT SELECT, UPDATE, INSERT ON matable TO admin;
GRANT SELECT (col1), UPDATE (col1) ON matable TO miriam_rw;
</programlisting>
   </para>

   <para>
    Pour les objects non-tables, il y a d'autres commandes <command>\d</command>
    qui peuvent afficher leurs privilèges.
   </para>

   <para>
   Si la colonne <quote>Access privileges</quote> est vide pour un objet donné, cela
   signifie que l'objet possède les droits par défaut (c'est-à-dire que la
   colonne des droits est NULL). Les droits par défaut incluent toujours les
   droits complets pour le propriétaire et peuvent inclure quelques droits pour
   <literal>PUBLIC</literal> en fonction du type d'objet comme cela est expliqué plus haut. Le
   premier <command>GRANT</command> ou <command>REVOKE</command> sur un objet instancie les
   droits par défaut (produisant, par exemple,
   <literal>{=,miriam=arwdDxt/miriam}</literal>) puis les modifie en fonction de la requête
   spécifiée. Les entrées sont affichées en <quote>Privilèges d'accès aux colonnes</quote>
   seulement pour les colonnes qui ont des privilèges différents de ceux par défaut.
    (Notez que, dans ce but, <quote>default privileges</quote> signifie
    toujours les droits par défaut inhérents au type de l'objet. Un objet dont
    les droits ont été modifiés avec la commande <command>ALTER DEFAULT
    PRIVILEGES</command> sera toujours affiché avec une entrée de droit
    effective qui inclut les effets de la commande <command>ALTER</command>.)
   </para>

   <para>
    Les options de transmission de privilèges implicites du propriétaire ne sont pas indiquées
    dans l'affichage des droits d'accès. Une <literal>*</literal> apparaît uniquement
    lorsque les options de transmission ont été explicitement octroyées.
   </para>
 </refsect1>

 <refsect1 id="sql-grant-examples">
  <title>Exemples</title>

  <para>
   Donner le droit d'insertion à tous les utilisateurs sur la table
   <literal>films</literal>&nbsp;:

<programlisting>GRANT INSERT ON films TO PUBLIC;
</programlisting>
  </para>

  <para>
   Donner tous les droits possibles à l'utilisateur <literal>manuel</literal> sur la vue
   <literal>genres</literal>&nbsp;:

<programlisting>GRANT ALL PRIVILEGES ON genres TO manuel;
</programlisting>

   Bien que la commande ci-dessus donne tous les droits lorsqu'elle
   est exécutée par un superutilisateur ou par le propriétaire de
   <literal>genres</literal>, exécutée par quelqu'un d'autre, elle
   n'accorde que les droits pour lesquels cet utilisateur possède l'option de transmission.
  </para>

  <para>
   Rendre <literal>joe</literal> membre de <literal>admins</literal>&nbsp;:

<programlisting>GRANT admins TO joe;
</programlisting>
  </para>
 </refsect1>

 <refsect1 id="sql-grant-compatibility">
  <title>Compatibilité</title>
    
   <para>
    Conformément au standard SQL, le mot clé <literal>PRIVILEGES</literal>
    est requis dans <literal>ALL PRIVILEGES</literal>. Le standard SQL
    n'autorise pas l'initialisation des droits sur plus d'un objet par commande.
   </para>

   <para>
    <productname>PostgreSQL</productname> autorise un propriétaire d'objet
    à révoquer ses propres droits ordinaires&nbsp;: par exemple, le
    propriétaire d'un objet peut le placer en lecture seule pour lui-même en
    révoquant ses propres droits <literal>INSERT</literal>,
    <literal>UPDATE</literal>, <literal>DELETE</literal> et
    <literal>TRUNCATE</literal>. Le standard SQL
    ne l'autorise pas. La raison en est que 
    <productname>PostgreSQL</productname> traite les droits du propriétaire
    comme ayant été donnés par le propriétaire&nbsp;; il peut, de ce fait, aussi les
    révoquer. Dans le standard SQL, les droits du propriétaire sont donnés par
    une entité <quote>_SYSTEM</quote>. N'étant pas <quote>_SYSTEM</quote>, le propriétaire
    ne peut pas révoquer ces droits.
   </para>

   <para>
    D'après le standard SQL, les options de cette commande peuvent être données
    à <literal>PUBLIC</literal>&nbsp;; PostgreSQL supporte seulement l'ajout des
    options de droits aux rôles.
   </para>

   <para>
    Le standard SQL fournit un droit <literal>USAGE</literal> sur d'autres
    types d'objet&nbsp;: jeux de caractères, collations, conversions.
   </para>

   <para>
    Dans le standard SQL, seules les séquences ont un droit <literal>USAGE</literal>
    qui contrôle l'utilisation de l'expression <literal>NEXT VALUE FOR</literal>,
    un équivalent de la fonction <function>nextval</function> dans PostgreSQL.
    Les droits <literal>SELECT</literal> et <literal>UPDATE</literal> des
    séquences sont une extension de PostgreSQL. L'application du droit
    <literal>USAGE</literal> de la séquence à la fonction
    <literal>currval</literal> est aussi une extension PostgreSQL (comme l'est
    la fonction elle-même).
   </para>

   <para>
    Les droits sur les bases de données, tablespaces, langages, schémas et
    séquences sont des extensions <productname>PostgreSQL</productname>.
   </para>
 </refsect1>


 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-revoke"/></member>
   <member><xref linkend="sql-alterdefaultprivileges"/></member>
  </simplelist>
 </refsect1>

</refentry>
