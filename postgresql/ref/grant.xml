<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-grant">
 <indexterm zone="sql-grant">
  <primary>GRANT</primary>
 </indexterm>

 <refmeta>
  <refentrytitle id="sql-grant-title">GRANT</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>GRANT</refname>
  <refpurpose>Définir les droits d'accès</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>GRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }
    [, ...] | ALL [ PRIVILEGES ] }
    ON { [ TABLE ] <replaceable class="parameter">nom_table</replaceable> [, ...]
         | ALL TABLES IN SCHEMA <replaceable class="parameter">nom_schéma</replaceable> [, ...] }
    TO <replaceable class="parameter">spécification_rôle</replaceable> [, ...] [ WITH GRANT OPTION ]

GRANT { { SELECT | INSERT | UPDATE | REFERENCES } ( <replaceable class="parameter">nom_colonne</replaceable> [, ...] )
    [, ...] | ALL [ PRIVILEGES ] ( <replaceable class="parameter">nom_colonne</replaceable> [, ...] ) }
    ON [ TABLE ] <replaceable class="parameter">nom_table</replaceable> [, ...]
    TO <replaceable class="parameter">spécification_rôle</replaceable> [, ...] [ WITH GRANT OPTION ]

GRANT { { USAGE | SELECT | UPDATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON { SEQUENCE <replaceable class="parameter">nom_séquence</replaceable> [, ...]
         | ALL SEQUENCES IN SCHEMA <replaceable class="parameter">nom_schéma</replaceable> [, ...] }
    TO <replaceable class="parameter">spécification_rôle</replaceable> [, ...] [ WITH GRANT OPTION ]

GRANT { { CREATE | CONNECT | TEMPORARY | TEMP } [, ...] | ALL [ PRIVILEGES ] }
    ON DATABASE <replaceable>nom_base</replaceable> [, ...]
    TO <replaceable class="parameter">spécification_rôle</replaceable> [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON DOMAIN <replaceable>nom_domaine</replaceable> [, ...]
    TO <replaceable class="parameter">spécification_rôle</replaceable> [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON FOREIGN DATA WRAPPER <replaceable>nom_fdw</replaceable> [, ...]
    TO <replaceable class="parameter">spécification_rôle</replaceable> [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON FOREIGN SERVER <replaceable>nom_serveur</replaceable> [, ...]
    TO <replaceable class="parameter">spécification_rôle</replaceable> [, ...] [ WITH GRANT OPTION ]

GRANT { EXECUTE | ALL [ PRIVILEGES ] }
    ON { { FUNCTION | PROCEDURE | ROUTINE } <replaceable>nom_routine</replaceable> [ ( [ [ <replaceable class="parameter">mode_arg</replaceable> ] [ <replaceable class="parameter">nom_arg</replaceable> ] <replaceable class="parameter">type_arg</replaceable> [, ...] ] ) ] [, ...]
         | ALL { FUNCTIONS | PROCEDURES | ROUTINES } IN SCHEMA <replaceable class="parameter">nom_schéma</replaceable> [, ...] }
    TO <replaceable class="parameter">spécification_rôle</replaceable> [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON LANGUAGE <replaceable>nom_lang</replaceable> [, ...]
    TO <replaceable class="parameter">spécification_rôle</replaceable> [, ...] [ WITH GRANT OPTION ]

GRANT { { SELECT | UPDATE } [, ...] | ALL [ PRIVILEGES ] }
    ON LARGE OBJECT <replaceable class="parameter">loid</replaceable> [, ...]
    TO <replaceable class="parameter">spécification_rôle</replaceable> [, ...] [ WITH GRANT OPTION ]

GRANT { { CREATE | USAGE } [, ...] | ALL [ PRIVILEGES ] }
    ON SCHEMA <replaceable>nom_schéma</replaceable> [, ...]
    TO <replaceable class="parameter">spécification_rôle</replaceable> [, ...] [ WITH GRANT OPTION ]

GRANT { CREATE | ALL [ PRIVILEGES ] }
    ON TABLESPACE <replaceable>tablespace_name</replaceable> [, ...]
    TO <replaceable class="parameter">spécification_rôle</replaceable> [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON TYPE <replaceable>nom_type</replaceable> [, ...]
    TO <replaceable class="parameter">spécification_rôle</replaceable> [, ...] [ WITH GRANT OPTION ]

GRANT <replaceable class="parameter">nom_role</replaceable> [, ...] TO <replaceable class="parameter">spécification_rôle</replaceable> [, ...]
    [ WITH ADMIN OPTION ]
    [ GRANTED BY <replaceable class="parameter">spécification_rôle</replaceable> ]

<phrase>où <replaceable class="parameter">spécification_rôle</replaceable> peut valoir&nbsp;:</phrase>

    [ GROUP ] <replaceable class="parameter">nom_rôle</replaceable>
  | PUBLIC
  | CURRENT_USER
  | SESSION_USER</synopsis>
 </refsynopsisdiv>

 <refsect1 id="sql-grant-description">
  <title>Description</title>

  <para>
   La commande <command>GRANT</command> a deux variantes basiques&nbsp;: la première
   donne des droits sur un objet de la base de données (table, colonne, vue,
   table distante, séquence, base de données, wrapper de données distantes, serveur distant,
   fonction, procédure, langage de procédure, schéma ou espace
   logique), la seconde gère les appartenances à un rôle. Ces variantes sont
   assez similaires mais somme toute assez différentes pour être
   décrites séparément.
  </para>

  <refsect2 id="sql-grant-description-objects">
   <title>GRANT sur les objets de la base de données</title>

   <para>
    Cette variante de la commande <command>GRANT</command> donne des droits
    spécifiques sur un objet de la base de données a un ou plusieurs rôles.
    Ces droits sont ajoutés à ceux déjà possédés, s'il y en a.
   </para>

   <para>
    Le mot clé <literal>PUBLIC</literal> indique que les droits sont donnés à
    tous les rôles, y compris ceux créés ultérieurement.
    <literal>PUBLIC</literal> peut être vu comme un groupe implicitement
    défini qui inclut en permanence tous les rôles. Un rôle
    particulier dispose de la somme des droits qui lui sont acquis en propre, des droits
    de tout rôle dont il est membre et des droits donnés à <literal>PUBLIC</literal>.
   </para>

   <para>
    Si <literal>WITH GRANT OPTION</literal> est précisé, celui qui reçoit le
    droit peut le transmettre à son tour (NDT&nbsp;: par la suite on parlera
    d'&laquo;&nbsp;option de transmission de droit&nbsp;&raquo;, là où en
    anglais il est fait mention de &laquo;&nbsp;grant options&nbsp;&raquo;).
    Sans l'option GRANT, l'utilisateur ne peut pas le faire. Cette option ne
    peut pas être donnée à <literal>PUBLIC</literal>.
   </para>

   <para>
    Il n'est pas nécessaire d'accorder des droits au propriétaire d'un objet
    (habituellement l'utilisateur qui l'a créé) car, par défaut, le
    propriétaire possède tous les
    droits. (Le propriétaire peut toutefois choisir de révoquer
    certains de ses propres droits.)
   </para>

   <para>
    Le droit de supprimer un objet ou de modifier sa définition n'est pas
    configurable avec cette commande. Il est spécifique au propriétaire de
    l'objet. Ce droit ne peut ni être donné ni supprimé. Néanmoins, il est
    possible d'avoir le même effet en rendant un utilisateur membre du rôle
    qui possède cet object ou en le supprimant de ce rôle. Le propriétaire a
    aussi implicitement les options de transmission de droits pour l'objet.
   </para>

   <para>
    Les droits possibles sont&nbsp;:

   <variablelist>
    <varlistentry>
     <term><literal>SELECT</literal></term>
     <term><literal>INSERT</literal></term>
     <term><literal>UPDATE</literal></term>
     <term><literal>DELETE</literal></term>
     <term><literal>TRUNCATE</literal></term>
     <term><literal>REFERENCES</literal></term>
     <term><literal>TRIGGER</literal></term>
     <term><literal>CREATE</literal></term>
     <term><literal>CONNECT</literal></term>
     <term><literal>TEMPORARY</literal></term>
     <term><literal>EXECUTE</literal></term>
     <term><literal>USAGE</literal></term>
     <listitem>
      <para>
       Types spécifiques de droits, comme définis dans <xref linkend="ddl-priv"/>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>TEMP</literal></term>
     <listitem>
      <para>
       Autre écriture de <literal>TEMPORARY</literal>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>ALL PRIVILEGES</literal></term>
     <listitem>
      <para>
       Donner tous les droits disponibles pour ce type d'objet. Le mot-clé
       <literal>PRIVILEGES</literal> est optionnel dans
       <productname>PostgreSQL</productname>, bien qu'il soit requis en SQL.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

  <para>
   La syntaxe <literal>FUNCTION</literal> fonctionne pour les fonctions
   simples, les fonctions d'agrégat, et les fonctions de fenêtrage, mais pas
   pour les procédures&nbsp;; utilisez <literal>PROCEDURE</literal> pour ces
   dernières. Vous pouvez aussi utiliser <literal>ROUTINE</literal> pour faire
   référence à une fonction simple, une fonction d'agrégat, une fonction de
   fenêtrage ou une procédure.
  </para>

  <para>
   Il existe aussi une option pour donner les droits sur tous les objets de
   même type dans un ou plusieurs schémas. Cette fonctionnalité est
   actuellement supportée par les tables, séquences, fonctions et procédures.
   <literal>ALL TABLES</literal> affecte aussi les vues et les tables
   externes, tout comme la commande <command>GRANT</command> de cet objet.
   <literal>ALL FUNCTIONS</literal> affecte aussi les fonctions d'agrégat et
   les fonctions de fenêtrage, mais pas les procédures, encore une fois tout
   comme la commande <command>GRANT</command> spécifique à l'objet. Utilisez
   <literal>ALL ROUTINES</literal> pour inclure les procédures.
   </para>
  </refsect2>


  <refsect2 id="sql-grant-description-roles">
   <title>GRANT sur les rôles</title>

   <para>
    Cette variante de la commande <command>GRANT</command> définit l'appartenance
    d'un (ou plusieurs) rôle(s) à un autre. L'appartenance à un rôle est importante
    car elle offre tous les droits accordés à un rôle à l'ensemble de ses membres.
   </para>

   <para>
    Si <literal>WITH ADMIN OPTION</literal> est spécifié, le membre peut à la
    fois en octroyer l'appartenance à d'autres rôles, et la révoquer. Sans cette
    option, les utilisateurs ordinaires ne peuvent pas le faire. Un rôle ne
    dispose pas de l'option <literal>WITH ADMIN OPTION</literal> lui-même mais il
    peut donner ou enlever son appartenance à partir d'une session où l'utilisateur
    correspond au rôle. Les superutilisateurs peuvent donner ou supprimer
    l'appartenance à tout rôle. Les rôles disposant de l'attribut
    <literal>CREATEROLE</literal> peuvent donner ou supprimer l'appartenance à
    tout rôle qui n'est pas un superutilisateur.
   </para>

   <para>
    Si <literal>GRANTED BY</literal> est utilisé, l'ajout du droit est enregistré
    comme étant fait avec le rôle indiqué. Seuls les superutilisateurs peuvent
    utiliser cette option, sauf quand le nom indiqué est le même que celui qui
    exécute la commande.
   </para>

   <para>
    Contrairement au cas avec les droits, l'appartenance à un rôle ne peut pas
    être donné à <literal>PUBLIC</literal>. Notez aussi que ce format de la
    commande n'autorise pas le mot <literal>GROUP</literal> dans <replaceable
    class="parameter">spécification_rôle</replaceable>.
   </para>
  </refsect2>
 </refsect1>


 <refsect1 id="sql-grant-notes">
  <title>Notes</title>

  <para>
   La commande <xref linkend="sql-revoke"/> est
   utilisée pour retirer les droits d'accès.
  </para>

  <para>
   Depuis <productname>PostgreSQL</productname> 8.1, le concept des
   utilisateurs et des groupes a été unifié en un seul type d'entité appelé
   rôle. Il n'est donc plus nécessaire d'utiliser le mot clé
   <literal>GROUP</literal> pour indiquer si le bénéficiaire est un
   utilisateur ou un groupe. <literal>GROUP</literal> est toujours autorisé
   dans cette commande mais est ignoré.
  </para>

  <para>
   Un utilisateur peut exécuter des <command>SELECT</command>,
   <command>INSERT</command>, etc. sur une colonne si il a le privilège soit sur
   cette colonne spécifique, soit sur la table entière. Donner un privilège de
   table puis le révoquer pour une colonne ne fera pas ce que vous pourriez
   espérer&nbsp;: l'autorisation au niveau de la table n'est pas affectée par
   une opération au niveau de la colonne.
  </para>

  <para>
   Quand un utilisateur, non propriétaire d'un objet, essaie d'octroyer des
   droits sur cet objet, la commande échoue si l'utilisateur
   n'a aucun droit sur l'objet. Tant que des privilèges existent, la commande
   s'exécute, mais n'octroie que les droits pour lesquels l'utilisateur dispose
   de l'option de transmission.
   Les formes <command>GRANT ALL PRIVILEGES</command> engendrent un message d'avertissement
   si aucune option de transmission de droit n'est détenue, tandis que les autres formes
   n'engendrent un message que lorsque les options de transmission du privilège concerné
   par la commande ne sont pas détenues. (Cela s'applique aussi au
   propriétaire de l'objet, mais comme on considère toujours que ce dernier détient
   toutes les options de transmission, le problème ne se pose jamais.)
  </para>

  <para>
   Les superutilisateurs de la base de données
   peuvent accéder à tous les objets sans tenir compte des droits qui les régissent.
   Cela est comparable aux droits de <literal>root</literal> sur un système
   Unix. Comme avec <literal>root</literal>, il est déconseillé d'opérer en tant que
   superutilisateur, sauf en cas d'impérieuse nécessité.
  </para>

  <para>
   Si un superutilisateur lance une commande <command>GRANT</command> ou
   <command>REVOKE</command>, tout se passe comme si la commande était exécutée
   par le propriétaire de l'objet concerné. Les droits octroyés par
   cette commande semblent ainsi l'avoir été par le propriétaire de l'objet.
   (L'appartenance à rôle, elle, semble être donnée par le rôle conteneur.)
  </para>

  <para>
   <command>GRANT</command> et <command>REVOKE</command> peuvent aussi être
   exécutées par un rôle qui n'est pas le propriétaire de l'objet considéré,
   mais est membre du rôle propriétaire de l'objet, ou membre du rôle
   titulaire du privilège <literal>WITH GRANT OPTION</literal> sur cet objet.
   Dans ce cas, les droits sont enregistrés comme donnés par le rôle
   propriétaire de l'objet ou titulaire du privilège <literal>WITH GRANT
    OPTION</literal>. Par exemple, si la table <literal>t1</literal> appartient
   au rôle <literal>g1</literal>, dont le rôle <literal>u1</literal> est
   membre, alors <literal>u1</literal> peut donner les droits sur
   <literal>t1</literal> à <literal>u2</literal>, mais ces droits apparaissent
   octroyés directement par <literal>g1</literal>. Tout autre membre du rôle
   <literal>g1</literal> peut les révoquer par la suite.
  </para>

  <para>
   Si le rôle qui exécute <command>GRANT</command> détient, de manière indirecte,
   les droits souhaités à travers plus d'un niveau d'appartenance, il est difficile
   de prévoir le rôle reconnu comme fournisseur du privilège. Dans de tels cas,
   le meilleur moyen d'utiliser <command>SET ROLE</command> est de devenir le rôle
   qui doit octroyer les droits.
  </para>

  <para>
   Donner un droit sur une table n'étend pas automatiquement les droits
   sur les séquences utilisées par cette table, ceci incluant les
   séquences liées par des colonnes de type <type>SERIAL</type>. Les droits
   sur les séquences doivent être donnés séparément.
  </para>

  <para>
   Voir <xref linkend="ddl-priv"/> pour plus d'informations sur les types de
   droit spécifiques, ainsi que sur la façon d'inspecter les droits sur les
   objets.
  </para>
 </refsect1>

 <refsect1 id="sql-grant-examples">
  <title>Exemples</title>

  <para>
   Donner le droit d'insertion à tous les utilisateurs sur la table
   <literal>films</literal>&nbsp;:

   <programlisting>GRANT INSERT ON films TO PUBLIC;
  </programlisting>
 </para>

 <para>
  Donner tous les droits possibles à l'utilisateur <literal>manuel</literal> sur la vue
  <literal>genres</literal>&nbsp;:

  <programlisting>GRANT ALL PRIVILEGES ON genres TO manuel;
  </programlisting>

  Bien que la commande ci-dessus donne tous les droits lorsqu'elle
  est exécutée par un superutilisateur ou par le propriétaire de
  <literal>genres</literal>, exécutée par quelqu'un d'autre, elle
  n'accorde que les droits pour lesquels cet utilisateur possède l'option de transmission.
 </para>

 <para>
  Rendre <literal>joe</literal> membre de <literal>admins</literal>&nbsp;:

  <programlisting>GRANT admins TO joe;
  </programlisting>
 </para>
</refsect1>

<refsect1 id="sql-grant-compatibility">
 <title>Compatibilité</title>

 <para>
  Conformément au standard SQL, le mot clé <literal>PRIVILEGES</literal>
  est requis dans <literal>ALL PRIVILEGES</literal>. Le standard SQL
  n'autorise pas l'initialisation des droits sur plus d'un objet par commande.
 </para>

 <para>
  <productname>PostgreSQL</productname> autorise un propriétaire d'objet
  à révoquer ses propres droits ordinaires&nbsp;: par exemple, le
  propriétaire d'un objet peut le placer en lecture seule pour lui-même en
  révoquant ses propres droits <literal>INSERT</literal>,
  <literal>UPDATE</literal>, <literal>DELETE</literal> et
  <literal>TRUNCATE</literal>. Le standard SQL
  ne l'autorise pas. La raison en est que
  <productname>PostgreSQL</productname> traite les droits du propriétaire
  comme ayant été donnés par le propriétaire&nbsp;; il peut, de ce fait, aussi les
  révoquer. Dans le standard SQL, les droits du propriétaire sont donnés par
  une entité <quote>_SYSTEM</quote>. N'étant pas <quote>_SYSTEM</quote>, le propriétaire
  ne peut pas révoquer ces droits.
 </para>

 <para>
  D'après le standard SQL, les options de cette commande peuvent être données
  à <literal>PUBLIC</literal>&nbsp;; PostgreSQL supporte seulement l'ajout des
  options de droits aux rôles.
 </para>

 <para>
  Le standard SQL autorise l'utilisation de l'option <literal>GRANTED
   BY</literal> pour toutes les formes de <command>GRANT</command>. PostgreSQL
  l'accepte uniquement pour rendre un rôle membre d'un autre rôle, et même
  là, seuls les superutilisateurs peuvent l'utiliser.
 </para>

 <para>
  Le standard SQL fournit un droit <literal>USAGE</literal> sur d'autres
  types d'objet&nbsp;: jeux de caractères, collations, conversions.
 </para>

 <para>
  Dans le standard SQL, seules les séquences ont un droit <literal>USAGE</literal>
  qui contrôle l'utilisation de l'expression <literal>NEXT VALUE FOR</literal>,
  un équivalent de la fonction <function>nextval</function> dans PostgreSQL.
  Les droits <literal>SELECT</literal> et <literal>UPDATE</literal> des
  séquences sont une extension de PostgreSQL. L'application du droit
  <literal>USAGE</literal> de la séquence à la fonction
  <literal>currval</literal> est aussi une extension PostgreSQL (comme l'est
  la fonction elle-même).
 </para>

 <para>
  Les droits sur les bases de données, tablespaces, langages, schémas et
  séquences sont des extensions <productname>PostgreSQL</productname>.
 </para>
</refsect1>


<refsect1>
 <title>Voir aussi</title>

 <simplelist type="inline">
  <member><xref linkend="sql-revoke"/></member>
  <member><xref linkend="sql-alterdefaultprivileges"/></member>
 </simplelist>
</refsect1>

</refentry>
