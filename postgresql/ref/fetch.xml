<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-fetch">
 <indexterm zone="sql-fetch">
  <primary>FETCH</primary>
 </indexterm>

 <indexterm zone="sql-fetch">
  <primary>curseur</primary>
  <secondary>FETCH</secondary>
 </indexterm>

 <refmeta>
  <refentrytitle>FETCH</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>FETCH</refname>
  <refpurpose>Récupérer les lignes d'une requête à l'aide d'un curseur</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>FETCH [ <replaceable class="parameter">direction</replaceable> [ FROM | IN ] ] <replaceable class="parameter">nom_curseur</replaceable>

<phrase>où <replaceable class="parameter">direction</replaceable> peut être vide ou être&nbsp;:</phrase>

    NEXT
    PRIOR
    FIRST
    LAST
    ABSOLUTE <replaceable class="parameter">nombre</replaceable>
    RELATIVE <replaceable class="parameter">nombre</replaceable>
    <replaceable class="parameter">nombre</replaceable>
    ALL
    FORWARD
    FORWARD <replaceable class="parameter">nombre</replaceable>
    FORWARD ALL
    BACKWARD
    BACKWARD <replaceable class="parameter">nombre</replaceable>
    BACKWARD ALL
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>FETCH</command> récupère des lignes en utilisant un curseur précédemment
   ouvert.
  </para>

  <para>
   À un curseur est associée une position associée utilisée par <command>FETCH</command>.
   Le curseur peut être positionné avant la première ligne du résultat de la
   requête, sur une ligne particulière du résultat ou après la dernière ligne du
   résultat. À sa création, le curseur est positionné avant la première ligne.
   Après récupération de lignes, le curseur est positionné sur la ligne la plus
   récemment récupérée. Si <command>FETCH</command> atteint la fin des lignes
   disponibles, il est positionné après la dernière
   ligne ou avant la première ligne dans le cas d'une récupération remontante.
   <command>FETCH ALL</command> ou <command>FETCH BACKWARD ALL</command> positionne toujours le
   curseur après la dernière ligne ou avant la première ligne.
  </para>

  <para>
   Les formes <literal>NEXT</literal>, <literal>PRIOR</literal>, <literal>FIRST</literal>,
   <literal>LAST</literal>, <literal>ABSOLUTE</literal>, <literal>RELATIVE</literal> récupèrent une
   seule ligne après déplacement approprié du curseur. Si cette ligne
   n'existe pas, un résultat vide est renvoyé et le curseur est positionné
   avant la première ligne ou après la dernière ligne, en fonction du sens de
   la progression.
  </para>

  <para>
   Les formes utilisant <literal>FORWARD</literal> et <literal>BACKWARD</literal> récupèrent
   le nombre de lignes indiqué en se déplaçant en avant ou en arrière, laissant
   le curseur positionné sur la dernière ligne renvoyée (ou après/avant toutes
   les lignes si <replaceable class="parameter">nombre</replaceable> dépasse le
   nombre de lignes disponibles).
  </para>

  <para>
   <literal>RELATIVE 0</literal>, <literal>FORWARD 0</literal> et
   <literal>BACKWARD 0</literal> récupèrent tous la ligne actuelle sans
   déplacer le curseur, c'est-à-dire qu'ils effectuent une nouvelle récupération de la ligne
   dernièrement récupérée. La commande réussit sauf si le curseur est positionné
   avant la première ligne ou après la dernière ligne&nbsp;; dans ce cas, aucune
   ligne n'est renvoyée.
  </para>

  <note>
   <para>
    Cette page décrit l'utilisation des curseurs au niveau de la commande SQL.
    Si vous voulez utiliser des curseurs dans une fonction
    <application>PL/pgSQL</application>, les règles sont différentes &mdash;
    voir <xref linkend="plpgsql-cursor-using"/>.
   </para>
  </note>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">direction</replaceable></term>
    <listitem>
     <para>
      La direction et le nombre de lignes à récupérer. Ce paramètre
      peut prendre les valeurs suivantes&nbsp;:

      <variablelist>
       <varlistentry>
        <term><literal>NEXT</literal></term>
        <listitem>
         <para>
          La ligne suivante est récupérée. C'est le comportement par défaut si
          <replaceable class="parameter">direction</replaceable> est omis.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>PRIOR</literal></term>
        <listitem>
         <para>
          La ligne précédente est récupérée.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FIRST</literal></term>
        <listitem>
         <para>
          La première ligne de la requête est récupérée. C'est identique à
          <literal>ABSOLUTE 1</literal>.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>LAST</literal></term>
        <listitem>
         <para>
          La dernière ligne de la requête est récupérée. C'est identique à
          <literal>ABSOLUTE -1</literal>.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>ABSOLUTE <replaceable class="parameter">nombre</replaceable></literal></term>
        <listitem>
         <para>
          La <replaceable class="parameter">nombre</replaceable>-ième ligne de la requête est récupérée, ou la
          <literal>abs(<replaceable class="parameter">nombre</replaceable>)</literal>-ième ligne à partir
          de la fin si <replaceable class="parameter">nombre</replaceable> est négatif.
          Le curseur est positionné avant
          la première ligne ou après la dernière si <replaceable class="parameter">nombre</replaceable> est en dehors des
          bornes&nbsp;; en particulier, <literal>ABSOLUTE 0</literal> le
          positionne avant la première ligne.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>RELATIVE <replaceable class="parameter">nombre</replaceable></literal></term>
        <listitem>
         <para>
          La <replaceable class="parameter">nombre</replaceable>-ième ligne suivante est récupérée, ou la
          <literal>abs(<replaceable class="parameter">nombre</replaceable>)</literal>-ième ligne précédente
          si <replaceable class="parameter">nombre</replaceable> est négatif.
          <literal>RELATIVE 0</literal> récupère de nouveau la ligne courante, si elle existe.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><replaceable class="parameter">nombre</replaceable></term>
        <listitem>
         <para>
          Les <replaceable class="parameter">nombre</replaceable> lignes suivantes sont récupérées.
          C'est identique à <literal>FORWARD <replaceable class="parameter">nombre</replaceable></literal>.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>ALL</literal></term>
        <listitem>
         <para>
          Toutes les lignes restantes sont récupérées. C'est identique à <literal>FORWARD ALL</literal>).
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FORWARD</literal></term>
        <listitem>
         <para>
          La ligne suivante est récupérée. C'est identique à <literal>NEXT</literal>.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FORWARD <replaceable class="parameter">nombre</replaceable></literal></term>
        <listitem>
         <para>
          Les <replaceable class="parameter">nombre</replaceable> lignes suivantes sont récupérées.
          <literal>FORWARD 0</literal> récupère de nouveau la ligne courante.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>FORWARD ALL</literal></term>
        <listitem>
         <para>
          Toutes les lignes restantes sont récupérées.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>BACKWARD</literal></term>
        <listitem>
         <para>
          La ligne précédente est récupérée. C'est identique à <literal>PRIOR</literal>.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>BACKWARD <replaceable class="parameter">nombre</replaceable></literal></term>
        <listitem>
         <para>
          Les <replaceable class="parameter">nombre</replaceable> lignes précédentes sont récupérées
          (parcours inverse). <literal>BACKWARD 0</literal> récupère de nouveau la ligne
          courante.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>BACKWARD ALL</literal></term>
        <listitem>
         <para>
          Toutes les lignes précédentes sont récupérées (parcours inverse).
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nombre</replaceable></term>
    <listitem>
     <para>
      Constante de type entier éventuellement signé, qui précise l'emplacement ou le nombre
      de lignes à récupérer. Dans le cas de <literal>FORWARD</literal> et
      <literal>BACKWARD</literal>, préciser une valeur négative pour
      <replaceable class="parameter">nombre</replaceable> est équivalent à modifier le sens
      de <literal>FORWARD</literal> et <literal>BACKWARD</literal>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_curseur</replaceable></term>
    <listitem>
     <para>
      Le nom d'un curseur ouvert.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Sorties</title>

  <para>
   En cas de succès, une commande <command>FETCH</command> renvoie une balise de
   commande de la forme
   <screen>FETCH <replaceable class="parameter">nombre</replaceable>
   </screen>
   Le <replaceable class="parameter">nombre</replaceable> est le nombre de
   lignes récupérées (éventuellement zéro). Dans
   <application>psql</application>, la balise de commande n'est pas
   réellement affichée car <application>psql</application> affiche à la place
   les lignes récupérées.
  </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Le curseur doit être déclaré avec l'option <literal>SCROLL</literal> si
   les variantes de <command>FETCH</command> autres que
   <command>FETCH NEXT</command> ou <command>FETCH FORWARD</command> avec un nombre positif
   sont utilisées.
   Pour les requêtes simples, <productname>PostgreSQL</productname> autorise
   les parcours inverses à partir de curseurs non déclarés avec
   <literal>SCROLL</literal>. il est toutefois préférable de ne pas se fonder
   sur ce comportement. Si le curseur
   est déclaré avec <literal>NO SCROLL</literal>, aucun parcours inverse n'est
   autorisé.
  </para>

  <para>
   Les récupérations <literal>ABSOLUTE</literal> ne sont pas plus rapides que
   la navigation vers la ligne désirée par déplacement relatif&nbsp;: de toute
   façon, l'implantation sous-jacente doit parcourir toutes les lignes
   intermédiaires. Les récupérations absolues négatives font même pis&nbsp;:
   la requête doit être lue jusqu'à la fin pour trouver la dernière ligne, puis relue
   en sens inverse à partir de là. Néanmoins, remonter vers le début de la requête
   (comme avec <literal>FETCH ABSOLUTE 0</literal>) est rapide.
  </para>

  <para>
   <xref linkend="sql-declare"/> est utilisé pour
   définir un curseur. <xref linkend="sql-move"/> est utilisé pour
   modifier la position du curseur sans récupérer les données.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Parcourir une table à l'aide d'un curseur&nbsp;:

   <programlisting>BEGIN WORK;

-- Initialiser le curseur :
DECLARE liahona SCROLL CURSOR FOR SELECT * FROM films;

-- Récupèrer les 5 premières lignes du curseur liahona :
FETCH FORWARD 5 FROM liahona;

 code  |          titre          | did | date_prod  |   genre  |  longueur
-------+-------------------------+-----+------------+----------+-----------
 BL101 | The Third Man           | 101 | 1949-12-23 | Drama    | 01:44
 BL102 | The African Queen       | 101 | 1951-08-11 | Romantic | 01:43
 JL201 | Une Femme est une Femme | 102 | 1961-03-12 | Romantic | 01:25
 P_301 | Vertigo                 | 103 | 1958-11-14 | Action   | 02:08
 P_302 | Becket                  | 103 | 1964-02-03 | Drama    | 02:28

-- Récupèrer la ligne précédente :
FETCH PRIOR FROM liahona;

 code  |  titre  | did | date_prod  |  genre |  longueur
-------+---------+-----+------------+--------+-----------
 P_301 | Vertigo | 103 | 1958-11-14 | Action | 02:08

-- Fermer le curseur et terminer la transaction:
CLOSE liahona;
COMMIT WORK;
   </programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Le standard SQL ne définit <command>FETCH</command> que pour une utilisation
   en SQL embarqué. La variante de <command>FETCH</command>
   décrite ici renvoie les données comme s'il s'agissait du
   résultat d'un <command>SELECT</command> plutôt que de le placer dans des variables
   hôtes. À part cela, <command>FETCH</command> est totalement
   compatible avec le standard SQL.
  </para>

  <para>
   Les formes de <command>FETCH</command> qui impliquent <literal>FORWARD</literal> et
   <literal>BACKWARD</literal>, ainsi que les formes
   <literal>FETCH <replaceable class="parameter">nombre</replaceable></literal> et
   <literal>FETCH ALL</literal>, dans lesquelles <literal>FORWARD</literal> est implicite, sont
   des extensions <productname>PostgreSQL</productname>.
  </para>

  <para>
   Le standard SQL n'autorise que <literal>FROM</literal> devant le nom du
   curseur&nbsp;; la possibilité d'utiliser <literal>IN</literal>, ou de les
   laisser, est une extension.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-close"/></member>
   <member><xref linkend="sql-declare"/></member>
   <member><xref linkend="sql-move"/></member>
  </simplelist>
 </refsect1>
</refentry>
