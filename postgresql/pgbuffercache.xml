<?xml version="1.0" encoding="UTF-8"?>
<sect1 id="pgbuffercache" xreflabel="pg_buffercache">
 <title>pg_buffercache</title>

 <indexterm zone="pgbuffercache">
  <primary>pg_buffercache</primary>
 </indexterm>

 <para>
  Le module <filename>pg_buffercache</filename> fournit un moyen pour
  examiner ce qui se passe dans le cache partagé en temps réel.
 </para>

 <indexterm>
  <primary>pg_buffercache_pages</primary>
 </indexterm>

 <para>
  Ce module propose une fonction C, <function>pg_buffercache_pages</function>,
  qui renvoie un ensemble d'enregistrements, ainsi qu'une vue,
  <structname>pg_buffercache</structname>, qui englobe la fonction pour une
  utilisation facilitée.
 </para>

 <para>
  Par défaut l'utilisation est restreinte aux super utilisateurs et aux membres
  du rôle <literal>pg_monitor</literal>.  L'accès peut être accordé à
  d'autres rôle en utilisant <command>GRANT</command>.
 </para>

 <sect2>
  <title>La vue <structname>pg_buffercache</structname></title>

  <para>
   Voici la définition des colonnes exposées par la vue affichée dans <xref
   linkend="pgbuffercache-columns"/>&nbsp;:
  </para>

  <table id="pgbuffercache-columns">
   <title>Colonnes de <structname>pg_buffercache</structname></title>

   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        Type de la colonne
       </para>
       <para>
        Description
       </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>bufferid</structfield> <type>integer</type>
       </para>
       <para>
        ID, qui va de 1 à <varname>shared_buffers</varname>
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>relfilenode</structfield> <type>oid</type>
        (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relfilenode</structfield>)
       </para>
       <para>
        Numéro filenode de la relation
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>reltablespace</structfield> <type>oid</type>
        (references <link linkend="catalog-pg-tablespace"><structname>pg_tablespace</structname></link>.<structfield>oid</structfield>)
       </para>
       <para>
        OID du tablespace de la relation
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>reldatabase</structfield> <type>oid</type>
        (references <link linkend="catalog-pg-database"><structname>pg_database</structname></link>.<structfield>oid</structfield>)
       </para>
       <para>
        OID de la base de données de la relation
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>relforknumber</structfield> <type>smallint</type>
       </para>
       <para>
        Numéro du fork dans la relation&nbsp;; voir
        <filename>include/common/relpath.h</filename>
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>relblocknumber</structfield> <type>bigint</type>
       </para>
       <para>
        Numéro de page dans la relation
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>isdirty</structfield> <type>boolean</type>
       </para>
       <para>
        Page modifiée&nbsp;?
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>usagecount</structfield> <type>smallint</type>
       </para>
       <para>
        Compteur d'accès clock-sweep
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>pinning_backends</structfield> <type>integer</type>
       </para>
       <para>
        Nombre de processus serveur en accès sur ce bloc
       </para></entry>
     </row>

    </tbody>
   </tgroup>
  </table>

  <para>
   Il y a une ligne pour chaque tampon dans le cache partagé. Les tampons
   inutilisés sont affichés avec des champs NULL sauf pour
   <structfield>bufferid</structfield>. Les catalogues systèmes partagés sont
   affichés comme appartenant à la base de données zéro.
  </para>

  <para>
   Comme le cache est partagé par toutes les bases de données, il y aura
   des pages de relations n'appartenant pas à la base de données courante.
   Cela signifie qu'il pourrait y avoir des lignes sans correspondance dans
   <structname>pg_class</structname>, ou qu'il pourrait y avoir des jointures
   incorrectes. Si vous essayez une jointure avec
   <structname>pg_class</structname>, une bonne idée est de restreindre la
   jointure aux lignes ayant un <structfield>reldatabase</structfield> égal
   à l'OID de la base de données actuelle ou à zéro.
  </para>

  <para>
   Comme des verrous du gestionnaire de tampons ne sont pas acquis pour copier
   les données d'état du tampon que la vue affichera, accéder à la vue
   <structname>pg_buffercache</structname> a moins d'impact sur l'activité
   normale du tampon mais il ne fournit pas un ensemble cohérent de résultats
   sur tous les tampons. Néanmoins, nous nous assurons que l'information de
   chaque tampon est cohérent avec lui-même.
  </para>
 </sect2>

 <sect2>
  <title>Affichage en sortie</title>

  <screen>
  regression=# SELECT n.nspname, c.relname, count(*) AS buffers
               FROM pg_buffercache b JOIN pg_class c
               ON b.relfilenode = pg_relation_filenode(c.oid) AND
                  b.reldatabase IN (0, (SELECT oid FROM pg_database
                                        WHERE datname = current_database()))
               JOIN pg_namespace n ON n.oid = c.relnamespace
               GROUP BY n.nspname, c.relname
               ORDER BY 3 DESC
               LIMIT 10;

  nspname   |        relname         | buffers
------------+------------------------+---------
 public     | delete_test_table      |     593
 public     | delete_test_table_pkey |     494
 pg_catalog | pg_attribute           |     472
 public     | quad_poly_tbl          |     353
 public     | tenk2                  |     349
 public     | tenk1                  |     349
 public     | gin_test_idx           |     306
 pg_catalog | pg_largeobject         |     206
 public     | gin_test_tbl           |     188
 public     | spgist_text_tbl        |     182
  (10 rows)
  </screen>
 </sect2>

 <sect2>
  <title>Auteurs</title>

  <para>
   Mark Kirkwood <email>markir@paradise.net.nz</email>
  </para>

  <para>
   Suggestions de conception&nbsp;: Neil Conway <email>neilc@samurai.com</email>
  </para>

  <para>
   Conseils pour le débogage&nbsp;: Tom Lane <email>tgl@sss.pgh.pa.us</email>
  </para>
 </sect2>

</sect1>
