<?xml version="1.0" encoding="UTF-8"?>
<sect1 id="pgbuffercache" xreflabel="pg_buffercache">
 <title>pg_buffercache &mdash; inspecter l'état du cache disque de 
  <productname>PostgreSQL</productname></title>

 <indexterm zone="pgbuffercache">
  <primary>pg_buffercache</primary>
 </indexterm>

 <para>
  Le module <filename>pg_buffercache</filename> fournit un moyen pour
  examiner ce qui se passe dans le cache partagé en temps réel.
  Il offre aussi une façon bas niveau de supprimer des données du cache,
  pour des tests.
 </para>

 <indexterm>
  <primary>pg_buffercache_pages</primary>
 </indexterm>

 <indexterm>
  <primary>pg_buffercache_summary</primary>
 </indexterm>

 <indexterm>
  <primary>pg_buffercache_evict</primary>
 </indexterm>

 <para>
  Ce module fournit la fonction <function>pg_buffercache_pages()</function>
  (utilisée dans la vue <structname>pg_buffercache</structname>),
  la fonction <function>pg_buffercache_summary()</function>, la fonction
  <function>pg_buffercache_usage_counts()</function> et la fonction
  <function>pg_buffercache_evict()</function>.
 </para>

 <para>
  La fonction <function>pg_buffercache_pages()</function> renvoie un ensemble
  d'enregistrements, chaque ligne décrivant l'état d'une entrée du cache disque.
  La vue <structname>pg_buffercache</structname> intègre la fonction pour une
  utilisation plus simple.
 </para>

 <para>
  La fonction <function>pg_buffercache_summary()</function> renvoie une seule
  ligne résumant l'état du cache disque.
 </para>

 <para>
  La fonction <function>pg_buffercache_usage_counts()</function> renvoie un
  ensemble d'enregistrements, chaque ligne décrivant le nombre de tampons
  pour un décompte d'utilisation donné.
 </para>

 <para>
  Par défaut, l'utilisation des fonctions ci-dessus est restreinte aux
  superutilisateurs et aux rôles
  disposant des attributs du rôle <literal>pg_monitor</literal>. L'accès peut
  être accordé à d'autres rôle en utilisant <command>GRANT</command>.
 </para>

 <para>
  La fonction <function>pg_buffercache_evict()</function> permet de supprimer
  un bloc du cache disque d'après son identifiant. L'utilisation de cette
  fonction est réservée aux superutilisateurs.
 </para>

 <sect2 id="pgbuffercache-pg-buffercache">
  <title>La vue <structname>pg_buffercache</structname></title>

  <para>
   Voici la définition des colonnes exposées par la vue affichée dans <xref
   linkend="pgbuffercache-columns"/>&nbsp;:
  </para>

  <table id="pgbuffercache-columns">
   <title>Colonnes de <structname>pg_buffercache</structname></title>

   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        Type de la colonne
       </para>
       <para>
        Description
       </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>bufferid</structfield> <type>integer</type>
       </para>
       <para>
        ID, qui va de 1 à <varname>shared_buffers</varname>
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>relfilenode</structfield> <type>oid</type>
        (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relfilenode</structfield>)
       </para>
       <para>
        Numéro filenode de la relation
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>reltablespace</structfield> <type>oid</type>
        (references <link linkend="catalog-pg-tablespace"><structname>pg_tablespace</structname></link>.<structfield>oid</structfield>)
       </para>
       <para>
        OID du tablespace de la relation
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>reldatabase</structfield> <type>oid</type>
        (references <link linkend="catalog-pg-database"><structname>pg_database</structname></link>.<structfield>oid</structfield>)
       </para>
       <para>
        OID de la base de données de la relation
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>relforknumber</structfield> <type>smallint</type>
       </para>
       <para>
        Numéro du fork dans la relation&nbsp;; voir
        <filename>common/relpath.h</filename>
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>relblocknumber</structfield> <type>bigint</type>
       </para>
       <para>
        Numéro de page dans la relation
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>isdirty</structfield> <type>boolean</type>
       </para>
       <para>
        Page modifiée&nbsp;?
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>usagecount</structfield> <type>smallint</type>
       </para>
       <para>
        Compteur d'accès clock-sweep
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
        <structfield>pinning_backends</structfield> <type>integer</type>
       </para>
       <para>
        Nombre de processus serveur en accès sur ce bloc
       </para></entry>
     </row>

    </tbody>
   </tgroup>
  </table>

  <para>
   Il y a une ligne pour chaque tampon dans le cache partagé. Les tampons
   inutilisés sont affichés avec des champs NULL sauf pour
   <structfield>bufferid</structfield>. Les catalogues systèmes partagés sont
   affichés comme appartenant à la base de données zéro.
  </para>

  <para>
   Comme le cache est partagé par toutes les bases de données, il y aura
   des pages de relations n'appartenant pas à la base de données courante.
   Cela signifie qu'il pourrait y avoir des lignes sans correspondance dans
   <structname>pg_class</structname>, ou qu'il pourrait y avoir des jointures
   incorrectes. Si vous essayez une jointure avec
   <structname>pg_class</structname>, une bonne idée est de restreindre la
   jointure aux lignes ayant un <structfield>reldatabase</structfield> égal
   à l'OID de la base de données actuelle ou à zéro.
  </para>

  <para>
   Comme des verrous du gestionnaire de tampons ne sont pas acquis pour copier
   les données d'état du tampon que la vue affichera, accéder à la vue
   <structname>pg_buffercache</structname> a moins d'impact sur l'activité
   normale du tampon, mais il ne fournit pas un ensemble cohérent de résultats
   sur tous les tampons. Néanmoins, nous nous assurons que l'information de
   chaque tampon est cohérente avec lui-même.
  </para>
 </sect2>

 <sect2 id="pgbuffercache-summary">
  <title>Fonction <function>pg_buffercache_summary()</function></title>

  <para>
   Les définitions des colonnes exposées par la fonction sont affichées dans
   <xref linkend="pgbuffercache-summary-columns"/>.
  </para>

  <table id="pgbuffercache-summary-columns">
   <title>Colonnes en sortie de <function>pg_buffercache_summary()</function></title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Type de colonne
      </para>
      <para>
       Description
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>buffers_used</structfield> <type>int4</type>
      </para>
      <para>
       Nombre de tampons utilisés
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>buffers_unused</structfield> <type>int4</type>
      </para>
      <para>
       Nombre de tampons inutilisés
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>buffers_dirty</structfield> <type>int4</type>
      </para>
      <para>
       Nombres de tampons modifiés
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>buffers_pinned</structfield> <type>int4</type>
      </para>
      <para>
       Nombre de tampons verrouillés
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usagecount_avg</structfield> <type>float8</type>
      </para>
      <para>
       Décompte moyen d'utilisation des tampons
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   La fonction <function>pg_buffercache_summary()</function> renvoie une seule
   ligne résumant l'état de tous les tampons partagés. Une information similaire
   bien que plus détaillée est fournie par la vue
   <structname>pg_buffercache</structname> mais
   <function>pg_buffercache_summary()</function> est plus performante.
  </para>

  <para>
   Tout comme la vue <structname>pg_buffercache</structname>,
   <function>pg_buffercache_summary()</function> n'acquiert pas de verrous
   dans le gestionnaire de tampons. Donc une activité concurrente peut
   amener des inexactitudes mineuses dans le résultat.
  </para>
 </sect2>

 <sect2 id="pgbuffercache-usage-counts">
  <title>Fonction <function>pg_buffercache_usage_counts()</function></title>

  <para>
   Les définitions des colonnes exposées par la fonction sont affichées dans
   <xref linkend="pgbuffercache_usage_counts-columns"/>.
  </para>

  <table id="pgbuffercache_usage_counts-columns">
   <title>Colonnes en sortie de <function>pg_buffercache_usage_counts()</function></title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Type de colonne
      </para>
      <para>
       Description
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usage_count</structfield> <type>int4</type>
      </para>
      <para>
       Décompte d'utilisation des tampons
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>buffers</structfield> <type>int4</type>
      </para>
      <para>
       Nombre de tampons pour ce décompte
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dirty</structfield> <type>int4</type>
      </para>
      <para>
       Nombre de tampons modifiés pour ce décompte
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pinned</structfield> <type>int4</type>
      </para>
      <para>
       Nombre de tampons verrouillés pour ce décompte
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   La fonction <function>pg_buffercache_usage_counts()</function> renvoie un
   ensemble de lignes résumant les états des tampons partagés, agrégés sur
   les valeurs possibles du décompte. Une information similaire mais plus
   détaillée est fournie par la vue <structname>pg_buffercache</structname>
   mais la fonction <function>pg_buffercache_usage_counts()</function> est
   plus performante.
  </para>

  <para>
   Tout comme la vue <structname>pg_buffercache</structname>, la fonction
   <function>pg_buffercache_usage_counts()</function> n'acquiert pas de verrous
   par le gestionnaire de tampons. De ce fait, l'activité concurrente peut
   amener à des inexactitudes mineures dans le résultat.
  </para>
 </sect2>

 <sect2 id="pgbuffercache-pg-buffercache-evict">
  <title>Fonction <function>pg_buffercache_evict</function></title>
  <para>
   La fonction <function>pg_buffercache_evict()</function> prend en entrée
   un identifiant de buffer, comme indiqué par la colonne
   <structfield>bufferid</structfield> de la vue
   <structname>pg_buffercache</structname>. Elle renvoie true en cas de succès,
   et faux si l'identifiant n'est pas valide, s'il n'a pas pu être supprimé
   car il était utilisé, ou s'il a été modifié après une tentative d'écriture.
   Le résultat est immédiatement obsolète à son retour car le buffer pourrait
   être de nouveau valide dû à l'activité concurrente. La fonction est
   proposée uniquement pour des tests de développement.
  </para>
 </sect2>

 <sect2 id="pgbuffercache-sample-output">
  <title>Affichage en sortie</title>

  <screen>
  regression=# SELECT n.nspname, c.relname, count(*) AS buffers
               FROM pg_buffercache b JOIN pg_class c
               ON b.relfilenode = pg_relation_filenode(c.oid) AND
                  b.reldatabase IN (0, (SELECT oid FROM pg_database
                                        WHERE datname = current_database()))
               JOIN pg_namespace n ON n.oid = c.relnamespace
               GROUP BY n.nspname, c.relname
               ORDER BY 3 DESC
               LIMIT 10;

  nspname   |        relname         | buffers
------------+------------------------+---------
 public     | delete_test_table      |     593
 public     | delete_test_table_pkey |     494
 pg_catalog | pg_attribute           |     472
 public     | quad_poly_tbl          |     353
 public     | tenk2                  |     349
 public     | tenk1                  |     349
 public     | gin_test_idx           |     306
 pg_catalog | pg_largeobject         |     206
 public     | gin_test_tbl           |     188
 public     | spgist_text_tbl        |     182
  (10 rows)

regression=# SELECT * FROM pg_buffercache_summary();
 buffers_used | buffers_unused | buffers_dirty | buffers_pinned | usagecount_avg
--------------+----------------+---------------+----------------+----------------
          248 |        2096904 |            39 |              0 |       3.141129
(1 row)


regression=# SELECT * FROM pg_buffercache_usage_counts();
 usage_count | buffers | dirty | pinned
-------------+---------+-------+--------
           0 |   14650 |     0 |      0
           1 |    1436 |   671 |      0
           2 |     102 |    88 |      0
           3 |      23 |    21 |      0
           4 |       9 |     7 |      0
           5 |     164 |   106 |      0
(6 rows)
  </screen>
 </sect2>

 <sect2 id="pgbuffercache-authors">
  <title>Auteurs</title>

  <para>
   Mark Kirkwood <email>markir@paradise.net.nz</email>
  </para>

  <para>
   Suggestions de conception&nbsp;: Neil Conway <email>neilc@samurai.com</email>
  </para>

  <para>
   Conseils pour le débogage&nbsp;: Tom Lane <email>tgl@sss.pgh.pa.us</email>
  </para>
 </sect2>

</sect1>
