<?xml version="1.0" encoding="UTF-8"?>
<sect1 id="pgwalinspect" xreflabel="pg_walinspect">
 <title>pg_walinspect</title>

 <indexterm zone="pgwalinspect">
  <primary>pg_walinspect</primary>
 </indexterm>

 <para>
  Le module <filename>pg_walinspect</filename> fournit des fonctions SQL qui
  vous permettent d'inspecter, à un bas niveau, le contenu des journaux de
  transactions d'une instance <productname>PostgreSQL</productname> en cours
  d'exécution, ce qui est utile pour le débogage, l'analyse, la création de
  rapports ou à des fins pédagogiques. Il est similaire à <xref linkend="pgwaldump"/>,
  mais est accessible via SQL plutôt que via un utilitaire séparé.
 </para>

 <para>
  Toutes les fonctions de ce module fourniront des informations sur les WAL
  utilisant l'identifiant de la timeline actuelle du serveur.
 </para>

 <para>
  Toutes les fonctions de ce module essaieront de trouver le premier
  enregistrement WAL valide qui est situé à l'endroit ou après le
  <replaceable>in_lsn</replaceable> ou le <replaceable>start_lsn</replaceable>
  donné et émettra une erreur si un tel enregistrement n'est pas présent.
  De même, <replaceable>end_lsn</replaceable> doit être présent, et s'il
  tombe au milieu d'un enregistrement, l'intégralité de l'enregistrement doit
  être disponible.
 </para>

 <note>
  <para>
   Certaines fonctions, telles que <function><link
   linkend="pg-logical-emit-message">pg_logical_emit_message</link></function>,
   renvoient le LSN <emphasis>après</emphasis> l'enregistrement qui vient d'être
   inséré. Par conséquent, si vous transmettez ce LSN comme <replaceable>in_lsn</replaceable>
   ou <replaceable>start_lsn</replaceable> à l'une de ces fonctions, elle
   renverra l'enregistrement <emphasis>suivant</emphasis>.
  </para>
 </note>
 <para>
  Par défaut, l'utilisation de ces fonctions est réservée aux superutilisateurs
  et aux membres du rôle <literal>pg_read_server_files</literal>. L'accès peut
  être accordé par des superutilisateurs à d'autres utilisateurs grâce à la
  commande <command>GRANT</command>.
 </para>

 <sect2>
  <title>Fonctions générales</title>

  <variablelist>
   <varlistentry>
    <term>
     <function>pg_get_wal_record_info(in_lsn pg_lsn) returns record</function>
    </term>

    <listitem>
     <para>
      Obtient les informations d'enregistrement WAL pour un LSN donné. Si le
      LSN fourni n'est pas au début d'un enregistrement WAL, elle retourne les
      informations du prochain enregistrement WAL valide disponible&nbsp;;
      ou une erreur si aucun enregistrement de ce type n'est trouvé.
      Voici un exemple de l'utilisation de cette fonction&nbsp;:
<screen>
postgres=# SELECT * FROM pg_get_wal_record_info('0/1E826E98');
-[ RECORD 1 ]----+----------------------------------------------------
start_lsn        | 0/1E826F20
end_lsn          | 0/1E826F60
prev_lsn         | 0/1E826C80
xid              | 0
resource_manager | Heap2
record_type      | PRUNE
record_length    | 58
main_data_length | 8
fpi_length       | 0
description      | snapshotConflictHorizon 33748 nredirected 0 ndead 2
block_ref        | blkref #0: rel 1663/5/60221 fork main blk 2
</screen>
     </para>
    </listitem>
   </varlistentry>

    <varlistentry>
    <term>
     <function>
      pg_get_wal_records_info(start_lsn pg_lsn, end_lsn pg_lsn)
     </function>
    </term>

    <listitem>
     <para>
      Obtient des informations sur tous les enregistrements WAL valides entre
      <replaceable>start_lsn</replaceable> et <replaceable>end_lsn</replaceable>.
      Renvoie une ligne par enregistrement WAL. Si <replaceable>start_lsn</replaceable>
      ou <replaceable>end_lsn</replaceable> ne sont pas encore disponibles, la
      fonction renvoie une erreur. Par exemple&nbsp;:

<screen>
postgres=# SELECT * FROM pg_get_wal_records_info('0/1E913618', '0/1E913740') LIMIT 1;
-[ RECORD 1 ]----+--------------------------------------------------------------
start_lsn        | 0/1E913618
end_lsn          | 0/1E913650
prev_lsn         | 0/1E9135A0
xid              | 0
resource_manager | Standby
record_type      | RUNNING_XACTS
record_length    | 50
main_data_length | 24
fpi_length       | 0
description      | nextXid 33775 latestCompletedXid 33774 oldestRunningXid 33775
block_ref        |
</screen>
     </para>
    </listitem>
   </varlistentry>

    <varlistentry>
    <term>
     <function>
      pg_get_wal_records_info_till_end_of_wal(start_lsn pg_lsn)
      returns setof record
     </function>
    </term>

    <listitem>
     <para>
      Cette fonction est identique à <function>pg_get_wal_records_info()</function>
      sauf qu'elle obtient des informations sur tous les enregistrements WAL
      valides depuis <replaceable>start_lsn</replaceable> jusqu'à la fin du WAL.
     </para>
    </listitem>
   </varlistentry>

    <varlistentry>
    <term>
     <function>
      pg_get_wal_stats(start_lsn pg_lsn, end_lsn pg_lsn, per_record boolean DEFAULT false)
      returns setof record
     </function>
    </term>

    <listitem>
     <para>
      Récupère les statistiques de tous les enregistrements WAL valides entre
      <replaceable>start_lsn</replaceable> et <replaceable>end_lsn</replaceable>.
      Par défaut, elle renvoie une ligne par type <replaceable>resource_manager</replaceable>.
      Lorsque <replaceable>per_record</replaceable> est défini sur <literal>true</literal>,
      elle renvoie une ligne par <replaceable>record_type</replaceable>.
      Si <replaceable>start_lsn</replaceable> ou <replaceable>end_lsn</replaceable>
      ne sont pas encore disponibles, la fonction retourne une erreur.
      Par exemple&nbsp;:
<screen>
postgres=# SELECT * FROM pg_get_wal_stats('0/1E847D00', '0/1E84F500')
             WHERE count > 0 AND
                   "resource_manager/record_type" = 'Transaction'
              LIMIT 1;
-[ RECORD 1 ]----------------+-------------------
resource_manager/record_type | Transaction
count                        | 2
count_percentage             | 8
record_size                  | 875
record_size_percentage       | 41.23468426013195
fpi_size                     | 0
fpi_size_percentage          | 0
combined_size                | 875
combined_size_percentage     | 2.8634072910530795
</screen>
     </para>
    </listitem>
   </varlistentry>

    <varlistentry>
    <term>
     <function>
      pg_get_wal_stats_till_end_of_wal(start_lsn pg_lsn, per_record boolean DEFAULT false)
      returns setof record
     </function>
    </term>

    <listitem>
     <para>
      Cette fonction est identique à <function>pg_get_wal_stats()</function>
      sauf qu'elle obtient les statistiques de tous les enregistrements WAL
      valides depuis <replaceable>start_lsn</replaceable> jusqu'à la fin du WAL.
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </sect2>

 <sect2>
  <title>Auteur</title>

  <para>
   Bharath Rupireddy <email>bharath.rupireddyforpostgres@gmail.com</email>
  </para>
 </sect2>

</sect1>
